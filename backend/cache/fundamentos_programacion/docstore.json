{"docstore/metadata": {"249bc1fa-6aaa-4df4-ae30-6b57ad2d3bf0": {"doc_hash": "6d0c88a5d7462fbe2697c34081fd9f52c09b6eb4b3c3bb53c9426921aa247340"}, "e49b6579-f242-4d43-a91f-6833d57c0596": {"doc_hash": "ae900dfbf2b6a5089e3e4526da4c6519a2ee921a2ed3b170f556873d98de5852"}, "70998970-b012-4918-93f0-739e09aedce4": {"doc_hash": "54c2e7d78086f313d11ac6924fe860357b44ec14d830b1602e2495235ce7e094"}, "2353b39b-b71f-4440-affb-75a7f4fb18fe": {"doc_hash": "6a8fade7b2359dd93ee712a9ff5d3a64e1baf175ed2a4dea173111c33fe1b05b"}, "57f2a052-ce26-4328-a825-5bc57c1d9457": {"doc_hash": "f53fa8d2c35f0bce91fa54e6bbc654889f85ec3c9e2cb401c45b26e7c43ac61d"}, "7a9267e2-4535-433b-bf40-dbbfda349226": {"doc_hash": "4e285313f0a925212ec480d479ab6e49eb46ebd52a94985421802d51fa4b7069"}, "c06eb39b-9124-44b3-a092-9cf2cece3f65": {"doc_hash": "ae72d4e25c340855ebf1fe0f75418cc9b311173c66e3197bbb8e4a213f5dd234"}, "78ba9af6-87ff-47cc-8f07-6c1f0aee27a8": {"doc_hash": "4aae5735b3e98426d48b9d23d45aefa4a464882d1a4aa68fc1333dfb6d0bcbc7"}, "dd0e1ba5-a04c-4ca4-9cc5-b0a5ad73ea92": {"doc_hash": "1f8fd2cb6c65b015f59b35816bfec99683bc48b795aac910f0bb6d96c9ad0b89"}, "9cc5eed2-9d6a-4092-a4b0-0579d9174411": {"doc_hash": "040a71a51e8538a9e21c886eb5072c9cc23fe31bcdd532ac11cc5c91940c8f98"}, "32517139-fb6c-4356-a59d-e043cf8c9c61": {"doc_hash": "cabd836d506d247d57b92bec47cd3f34dc94c049a54e412629f2c64d657e33b9"}, "718671f4-a146-4a4f-a8a2-008f0a59fa3f": {"doc_hash": "ad0bbb44c72b00afdab295b08583b0d7d1709bfce3e541409155591ded0c7bbd"}, "65bdfa2a-1506-4c0f-b35e-9b192ec171e2": {"doc_hash": "76a633b4c536863fb678aeb1d4e4ff1873dc11fecebdfb1e67f5a0ca0869a6e7"}, "dead090f-908b-4f6a-9470-2c78a4669714": {"doc_hash": "33b75df3f1f4f40aee2e750c81c7d52b093076ee4d64aface4220b68a23249a8"}, "4b61ab5d-f70c-4e05-be5c-472fb7153bfe": {"doc_hash": "dfeb99ae2ace591d18ba8f3338085c0486a65bb22688baaf4bf29a8dea482b71"}, "c223f765-ac56-48ca-896a-2a6f14088fc3": {"doc_hash": "bd1255a964beb51b4a42a35838f62037aae331dbdcb73d160dafd42a52aa463c"}, "01547349-0911-4809-bf54-8ba1be02837c": {"doc_hash": "697e85466ce40725b6ceff361fafc9bf8a44ac41ebcd3a34843690253c0a208f"}, "46639f04-5bd3-4ddd-8597-1a14b727eb83": {"doc_hash": "2a54872c9de622a7f25fd34b52e55fb10f03ef3e4cf30197f1da5d5b7074f251"}, "3076b1b4-5f45-4f77-b68d-555b0a96c860": {"doc_hash": "a5229b89cdd89a22e17bff2c1fc57938bb97edf273a55bd9cec3b2c1dabae084"}, "6ad87a41-6a0a-45d3-b171-e275290e21de": {"doc_hash": "cfca1333184a374bd5f3bda6d37651fdeec577ae94d0f46d73b85ffa34118180"}, "5cf21e22-c6c3-4123-a49f-8eef649c14b9": {"doc_hash": "513a5e36c72780880c76d6727418698fbda795f839b59ded972272dbbceec5b3"}, "b31be195-6839-46c4-b971-676834a63e91": {"doc_hash": "eb1248eed7392417a753940012250c92d0e701ab86d66f8a1ee417a259795cc0"}, "31822631-af2b-4855-b496-4dba03c30fdf": {"doc_hash": "dbb9fd1de0c928e26cbaf0715e3d8826278d56c56fa402fa2d534af32c112b4d"}, "863ec4d0-7504-4a76-8c6f-e493cfb3ac91": {"doc_hash": "596fc90f1bc3b9d94409e0a3ff41bfd569edf719acd1550593c19a25defe26a9"}, "68c024c2-89d3-4ba2-a1d5-5ab73d6f56d7": {"doc_hash": "774788191b41ea204ed2e98af7692882205357ceabee7042e49c1a5036560118"}, "061fb6c0-e230-4f10-a079-dd9f38d91e94": {"doc_hash": "2730dd859ab62236f3ce7e915445c9b29607e64d2c925d06b89f381f9e189436"}, "6f378abf-9364-4e20-8333-b5d4c33e40dd": {"doc_hash": "07fd20eb7b0bca55befd05b4e1d0f70e0c51e472ec86d1d5aa948bf8cfa216cc"}, "1e0242f5-0246-4f50-a51b-eecac64d6475": {"doc_hash": "89dc9d6ed53ee2389907cdc5da5aaec9117d4d583226afbfde9168bb1cd6027b"}, "848c2713-f74a-4f6b-857c-1f0466878d1d": {"doc_hash": "09f8366b8b95d4dccc59f4175272607aa591513d4ecdb85e61b3cd8c7be9a731"}, "770f3b12-6bdb-487d-b6de-ab57a864801e": {"doc_hash": "4fdaebd4ea4f664e0dc134e9d0c0210befe55668d7bf89290677dd8fdd794648"}, "f4a6be40-7316-4ae0-90c8-8bfd97e25575": {"doc_hash": "09c76269a5134009a89e72b22d4ad26f09f39dac87ccce8e880cba7ef76ace73"}, "d0f5f258-4daa-402d-808e-a6076757d436": {"doc_hash": "ca88753578232b3bdeb9bb2a0ef23a2d0f5adde76c8cfb0f21f6bb23decb9362"}, "a865b743-c437-4302-a4ac-ea193afb06ea": {"doc_hash": "34cb6db4b343b9a27fa5fe4fbf38b95b58704191a9401dc0a573db059fe0ae88"}, "5aaf2b03-1e5c-4525-9db3-2311e97b772c": {"doc_hash": "ee36c598128f2c03659677fe7c18fe03d8fa16753434ab43231746c9aa0c0eba"}, "6268731d-d74b-4233-ab62-d0db7c469d4e": {"doc_hash": "518c14a62c9d5c4a87ba566afa77331d8b4eec699fce8051435ff273ef6c62e1"}, "f97777fc-a670-4969-9d72-b590ff4052ca": {"doc_hash": "8a5246871796cf0c46e621c0459b80ebd19cfa7a1c2504fe3668335c34c1099e"}, "1a7e9773-188a-4cc7-9a64-32b84be05cb1": {"doc_hash": "77cc34a5b6b3708b513328c95dd3fed471a98d524bd4cf857f2419675e886a2f"}, "f40a78ad-3a2d-4fb9-9276-5aa9c023049a": {"doc_hash": "6639379ee140d8d48088e7f5e55ad1be17c7120c4ae615dd737182d45262de49"}, "229173d4-f97f-4296-9708-3c4658ffbf3b": {"doc_hash": "ae4aa428f5a0e844181cbb355733279d6b2d061885c9f0c732c32315b16bd43c"}, "02dac68d-d9b8-4525-a531-160164988343": {"doc_hash": "c7671e8aa21ab3c5e53db1631e231598e48800b51bdea05e868b45e215c15153"}, "ea02d236-2234-4cf3-9725-e0db095d2cca": {"doc_hash": "988f1f7a39491da283e8db7e86adfd404098f02e48e31eb041d05e87cf02af3b"}, "28a7e3e9-5fcc-4c9e-8608-0b03462feb4e": {"doc_hash": "2b652742f499fa39577c5f455a7c4a5b0bd2af2293bf7b9c039eb98931bb4b99"}, "2ebb8c64-69a6-414a-ac2b-9de5ee6216d0": {"doc_hash": "f52bddc45b7ecc8ef636bbd4f8faf85804d7708294441b07045a526385a00381"}, "acf62b8c-b1d6-445c-8477-108895a8f54e": {"doc_hash": "e2707836943c79e2f48c8f20e4a3e26ed8e0156873aabe2e471d22fabd3b8620"}, "48a87e18-9f9b-45f7-a30b-c9b49a1d4b75": {"doc_hash": "9c69b57a13cfa94a7961fb48a85e855c4f456b575ec513a8c4381921cc7a21db"}, "1407d068-74b9-40a5-b390-57954296171e": {"doc_hash": "62363573d9b170d0015216c85310216fbd339562189844b2eb758606d62292b6"}, "eab8ecd5-86f5-4b06-83f5-8581caea74df": {"doc_hash": "acf6fe1a3791c0d05db7e325ec76d5a9ddd955da00b1ebfc1f59952f30f0e9df"}, "24448867-f142-4939-8223-7364eea72167": {"doc_hash": "8870adc604ad0d18ffedef569ea3a242e767a0eb7ccf43b88acb3a34fcde0be3"}, "fd427dc3-06d6-4435-afb1-63fe67314d10": {"doc_hash": "097b1435717ac40c332869cdb21f4dc9eb749db71a6d7118ebb31f5f574f56b2"}, "9374bc17-7120-48d2-86ad-12ad222a90bd": {"doc_hash": "4dbded15fb0823e69b9cf368574b44d4ecde5e2e5fcb1025b1e4005e2c9f5f21"}, "86dbca87-087a-418c-af5c-9ade9a2d466b": {"doc_hash": "a509abfad05133853e9d29f31343e5f3848abf332f0579654937cb81ea2a07f6"}, "87362424-3d2a-46ee-b6b0-531389473b41": {"doc_hash": "c2b405994bb7fb1dd8b243a92eaff94d0e5f249be431b43eb5c84efa02729224"}, "a659e33f-2e37-4efe-8753-4764dde85045": {"doc_hash": "d72d836d6ab033a3920522b42e202132a433721ce093217dd64534706baebd24"}, "948eb31d-5c3c-4b53-8681-cbc334b2e94f": {"doc_hash": "dd84bc774bdb01e33c970707fa559de14c99f10c71ca5f87cd12bb5cfb5d8a26"}, "01050cce-5a57-4c43-8c97-b0eb630c5f3d": {"doc_hash": "3426c820d6e9d485a57429f3b6e0fcf2572edd3218bc6e5b6a85a8ac7e139037"}, "bfd1d2df-fa59-4a94-887f-d4837329f3d6": {"doc_hash": "86ff56a7b5c5a819cd1200aa5ae88d06025cf63b50787728d09fa26ec69921a8"}, "e450cbc9-1ab9-46a8-9f3f-74eed9269096": {"doc_hash": "4462ebd01606dff742c6954aa99f9c1cba889a4c5ab655660a04ff956fc5e82e"}, "57afa26f-0cce-44ec-b179-344931db99dd": {"doc_hash": "ff73a8a57c69e55307d96f11a5b860e928ba53e5d38f0b24097e35f98bb01f36"}, "a611b4e0-317a-4f4d-abff-b2034707e7eb": {"doc_hash": "ff8c488c9eebbcdd6e24a8cb7eba09f380cc7c728d4ab89146edd85bf1479268"}, "99939c1a-e1be-4c64-be9e-87f2a1374bba": {"doc_hash": "c5a83b85fdffaf63478d1029d6320e077f648f5878f4838e669c7d8dcfe3cab3"}, "a1a6e646-31d9-4729-9d9b-4506990eff89": {"doc_hash": "4c1f86859605ed85af0f500f126c50a53a5f5181a82cbd9c7e759f5b3c391e57"}, "bba4c7a9-670a-4dcc-ad37-e61fd734d71c": {"doc_hash": "e9fc9391c556a64e0d9d7e1d7d4e2805ad2a740196ddee021ee2a2c1fcb37d31"}, "0b7bdb6f-5a8b-47a5-9734-29fa78473fff": {"doc_hash": "e5d169f48ad2970635dc638b111673ca1ddaf344076edef673d59de6652b4932"}, "d8df1c19-159f-4dc5-98ee-100676d68f93": {"doc_hash": "6a48d42128b37226b57c9bf42f4ca7804388eac7559ca2766345fcaa3c032873"}, "9ea55305-becb-4267-b610-886a97c90dd8": {"doc_hash": "da12f3865c7598048d00e85cb74691be24f9b8def97642f388e0e2fe5439fb0d"}, "314ecffd-b72d-4368-b290-f32f73c72c1b": {"doc_hash": "17f3b0e0d5916daa94842cbe40be64c89875a4c9a6ed9ae2e35a61e1abd0c4a3"}, "c26d48e6-6f86-4927-8462-ab4319f02d7d": {"doc_hash": "548926c3c7735ebaf2e7f3fc093b25be87420a375d1098e8af31da4db3296eb0"}, "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4": {"doc_hash": "07df226eafb7b84eec25b8a3ff672b3aad707603d5112c32421cdd47302f6eae"}, "ebd062fa-3516-4c56-aaf6-5b96479879bb": {"doc_hash": "18bf400ec94504223ac740a8a0bce89ed3c43e710117381a0116c79bd3613489"}, "1998c9f7-e924-4785-91ee-1b75003ae3fd": {"doc_hash": "8eb1d141d1413132c1f885f2775e66ec7882f484b682920c1d68efe62665bffd"}, "5b90ffc8-a70c-4e0e-83e1-e1be8d48adac": {"doc_hash": "70bcd9b6e11e9b6644787d1d42c1221c91da9d657512a6625d4948025c73ff6e"}, "c62e3698-3ac2-41aa-a3b9-f5bc38ba38c5": {"doc_hash": "9ead6110673034c2a5b627e5808c3f5baeb4cc78b31fbef792bc71a576619f7d"}, "50e1b02c-e715-4183-90cf-8152355a4e93": {"doc_hash": "4ecc33bf8dadb01705f5a573ce8e2098d538e7f19dfdf1153598e595a4b156fd"}, "525616b6-cbc2-44a9-80fc-bb9b9dc1ae59": {"doc_hash": "13e710ad0b47406b53862a4fb5bb9128a323ca2bfd73775a35236d7715d013f2"}, "0dbb2922-87f8-4e18-8797-bfad97717ee6": {"doc_hash": "eb73e6de77644efd9bccd136f9c84ad3bb62d4ddb37402ba56f5fab71da022aa"}, "e4a7cfdb-f50d-41c1-ba3d-068260656679": {"doc_hash": "010f67d0dffae9104f4f4db35a39da7c54b63279d4675edefc8379c402b5b80d"}, "3a0fac2c-7a09-4a1e-8f37-be8de3181a98": {"doc_hash": "b3ee0d82b80e8f72b923268736703a7f0d3450d10c55bc0e539b7bc3efe0d30b"}, "67754d78-2d8a-42e0-9819-933966d70cfa": {"doc_hash": "0354bde3ba58709728b832e9777f8fcdc1b143504fd3a574ee6d900e167795c7"}, "e40b1e16-cbe1-46e8-baae-5fe32152ece1": {"doc_hash": "27a4ef0af181272a9d27d2f8333d7f4b082b577fcca0ec1bcb1511c98fd93313"}, "df266c90-4474-49f7-b4df-58557c430490": {"doc_hash": "e4e91fa3042d6765784e4089fe5e0ee082b2027f8f15c700db5fb27357fceede"}, "2d20308c-b41a-442a-96a4-10a4c7c2ec60": {"doc_hash": "0ad662dc7043cffaa5521354c763e7cbf76ec2f74c36bbeca5c930b40871c437"}, "8c4a8659-26db-44d2-b748-e769c564b6df": {"doc_hash": "507355f6559ac1a422d00984a13f9f535ec4f4b4bd3f3d966d578ac4b0fb3e31"}, "4acf6c7a-4a2b-4d52-80cb-f6ca8d82d631": {"doc_hash": "aa05c63ea4b4644d5e6073159b2e846948ca421e5f88f650443245deec4fec5b"}, "48eb1f04-6d81-4122-a53d-daf0ac6e6ce4": {"doc_hash": "a47a7c5a3ab99278aef8cc0545b9c06de0508af12c93254051e41353d7655c9f"}, "bda73d1c-5385-4628-b78a-a4961819d273": {"doc_hash": "5266251c3919e0e20542d5bedac6a454bdea6521682aa3edf27dc85d4437e764"}, "89400fa6-7b38-439f-a897-42d17a327ad6": {"doc_hash": "4bfc28d490da49b73c0424b67a3b0b6cd8ac0ea53ba7e4760069e4c07c999f51"}, "baa57928-ca97-4615-859b-53f152d0e45a": {"doc_hash": "9b5221c7db5a9064a9b0357479863ee96a7ec1d0527b52d83fa231dbff71d78d"}, "5df4c805-5dfd-4b3e-a1ed-012e27876352": {"doc_hash": "ef91c24dc09180fe02d281476878db0d89e96f8931a696ad873a1afbd4a710a3"}, "9995bc76-b787-4461-be89-ddcb7a42e47e": {"doc_hash": "ad2f83694910e2ff0b0d9204ba7ae041dd0462620ef81b137c08e8537a19dadd"}, "69121cba-fdd9-4aa4-b771-09d96935105d": {"doc_hash": "85b4e11bd45eb0784fcf33362931dc2825ae9ad3a5c8f3ef11743b1f42613c2b"}, "85f9dfa3-4ade-454b-a540-c274d4d641e6": {"doc_hash": "8509abdff8d04590ed534eb2919d6924db676646f56e4b63e235bbe1aef1b5ba"}, "005cac5f-63f1-4329-bd14-bf4c1d14bac8": {"doc_hash": "1f8aa92394959f273aab4aa3d489aa0fdddc1ef6daaa175c863b97e9dd664646"}, "ecf0bf46-365a-4d32-940b-8b98806f0b9f": {"doc_hash": "c172d932bd6ca3d24ee1db477087bd099af08c89456db74675b3e16f9c76309c"}, "38e7d198-eba4-4489-8ebb-dae71ccc6730": {"doc_hash": "de94f942997438b290009f948cfab6d9cffb780bc1fa90bffe6496811839e8da"}, "db76c7e8-cd2d-4130-8288-4f9c54a6ee34": {"doc_hash": "a4ee77ad612537e078ae23a55950b65f264c843a7b8e1a8b9186bee6e17be239"}, "577041ff-457e-4c28-bd16-e74c3aee7f3c": {"doc_hash": "8680ba3d23e221e67fbdcfaed905575dfc7ee41fae2f44ea69513ed533a38818"}, "a5e0ce9f-cd04-46b4-bb0a-b93bf280ebb4": {"doc_hash": "d76880531f8634ce3872418a391affb0ea8e98e9a8c8cf9eb1ac855b62d244fd"}, "cdd30fcd-23f3-468e-8d2f-103e7af8075b": {"doc_hash": "ecac127a5bd604d240007a005647120d6f1c7b8ecb67196cdca1e2538c374ca3"}, "eeee4bdc-55da-4130-9662-30faac3aa84b": {"doc_hash": "3ecda9d0ca40b23e57fa1d60ae1f65265b5ac6767ef73c3d25f3138d46adcbb1"}, "cdb80dcb-8d36-4e81-b913-034b09a305a1": {"doc_hash": "a9aec65bec19ac3c7aaaad3ea62e6cd992dc995daa0ec51f7069e7f832328ae1"}, "9f8d873f-c784-4bd2-b80c-2e6f3698671a": {"doc_hash": "be7c4213ff86e67ac1ab99bce201ce6cb69d144e7daf44dd0f76c8a7c5a2a6c2"}, "9ff126f6-ca37-41c6-a8e0-23a154c686f0": {"doc_hash": "192028ae64d56c39477b3b59e5754e38daabca842c5194df692782ddfbfd2714"}, "3021c611-ccba-41e4-ac04-8cc4afe5852b": {"doc_hash": "2d7523a794b3084105d362ee26acc0cc11e48ef4bedb03937403ba44e8930d53"}, "ba42d0d6-ee0a-45e9-be76-6fb2a50e1217": {"doc_hash": "2e0099d60e7c275267f49fabaf09cb299d46434ea8f51433a5d3c957d5f8579d"}, "a1edffb2-ab7b-44e0-baec-cb6dcf469e7e": {"doc_hash": "246334a6138c7aa47b133c314d6fe72cedc1564d5ffae52b0e9cc80e5f131df1"}, "e4629816-5cd7-450c-b8d3-7c1470af2147": {"doc_hash": "625d6c9b7b23ef87c71c177be85739b562134a6a439d80e8324ef750e0dce625"}, "0306128e-efeb-4c64-80bf-6cbf40e6bc9a": {"doc_hash": "7b62800fe599e0413d8cddadfe23aa5b14fa9b7b64b55fd679231f8d82f70d6a"}, "1a99632b-e21d-4473-9ae8-d74f9f4190b0": {"doc_hash": "137088599a93fc51a135c837414581f38b6d8a7d002103133070df43c7d9fb13"}, "7629df1e-27fe-4bd3-89b6-f358a730121a": {"doc_hash": "cf317fa4a2d6c227e7ccefa411b331685c32c5ae20805ddaf1e15eeab7255283"}, "b9e89939-c2c4-4d6e-b29d-28b46f51cb12": {"doc_hash": "1466527b7f32225038f2ce2609d1d77331970dfb1411c9a41a103bd071239e8c"}, "4be576b2-5a3d-4353-bb0b-b47b4214b883": {"doc_hash": "d874e0d3b4ef384c46ece390ce80d38c607f93a47e7a2a8f00c9c0c2cadc36c2"}, "4f54c988-2e34-453a-b05f-ca0774425df8": {"doc_hash": "3ab4545b316964948f68396c9aa5b4c8ccf4f1575e4e26ee42afd956ddc1bea2"}, "ed7a2859-0821-4472-81d2-26f82000540b": {"doc_hash": "72f3ae1a4a1fa99b9a3aaae2dd7f1a0598702c260060493448aaafde5ec5ac47"}, "4dc33ac4-9a39-435e-b665-2eb7ea8889df": {"doc_hash": "cbf4f474a51a7a4a19ed5785ab2fead12e6a1ec82e03fdbfdc2b64f5c897545c"}, "b37beb03-cf3b-413f-b7e0-76ee61fe6bea": {"doc_hash": "8b43b89482a2c73ac79a09597fb4afc859d4b55a4e08c8b14478ab57da6f8234"}, "a91034b0-9840-4f89-b6c1-48ce44b3fc5d": {"doc_hash": "3b921f6723fbde7f24dcb2250ce34dce9443e63c59f8370414fea056b2cf2720"}, "da2b88ce-56ac-444f-99b5-522e7f5653e9": {"doc_hash": "a14420ad15014a59993c2d3474c66fcb25fa0e2a9495e7c8b0a69546b9c3e869"}, "c1a1c962-e3a0-4de3-9d33-2a640b06643f": {"doc_hash": "6edddd368fd3322224f6f6704abaeecae605019ed80e0e882986ea994a3922ce"}, "5f4a9738-5576-41e6-ab88-32f902f9e9ee": {"doc_hash": "4ea97860cddbf745aebdae8b93da4e171515189d3106a093cb4cccda74d5f43a"}, "953da057-f7db-4d8b-a8da-fdfae391a330": {"doc_hash": "7b0cc7525967bf4390d1e279faa426922c1aeabaabc6fd32ab4cbc4117e9dd50"}, "19ef0b8a-7986-4a84-b3a7-76ab9055012e": {"doc_hash": "b6b276ecbec350294bf1abead44c13b68be815ecf3a89a2f2cf9348229f6a999"}, "955d2651-5599-46fa-acc3-98b49a170a77": {"doc_hash": "997400666d6b2b6ca36f28672aa8bcf3bb91a6b0ae54dc3da93bf25c4d0c5bbc"}, "e17e0713-eec8-40c6-a8a8-86c50f7ed961": {"doc_hash": "aeb2dd34a004b7de638c3906991dd8d9cdb5b8d828de05b45c3609b78191a085"}, "5c8555a0-32e3-4dd2-a344-1606f8aaae88": {"doc_hash": "767b7a93a3908f8d7c94f7932b8b8f9a9e1c19cf08d23623c13b8efb3083df56"}, "73ed8557-e315-418b-8628-cce872a1a2f0": {"doc_hash": "65cbe25aa6993f71d979a719e41a76bef291835d36fbb231a202da86bed40f3d"}, "fa26c4cd-dad6-4c67-b57b-bc16a431398d": {"doc_hash": "67a98cd1d9f2403b10054a824d0f71a6776badc191bb16adb61fbbf2bdc3b0e1"}, "0b274780-4c2b-40e1-9222-866fed636dde": {"doc_hash": "92011f36c2c22375600bb45925df4a889af9bcf316c87c61ea98b01c3e205085"}, "7daa73ed-1725-4285-bc12-3783ed7be7e0": {"doc_hash": "40eea49b17f4b6aa4e9d5cf415f84bf1a83a35a6d6098991afd8b775b06bddd7"}, "427af184-71ad-40cc-8649-0ba87b243ee3": {"doc_hash": "a091eb2817c193b57d1dde150a209b92788684a3bba55d053b1ec48d98d7c6dc"}, "7714bb8c-1074-4e21-b7cb-515d58ec67a1": {"doc_hash": "3ae3c6cea10c0f4033bd20f5304aa0b7f9e1ea1566efee90f55fb75ae8806b4d"}, "04b9fd5f-1400-4c71-943d-945a9fc354a1": {"doc_hash": "beab32900f7070439bf13708afae20a4ed2efb12a3578a779ddb7eeaaccadea7"}, "14a9fabb-6cee-4223-a8c9-ac06eaaa63c6": {"doc_hash": "118da7ea13a894fb750d98407ac6869a4a075d7171dea147bb8ea79ad8f0a72d"}, "ebdfde79-ee74-4b68-8238-c6fd67a3a85a": {"doc_hash": "eb582f57aaf40040fb2f841c8c3472dac364cd1a23b175b79eb1436923c61fc8"}, "e4773755-1f7c-4dc0-8af9-608bd8ad16a2": {"doc_hash": "41115ec4984fe3d37a4311ce68f3ee712ec1a5b6caa1f90693c5a1b947e9a1c7"}, "6bf77934-734b-4967-84dd-fb3ce0fafc2c": {"doc_hash": "f4d4925d0a94e3f19aa6ec2179e51a5a754f8736d428b14d48b9a1263de0fd51"}, "c8aca8ad-cbc5-4d10-bbae-317a5b7e56fe": {"doc_hash": "7a55413096e143b3a2ca7bba81285431727a07aa55ad8be1861c0a79daf29a9d"}, "40dcc54e-286a-4a0c-9bc5-7d72f2ec130b": {"doc_hash": "2b894d63d92e5fa63eebebac62966fb76a28913d2ab699693c750c76616e10f0"}, "dcf9d7ba-b366-48f0-be1b-8a5d3c4155e4": {"doc_hash": "2397b5c06498f0ae952e95bfe14efd1741b4426bbbab2d9e981f1c61e5d79883"}, "b97e3d4a-2a72-437f-900e-bb76549e6f95": {"doc_hash": "df0c83575ffa3488f38be21142dc5edc6b022eb980ad589db67297608630abf7"}, "a31114dc-5953-408e-bc0d-1de11078072c": {"doc_hash": "b569a628b36ecb84ca44b3cacee07089542b628b8e9181d89ce0a6519779e275"}, "230895c4-2806-425d-a555-4bec9500a075": {"doc_hash": "1c6c3b8f512fe26251a23e707957924be190925bad92c165cd0e1f622ca944f6"}, "b8d4d5a8-4071-49af-a172-af727dbb7b9e": {"doc_hash": "df13bf6afd39a89ceb007335487f99561fa00ac9edbccace8ec279d9ff8bfda8"}, "36bfd91e-65f9-46ce-92ca-a0397739a689": {"doc_hash": "d8702ab40fed7bd32a59a540a8c221caf8270ed5c43835d5ebe1c6dbab84e06e"}, "86494091-718b-4367-a1be-21b30e258915": {"doc_hash": "c21e3d69c6a4a97edb3fb6715ca5515e0b4a5762e16d745a66a301bb9429d74f"}, "cddc73ef-a2f8-4584-809c-1e3d4fb3b981": {"doc_hash": "156ac70d169dc0632815fd660251a5874b1ff137a00d76b8f391e083da6deee2"}, "c028ebb1-f2be-4ebf-b02e-6acf6f5fe978": {"doc_hash": "8122941623f72ab132c013e4277b86139ac93ece9a16090e6dbbed0406bfd4ad"}, "a9dd91f4-550d-465c-8ed9-f5f2abe19257": {"doc_hash": "833f7db6adcb32ee855cc70a991ae5a4f6ad6135df4506d9182d3fb43d3e5d8f"}, "d4ebc4ad-d924-4820-9580-b1f0717b705a": {"doc_hash": "2a9f83d3021eb2381fa5884d80060ab5bc1c53b8832dc1b43fd54d35d639a317"}, "889d20d9-1497-44c9-9947-aab477630032": {"doc_hash": "e6cf51cb01506b124fbae259ac67f06da5897eb9b1ebb51484254803f46380d4"}, "1cb8934b-b306-4ea6-a323-7627deb61a67": {"doc_hash": "521bc72c66750a4942f8f5384c775fac3998eee62b81480f8ac2990e9fa89e26"}, "a2f6c344-3c34-4864-8157-bd4922f9d099": {"doc_hash": "0d30bc2f81446a6a0144a0d2de92aaa4c1430da6e168e68db0cbee8e1e34147a"}, "de7fbe80-78ac-43a6-8ea3-c88a162b1834": {"doc_hash": "a68ef38f0423d345b5b37879bf2c75332e7e85e58985aff82da53e0ab6867f04"}, "eca54a8e-1db1-4024-ae1b-b81f6aa140f6": {"doc_hash": "68945a271dba656f5ad0563a3d5d8a0a4bfd824a9ff1c8ca37b64e1c55c9ac13"}, "0edd5bf5-a398-4a79-b5bd-d225035cf251": {"doc_hash": "beb75462f071191365af2ea055b0d460cd5a845bfe0b0ac341a704cba03a9814"}, "d088ffcf-8741-4646-93df-68c282c3ac67": {"doc_hash": "b94d0351a00aec0b548774a3e14f4a453eb9c41af175730a42de42eb9b19893b"}, "5ae32cf5-293f-4d47-9534-00d2c197061f": {"doc_hash": "baad2b5bd6ab0c289a4a21fb0c1f3886123d263b7ba1fd06749caf744b986653"}, "19a2cde9-48d7-4b1a-a91c-f446f296dbb1": {"doc_hash": "55f6eb4a8ef52129c3439d505e75dc4126734872d787659ad5e14961cf84a7e7"}, "efce34c4-dea4-4bb5-bb52-5c1adcbff233": {"doc_hash": "82e38ca6faec96cd6d9b26bde7bfda32437a1ff52f717ac1ca70b46560a6e9b1"}, "c119a010-f544-4fd4-ba6c-73887c6c85b2": {"doc_hash": "41f4464e4bb65619bc882c7cb91efb3fa312d0e90ba5afb99b6895942570a88c"}, "bbe34053-568f-4dfc-aeb8-8a0b554d74d6": {"doc_hash": "d4bf2ccd38a14dce020433bdbe9bbdf30ed11f61a2ba4b360ace2b3e827f8fd8"}, "bf7538f1-de7e-4b8f-88de-cba52c03f12b": {"doc_hash": "9a460a818b0303554da60c445538e921d93f4f8cbcdbf6f972675d946eedc808"}, "fd2a411c-7bc4-4813-9c70-55bb97b62103": {"doc_hash": "97b0aa98b9b09cc56bd634fd7d8b348101a0fcc75e326e59c314ab1a03c37ddb"}, "46d520e9-6fb8-4ca4-ac8c-4a0e1c3baa6f": {"doc_hash": "a2d7c3c5eee5b2ed64a5bd6b21463c6326c88b2e3395b1c710c1b2f48a46ab5a"}, "70a4b2d2-3a64-4818-a46d-2bc0db2f746a": {"doc_hash": "c46e4fd521e4a6768fc73ed86336706cc45467bb4a26fac1a9aa15852f5186a8"}, "a975f660-f6e0-4e09-ba0f-ab457b6683e3": {"doc_hash": "51c4c1498fe5879b61e1a9a064fcf7cc4bd3953c5b015dc5e3ff27c4ba0b32cc"}, "f671dc41-e7fd-4954-913d-662b63c84e00": {"doc_hash": "f0d3c721713bb37ae6a1b946ceefabd79cc43941350c9f07c2ea0af7ef2fe0d8"}, "845ceb00-1c22-46e8-b768-67349848d52f": {"doc_hash": "01e235c68ea469529267baee1475e31f14c1ee112270b55655c5daf212fdf30b"}, "6f3ed657-488f-4d3c-8d1b-4a625544cb31": {"doc_hash": "f2785b38278ba885ee0917a1e9e043531e98e60977e262e7dc6903bb2ef71dac"}, "870fed0e-5c68-4223-9885-1785da4b3959": {"doc_hash": "52871b17beb0de7cd89bc90d46a6427688e20884639c5fa236630146d8eea1a7"}, "e22f34f1-4930-4ccc-bb83-500ce89f4e83": {"doc_hash": "7f54868163b5fc006c31a1662771d7e493b7a09db80a27b1a28412a686806c17"}, "b5bf1b37-19c9-40a6-a086-7faff7a0e505": {"doc_hash": "6afa941c24c1960ee775dbf7a9497c6f646b9483a9e078a17c4930866984c542"}, "58e7945b-8d0f-4633-ae74-b6233b8bc542": {"doc_hash": "7a113ee930bdd72580c06c53215b42848e31e141dfd6555d6a734fd503fbfe12"}, "0ece548c-1254-4652-a107-98fd697ab686": {"doc_hash": "9c4707605bea00a5b10ef3389333e149f56bb8935b2da2e569af22ffddbebc03"}, "d3aa2928-76eb-44ee-b6f3-a85d58cb7520": {"doc_hash": "2a364245867cf986325558782971d62f19f81df5d28375ceb872691d328b77f1"}, "d6c0ad75-a453-460a-b076-d7d6bbd05d77": {"doc_hash": "aec0e19c40aecf180b3330d7bae5b2c2cb6758dfc60dd45b1482781f99467503"}, "7ad8b4cd-1c5a-4203-b5b2-62adb83bfbc3": {"doc_hash": "eb44ca890bb76c90ea300020274e226c268893ff7faca9fd39c937942f14101f"}, "10532f87-49a0-423f-9cab-09016430586a": {"doc_hash": "b8b50fe53eef4bb5b82c61b2d6d703447baf1d89ff45d25e9c42f7d10c5397c9"}, "390f0fb4-1688-4bd4-b240-a6816598cf6e": {"doc_hash": "1222d9233f399305b790db4592efadcbb551efacd186dbdeb3a58c692445f9c5"}, "6951bcaa-d353-4940-bd6a-c12d82a6760d": {"doc_hash": "82eee973d9780778dccae1e8384e31c3f28d2ae388a382f051e3d85e71000a82"}, "6d69e80c-d1b2-4f08-bda2-d46dfd02913f": {"doc_hash": "d0618a2bd74e356edf6af997732758fc764b71ba5cc74c8db205058e7da13770"}, "79237b01-ea9b-4ae7-bcf0-1f92ff441c6a": {"doc_hash": "0ace67f778649c417d4fcea5c15cdee09117bf378227961223b7e6eaeadb9046"}, "22bd62d2-7cd4-412c-a1de-00580193dd64": {"doc_hash": "063db3e83b19fd15c81cc45fde04cf840af673e08884d12e5724ab24ac401898"}, "0ab2dd62-e9a2-4d4c-9994-237ab61fed0f": {"doc_hash": "b45a43acc1bc624451446083b9c384c34e29bf1dd0b38cb1163a879afd9834e7"}, "fae9c19f-173d-425e-a5e3-21128e84eb04": {"doc_hash": "e49f6e4a933a8e7d9d45574261a1678c129ba15aa800917799e93a4042be2465"}, "16d2ae31-27ae-4464-b393-24ea2ca99a8c": {"doc_hash": "88a263e46271c6cbbe2e222a9537d192406004b2c6d0ac4c1028211b289a0008"}, "e68d3801-07c7-4186-aefa-43c158fa4bef": {"doc_hash": "8c390f3613fd9341a546554465e6d681b6a6612188a0dd1879fd34150c2abcc0"}, "91616269-f156-4b41-83b6-334cb740ba00": {"doc_hash": "a0913a923f5114650416c9bec6042e13bf47306fbf1d0b9dca65635dfcbea2ec"}, "89494959-6a74-4cdb-8d60-27c591145bff": {"doc_hash": "e9f3937b2129a06fc05414c02a893f8a1dfacb611a1cd998a84a560b2a448653"}, "6390b09d-7a9f-41dd-9dc8-6790f77948e0": {"doc_hash": "b99d3ad4bc30fbd8c002f1dfb67f63f5a69dc53f902470610619265cacea3729"}, "64055e18-de96-4163-812b-c130a5ec3f97": {"doc_hash": "0bb635e668055c6321670e6e00c8eda0b84396f1eb6372b8e842bfffd292a086"}, "4c60f5d5-686a-4713-98ec-18c385b0fcdf": {"doc_hash": "ccc2627613ef64b96ac1b5eac24d1455ba169de857eb5de1974cd2faa31e2e3e"}, "98e3775c-336e-40d0-aca9-9267146911b2": {"doc_hash": "5144336b56655a875557d8ce131cb5b4b5b70850b394bed09ebfff6cf17fa164"}, "457ffbe3-3e00-4da3-88dc-243bcbd41275": {"doc_hash": "e0f3e05a7c06dab75ef10ae686ed4f41548746e823e876731207763bfb06a77c"}, "68a8ba39-3ef1-4d1b-a13e-b481f1d4936d": {"doc_hash": "57e16b55ff2897dc2e8a31d40952e2df773f009136a11eaf30ff767ec7a8e01e"}, "ecde64cb-a89e-4c04-8185-09ad19da898b": {"doc_hash": "132af41742605d88f981f748aad23183b0a754bb311d61ded65fc0501164d29f"}, "234aaad4-09a4-4d88-97af-dbd97c86e4e3": {"doc_hash": "13da05d1a15d0f6f17e84fcc8dbff8665234db86adb61ef998b65db8f5b23c23"}, "567da195-2ad4-4189-83f6-b73350f940d3": {"doc_hash": "4b2e6de16cdd5fda53e815e080818752c3a25772ab80a7c66fc56ffde08e87ec"}, "bac1257e-0af7-4c9d-988f-82068bb8ff49": {"doc_hash": "005e5c9d2dcb33f5536ddc8428d4428490519639e5ae18b3bef4fbe2836874e2"}, "6966c548-c3cd-4309-a234-69bd01b95b87": {"doc_hash": "f37c19466b82b74e6eda7c0347bd8c0f6c702f1abc95b51af31409ffed89c303"}, "700b8d2d-5f6f-4c43-90a6-43b2e4f6905f": {"doc_hash": "e17c58d8f38a2a65f43b4f6bfbecdd9d36a855eeadda08aa2359bbbfe25362b3"}, "a2f65be8-0f8c-4f11-9f5a-8a182932931c": {"doc_hash": "03271ccd475ea2cb7d23b77edde5cf228e7aa7304d639d5977f6affa41827315"}, "a6e73269-10de-4578-9da6-6919c78b9d16": {"doc_hash": "1c3e79b9e19f8f5a316c0f54be5ee31ba7a818226875615d6dfd92fb2fc3adb2"}, "64ec1232-3291-48ab-a464-c42f4699ac6e": {"doc_hash": "0266db9dba188de9aa0c92b0a9f6d5edec7ee528776a9b4d5acaa7295c878948"}, "b972e0ab-89a7-4a7d-9ee7-da95b0db0dec": {"doc_hash": "23751f2bc44bf566833795b5a1982db770a74bda442469fc07195ce070dc94dc"}, "6c178835-ea83-4d07-912d-79b6cf059cba": {"doc_hash": "2dbea390848c42159977a350b810180759359ef4abf482cb5e4c79db17294ed8"}, "a67f4fc2-685f-4192-96d8-98c8069d925d": {"doc_hash": "58b0841cc7a48bb8628bdea92692f56370ea7bce3911d70fdd5574b94f48e1da"}, "e30d8ba2-8b1b-4636-ad4c-1de448534ed1": {"doc_hash": "efa3a320fc4e05ac3e44f7562fd2d8d181b7c258d7fb290d4fb3f69d6ab5945e"}, "d2cf7473-a863-4f51-b591-50276ab9f6db": {"doc_hash": "52fdee3b68ba590a04f67593b3a52d83915db924b1df794b667d68a6d14835b7"}, "a828857b-34c1-4414-a711-577a900dc233": {"doc_hash": "e57981b558c46092ba1dbd213699f2874d6d0fc20840774960f6d7a5ac8484ef"}, "5e1fa239-18f8-4d19-96a7-bdfc9c1eee60": {"doc_hash": "b45ec48574d91691bd1be59d336e60f9070a3e71e7c6256627c5687f6394a4bc"}, "d9d78de3-3142-4940-9111-304069374948": {"doc_hash": "c3f6db1c678a1d36442b82d5bc2991f42580027e7c687b95563f0d99c8fe3030"}, "6350d9ad-cdeb-45c2-96f9-3f7960333f83": {"doc_hash": "08f00b797e256382ac6312a4a0d0a204094f47c9d676f9ea427694af7540262f"}, "16afd148-6c54-4664-bf37-65a82b515bab": {"doc_hash": "4700e93ad7c0e41fa8f6d14251317e4535022283f45023916710511f5deeeb90"}, "e7f67a0a-a134-4ef1-ab79-4a26a38e9066": {"doc_hash": "a3341034ef78ef6ea00dacad79a5eb1db76265ed43fc7940886a55db109a3828"}, "e72a25e3-5f06-4283-893d-7e6d16d6ef96": {"doc_hash": "2abdcf6f7e1ead0b996e6fcf8e12caf1b17e143c36acf1e05eceaac60b6267c1"}, "b45bdd31-0df5-4a22-926b-af65315a0d01": {"doc_hash": "c1a2a8bcca1a48955f18120ea0f4884d7587c564b51d30e4ea1e55a27ceb33c5"}, "5084c12c-3adf-4409-a4d2-c17e4728019e": {"doc_hash": "1d71af446d588dff1ac687d98b4ef20bacfacbb17f4b4e63853481ee10a82257"}, "f675e1a7-f2e1-4ffa-9d4d-fff755221d21": {"doc_hash": "904d11aab26a13433ee082a975a9838a90e5c68ae69c562e08c755691ab482a6"}, "92922613-6405-4107-b763-a7ed65cf5968": {"doc_hash": "93fc4fe64766a8d4fe48b4e06a90477f6fe4bcf6bc06ecc920dc6f15719f63f6"}, "f9ba861b-e745-4af4-a419-243434443849": {"doc_hash": "3f97ce3dd6bc5ef621ac1aaa3f73ef2d26f22229cbe3a2b8626cfb83b62fd1f5"}, "615c9b3b-f682-4ffa-a231-a8ac900ec143": {"doc_hash": "543b2a8fc313e73cf1b83ed157c362a5b6e8951d495a42b557db2b9abd2e5930"}, "118cf916-4848-4119-a7ad-6faa24c4585c": {"doc_hash": "bf78b98cb47cc5bd7b603b4a91a2dc4c07193e5b549aba0321a906f308f38512"}, "62a18152-1752-4e69-bedb-9158aa52c972": {"doc_hash": "e4fa42d8ac3a6ddb5a219c8a2438de03282a121fae8911bbe305c0c1ccd9b3fd"}, "b27c6276-3acf-4a64-af02-44abdfe5a7fd": {"doc_hash": "b5f39e69019ecaddcc693f4606937c65ed7f64f16e0293182ebac9d9aaf2fae7"}, "98edb035-5e38-47d8-abc0-1d064ae2dfdb": {"doc_hash": "db06b444ad0df7b82204483eefa09ad153553be8ee43bb584ed525d7df6098c7"}, "848502e6-3271-4195-88d0-a381bb3e866b": {"doc_hash": "576fcb0c1fc666e182a33941c6522e570654d9b50b8168ec61cdc64910495cd8"}, "afc8ea44-63bc-4b8b-ab04-003c6c7ab056": {"doc_hash": "2801892c4674173646bbdbe4183e3643a6997138233c6c285379092a70321832"}, "e82a4b96-fe23-4c4f-9527-132217b21b1b": {"doc_hash": "867df8c306cd48fdcad7b6fc31268a3ac1280e98a7ff80e30fa057e560ae4819"}, "2149ec21-ef1c-449b-b490-5ad4b06d92f0": {"doc_hash": "c1a9ad5ecfa29aa7436e16c1b882c4e9757e79cbe482e309511ac0bb0f343b42"}, "76a109d9-854e-4885-b2ee-9419c2a34b4b": {"doc_hash": "cebc773d4b2530856c954c173a24ba7e752f0e3f8572daadea2494a0c514aaf6"}, "330269f8-9185-4529-8658-1052855ce5c2": {"doc_hash": "e81a9fcf987aec95022be134e0fd4e9779ca3633399ddeeccbf65ded15bfd1e3"}, "958f3714-453b-443d-b0e3-e38fee332f76": {"doc_hash": "9c878d975f29f46c34e8f3524edd39b512b41773fe022fd5812a72a60c0ea2db"}, "953acc30-bd77-483f-a19a-3154e267269c": {"doc_hash": "39864a658dc9c3dfa8faff92168cc1814a4f60d7bd7fa9b1d43975c345a94132"}, "8c8e0a3c-6db3-4931-a853-5020f7e86020": {"doc_hash": "5a405ecdc802bb632560f5896dc7af37c6b91a07a9d8287e59781617fa6be4cd"}, "1aca0ac0-ac89-4636-b7a0-773658c0f2a3": {"doc_hash": "e3e1ed35d1fac84a105498aa1ce75944ef2e73cd0cc8ab1da30f88c3530ef762"}, "94e52ed0-36a1-4ec6-9fc2-f3a710d3b530": {"doc_hash": "60ec87bbbab06dbe1431574ea2213de737829dfb1438dc5c0b12b2bb9e01aa24"}, "34f57a5b-285f-4ce0-89a7-b3f7b04fe1e8": {"doc_hash": "ed6f5336c23e065a76c9771366ffcbb2a784a9163dad91d2a258183faf5270e8"}, "e297ff0c-2cf0-43e6-9fdb-65bc6423cd92": {"doc_hash": "1ef074d8acccfab8b96eb7431c1bfdef403fe21a789340ce9b09d15490b997ae"}, "0e5bbb2d-80b8-4931-93ea-16ae758f10a4": {"doc_hash": "81196783e5917c93277d1e283dad28f85e6875aa85d386fb14af9c6c4692c7f4"}, "34598745-1e6c-4547-b298-0c68d892b481": {"doc_hash": "5b8891fd142ac1c3040b485c9d4d6415c319bb6b1f91766505bfe81314f39a64"}, "9b1c7e72-53b5-4514-91a7-6716325ec7aa": {"doc_hash": "77428807c085b4ddeccbe782223a71c715265e5ca407a31a8f644baf9e7fe512"}, "e4394c03-f508-4552-b0fa-edaac16f5c94": {"doc_hash": "d5d8a65098116b3c42add8ecdfaa8f5e08a6d351379f0198b3a6eab9389fcd9b"}, "0dd59eb0-b18b-44fe-804b-80d77f2981ff": {"doc_hash": "1fd90f3434c02ce2cc1c40493f5beae2d3ad6736317f1b7272bdbb5d7a8ad6dd"}, "4ad41de1-c652-4d0a-b799-33188c7d7fc2": {"doc_hash": "6ef791b5a0a550bc2e06264ac8e4024876b75e3a02d59314179cc87a0faddc7f"}, "e859d7fe-f1c0-48b6-b1bc-7e19cf7996e8": {"doc_hash": "6429574e5b83454bbe0f0fd78240ac111858faf256ef9a3fb19746caf34d0c47"}, "16a578be-947e-41c0-9078-6e4f2f1a0b60": {"doc_hash": "b2988d950d8459a9e85c7fb493366d015d2f7f8238c96e81eb38f413b405791d"}, "3ce35ae3-c7c0-4b7d-af82-4bc42cef8c68": {"doc_hash": "a40039fa886a6bdd455485e65811c43faf82eb82411ed58e1dddc4ed36cd3d57"}, "b7f2bdb7-07f1-4d3c-803f-675176c3cc0f": {"doc_hash": "9cc92c5db8a1cb345b004d524bdb931810d4fbb53376465c0a021f28c7f86ed6"}, "92df0a1b-3074-4cf1-9ae9-f2a87ef8d11b": {"doc_hash": "559f7c6b9035491719e7ce94c81d9fdc98adf74eea79d63e74b3cb116c230362"}, "b730dcac-3444-434c-a56c-86157f3b8f57": {"doc_hash": "511cf8d2e5fa3f214a25a8804dea49934207b63d383467adf6f425fb500ebf41"}, "2017215e-1489-40fa-a06a-a204ae0d3942": {"doc_hash": "202f0b4bdd6c1d8bf46aadfbde6c225d025d1d5dd713db7b361ab8f538a9dfda"}, "a3ffd28c-3bdc-42ec-8164-a8c5e6d79016": {"doc_hash": "f1d3837a54f52f40b3ea2a7ebc11f55feab3dacf587deb05dc225473300057d4"}, "ba01fa1b-bca1-4cf8-8f08-90b2012b8d0a": {"doc_hash": "8d8625608a8f44f49024b7088a0476937396bef1784060f04e640b4b132855e7"}, "75d9475c-c5dc-417f-808d-417f66623b0e": {"doc_hash": "fc5a23cfc86d5e16d8cc1d75dc7e4f7705cd793e1c01e2c44df906f1f771e7d0"}, "de178844-90cf-4dc9-a03d-652283c9854e": {"doc_hash": "29e353b6abae2a2b2717429d813c00abb26d16c7f953012c7a7ae681bf98d269"}, "dab23684-10a7-4351-8e2a-fc8a0b2e10d6": {"doc_hash": "b56b30562b48811a99c273b44143eb4bacfb83ebb4111dcea7c10e2152709c5f"}, "ed285ee3-bfc0-474f-9787-754db0c9274a": {"doc_hash": "6c0b5ec39849bb089b730293a896cc92d2e03a65202233176644fc97fe3fc41b"}, "cc430645-b670-4995-8983-2db599be3dce": {"doc_hash": "ee2d7ce02b55ab9fb89ab36b5a5b6fa20b0a1aeea83d471ed5c640be20de5e92"}, "9a730fb6-826c-40d4-9ac1-ca1c8e0d0ea8": {"doc_hash": "d7b0e4f755d150c41dace1149f45bc290651e17241efc53164f72b1171183b92"}, "a5b8f2e7-ef11-455b-9206-21a45319ded8": {"doc_hash": "771ca9019ae0e16312ffa1325ac905eb878d51b161765e9572aa5d026976ee0b"}, "2e7dd01f-57c2-465d-90da-b79959e0c07a": {"doc_hash": "0359425f1bae283ceee08b6e3a1f97288b048a42dd8e0fd8295646d86c5518d0"}, "1eaba30c-1b5a-45b9-8fae-ed76cef6f5a1": {"doc_hash": "57d611531cf0ab14d5ab549bc34f287f0542ca7e99c575e61d1634503fd93f7f"}, "2a6b3dea-a28b-4946-acca-276eeda39edd": {"doc_hash": "faf70c66e193ef35b65800b013cefe29759be4a42cc94691c63f9f5d4694d4d8"}, "23e82263-d8ae-4313-9ef9-ad0e362e3a4c": {"doc_hash": "87d08954a4635f34c2459eaf2d0e4ad86e9fb401e96cd5914ad0d12345a654bf"}, "d2cf115d-cbc9-44e9-8da0-a96e31a62eae": {"doc_hash": "2bdb95febb1fbd840d64b51442c4c1f4ac48329fa4135357f9de103c3f4cfd03"}, "4424dd13-f9c3-4566-b6f1-1efbf04d9e7a": {"doc_hash": "ad58f4ece13ac033b859fc3c6a3ea19a58b6bdfc84480edde0464aa904ea1336"}, "d189ee29-7b6f-4b98-afa4-291dd4e073d0": {"doc_hash": "d3b93c73486f72c5802ae5949d65d457710594f8371d10dce281b08b7f18fbad"}, "868ec625-74ea-4462-8d1d-a280cbee093a": {"doc_hash": "df1cfe4973b3136d76ed6c68fe31ef747b01781f4b1c8e3584f73fdc9edd42b4"}, "a61cd69f-4267-4d1b-8b0e-681dc64e8338": {"doc_hash": "64339566d366e0d5863603d085323f16aa36d3587baad03cd04b910fde8bbbb7"}, "74b23be7-e109-4669-ae9f-1cbfb86c2a96": {"doc_hash": "4746af8785a8cbbdfc306c2131e10925dc3779648d923068a3da33284854401c"}, "35380de1-3534-460e-b57b-8a03885b1ebc": {"doc_hash": "4adf55bf14981ed1e64fb6d14c59dc721e22abf7e90da4a87ac66955017c116e"}, "be13b912-d1da-4fde-b513-8d3025a4b454": {"doc_hash": "0eb75ca732c356e6fbaba20cad9cc813e347a848e5fa1e89a513676c43f05c8f"}, "15abc1b8-e52c-4d8e-aee8-3886bee9417e": {"doc_hash": "ec205c9ea7abe890e0111d52687c8c6cfad05380f28b6b947fef8616435ac847"}, "736d6892-2b96-422c-a160-9b121fafabd1": {"doc_hash": "e94bdc96bbb0f357977b19fd28a2d0615d7903b13be9bd6501acabdd8607503a"}, "26e57395-6c49-4723-a8b8-4b5734f39f98": {"doc_hash": "1016a654c50987a8f83c901bab148932e4ee7609bd7b622edd74e1020a937aea"}, "8ba8ce27-5617-406e-9ff2-e9a4abf4ae94": {"doc_hash": "fc5947320504c19754383254cde6e4ef118bc97743f72b5a70800a72b7cce209"}, "676b9552-94f4-4fcb-a980-953013d5451e": {"doc_hash": "9fce99c22f8c7f80dc2af0353d8498f24058a4f5cb100b73301e236d71b0a2b4"}, "4db85410-ddec-466b-be97-5a57627b64c1": {"doc_hash": "34fc624002fd9963f4ff626871b8baaa810cdce2aacf0110368fa619053b5bf0"}, "4c677def-e81b-4720-a3eb-004672271098": {"doc_hash": "7e9a9635a7045e22c1fe249ea1e186027f5f55387ca482d69badd7945f05c82e"}, "8321bb81-a9fa-458d-8e0c-1580cd9c12da": {"doc_hash": "20279d24431f5252bafb2cc90f1f29f6f7769fce72df01829eecb140b02a4a64"}, "951fc487-535a-40de-9f76-903860959e0e": {"doc_hash": "4575129ed7a8b80badd4e66b50ff9d2f481a415b852d6c0a26954e3ff5b10f61"}, "927f55fe-fb86-41c6-a7b7-4408f528bc4a": {"doc_hash": "32b28752e7b35e6638d888f3988bd41a8ad8d4dcbf47b62cd3bc630d87c8f6a4"}, "2588cbf9-e66d-4b40-bfae-702491cb7ada": {"doc_hash": "289e6bf2c5fb54d45924492a5d360ebb4fc02b17cf8ba0abb56b28cbb31e1fdf"}, "cd2418f7-60e5-4300-b325-ba3c4dda6cde": {"doc_hash": "19505a6efdbd9eb784071cb40eb322dccbb986a985b7f44600d4ef74d95b9597"}, "46aadfe0-72a4-4f6f-867b-0e358162a0af": {"doc_hash": "90a716455e1caf2d69c8060b3ef90f17bccb429dce7331d6b29d8a005429bd4d"}, "e00d473d-1435-4e1d-87b6-0a6377c162b6": {"doc_hash": "49ec9c5830e167ad56069c9e5c79f8f9b3b5cfb5ef45371be2e53c82ba086257"}, "647dac79-9d62-45a7-ba36-aa2f3d82b010": {"doc_hash": "1ceb045de85f3fb10b867e93f6de6979d92af1436fd2ada4367bef2b8d6b7d71"}, "231c945a-3016-4654-a3ee-222898759a01": {"doc_hash": "20cb61111b1343528375de8806189256792f6500c70992b8c587d5cf5cacb6a2"}, "8c53a4db-8aec-4871-a5ff-392ea1fd2fdc": {"doc_hash": "02eba75a9d89109b4ea29236a9e4503a204a8d4243b7afd3cb28f6c1bebc6769"}, "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6": {"doc_hash": "646dadcc54970704f1416008f1eaab5d802db8cd3cec298fdedd34a3c28cc991"}, "6e3fb751-0d15-4903-9e4e-1bc5ede4516f": {"doc_hash": "5cbd7616dbcf7a17746490e4dc15f650f472b202dac3d31e8fb83a840788760c"}, "78469b53-3988-49f5-9492-5eec75c8cd52": {"doc_hash": "c1d087e1d806ed438a7bd820e407d79eaa0a2e875a9d2b9e62f9804f8d075c71"}, "ff727822-c671-4f15-8803-baf4aaf4e5b4": {"doc_hash": "9cdf68cbc1f198936b73ecbd913eda1708d4f1e97408220ce66ec6576f9f0213"}, "3cceb3e4-e03b-4d2f-acad-d4d731c33097": {"doc_hash": "e12c8514910d1b3e14d2265919aa5261725eda561b0390010df7a14276e44ada"}, "440b35dc-6c25-4d4a-a181-fdcd65a40e99": {"doc_hash": "59c5023c014afd42efd372071e742c284816d0e4cd5beb8c42a7e3d2ef8aeeaf"}, "69617976-9e63-4711-84fb-dd4cd43037c3": {"doc_hash": "79cb0eb06fba9f9e3639d612ff51810a66e2b3cf83c73c26a571f300b2a0b51c"}, "2431477d-c450-408a-8c73-1bc4855d6fee": {"doc_hash": "c60ebf10ef8f4a46dbf6801b374162dd43bf03e2d968a8d3a6c0a26550c35a43"}, "b6afc202-65d7-4e86-817e-ccdfb43d41a4": {"doc_hash": "9bcbf47c7f492c0a861fd04aa054a0efbff2a8f16420c088aa8df43710233464"}, "79de4572-9a0f-4c42-945a-52be174aaebb": {"doc_hash": "5c91227ab395c285105da541d9aa0e70981ede99cf8063f7b4dc8c3f9973d1d1"}, "2acd36c1-147f-4735-a297-b5d53d8bebfd": {"doc_hash": "b07013c321f95d29f0b9641147e99723e69c35b9580a1d59e3cc85b49ec5d2cd"}, "ae90fb7b-cbdb-4b27-a9c9-6349770aede6": {"doc_hash": "35491e10283e5cc752ae2e23d30585db70d5c6395b731f0876c606bafab75fa1"}, "2af79f01-202c-4357-b77e-07594328f382": {"doc_hash": "436565a8baf54f8100d3df41804443f722a65fc9a85922ea33536194de5aa40d"}, "3ea0e739-4e3f-4b7d-a18d-7ce5a5b0d341": {"doc_hash": "77de6ee51b9f72d3ef9134167499c9fb827092dcc02902e2a7def98383b4a40f"}, "cfc8cd4e-9865-4349-8ee8-85262b2b3493": {"doc_hash": "919534ed912616e66adf00c86951b0d5e6a52d3823d43aa3ca29ab04e8494590"}, "a63978ce-2ced-4ef3-bb25-8d63b9d59e85": {"doc_hash": "44490d763068bfbbedd012fe883b9c8e1b434a28ad78c321e8fa429828875a01"}, "9e3703f3-a66e-406c-8ebe-9bea03626ea0": {"doc_hash": "3d361b5bd9eca7d02b17379942fc3defb084e432a5a62d76e9b3a97e48382221"}, "b610df1c-d621-4259-ae4e-a5f71651de7c": {"doc_hash": "b0ba1f14630a67225d785b6791c59c5d49d9b6ef52552df4344d57b379444033"}, "98e352b0-8871-4a5b-a12b-59ddf6d9681b": {"doc_hash": "9058f2430896fafe0fa793d8ce66d360d5a917f26d4807d69d85692d472e2171"}, "f4ae5df7-08c1-4b91-8aef-d0810b16b6e0": {"doc_hash": "e724036e7984785fc1c6cc10887b03c9df5b604e16d41f8682582eddc47b31ad"}, "dab5f6ea-e576-47ec-8ddd-3c273022c160": {"doc_hash": "1964cbc58507970641f77572f0b57640f1f77e327f6b57ae8296b90bc18bb6ff"}, "62bb7310-e8e6-4632-9be2-70857f57a398": {"doc_hash": "c36947ebfae9171e6e4d5042ab996d8b93e01857877ad19be09d382911dec618"}, "054805d1-7565-47be-abcb-828b80865677": {"doc_hash": "9b3a6c9e6236768b17157ff433c752e0a592cb24bac412794ece3054f9d1cb1d"}, "63c34568-9f8b-4829-b7c5-94684a0d9b43": {"doc_hash": "d203a0989229080968e1240bfcf4ed8d0572125deb27cff85f49f1c3f55932a8"}, "429b62e8-53b3-43f3-bb3e-fd2811fb84bd": {"doc_hash": "df141accf41c9ceb117a681da0edf9d0ce890c0d326c4327e418995d614945fd"}, "22945e50-65ff-4ab4-a5d2-5f18d390fe9d": {"doc_hash": "9efa20f113a5a3ee2521cba7c9f0effb046594c2db204563928053ea7596992e"}, "01ffeb69-8745-40ab-aed2-7145a918765c": {"doc_hash": "8aa1aace45e583b06eb387fe2ee7972e57baa7ca833314028667fff073a68519"}, "a9e24ebb-33af-4eb0-8630-f9b3c6113f8d": {"doc_hash": "85c8837a05552b8b924def46fb0e1e2216aeabc650abf632496e6995fa16ab0f"}, "ed35f918-e951-4f10-80c2-487dd199812f": {"doc_hash": "7ee62fb580cbca255b7cca2f59bf7431a786ebf2654b0a06f555ad20286e555a"}, "c3808861-e9a4-4c2d-a47e-0b988cb8fb8a": {"doc_hash": "9d9b83b7e086193b7424c51f78b77d0d974c1bb4b7ec01596cfa6501395f0eaa"}, "02dbfccb-f987-4023-8bc6-54b85e13748b": {"doc_hash": "b775ed611636807a9ab883678b53b2b48f049deed074e21dd187f12550bb033a"}, "6e8b53ff-c46b-49b7-b973-8d2ffbf353c5": {"doc_hash": "22436370198dd58ac79b29d0c1642aa1a16e7251c08e6b82418be147f6182b40"}, "a0532feb-46a9-4966-bd11-8f553287d210": {"doc_hash": "f3cc194f1ae125373df3198ca298f7b643b2aca4e2dbc6c1d2b97616089ba2aa"}, "03d59791-d271-44e7-97b8-8f5a3c8eb884": {"doc_hash": "a2bc1fea2158cb3f3fc689911b3980882681f886524144ce7dafbad2221c238b"}, "49b8b73d-f71a-44f2-895b-eca6efcae1ea": {"doc_hash": "26c5520d217e99fc4e2a56c7d10121587f75f95bc66820b5133aa4baba76c7b5"}, "bd34b269-ad1a-4131-aec7-646647516eed": {"doc_hash": "b1314c9254f9327fae560a8f0e1452da73887ab51ad12e06440677b582102dff"}, "8a781c9e-7989-4e9a-9451-f4683ba993ad": {"doc_hash": "59c22ff5a86913a8647e77ced0b3b52ab731abaaa990b1bd8ba79bc846ac03fc"}, "86a464f5-11e2-49e8-99e4-19922e429fbd": {"doc_hash": "0ae6e9c2b9997cb1d9bdb53b2541b8be7cd6de88ff5593f2af1b60d59529e314"}, "919bcfa5-8ae1-4da9-88cf-6ac8fff7ff93": {"doc_hash": "fc6e6841e30ca314e3731d2ea70b73ffe6668000936c0d31e2612e330065b1ed"}, "723898d6-727b-4197-bcd4-d33eb3c4d0d1": {"doc_hash": "e2d0b3aa5a0b3dd0b8ce8af8c3f57c79d65accd86bb150bca9ba3b21105d6fe5"}, "ed7a3cf0-b3e1-4f95-a76e-1b1087c73729": {"doc_hash": "37024e6545ff58e8501a958e236ee94cb0af4cfc7ee6dde69690a5486d556d2a"}, "8c8e2c75-96a7-4a1f-8423-349d4cdb04f7": {"doc_hash": "8eb798e3e77acedc40355232fe522baff1b0c87bda1f78e08ca6fe4a3a260375"}, "11a27966-c5fa-4fa0-b714-2b408fb268c4": {"doc_hash": "4762f92cec19cbc36927d29b41c4b1e94211df500ac08c75a8879a9e6a234d23"}, "45731b8e-d3ab-44af-b57e-bcd47ba218d4": {"doc_hash": "302ab8dbe7b158080413b7908942849afc4432fd2754ff3599de7423adbc6abb"}, "af1daf9c-13fd-420e-a5ce-5f2590840fc8": {"doc_hash": "403f178dbd56e6e8098d49132901053bc751473269781ca6c068c6dc725e89d4"}, "8161c0f7-bae4-4f74-8e44-b0feec1d9aa5": {"doc_hash": "dce317fe43970de896fcf054fcc78266e782dee7a6a5fd7d7ae708c2317baaa1"}, "efcffdde-f36f-4e9e-bddf-ae80245a8198": {"doc_hash": "bc8fee9229325ec80f4b97aad5abd51f8dc99fb6fdf0142946f5091225e69d19"}, "467109dc-adce-46de-b6d0-1e3e187a1952": {"doc_hash": "279095e321d4e8668faf8c861f236e17dbd4b0ebdb15b7e29cbfc3003306a8b6"}, "b24b4691-204e-488f-8954-80157048208f": {"doc_hash": "75623dc34eba95d0eb0972d8a2ae34c2d83ce7d1681c4905a2bb5ea7c23bc18a"}, "24628a93-89b4-4a78-8715-5bdeb750b3f5": {"doc_hash": "c62b20b18836196edef5f477bb8ad3863c762057847c7b9c1e1d1e70f12f6424"}, "20773f74-3832-4dce-b7ca-88124e2b09ec": {"doc_hash": "145c6289fca9bf328ed5a6ae42473cb0a1b2735738b4e14d6f68bad745389dfb"}, "d5c529ba-e85b-46b6-9b29-b183a883d36a": {"doc_hash": "73f48a6892db1a7d3026f1db774f2fb143239c0d566499c992fbf6ef8bae866a"}, "4a778863-12fc-4482-b6d1-80447c68e03b": {"doc_hash": "dfe3fd9afe7c19f70fe0f60a6289f02f2ee7bae30796babccb720190ebce6db4"}, "2513f373-5131-4fd1-b7a1-dce1995590c6": {"doc_hash": "aa5b4ab9b0d88bc4ccc1572bfee9bef575291fcee201e6f88fd4f98bf828514c"}, "35e2f20c-6fba-46a9-9259-4e7811b44377": {"doc_hash": "83e264808088532d32e521eca3390983197942a1b55be4aac5684c419bce17ee"}, "5af93b52-0c9e-4335-ad63-9a50d9606584": {"doc_hash": "edc1eaf5e251056972ebc5c4976c1c4389bd822ed6e83839cd480b90976b5c43"}, "1f439fd7-3e60-4448-8fff-6bef29fdd82f": {"doc_hash": "66e1203c470d997924788fabd608f64c9181447f529aca90f62b4022b5b91658"}, "0573a59b-a199-44f9-b6d0-a8a9ba7622e3": {"doc_hash": "2a1157fe515f6f5a1dfc42fba8e3e5e2122d64de70aff796fc3a1b8befbcf376"}, "8915eeaf-e9d0-4442-87a6-fe3105a45a2e": {"doc_hash": "fe59da218b9ac56708ba5d2600422ee6110c0db748495f5665d41093056f0a9c"}, "95221215-1051-4590-9fdd-1a93c200a4a6": {"doc_hash": "3edafe869fdc09e79d5977455c805db571543b6ba7966f7c8e429e2ea34d6a99"}, "f2cc89e7-ff7c-4a53-8cd1-13588506bdd4": {"doc_hash": "84e9c767e9c6661bd57c473f55a5450c67c0afb3a0cc8ac73aa7d601038cb496"}, "419cf36b-7e26-4a8a-9f6b-13a136668953": {"doc_hash": "ca8b7b0e32e11f849ffe77bf82aae26ce187b2f98cd7bfb47b6b963192b3037b"}, "33e8e824-e1e8-40c5-b7b7-fce360b5fe47": {"doc_hash": "f4eb51644dc5834500c4816c0939e235f432eeaae7b91e0357ee97dbf0e7252e"}, "fa59aa8d-1a9e-4b50-82e2-d619f90f4b9e": {"doc_hash": "8ce69568c03e8803a76f13e9d40bbfa6b497c60d1ab6479c426cfb366d1d5e0d"}, "5e3b55aa-2cca-4505-8391-33dc53cde066": {"doc_hash": "1c1e34c51068600150ee9854d983257d72d874fcb4d8f3b5e5e99cf9882bb281"}, "908bf419-b077-4f43-94c6-a411f0319ab7": {"doc_hash": "81bd2c729c498a08e20ed776b52373b932655eda1968273f7d2ee5691dfcc9cd"}, "59b3eeb3-492f-4c93-97ea-978db88ce748": {"doc_hash": "425e70ee88f560f3e11f805cb1167714e66b22d5fb2f2929fb3feeb27eeff935"}, "db0898e4-2de5-4074-ad34-45eed910c15a": {"doc_hash": "8a22b6121f69bf0f2fafc1d1ab44bde55f0ce61f30b7064483f36e34c75b7338"}, "b05bf3da-7663-4beb-96b1-292c462f5907": {"doc_hash": "ea532a59d86507f12da1f99eb2645ab6063cd57c7dfdc4e96756a026d6e0370b"}, "3739abeb-95e9-401a-81f3-0094f7fbc856": {"doc_hash": "f430c92a100373fc5346b58ca03d7ca53477c49e19f52d08475b52d623807430"}, "8e9f7f13-c6e1-4161-93e2-c9deb9a083b8": {"doc_hash": "dce7ab6c618772ae35493026438d10cf244690184e2502bb7407522235cc5f75"}, "5a946f37-34f6-4223-8a66-05c10e2bdf03": {"doc_hash": "7a0688ee8da6f893861b86ab37fb6d8d26b7f16189287ed030dc1cde1739f9ec"}, "c93ed076-2f36-465b-bbf2-15c4c8411abd": {"doc_hash": "d58b952471d14650a6eb31184cc350c139c3667c749fda8be151202d44869c70"}, "42a2db7e-7b6c-4763-bdc3-abd5eb04d5b9": {"doc_hash": "76e5ae32cb53aeb5b4fa69ad3e333f347a87cb0cd32c5b3a04d7a0e86fab4828"}, "1152c968-950d-43af-a35e-265bd4d0df81": {"doc_hash": "4749d24ddf2374538789856b5b42c02589bf90e4f034d3f48232c202b588a7e6"}, "36ce2372-d1b6-4d8b-8135-aaa696ee9b07": {"doc_hash": "09bbbab59547d31688bc0e06eb60f15146df787bbeed5c4687e641e922608462"}, "c984b1a1-696a-4cad-8240-729684ccd758": {"doc_hash": "2b1ff59d6016ae85bfaf7a398a08799afbaaf25fd6cee9a5c1ea3ac7ba3cd7f8"}, "17e6a965-7105-427d-87ef-ff06c9b5909b": {"doc_hash": "fc64db28538499a0c3e9acb637583d39defc2eb031f35dc43007c44ac722ed12"}, "166fbd76-f5db-4211-97a1-4d2a75350985": {"doc_hash": "4e977e76691aa65a20580d147852adb57999ce3d6b3bca42222cfdcc5605f6dd"}, "57544394-3c23-4a89-864c-bbf2139eb206": {"doc_hash": "66f6a2b158273a3b3c49aac0f1766cfc7b39f8fa09dfd4256ee28246dbb6d19e"}, "19a2cc1a-1f0c-495e-a1ef-6f23e25af291": {"doc_hash": "11a229d78b34981bb96c0164627814733d799709da8ca60849c07e3838d35dc2"}, "57bbe390-3dff-49d6-935e-a16b34b8a5df": {"doc_hash": "13aabd595feb21b273d9c16013fe6d2c0d43168b1dc77a045abeba6c34a4f88e"}, "f2d24cd1-0419-4148-8aca-de99d11e1c6e": {"doc_hash": "64efa05df7542def0096d6c08a9793adb61ab3a60e30d3de19d8d6204f670d06"}, "dce5b2fa-f296-4165-b1b5-9e1d942f82f3": {"doc_hash": "eebae571001ea3965cef890b169b7de50b556be288dbb1588c19e8b9e5b30948"}, "1201048e-4f35-4df8-b552-2ca10fbb21d3": {"doc_hash": "3b87714fbc447cf32de69d8028f19892d32fadd5f63a0df3cd40c42bdf2e4bef"}, "e29b79dd-c7e3-4e53-b776-39bc4064b557": {"doc_hash": "b4a4e66c1a8392118b0c25f983fed297cb9dec0ce980143183fad822d8bb7ce1"}, "0e13b7f6-c55b-424a-baa8-03e4f9e36ce9": {"doc_hash": "08e69f2f23193f0de76a52ead46cd33ecb3e73794c18d1dceb716944c19cb52e"}, "07bd22b6-4fab-4553-9a49-de920235eade": {"doc_hash": "d4ca20498138cd739aceb097a6aeacb24d210a314d051149266f99a2d83043fc"}, "4ffe9236-fd03-402d-8e29-90fad74eec94": {"doc_hash": "ec180a92b7ad282c8a3e722029a3ae5eba0e6a3d97966cd67a2f8752b30edf09"}, "d61db280-fd51-4c54-a34f-9a5171689b88": {"doc_hash": "fa9de4013bf4a25099655787092ec815fe9ba50594f054d9a18030693c5119dc"}, "eb36d47d-b9c4-4d3f-a19a-792e65042b47": {"doc_hash": "141d70b3944931bdd3318056af926933da7e5898e74732dbe5d42167ed550d83"}, "bd018312-2a86-4585-a726-c36a668e5044": {"doc_hash": "64bca0c7b324dd890b3b63d47a7cf5c9534971e2c5194b0e96ad23a61722491e"}, "2a9648dd-bd99-4386-99da-637f7657af89": {"doc_hash": "eea2e515ca40281576d121a9b65173a341278724691d27d2778a56893621585d"}, "098ec2df-1a80-470a-9966-ba693493135f": {"doc_hash": "31777b37c5d143053e8e66f63b9e1f1dbc70925ccf5deff0ab11da72e135f4b2"}, "66e408ab-ca6a-45f0-b4a0-735a57f69890": {"doc_hash": "ade16b1570dfc6f597a6b82d8d63b351567fe2cd02e9769d0336e25306269143"}, "ba3dfa6c-0552-4935-aeac-0522dcd83514": {"doc_hash": "f20d4cb56c391bf28948d04ff3c0073d19977d89606a196062cc06d4a7e934bc"}, "b5323a54-44f4-46f3-8419-89166818f34f": {"doc_hash": "949101c2821b04e0d090db49a56236de982222e3455e9f1aabfdd3538b03fc55"}, "0e28e14d-7e68-4061-b259-b65d917e340c": {"doc_hash": "81e9db8a90cb7ca758ca0c2a3859d57f415ba247bf049c775728fe03ae3287be"}, "3fc04974-90f7-4c4a-967e-67d5dfafaf79": {"doc_hash": "aaf33ca04c05f2a54fc5db6d166414ed40962a2c3b8de1d0fdb4d83e9f14f6c3"}, "48226cba-9d81-413e-b04e-0c52a168780f": {"doc_hash": "93129ce468531eae62c623ab527d3ed7bcd2e20ae3d5ee248013a6919d7217d6"}, "7970fa1f-c6f4-4413-b884-d15b85756f30": {"doc_hash": "bbcf30ca575b3bfb7c52c7a58290cf6a1627c0cebe067f165356f615163a8e6d"}, "977a47f5-689b-4171-af17-ee34543989ab": {"doc_hash": "240750275befe37b9d64ee02726e03312f7cde5c2bbdfc427f54cfd7bb599f38"}, "a330f747-1007-42c5-a668-544ecffa9a1c": {"doc_hash": "f1022c2b4ece8221208336499fd3e848f7dde21103fda177b88323a8ff6e9810"}, "c196a41b-35a8-4e77-8833-4ad7065b1feb": {"doc_hash": "7753f1cbed0974a6499aecf7581c510d03475231fef87ff4cd3b6294f027c7b8"}, "d5b347f9-b563-42ec-a614-9c735d7876f6": {"doc_hash": "e742c967dafe5aa6d103faa7746b0db8f3291a3cf69d74879ae923ec00cd8f7e"}, "22fc2b88-089b-4d65-83ff-1969b75a5063": {"doc_hash": "048cf58640fd6592103087666f42f547a09b9a188f6d92f2432d0ce2c91b73fa"}, "dee52d4a-76d4-4860-990c-0c3e315a2ee4": {"doc_hash": "5e9c6ef51e0bd9e3ac81cd24e14e2f579ac564c611107667abda5485b795b3b6"}, "4751cd6a-d8ca-4622-972d-11aed6d8e025": {"doc_hash": "f66ee9cc2c4bbe6536766b8313ef6f6a3d5a7ad5816be08d4003e115ad46ada8"}, "102316cd-962e-44fc-a603-b8d9298aa34c": {"doc_hash": "2288f5c19847ff73a0d0a3db8efd040aa8c94bc765e59ac737bc7093c99f6a88"}, "64b45e1a-bead-422d-9ecc-fc88b32611cd": {"doc_hash": "d75bcafa92529f3f6f69300a7c0f1ab227684adbb202812ec970c9f57754fec7"}, "62ae83ee-7d9f-4e89-80e2-5c910c258075": {"doc_hash": "7c6b76d9f44c594c3bc0c27cd248a057ae2bb7665a045cfc86201865facd240f"}, "45fc0569-809f-4acd-b345-ad1888bd9bde": {"doc_hash": "ecd4655e8050aac0a84ab0cea68b40d686aac1516d9f01e864bf500918cce4df"}, "45028eca-869c-4542-8639-9649187e5949": {"doc_hash": "9f90b135f8b059d45fa6cdbc0f887b4260c7f6b4b483aad16e139f9ee5ebf78e"}, "f6806765-be99-4d79-8a99-d83d5f069ccd": {"doc_hash": "9a7ff6ebcafd201490847416d88149a11c61848ed7eb05313bea4a46e73edf0e"}, "2f223b85-9784-4f6b-b4a0-2a0d6f0d587e": {"doc_hash": "4f8b251426cc9e0704a886e883a8aaa8abc4ceea8ae99e82553d48af44a8baa7"}, "390b1dee-d796-4e3e-9da6-3fcb52f62699": {"doc_hash": "2bca1e2a9ad4c862807056de3571cba8c5d03942f541b1ee4b11fe22175fbc60"}, "496b5367-9ba7-4974-805e-c917ecd86ad4": {"doc_hash": "c899e1a22005dc3f210b13d6b30cc8b3a2848042100a5b38e2835ed954fff7b1"}, "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad": {"doc_hash": "c9b245c3e6886484a445d0ddd882900fbfb08c7cce4279d9406d6b32f73ad06f"}, "085d1b75-491b-4dc4-a55f-b6124713690f": {"doc_hash": "851e1f57364eda5612d791d103a9a572521817dd0ab02d21001a2b64b1c7cd75"}, "fc53991d-8771-4018-ac46-1e4026acc321": {"doc_hash": "f5299a29fba9929f2ef32ccde3bede1e1d860b598551d7ef4bd8dfb87f014fe6"}, "8cb1129e-7b6e-464b-81f1-b583dde7fc89": {"doc_hash": "7bedbaf944973cf68b360f78d67ab492f8754d010a89a078c78259f6e9a9e0d8"}, "e1f67a52-05af-4967-b5c8-d2ada706ded7": {"doc_hash": "8212b096e7dadf329e29dae9407626edb53e3de2a2f66486eddc2abfdc2e796f"}, "3ad9c6b9-bffe-4fbc-949c-b5fd82b48fb2": {"doc_hash": "51ab4715cf7265ec163931953961382dbf133eca4a963164533422a9555540b4"}, "122faea4-d55a-4b52-89e0-09bb7ce86026": {"doc_hash": "407c9dcb4887995e5f21bdf3ef45b9c7c80b0fbdd5f3fa22cead88e4f58e8c1e"}, "a988b73f-3bae-4d54-b7fa-acbe96d15dc9": {"doc_hash": "122bd471e22d4329b26c4ebf9df8e49e6b22899c2a5673f473e3b51054dc8622"}, "b45e8378-0ce3-4059-ab7c-bd29cf325ed3": {"doc_hash": "b8b3177c86904741201859c5eb0bab9c1081b639746f0330d7f2f7ec9babfc51"}, "7fba029e-d201-4d8e-9b90-d548f9d8689c": {"doc_hash": "4fc5859ebe9e9a76cc74cc80afcc563b8a03f177866bc9817d8316fa685fd28b"}, "6832a2de-b608-40dd-ad52-2ae9abd72269": {"doc_hash": "563aca6f28e0536860f4a8e6b1c5d367b49c545b44f817cc16f557f8fa00cc12"}, "92309dbe-43aa-48c1-bb95-2d062651ee48": {"doc_hash": "af198ff1a3a3b0471f8a687a84c07e9c706c730f3387f9bb81bc8268351c11c4"}, "3c5b1908-da7c-4d07-a06f-4cb728fbf7cd": {"doc_hash": "65f21595c1997fecd24f9bac9e3a161c1e53d465085af2d73ff0ad838a34645b"}, "789cedd5-09aa-40b9-acec-6fd633bc7d35": {"doc_hash": "60ecc9868fc186fff9fdaeb9c3972094dda7d38b96fc6a30f098eafdd87959d8"}, "f3af6b96-4ef9-4094-b242-c61bbf2a6860": {"doc_hash": "428c31280177e1072df17481fdacff80ad13ee4553f1e6395d8b3e0bb3312897"}, "d46265f0-292e-4abb-9a8e-3eb07d9f171d": {"doc_hash": "e9fae0b2bced9a51191cba196b689e510305cf624f154de630f2690b3663bda0"}, "19a956cc-e02d-4bfa-b1f5-09da9d22c5de": {"doc_hash": "37b5f19f8ab3137476d5076f34696c53a4e7aec3e06fbed222786d58e2aeebe8"}, "0733f068-eebe-446e-8133-efeaf3d32b1a": {"doc_hash": "14b55a50d0f273f89a0eccf95a22603a0b8382670342ba4b9cce98020825ba56"}, "b94a4771-d491-4847-a169-3e48e5ca6df2": {"doc_hash": "dd8eee9854d1e393c7700f776189589c22fe7899b250e6d2376d5a10e4bacf2e"}, "bd655a77-9998-440f-864c-c6009d7f9b79": {"doc_hash": "96e424b579ce569f074917620b5d07c216cb974380146835c9b80814a0699a85"}, "00b913bc-fadb-4394-926f-9ae18688cf9a": {"doc_hash": "5d24d8b0183f127f070a1ddcfccf50d32c88be72ddd6c09c638c5e73f5d12a5b"}, "e6a4ce20-112d-4ae5-8620-c0a5d48eb661": {"doc_hash": "57445eacf0524a4b279509071fc3ea341605ddfd1181dd932ee8912a81abb5be"}, "334d8091-3d9e-4352-86d8-ec69c1d3bc62": {"doc_hash": "f9221c2b7cacb54d03a3e3312d77e11c64ff6e6f5efcfac4cc1047a4d4e1fd58"}, "5f786d5a-e32e-4cf8-80f7-acd6fe248054": {"doc_hash": "538a0c97aa2823d275c9a0b13b7ba40e7deabb19612cd22c9c5339fedf62e97f"}, "c0a396e3-eb38-4650-8abf-9f9a3feda2f1": {"doc_hash": "d8cf2d679b44633eda40187b7ca3fbb6b26667a23cbf4e9740905cfe6e39ff9a"}, "44fa1e22-599d-40a4-88ba-b2a7ecf4e6f3": {"doc_hash": "ae9c3d13d90a40a404b4038648e50f1228c186dea348b57ba98c1e6e0b03fb5c"}, "d83db27f-c410-4a68-b2ae-60f7d4c64336": {"doc_hash": "5bf30d24913cccdb494710c4f759bf49979585f2932aa8434aba2c84880999fb"}, "00a5842f-9017-4939-ab74-64008f39499b": {"doc_hash": "7c9b18bc5a62fcc229d5e5546635733c6a3808161d93b9eb8597fe3df369f022"}, "8579799b-e319-4661-912f-355d7b3fb9bc": {"doc_hash": "a67e3d915eebd596aae1eeb4c570763fc396e8e586c38dc98018ceca63ec56d8"}, "2e31394f-39cc-4c43-b8be-587232773edb": {"doc_hash": "edeb66f2bcdf10cc64e119a446802624b82ef6bd32e18cb46588d027ae356a81"}, "65ef89c6-165b-4857-b1fd-c5cc5b7d38ae": {"doc_hash": "1e87ed64e83687e2f0da23ec00597c3cbec561a24618f581f508efc32c6a3b4b"}, "0b629de8-3a47-4a3d-a3ac-248a560fc3c7": {"doc_hash": "d8f4f84fe732275de038e5e4d2893bbcf8951144b80e77c148dfde8be8f4b907"}, "28f1f524-87f1-47da-b400-a532030980c1": {"doc_hash": "ff5d002623716c63af22098985637f48ccefa553315a333d2b9c0ddb13c362b8"}, "8028d069-bfd1-4d8e-aa39-50b2fdc8f9d9": {"doc_hash": "13b2e90e230cfc1e0eb0027a0ceaa732b07b8ce6b4f2ba68da435c13a74b713c"}, "164b06cb-7e1d-4aab-988b-58f5520fccef": {"doc_hash": "82c3856707660262c2fe3ed2bf2a15eb85ae7859781e9bc336d9c567036d780f"}, "16960f53-567e-4a21-ad3a-23d15b0d03ee": {"doc_hash": "8deda2e931126637169934e07b8da463a45960b4f81517e806419d2463d66c5f"}, "30ee295d-daad-4fd8-b07d-05faeaf21546": {"doc_hash": "f8eee20e3f4c07350ea819db263340b4ff279d88b52bed55c01e163fd7aae9fe"}, "02699bbc-a1df-4415-84f7-5ccf7320a3cf": {"doc_hash": "e88cf71ee580aba7190fb155b26994c3994ab1a23663649318be61d61a126a5b"}, "94660f53-787f-41af-b42f-be0dd3b4dde6": {"doc_hash": "f7eb2607d5cc0155054a817448efd695c32c960499826af6f80c42402754354d"}, "0d32ffe0-fb10-4f05-9c4f-8b86de29f355": {"doc_hash": "c5fed900e4f793986fc0ecf333cd9bbc9c6dd8605746cb56760a6cc1198052d4"}, "b7e18ef6-5672-44bc-93e4-ac25b624327c": {"doc_hash": "9081c7d6b5b50a4fdfe83fcb2f861cb6047f8e30d0ee495226291761f6813890"}, "b4a3c896-fdaa-476a-86f0-34152c768e9e": {"doc_hash": "f3513df380d06d3f9881285aad966be0c162abb1c7cd76b51ef44686e677d768"}, "f8879d15-9fd1-4b18-8e1f-f3b5e977eec6": {"doc_hash": "50429eb1d5ff8d2e4a1632a6613aebaa6ce2a98ad0c1640eeb23c34bffc55d77"}, "201f557d-5d61-419d-b92f-18941f83cf1e": {"doc_hash": "36435ea45a95f82d5880f2663953ae815426ad2870714c58b3a2d83d634f6e5e"}, "9e373bc0-ecc6-49c6-aab0-b9228245cf2e": {"doc_hash": "1569be13d4634a41f49f65e0208056f4692e447156af77a29baa8cc8612521b2"}, "95b8b164-623f-4b24-a30e-7a44bf01844b": {"doc_hash": "b260ba27c9196ea8d9262cbcf34722c971c2f50b2f2d52b0dfb2482bc2c4a120"}, "1b7d3748-0e3b-4140-9483-d7db2fc8021b": {"doc_hash": "957b178cab10f6a5fa7c4d5c4f1d7c883028ffe84f65683c126c16438fe4ec7b"}, "720c23e6-df24-4d4d-9e96-78b21638be7d": {"doc_hash": "48a9f9153aa0559a6f1ef8d976d44dc328f64c993cd4c6e7348994a5c69a5337"}, "e4814b2e-e63d-4e54-a497-89d90ee54642": {"doc_hash": "c1338493a77de8ee08b2c1d1aae26eebbdb3573ad184af5983324405b3aa3e36"}, "cd6f6a69-6d88-45c3-b558-d62fde5af908": {"doc_hash": "113c46b02933e8b26c2a232874b7ef08e2ccf2c451c923c4097607c77d42d955"}, "a0e78c0f-da99-45cf-9325-4ea90c7fae77": {"doc_hash": "01565d0370c8f096ed4267bfa450cc7475012a3831eb72eefe349e5f5e70ab46"}, "2a8ed719-e766-4b9f-8a12-8f8995b5263d": {"doc_hash": "e4d3af3af676211d5eede13f293fc8fed67e195571f8ace922722c9f3ac813fc"}, "570fceb4-40ba-4773-ba0f-a65d8bb912ee": {"doc_hash": "af0c2882acee0d1a879f7f808abdbea482b0e57a79adbece1a7461916c449d53"}, "8b37ea0c-24f9-4dca-82bd-a5f1b131f589": {"doc_hash": "84f9eb273a6017df08180161122fdab2ebf1d079565356c5cf404de1aae93c1f"}, "b0c5720f-2520-40bc-a291-2aa5320a7138": {"doc_hash": "715c01244ecf6c5896c00b6b179cc2ef16deab9124c691a9c8763a5bd606ffb1"}, "5419bc8b-d3d2-4389-a28e-5d735fb70a36": {"doc_hash": "a40d12c2aff2c341239c8e2e37438539d47e3d93a40a4176c395f5b8c0e2610a"}, "c4bfc011-c184-4fc8-9f31-dd61a502bd0f": {"doc_hash": "2bc50f7f1ec1dc05d5c75e577e90b0acb9a6429b17648c9be55076e7c0bef027"}, "b3b5057d-d9bc-45c7-b2fc-4b282ae26e61": {"doc_hash": "bf1087d954d8fb3fb23dad7149f5821e77c3bbf9ee6120b460337d569ae4539e"}, "505edeb4-876e-44c9-89fe-cf3f1a329a78": {"doc_hash": "0280edba80a109e58e062bad35f294281ca9a45cb3cfb10da03684f541175e51"}, "3bcacd02-e253-4b7d-93db-4d7d173cdb64": {"doc_hash": "14f61d7173fde319433eefa5b8407c1c2cff9715d9682c3f434ba7a9faac6616"}, "cceeea3d-3002-4c01-95c7-7d387e36af00": {"doc_hash": "347e3280d9b78c4f3a7d13c2390f9381644c2adbad62652f87d5689273999e8c"}, "b08fd5d0-e215-4802-b725-9d6af447cc33": {"doc_hash": "a6a081d40a36dcae6b11071ece5e5e9b3b0d93dbe7e4c297123b2923e38a05db"}, "0ff41244-5b87-4e0e-85dc-c57e77e130b1": {"doc_hash": "2161fe5c58731a7c7e872980a0eadd8b333d67bf461fdbb99fa8597bcccb1d7d"}, "98bbb677-751d-4d93-9962-7e49528bd2bf": {"doc_hash": "e180cb58b68364959de0bfffbd282c5f265d7ab11340ee1e034bab09ea17d150"}, "6a73139d-e85e-4c3e-acf6-ba63f7aa8c19": {"doc_hash": "e446c5c6246f230bd60fcabc96b83e099f1d2b66f326d3b20e3bb9140ddbd7bf"}, "d9c7b8c1-7e64-425b-8c69-3c9938cab3a6": {"doc_hash": "7092f610441d52ecc4462e895b850f4fc172e71d6e2a3b819f7abf2fd62a28e9"}, "a35bdd4f-0ef9-4b16-b44f-30cc8cce69e7": {"doc_hash": "63c895423d12a7ea3e28b83de1b904cce0aa59634a0fe19a339ee5de0b643542"}, "7592c211-ad5d-4483-89ec-c29d018384e9": {"doc_hash": "085e954f31b30d8e90a4685f1567e87e83fc4e1ffcfe13ae5496b7046c663b5d"}, "82ca54ac-254c-4c16-816a-aeb47e43a026": {"doc_hash": "98cf65509909de72d039e24620e24daf348c2ab9f3c854110b9d2364fa7d1984"}, "539b671e-252e-47d3-83f4-4fb086e619b1": {"doc_hash": "efb7408e80635237c7cfe767a1bfdf76084c3236c2ef792cdd0c74b21553bfbe"}, "5449077e-d179-4824-a75a-41c3ed71c337": {"doc_hash": "2e786d0282d3634108e4f43a4337bd0e6573624d4feeb8e6acd9e50935f27ec7"}, "2073e0f3-4fe5-4407-a994-88305ff20770": {"doc_hash": "dcfc5de94a2ffa7b6b729ec82372063bc80eef45b1bf2dc81d9c69cf876355fd"}, "80ad3994-53e2-4326-903f-503fd21f505a": {"doc_hash": "cc1d2eb257351fbb602dc3ca2e1801bc8d7ba9b997d4eab36df11ecbfe789db9"}, "b6b47ce6-d660-4878-950e-5c674b593a87": {"doc_hash": "f8e897754b83e47339b80007653d6816725aa4261d8ce947327b64f53f0f3fe2"}, "3343c01d-b616-4332-af5e-44fa55b4234d": {"doc_hash": "9c460ae5464322d8162ec734a02e9125fdbd1f3f86c628b4dd71e4ffcf6bdb5e"}, "3553a940-617e-4492-aa86-380626e9ee8a": {"doc_hash": "db25b8f2175d74ab51de5e75a1c4ff37e4e249f4ab71b39f95e0138c0d95ab48"}, "622bcaa2-9fbd-440c-b621-add1c94dc179": {"doc_hash": "c6122a67cb90d0aae2ddddfe6e3013bcfb4a2eae4afd8926f7f62278fca28f17"}, "654c4d42-60c2-46b9-92b1-d2a697f5641b": {"doc_hash": "a4319a0ddb131cac5f9fb68f5065fade3c3e50462837398a61a43afd8348e8c3"}, "47bd1ca3-79cd-4799-96ab-7d2f5defae24": {"doc_hash": "96bf68d9d905c17d788166d75f5b8c8a4a2d4141a0edf92715f3202d169c44ee"}, "99922753-730b-412d-af74-78ea435d32ab": {"doc_hash": "2b88989f00f182e86d9d72a292529266b26f89a82b6a0ce1d4e03bacf4603aea"}, "33f4cdfd-a7d0-4a38-a805-d7123d7e3184": {"doc_hash": "3007c4d164a69e7dc5a46cd6831739c066953df738996bcc52065a7c8ac2f466"}, "7b6a294f-5837-4869-adc9-c2f393b99ee4": {"doc_hash": "7f97e0279673a29e5eed335799a5d842d448429a431607157ba8cabfb03317b9"}, "753e0c41-6f8f-403e-babc-5c3b534bda52": {"doc_hash": "0013df29909108bc8635c4abccf4a44838ee5c379b2cb27a3e841d8177d1054e"}, "c387eaa3-17e7-468c-ac6b-cb3943b12493": {"doc_hash": "b668f32c0b348d9d26e37c324e2f974175ddaa3ab7854694441aeccac938cb6b"}, "02a6c621-50b7-4008-a9db-cd1592ec068e": {"doc_hash": "8c1a295c198dae7878748b44c2a907ed2fca1468156a84e0774cda211c8f8840"}, "91c9436f-d154-48c0-91d4-d6bd38d1b9d8": {"doc_hash": "47b27c55c6a91a1e40099ac8ec932ba8919b19462460e39916a1d0dbf5e15acb"}, "29022a59-b1fb-467e-86df-2e1a58b1e8af": {"doc_hash": "d2c881d43effbc9f6adce7bce99908f60890a3d0bfcb1b9c4e61482a7ba2f5ed"}, "a31e5ee0-8e84-4c9c-8183-31c6142af2e8": {"doc_hash": "d74b288645f731c6c5d3e41aa41d8ede07895d1dc75ac0e3e8cd118c1f55ebb8"}, "d1930c6c-fc74-45d2-9cec-100738be13c9": {"doc_hash": "c79fbd6c0e4508d46ecf5d9b9a45ced495b34a8f35c4a4849337a70880483c3b"}, "a80b34bf-1067-408a-9895-b9824bbb6de0": {"doc_hash": "3c23b4ef1d5d849e86caca9e97e3050d983f5e510053d6cc394ee1504e207669"}, "7cf594d3-0793-4685-ae3e-3b5ce08460fc": {"doc_hash": "93072327cfaa1652e91f871b15cd4351d423443a558c7a5cc5412713b6daa566"}, "6989a426-d5ea-4a40-8303-9669649683ad": {"doc_hash": "6baf7161486df3676c92a395896f6a8384abb1f42059a247a9a8a06f28f95c4c"}, "fd8dac9e-ec6d-4e25-99bd-4338d02a8ef7": {"doc_hash": "e4673b929188d540e70e935b81e0af4568f67940b74bb933bf446c56e3782793"}, "fda02e31-0ec6-4f6f-ab09-b5ea1cc71b26": {"doc_hash": "aadc8853a6471561c39e90beed1b686943f3a4156febda81e62ef98d08dc9ab6"}, "5b1094bb-ca6f-4ba6-9914-c1f075d9d494": {"doc_hash": "3319bc96aa4026525893dd0648af14936f47bee847bbc58d5d47e7599c6e36b3"}, "0d5bab5b-d399-46da-9336-9bb147ea4a5d": {"doc_hash": "55fd9b450f61987eda7d0dbfe8762f3e4a69d08eefc00af06c31b0f5d3780508"}, "3c7d77eb-3af9-4fb4-ad94-6d036161194b": {"doc_hash": "2b5992ace0da0e74d39f4ee6f1b204ebc602f39c6e5034ddb0e77e387a2bb849"}, "1d6b68f7-31a9-4ce9-850c-35513a3c17c0": {"doc_hash": "1c508882945eaa0dd339a1d6b2bd737edda3dccb09ae0b072b86675ed65c6715"}, "c12bdbb5-afd0-4849-b772-9436b2169c25": {"doc_hash": "418fa65c8e02d07652d49e03868d71fe305ec3ce7e98c6c9c223a1e8b54833b6"}, "a5240837-6a36-4340-bff1-97546f4c8132": {"doc_hash": "d4d62379126b33681175a371aea3d4ff8998f97099e32a81de532224b95a9b80"}, "ec19f834-eaf1-4b5e-a4fe-5bf50a606e97": {"doc_hash": "66d1b0c185334c5ec5a83486ddce0fcfaf9bce11dc8c7940a59be59dd224b757"}, "7dc6e144-71b4-4faf-942b-744e19cd4e8d": {"doc_hash": "d06e0014b41e6b0d3ace8ed1817a92e348f03118c57a62abd0a0d6e7d26e68a5"}, "2f7e7c5f-2eac-40eb-8f9d-1a1f39ae5a32": {"doc_hash": "301c67c5f950102e4b333fb931431394914c904bca7afbc84679cd79c64ec8d2"}, "cf3bf32c-7713-4497-b0c7-9a091df0443d": {"doc_hash": "7a7a543d3517729de3fcc7ef5956fc810bff5f78e601bdc607134eeea798e970"}, "765ca9e2-504a-4b41-9312-4178b1b3dbc6": {"doc_hash": "7a43601cb102d819cc10649e71624eb384ebe6a221f81b679e8011e593e985c7"}, "bc0f2de9-5e81-433d-955f-dfa422536662": {"doc_hash": "2be743dafdb05e00dc3428fbbe843254957718dffacd5ca4e776fbdade60f558"}, "00362a1a-3e53-4f0d-94be-14b845326781": {"doc_hash": "44157db9cdb5a0fe91483569e9f2546babfe75e9529a396abeaac0ded2797bfe"}, "be95984d-d42c-4999-8f9a-904c9cb19d3e": {"doc_hash": "a2288a64cb90a53ddfb5986739c0ffdff6b75d9158ab7a1624d91e2d40c49e96"}, "5cf72c0f-04ff-4ef1-ab5c-4e4005c8fed9": {"doc_hash": "ace39176ce6381bbc1e267f6c13e43f6be6f336fdc242a874033efd16453bbc0"}, "b10e859c-193d-47c0-aef3-11d2f0148ee3": {"doc_hash": "ff49ce0742d1489373b54e3ad7ed0adc901a93acd35a260850a680a53c5c8ee3"}, "6d50c8fb-382c-4469-8f7b-1f9f2f62c1a1": {"doc_hash": "85bbeb8ca3f0d9a820192c78213b5b5bdb171af5a981d37c40c560c3ca9a8ae1"}, "b4656e68-bc74-497d-a128-f8bd2dd25a6a": {"doc_hash": "b88df6441f907ec3abe97b0cb7550534b99b431fb217f3da8c240e71315528a5"}, "1d7a8027-23e4-4f9c-8009-134d00c20ea8": {"doc_hash": "13814bd4f6e7fb882a5d42d5fa556bd3f97fa98fdfd9a3e829a4467c141e8195"}, "0381a1d6-3dcf-41b3-9be6-182346ff46ab": {"doc_hash": "4b492551121124c08afcb9bf3b1540ed69c60f550585b97c4a954c8c7feae203"}, "b4560112-5b79-45a2-a86b-1093e711da46": {"doc_hash": "b3b995a62771147519db5f93d743e202a86b3222cf9701fec9d0fc4ef7cc1eed"}, "67e171c8-68dd-425a-9f0e-d4cc3ce80b92": {"doc_hash": "408a669c83ba8f194676af8943adbc537af5d663ab28e91477e1c3810d971a49"}, "7961492d-ff2c-46c5-83df-5dcba24c8aa7": {"doc_hash": "9422f5946c35e52fa2c6771346f0c2b700874637d6692cd5c499b5027a9d6105"}, "87bd58c3-9b5c-4ed4-ad3a-3035432f6117": {"doc_hash": "52b9d2fd414a8a57fb79c98f3b322243d1f6dce25678dcd67e449c7cd1ea83f4"}, "e8c4e379-f533-4c97-86c4-08ce384a9998": {"doc_hash": "59346998de4a48a83b7e50811076e93e798788f0714591e6a9ef4287c1bba32c"}, "c1dca49c-b8fe-46a6-9ff1-3c0399ffe74c": {"doc_hash": "0c8c80c30c067f4259e6dbb90e7283db3a882f70cea9f9a09ce6641e779deb1c"}, "49add987-bb96-4545-b0e8-446855d3d298": {"doc_hash": "14b3f0cc869f638d170361667da182cbbe52a2d74bf7d47fed013d8333d48516"}, "ce46fc25-7a87-4764-82d6-f4d52d64bc51": {"doc_hash": "fe79bd7ed7a4bcafe78e1a5ff8e11831c1f1845b913a48ff33a02cef13f0cf59"}, "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60": {"doc_hash": "6d6f3e60b36c8b2985b0fbfc7a483ff0cd22ef4761539f0475511ead4b09db19"}, "0566410c-3875-4367-9a7e-31397687b0ec": {"doc_hash": "336d141f2f036d31f7c954aad7be908a6683ffaea44ff312a3b2091a55b5e6dc"}, "d2ecfef4-741e-4a79-b534-5473c03d6d53": {"doc_hash": "99828bc9928e7d4b7eaa055b748b0fb7346e020b5cf461de321bbf0cf263c5de"}, "371c647c-4326-4058-8c53-dee918ee9326": {"doc_hash": "76852684fa38b8d1dc0771fd2d12bf308c95466309ae10daa28a52e9335a9600"}, "18598596-a2fe-4316-ac0b-06416604831c": {"doc_hash": "4b3de96b94b3d72cd774479a7d8374a11dbcb4f3e9c2128dd93c9bb7a272e76c"}, "30845a06-7e73-4567-8181-8e8f1eee8763": {"doc_hash": "f3d45cfefaec93b9bda4952dd66d565fe606dc061edd734c9c3ae6b5743704cd"}, "41ca359d-6965-4197-a39b-b9e6cd1de0d5": {"doc_hash": "af379807ecb3c9f1516d6670a595730b6930924123473b72c2982012bc5915b0"}, "23ffdcf2-17e4-453e-bc9c-abcd12557425": {"doc_hash": "d72e0f48f4d05fc6b87e4fc1f2d80dc6773f60ae5217a05422b2d2d66fe4aae5"}, "d3def662-6302-40ac-8990-244e33a2aeea": {"doc_hash": "06b19b3ded161728363af7ab9e37824e5a51307622cbc69bc50b23ef7fb8d43a"}, "f6463fb4-11b6-465c-a6e1-73e7ff1f5a47": {"doc_hash": "51248ef9ce80e353ad98357a9da7744c412c551d9007b8904642b7773616c02a"}, "aa4a61f4-9580-48b7-95aa-11ed97ca0465": {"doc_hash": "e3208eab0cc4faae5421b6bf6b857a6275405b899409456fe418dc72ea5aa16d"}, "1cc5567a-52bd-4dad-99c4-66bdd66a50a5": {"doc_hash": "615022cb3318dab4ee654e59f3ac827208e6a8f93ed5529e9c1e717382497ff5"}, "40e8d202-38ba-4c0d-9a1d-b0f084c59d5d": {"doc_hash": "7bcb68e49dff2fd4a74975ec08f7a7503b8fd1ab91c7773da13ee59456f4a5e9"}, "15692e79-f9a7-4502-8011-2dd396a32dff": {"doc_hash": "9e2b26922d602e1199390e08059ec0de4dc0ffc3c7be7c0ce75e0bba31a03858"}, "754076d0-63af-4b0d-80de-0b0557a5a5e4": {"doc_hash": "a8b65ea74cedfc62e3929fe3212ceb2f7496ee7d95d0b8f3db74c70842756321"}, "45b745b3-b913-4a15-b7e7-8cad3383d792": {"doc_hash": "a5aad585702b5d2f2381051033e298b837d5e9f1a92b11bf88e873821cc10832"}, "e19d1e0d-32c5-4ee7-b30f-dcbb4c59caeb": {"doc_hash": "31ee75e4d70cdf0000f258bb3778fe7bb1916469aa0a8ba9039c62e7c6b62423"}, "f02e1b9c-d8b4-41be-8e36-e202a70b75e3": {"doc_hash": "7e1867ae48ac4812416d445f62c759c8a3a340256aa7c7b0d8c9493c868426d0"}, "a2e21c7e-8e78-4487-b639-aa0162818fd1": {"doc_hash": "347449bb86ae58ffbbe4481b0bc376f62683b8bc1daa539e888c32773a84127a"}, "a49c0271-6778-439e-b451-9af772769b49": {"doc_hash": "058e492e839680f00ba1ab41c3d5edd5fec2e456e4a38cbfed56df38a4c198cb"}, "cf968f92-0e31-4682-99d8-e99f448e0ff6": {"doc_hash": "cee11e288a31e1e6276bea61f7002b3fd93a176cb71450b99567fda002aa9670"}, "143fda6d-1dee-4d3d-ac44-1a451827d2e6": {"doc_hash": "082ca201412bbf7045e1f083bdcb06a847963b93960b34e90a9aec95280c08e4"}, "a22c2682-b3f2-4ccd-b617-0068fd92f0d5": {"doc_hash": "3fecd279462058380a0dcb9b576dc9fcb5842c500bb431079d6ed8d492ebece1"}, "d1ae1b30-fd5c-49c0-a294-cf8f700b2899": {"doc_hash": "082f2af2a4e3b66af0cc29f152ba3dbf5a6fdc1b8b53cd22a1c2eead66c8b04e"}, "dd14b3c8-6d59-4c65-8cef-ea20d292499b": {"doc_hash": "33677fc593076eaa6388adefaa07ddb992bf272af5b7f5d74501e12a66306289"}, "6adeaa1f-5b2b-48b3-97d7-0a24e80d7bd0": {"doc_hash": "ffbf9af4c766af064403278400cf27ebef6797a7d6bcc497f45afa048d8e9798"}, "62b5f45d-23a1-4757-a1d4-dd5059786e5e": {"doc_hash": "4f6c9dd01643fcef710877465a3e932a0b894ade5d7cbbd2cc6fdeaf4237fd60"}, "8b58752f-aa1e-4deb-a225-1cb63ad61da6": {"doc_hash": "a8d0b06c676823905dad25c035cd97c69a3f28c9e71fbfdc7e00f70e0ffb382d"}, "0fb8059f-b672-4746-9b9c-a4cfb0357b0c": {"doc_hash": "dbdfad4ac909580a012559075893de8b71753ef31a36222751d002b88d9e2471"}, "e216ffee-1bbf-48c6-88b8-738f45c199d8": {"doc_hash": "8359c6d412317e110691b5a4ff7f2c91497fa069975e6d04fb3c29451b7d3d90"}, "49a84924-00aa-492d-9d3b-92f3aec4dfaa": {"doc_hash": "b79e1eb6d27069cf4ccde528faa4f529ff0f7ddb675e8e806ade5fc07c36af9b"}, "636067c3-5713-41d5-af7f-5d1e8387d11e": {"doc_hash": "ed45c5ae3fe0e581e225f82340c0c3cfd0e83ab66abb13a3633077d9fb5198ac"}, "877144bd-c895-4a94-babb-690d9370e067": {"doc_hash": "3330217acb1d67d5f352163dca54db04885558918bb1d1721107c12e20ba6c10"}, "254423bf-e349-49ac-87a7-aa7f8f0d3570": {"doc_hash": "584d586cacb7763eeb29827d004cbbccc7d86fd03965b34094049b7af1808577"}, "6e422ef1-bff1-47ad-b600-a21e6eedebc1": {"doc_hash": "010cc0bc25991c67bfb218e621f3533242cfd59dfbaad0201ff617f358723f03"}, "5591d6f2-9b51-4f6d-afcd-9b09ebaf6bbb": {"doc_hash": "8ee9777415a29062939e0dba80401afe74f7e71ee1829a4f653025a96f1ac94b"}, "ae26a09d-ae67-419e-a483-04549d9f2ddf": {"doc_hash": "2ae8595a0acd6a10c5c0807c58baa7a2a5edba205441bf3a1985c2f4d2392872"}, "bc368d80-f8fa-4849-a5b1-484f83069f88": {"doc_hash": "b6d3c29b7624b6327fb1a882d7d0daab04bbdb4422c60fc28cff0e57ce944cbf"}, "5ce9213d-8254-4bdd-9857-97a5d259ec91": {"doc_hash": "e9ccc86a22b4edead2bcc63b65df11a0232023a4d390c92b7744127f77e7745d"}, "6949fd72-750a-446e-9071-29ef7140a8da": {"doc_hash": "e119d0d550bdae5516cc49d57da915211067745576c60ae89a465ba9e5da4096"}, "f03d70a7-bd9e-4e51-9eb3-33525aa855b6": {"doc_hash": "9446c418ab1061251ad4c08bef4b27b0b4174b6722c7582b2f90ab73c63f9928"}, "709c1f67-ab5c-4efe-8e0c-63b4bc080a7a": {"doc_hash": "096c2742105a239450a741f14455b656b0ddc6f4024b63e77ca265af6de9a96c"}, "208035d6-a30e-45af-a20e-286bd10c9a7b": {"doc_hash": "e0da9bb6a259055870a53c9406498d62ab8f7b9d3087dbaf9bb0c6808105ef4a"}, "a371ccfb-bce3-4fe4-bd8f-1b84a0886644": {"doc_hash": "f020835c6f24c5e9cbe6be01c22d777bffb56aad16f037b381ad448befed8b48", "ref_doc_id": "249bc1fa-6aaa-4df4-ae30-6b57ad2d3bf0"}, "e6ae014a-fdf3-4343-ad59-0646c4618e75": {"doc_hash": "9bf0a7fd003b1de118e581e3304519dee767f6db694cefd24781c5afae415308", "ref_doc_id": "e49b6579-f242-4d43-a91f-6833d57c0596"}, "6c9ab438-67fb-4970-944a-3e6dc8bb6dbb": {"doc_hash": "14fe55ee4ce3cdbc8118a0a28e5a80a44f1f8a24d73d9949c0ecd91ee582ebe1", "ref_doc_id": "70998970-b012-4918-93f0-739e09aedce4"}, "08528392-8502-4732-a81f-b752dbd169b6": {"doc_hash": "cbb76cd6b25aef4a07096c75e3f402d563f1b6d3638f02e79e673b744eea1671", "ref_doc_id": "2353b39b-b71f-4440-affb-75a7f4fb18fe"}, "7680d240-f925-4e59-a969-d8dc21f715f8": {"doc_hash": "2244b1f9eb9a4adfac324b5a1d880b483aab45fe520a4ddb075fba30b7da6d7c", "ref_doc_id": "57f2a052-ce26-4328-a825-5bc57c1d9457"}, "f7e67c7e-c9ad-4513-8ca9-ea8c8200ba73": {"doc_hash": "a2032eaf9c07b6d025319bfbb22c9df6603e5b5702822f74db1ad4ded0acd2ea", "ref_doc_id": "7a9267e2-4535-433b-bf40-dbbfda349226"}, "20bdb004-ca17-4159-b1f8-6e86f0f6f9c7": {"doc_hash": "f8947b601617f72d0f6365ec41660c2168f0bcd4a4091f1c7af4e9cbbe2ccf2e", "ref_doc_id": "c06eb39b-9124-44b3-a092-9cf2cece3f65"}, "cd20942b-15ce-43ed-81bb-c03b9858d65b": {"doc_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "ref_doc_id": "78ba9af6-87ff-47cc-8f07-6c1f0aee27a8"}, "d8b0c15b-50da-4109-9dd7-e79bfebfec81": {"doc_hash": "ed75647b168e86bcd200dbfd6cf588e37e6a0d9465d40e87aec91ada4da46f4f", "ref_doc_id": "dd0e1ba5-a04c-4ca4-9cc5-b0a5ad73ea92"}, "7163f738-5ac8-4503-8748-c41585752257": {"doc_hash": "a5e28e2ee336036e53197f1d35d3cf7539fd0382bd721ee83f13529397a6086a", "ref_doc_id": "dd0e1ba5-a04c-4ca4-9cc5-b0a5ad73ea92"}, "984b5eb4-22aa-4de8-9363-01f49a56ba9e": {"doc_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "ref_doc_id": "9cc5eed2-9d6a-4092-a4b0-0579d9174411"}, "391f965f-9bcc-404e-9190-8cd7f15a5486": {"doc_hash": "d7f3af859ac6e6ee9cfe86973d064efd88cf3d0f5babc0d4848d1f47dceb9b5e", "ref_doc_id": "32517139-fb6c-4356-a59d-e043cf8c9c61"}, "b21cb30b-c1e9-46b0-87f4-62dfc4a9b4e4": {"doc_hash": "58b62a4177e054313b5ac26aa8d8fb7c4dbc25f490e5baed3616703a36edb559", "ref_doc_id": "32517139-fb6c-4356-a59d-e043cf8c9c61"}, "608b9e31-cbcf-4ef2-af5f-a4f5e3ddde54": {"doc_hash": "b6cba5b0c1f6dd24021b4f1df396980843cf8656236b45e4c0000083a54cc84f", "ref_doc_id": "32517139-fb6c-4356-a59d-e043cf8c9c61"}, "8263f76c-595f-4423-8eab-747f3d9431c8": {"doc_hash": "2676e473420a6df5a4c2ec63ebcf2065b9685aaa487886b44b2a045251d4780c", "ref_doc_id": "718671f4-a146-4a4f-a8a2-008f0a59fa3f"}, "a26621de-6fee-4276-86d8-fc5e8db3c5b5": {"doc_hash": "7569e855fc789c7c913e128a0a98f32ca88f723ec326ce94fe3c666fdffaed4c", "ref_doc_id": "65bdfa2a-1506-4c0f-b35e-9b192ec171e2"}, "90c3c137-69e0-46a7-977d-3dc928b35c16": {"doc_hash": "4f0eec8ec646b5055fecb44722ac1d3e8623a23d70684d4857c5133f007c6e6c", "ref_doc_id": "65bdfa2a-1506-4c0f-b35e-9b192ec171e2"}, "41fc8df7-d6c4-4fa2-90d5-0487f4e15064": {"doc_hash": "6afca877f4ed15075d183f3d811df96255af3d6647f63d99fafdd954447aba95", "ref_doc_id": "dead090f-908b-4f6a-9470-2c78a4669714"}, "7a87e76a-80d7-43d9-97fe-8b832c62d0e3": {"doc_hash": "b8b4fab2724b412cdf7fe1a6fd017d7a63a51bc94194702b0c6d000613c5f347", "ref_doc_id": "dead090f-908b-4f6a-9470-2c78a4669714"}, "62e60ac2-a470-4347-83fa-7f03b42db0b0": {"doc_hash": "6fa7278e5405581d33c3a452ede8cf1a40c369e4ee1b42ff19e36f1a3686af71", "ref_doc_id": "4b61ab5d-f70c-4e05-be5c-472fb7153bfe"}, "bd49dc4f-62b6-4407-81b4-a60c304d2ce6": {"doc_hash": "06a4889b4663252c070b1bcdac0851fe7dd2bbc015513453c7e73b1826f5ee84", "ref_doc_id": "c223f765-ac56-48ca-896a-2a6f14088fc3"}, "40c3330f-e469-4ff0-989e-51c33a9b93ba": {"doc_hash": "91946d17965a2b88aef05f81f415d7f07b65ae2e77f767f3d8b4564fd5f8a795", "ref_doc_id": "c223f765-ac56-48ca-896a-2a6f14088fc3"}, "a88fadce-70c0-4b85-8380-f4d06a861a54": {"doc_hash": "f1bce3230075242faf492d9ae5c8cd8e878dc4c330b9d53929b56a18cfdf8d8e", "ref_doc_id": "01547349-0911-4809-bf54-8ba1be02837c"}, "5639e67b-a4c7-426f-86a7-e17bd9220de0": {"doc_hash": "7467c696b5de7237b16ccf1d7cb473dee312f1d57eee1260634d4cffbd7a2d2e", "ref_doc_id": "01547349-0911-4809-bf54-8ba1be02837c"}, "0950de56-f656-4693-9f21-89b2e8051ce6": {"doc_hash": "d6a75fc33c9ff1eb2d629b110d64c02536ab733643c1d7de6420ec00caa08fbe", "ref_doc_id": "46639f04-5bd3-4ddd-8597-1a14b727eb83"}, "30f56776-8014-4aa1-8d80-d1175727c96e": {"doc_hash": "ef268c1c234e7ae9541f744df2d67b66cc45274eda73e3bd30beddfddcdd0b4c", "ref_doc_id": "46639f04-5bd3-4ddd-8597-1a14b727eb83"}, "098ff4f5-d78e-4fd7-9f7a-37140610f704": {"doc_hash": "8035d9e014556f9d68f0cf2da68d28ac8101e993b03e0351bbe65bdf08e438ae", "ref_doc_id": "3076b1b4-5f45-4f77-b68d-555b0a96c860"}, "1712538f-ce50-49fe-8d73-1b33c9f9f38d": {"doc_hash": "9a7887a4f8ed12a224b441216087f35dade9994a1f4d06cb6bb5293bb6be8a33", "ref_doc_id": "3076b1b4-5f45-4f77-b68d-555b0a96c860"}, "d6bdb469-7d38-482c-8fb8-64dcac3053c3": {"doc_hash": "2e08d21d140f81fc1503000b85a7f7f977a3672fd955860cde610801fddcb418", "ref_doc_id": "6ad87a41-6a0a-45d3-b171-e275290e21de"}, "ba9498b3-d109-4958-ac38-5a7f5820ba9a": {"doc_hash": "de86b966c6a81cdc57d7b45bce222df89cc6221cee146d8100244deb03c404e9", "ref_doc_id": "6ad87a41-6a0a-45d3-b171-e275290e21de"}, "67470121-3f76-40cb-ad2b-bf699e718362": {"doc_hash": "700be15b2198789d6446f279f0141a36e872c1753ecc920e5fa8a397a292b88d", "ref_doc_id": "5cf21e22-c6c3-4123-a49f-8eef649c14b9"}, "d6bbb8ae-6a31-44b6-a4c8-79bf669f9809": {"doc_hash": "8627d4fa2114bd30d50452d7476224b257dc242b6dfbd0d5477d07a7d685d387", "ref_doc_id": "5cf21e22-c6c3-4123-a49f-8eef649c14b9"}, "c9322244-ea7b-4206-83b2-d66ad492807e": {"doc_hash": "5ac718b695e029ae12cfa8a5deb1a6b7778a6b8cbc92893e5dde904e7ea5cfca", "ref_doc_id": "b31be195-6839-46c4-b971-676834a63e91"}, "f67ba6cf-2694-48a4-bbdc-42841d7a1b2d": {"doc_hash": "75b538f6a5038ba9bb1ce8d21d0cb77eecd7c123a4975b8225a2287ab9728311", "ref_doc_id": "b31be195-6839-46c4-b971-676834a63e91"}, "ec901106-c81c-4947-81bb-a9f571db307f": {"doc_hash": "b731485f0e538a1d1bfca9471f11c4e1ff4387b06ba931719deb176559cc03f0", "ref_doc_id": "31822631-af2b-4855-b496-4dba03c30fdf"}, "f04b2f88-3afb-4976-915f-f72cbd3be260": {"doc_hash": "a09755a4fbaf2fc9e875beba06e134ac97365870eacccb50b2d11f282e3e630f", "ref_doc_id": "31822631-af2b-4855-b496-4dba03c30fdf"}, "38b821b8-6291-4bfe-a40d-ad5023c4debe": {"doc_hash": "905e46b482761075a79ee6f168c248bd40543510fc4c6d32c65c0b27b3b5be36", "ref_doc_id": "863ec4d0-7504-4a76-8c6f-e493cfb3ac91"}, "0a2de2ec-e152-455f-9db7-78568a289c8a": {"doc_hash": "e9ef987008a05087c3da60750f97dfceeb0affee3d3af1a33b8c8e9c2678a810", "ref_doc_id": "863ec4d0-7504-4a76-8c6f-e493cfb3ac91"}, "3d687451-6fac-4e70-a121-2473a0f9504c": {"doc_hash": "009c9d05b8de0de016a62a0b361c2e08f505a3a3d379d0b49964b4b8584349be", "ref_doc_id": "68c024c2-89d3-4ba2-a1d5-5ab73d6f56d7"}, "8b5b8365-b0eb-4956-b81a-c8dd2c02b4a7": {"doc_hash": "5f4f9bfccbd048d43202fda455c6dce0415be0beed373303320087b5da726d68", "ref_doc_id": "68c024c2-89d3-4ba2-a1d5-5ab73d6f56d7"}, "ab312aed-161d-4281-9b08-83ea18b4c56d": {"doc_hash": "157e5c889476b0e24a2edba45040a433691129fb58c5579c0fb1d0d102332941", "ref_doc_id": "061fb6c0-e230-4f10-a079-dd9f38d91e94"}, "b36e06c8-2d3e-4aad-b658-40f1d686c90e": {"doc_hash": "e407b3dca7d639939a883001af11fa90e3caaf2df3ffe7c6a0793b02869a7570", "ref_doc_id": "061fb6c0-e230-4f10-a079-dd9f38d91e94"}, "0784f353-e5e3-4ec3-a1a7-63a5ac4d6a13": {"doc_hash": "6e4c8b22fd77f6e43bef4e368f3afdfc08793f76279a7a56b6e1cf1e5403a28a", "ref_doc_id": "6f378abf-9364-4e20-8333-b5d4c33e40dd"}, "a032d935-4f7f-48ca-9d7e-94fb142cd18c": {"doc_hash": "f728483e7c50923395e783c6a1ce38b40ee410f39370dfb700c88198a2229a2b", "ref_doc_id": "6f378abf-9364-4e20-8333-b5d4c33e40dd"}, "1737f908-7283-44c2-94df-a96aa8da6c93": {"doc_hash": "4b07a337d13ed2c875b11d4497093973b3a5bcd58a9272e7e7d55393984c9bf0", "ref_doc_id": "1e0242f5-0246-4f50-a51b-eecac64d6475"}, "52407be5-4241-4fd4-8873-3c10a76a4044": {"doc_hash": "ecf90ca7c324cedadf656242b216570d741cbd727290865a0aa28eed65dbce41", "ref_doc_id": "1e0242f5-0246-4f50-a51b-eecac64d6475"}, "b40289eb-f2a5-49cc-a207-800e4cb39316": {"doc_hash": "57decb8c0f052b7bee15c5b50463d7f44a7f61c588a41d877b6a009e94bc9be8", "ref_doc_id": "848c2713-f74a-4f6b-857c-1f0466878d1d"}, "63c6ac7e-a92b-47de-8283-e1b31dde0443": {"doc_hash": "e31df512feeb2712fe51b5914050d0258e467f79956c657943a6051c9cb743c1", "ref_doc_id": "770f3b12-6bdb-487d-b6de-ab57a864801e"}, "9891cfc4-0947-4070-83ac-7c5101be6fab": {"doc_hash": "92d28eeb1cd74e63c51e848b0c806df3135bd8013ab16020c60ec1a7a8a1fba1", "ref_doc_id": "770f3b12-6bdb-487d-b6de-ab57a864801e"}, "953b4019-d958-4b0b-a7f7-691d82a814c9": {"doc_hash": "3eb41fcc9f99eee91fa522a962cece768113e35a96dabc1d1cc793d9dbaae56a", "ref_doc_id": "f4a6be40-7316-4ae0-90c8-8bfd97e25575"}, "fb411765-c702-42aa-baa3-fbe24a5cae6b": {"doc_hash": "505027205289aa5502c85e2cde9545be91cf5c8a313b7ac87d825ef89ad3cc8c", "ref_doc_id": "f4a6be40-7316-4ae0-90c8-8bfd97e25575"}, "ca999fdb-df7d-4f2c-be6b-fb00d29defe4": {"doc_hash": "e03244852e0bcec800cc60177841c5d8c068e95561ea168746637156491c4762", "ref_doc_id": "d0f5f258-4daa-402d-808e-a6076757d436"}, "3036359f-f0a8-4e30-b178-aa3eb01e52fa": {"doc_hash": "eceb5c6ac19667e4626fa5e842cd863146c28048e8b5e5b487590516c70c5eec", "ref_doc_id": "d0f5f258-4daa-402d-808e-a6076757d436"}, "2684e0fa-d958-4274-8ad7-d00802129ed1": {"doc_hash": "82b2650b0a3cbaf2d476f25cba0f63f51e9626c6ce281283cacb333c5bb685cb", "ref_doc_id": "a865b743-c437-4302-a4ac-ea193afb06ea"}, "cde80e36-998d-4e43-9b41-c46df8b8fbf7": {"doc_hash": "951a2d6f0b12f0f655db01e65b7053b19f97229b8b36f6b2c3823a0d416e0072", "ref_doc_id": "a865b743-c437-4302-a4ac-ea193afb06ea"}, "73935dca-34d4-40b9-acc9-d11f605b5c9d": {"doc_hash": "4b5c4853c9352bb3dfbcbd06f5fef7809befd727b306de669baa30477f7d031d", "ref_doc_id": "5aaf2b03-1e5c-4525-9db3-2311e97b772c"}, "6f08fe69-a109-45a5-b910-b8cbf8bb0fcf": {"doc_hash": "d63f7c5a74ba010239ea22928fb5df0d9d244b1e1e55b729801852c21eae5346", "ref_doc_id": "6268731d-d74b-4233-ab62-d0db7c469d4e"}, "4ac466ab-5877-480b-a4da-11d4f795debd": {"doc_hash": "d4fe9cc33faa6eb6283817fed25aa09bc74863946d8d10109e60c1e7269ccae6", "ref_doc_id": "6268731d-d74b-4233-ab62-d0db7c469d4e"}, "cee50c1b-0235-4dfe-9a42-eadfffd3c5da": {"doc_hash": "97826fd735c893ec8b791b9c11f3294137c602603e0c7a08637927d70e0a583d", "ref_doc_id": "f97777fc-a670-4969-9d72-b590ff4052ca"}, "5f81de28-471f-46c9-b479-fc513f3e9a45": {"doc_hash": "694f3a369232a1bbc2133d46afdb2dfbe3dad4099e5df16d7143e8e10441ae55", "ref_doc_id": "f97777fc-a670-4969-9d72-b590ff4052ca"}, "73352faf-ffb9-48a4-b507-c046cdd830e5": {"doc_hash": "a577c537843e0de85bf803fd3890dec8b58ee1d174a17a143abb46c585e27dfe", "ref_doc_id": "1a7e9773-188a-4cc7-9a64-32b84be05cb1"}, "e3e7c942-75b1-48fe-84ec-0659b33dea02": {"doc_hash": "7e4a394423c5302212744c7ae9a8422ef62d4ca08070edcac3704053a23d9f33", "ref_doc_id": "1a7e9773-188a-4cc7-9a64-32b84be05cb1"}, "5808ffbd-283d-468a-8f85-0529afc6922e": {"doc_hash": "98ca7684968a8cbae829f0d8230c7f7ee35eb18f364cac89a84371866bf00a33", "ref_doc_id": "f40a78ad-3a2d-4fb9-9276-5aa9c023049a"}, "7ef86399-05d9-4157-b98e-58584e68ea9b": {"doc_hash": "b2be107529c0f04e94d2109c00ce9c0274c66df4133f27fe3f44cfbd9a2b1b0a", "ref_doc_id": "f40a78ad-3a2d-4fb9-9276-5aa9c023049a"}, "4b1a99a4-c226-4545-8bc4-c0caf1cd0c73": {"doc_hash": "641a99c0f05a8dbb3bbc756d72993adb99d7856d868926b9dec4f5b0234d221e", "ref_doc_id": "229173d4-f97f-4296-9708-3c4658ffbf3b"}, "4fce912f-8ee9-41f3-99d5-2761c546d407": {"doc_hash": "157f334222187b8366fdd64493dcbc38897a4463ab82abf87718888f678b0798", "ref_doc_id": "229173d4-f97f-4296-9708-3c4658ffbf3b"}, "f59419b5-83d9-453a-bb8a-b9b5222f85e6": {"doc_hash": "1cdada0c4ef3e0389bf39550ec2ca158dc07a972ca382dcefbdade606791c486", "ref_doc_id": "02dac68d-d9b8-4525-a531-160164988343"}, "44eb7431-190e-4133-bc7f-aa11ee2c4aa1": {"doc_hash": "b03f6bb7e29f4294c12f6336f96a80f3c489340b244fe79f307180dfd85dbce9", "ref_doc_id": "02dac68d-d9b8-4525-a531-160164988343"}, "6aa0cd98-d10f-42f8-b587-edd35a3de6d8": {"doc_hash": "e8cfc557b896a698edcc44c443005f868ac8f2ab36da3501e674c82418fda6ed", "ref_doc_id": "ea02d236-2234-4cf3-9725-e0db095d2cca"}, "2c4663ea-2915-4f5b-ae2a-19511b968d54": {"doc_hash": "d6c59f0eb2ab2a53d2a91f007b7b66cb28758d7e5b29770639d757014bfd1a40", "ref_doc_id": "ea02d236-2234-4cf3-9725-e0db095d2cca"}, "d54a0683-66b7-4204-9545-582b85b163de": {"doc_hash": "4b13ae8e8aea4baf9f7b820f3855fd4fbed5c12d6104b8a30f48874d80509790", "ref_doc_id": "28a7e3e9-5fcc-4c9e-8608-0b03462feb4e"}, "b64946d9-79da-4658-87aa-2360b2261617": {"doc_hash": "8f593bb36f136f7136841f800fd0ee84aa89a7904131e10da6243cd05fb0cd59", "ref_doc_id": "28a7e3e9-5fcc-4c9e-8608-0b03462feb4e"}, "53896a75-ae5a-407f-a623-a6639e996a01": {"doc_hash": "24443d3d2bb8524fb1ee22c37ebeacf126ab021b5f5270b98829de1206f26580", "ref_doc_id": "2ebb8c64-69a6-414a-ac2b-9de5ee6216d0"}, "fe3d5f90-37c3-45d3-a29c-ba875041d3d3": {"doc_hash": "f61ff5e2f15e518f043a844ef6345a62997c236cdce1076ac93bed6a3fd53df5", "ref_doc_id": "2ebb8c64-69a6-414a-ac2b-9de5ee6216d0"}, "840c76ed-bd44-40f2-a445-ec9fbbe04b37": {"doc_hash": "2a1b9d5ffbb0ad4a3189e7d9fa6e59485cc2e8b78819c11e6cdddf444c520522", "ref_doc_id": "acf62b8c-b1d6-445c-8477-108895a8f54e"}, "7ddd6a45-ab08-4e7d-9695-baf25cf9aa48": {"doc_hash": "27a21374f5af1fbad8d64d4d2ae70fa5ae80f3685887462ca2a6b772fa804288", "ref_doc_id": "acf62b8c-b1d6-445c-8477-108895a8f54e"}, "689cf701-4d75-460d-b9c2-c7602648a0de": {"doc_hash": "7be12e5f93208a2e3fb10f903a32c5f760e1a5467a2077e452f5ade675c95698", "ref_doc_id": "48a87e18-9f9b-45f7-a30b-c9b49a1d4b75"}, "7b876c16-4e6b-45bb-a8b2-28875d87971b": {"doc_hash": "9a01a901067ecddd02ffdfb50544afef8a56fbcb3959f8246765b5cbdd3b4883", "ref_doc_id": "48a87e18-9f9b-45f7-a30b-c9b49a1d4b75"}, "b8375be9-2629-4285-881a-52b703e563fd": {"doc_hash": "921ea04f4d06780588f727d86febdf38b0fdd38eceed71f68d2e57aafbb66812", "ref_doc_id": "1407d068-74b9-40a5-b390-57954296171e"}, "9dce00de-fd30-4864-8821-36c9a807a72f": {"doc_hash": "39902149f7c9e834f482e6b7ee613a86cef72d2630f624eb372c9d9e33accf33", "ref_doc_id": "1407d068-74b9-40a5-b390-57954296171e"}, "a324215b-9106-4faa-a087-10f05202b32a": {"doc_hash": "04d99cc47d18af4301b03c5c8f4fc63182ac538950fec06ca533894018db55f1", "ref_doc_id": "eab8ecd5-86f5-4b06-83f5-8581caea74df"}, "00841731-78fc-4f28-90ea-f1661c638196": {"doc_hash": "1eddc01547582c5eb3297348fdbca31998de49c378553674373af2890403972a", "ref_doc_id": "eab8ecd5-86f5-4b06-83f5-8581caea74df"}, "9c3b6649-8c8a-473e-8461-fa0e0ef91556": {"doc_hash": "365e2482616724840592c07029696e24d462f74fe57c32379dbc26143a716d91", "ref_doc_id": "24448867-f142-4939-8223-7364eea72167"}, "f4be5360-7e42-4c78-9cbf-e0cbf9d5aca0": {"doc_hash": "269ab44b2a3c5a7c838fd9a669d6b73e23a60b008c3f41deffd88e5ac6cec825", "ref_doc_id": "24448867-f142-4939-8223-7364eea72167"}, "335e69a3-bb21-4fde-a271-9791bd5aedb8": {"doc_hash": "066fcc86b4dc9c24465199e0339adfea396eae289befd1511ecf60034d33df0a", "ref_doc_id": "fd427dc3-06d6-4435-afb1-63fe67314d10"}, "8b2bb40d-e2cd-4670-8ee2-57eeecb3816a": {"doc_hash": "11a27cde2dfe8ea249b3b9b759153c86bcd5b92b906a24897391399fee28e75f", "ref_doc_id": "fd427dc3-06d6-4435-afb1-63fe67314d10"}, "9ed539c2-41f1-45ae-a82b-7a681aa3e9b8": {"doc_hash": "f03a6fbd2fc5de9bf4de8ade9a0f8b5975896dd2686028639dd2724290cf6a45", "ref_doc_id": "fd427dc3-06d6-4435-afb1-63fe67314d10"}, "5fb3efcb-5dd4-42bf-a21a-48fcb1ba22b0": {"doc_hash": "dd892afcfc4783207d8c1c77024c749f568b98faebbcb886293d67bb21193ede", "ref_doc_id": "9374bc17-7120-48d2-86ad-12ad222a90bd"}, "eb5e5fd0-2e36-44c8-897b-c221acf159df": {"doc_hash": "e775afeafb9973e5aaed16bbbe9a9d695f888b446773bf0f55da84f612b455d7", "ref_doc_id": "9374bc17-7120-48d2-86ad-12ad222a90bd"}, "59d0bd48-e21a-4a9f-a023-6175775e24fb": {"doc_hash": "a07138e8f7ebc250045ed4324d9631b2e192c153786644c181360fbe7be1d68c", "ref_doc_id": "86dbca87-087a-418c-af5c-9ade9a2d466b"}, "b3c6e14a-d8dc-4202-956e-0dacfdaf973f": {"doc_hash": "4b9529dd93e9c6a56c1079a8167c333d3a07eeb68b16ec825b0b763e071963d2", "ref_doc_id": "86dbca87-087a-418c-af5c-9ade9a2d466b"}, "ccc14088-ff9f-4329-a8dd-e8599d5ad7a0": {"doc_hash": "ad13fbb83faf5639a0dbf67a459ddc27bdb8079eb6888f48bb479b0a2e11f140", "ref_doc_id": "87362424-3d2a-46ee-b6b0-531389473b41"}, "3a784d1c-43d5-4142-b9d3-762ea4c370db": {"doc_hash": "0d2df666f96d93939930dca2c0972c16a07bc9e497abe5645a2e8f0c81a54e91", "ref_doc_id": "87362424-3d2a-46ee-b6b0-531389473b41"}, "bec975c3-f2de-4384-b137-064618e747ad": {"doc_hash": "c4817387f906dbff762627be0dc464f606237ebdc5a5c022cc24686ef4a26d8f", "ref_doc_id": "a659e33f-2e37-4efe-8753-4764dde85045"}, "9ff9bf2d-4316-4276-8fcf-272d011993a6": {"doc_hash": "bb38185361016f1a860b969ea8912c41da77eb46db6e76c307a4a3e3d9899c8c", "ref_doc_id": "948eb31d-5c3c-4b53-8681-cbc334b2e94f"}, "5b843699-ea86-4e79-9521-e859ad681b07": {"doc_hash": "caa7db5af0ed420d41c7efa459cd4597c7d7cd72f92c662ca30ab49d6e498747", "ref_doc_id": "948eb31d-5c3c-4b53-8681-cbc334b2e94f"}, "1bd707b7-d248-4f35-86f6-ede3f22e9b63": {"doc_hash": "706596711f43b8b48dbf22db214a760e2a88d97ca25e41d23566b7a5fba0613b", "ref_doc_id": "01050cce-5a57-4c43-8c97-b0eb630c5f3d"}, "30447c2e-0e2d-47d0-ae3a-fb67a493bf1a": {"doc_hash": "5c4a835b46aa8f927f0799c5469c4b4c447f5bd741c6a39108043def72d63360", "ref_doc_id": "01050cce-5a57-4c43-8c97-b0eb630c5f3d"}, "aadfbc5e-37e6-4656-8559-69874701e300": {"doc_hash": "934848f27e68e40f62cac6ae7809b3ae1a830f653eb73c4c443332f6aa88016f", "ref_doc_id": "bfd1d2df-fa59-4a94-887f-d4837329f3d6"}, "0036b3a5-7e3f-4c4b-84f0-20a6a7b8ce84": {"doc_hash": "b37390d247d37454e3948dd182da6cacaa85c892587e8d721c316119cadaf242", "ref_doc_id": "bfd1d2df-fa59-4a94-887f-d4837329f3d6"}, "2b732ea8-45e1-477f-a703-ff6467687955": {"doc_hash": "788d0fa53567ea5ed05c41f7da99cecfeee6014e5d9945e21614e5ab1dee66a1", "ref_doc_id": "e450cbc9-1ab9-46a8-9f3f-74eed9269096"}, "4e13f422-6616-4b80-b8ef-de8638107f4b": {"doc_hash": "b636043f710ea0c876378e1b6b909a361524914b265f6235eb02f6de02672bd0", "ref_doc_id": "e450cbc9-1ab9-46a8-9f3f-74eed9269096"}, "61e6d39b-97fd-49f1-aa08-07e45af8d425": {"doc_hash": "102d8cc5f705a947321da528a91d58e58698c3d95f1477a039b4658734e30dc8", "ref_doc_id": "57afa26f-0cce-44ec-b179-344931db99dd"}, "f5fa6ed3-49ca-4a93-9e4e-98362e8e7fc4": {"doc_hash": "a3f83c6d800929b58c08b75c0133520e0b96fb08e5d2c26497d0fabc7d1cc996", "ref_doc_id": "57afa26f-0cce-44ec-b179-344931db99dd"}, "f69bf540-beaa-4244-9f09-6b4c5deb9ef6": {"doc_hash": "e17eb9ffacc34cbd463603a20c0c730face6da4f3c6cdd78c387543fe7b9b118", "ref_doc_id": "a611b4e0-317a-4f4d-abff-b2034707e7eb"}, "38cbd0d2-03ce-45df-aae3-da10efca8c2b": {"doc_hash": "cb2261575d490379cebc4f47c6e4e0d8712f4e33109fdd485772173536fb63ca", "ref_doc_id": "a611b4e0-317a-4f4d-abff-b2034707e7eb"}, "032bd563-a7aa-47d5-b0c8-f1390c847336": {"doc_hash": "15a954bb5c2c9ea3b5e6066c353611d3da87fa96542f1d4a1e99e2109ea139e9", "ref_doc_id": "99939c1a-e1be-4c64-be9e-87f2a1374bba"}, "6ce3aebc-f90b-4c95-9640-863e3444a1f5": {"doc_hash": "0bc6797cd8ee2a907eb613d32191cfa8a5621fdd5737987154bc77eb2aef321e", "ref_doc_id": "a1a6e646-31d9-4729-9d9b-4506990eff89"}, "c896dbbf-1e7e-4f69-9271-96771cc098a4": {"doc_hash": "9f19a02cfc4b08ba508ac92cc249d962db1f2827ce516d4ca7670a04ae364df7", "ref_doc_id": "a1a6e646-31d9-4729-9d9b-4506990eff89"}, "850780c5-1b2a-4cd6-8c33-a62770c2c816": {"doc_hash": "09e746522c3e17dd293908c82f302ceda3f0bd84c0c9189796a6465cd6a0fbde", "ref_doc_id": "bba4c7a9-670a-4dcc-ad37-e61fd734d71c"}, "a4aa8806-c642-48d7-9aff-15db3edc0f87": {"doc_hash": "69e16d972d749810f663054035bd718d60b09585c74fc31daeeb0817d0dd800c", "ref_doc_id": "bba4c7a9-670a-4dcc-ad37-e61fd734d71c"}, "89ac197c-f47b-4f83-a85d-30870a4734ad": {"doc_hash": "dcfde6362c28c9a1a5215e832fad3dabf5bfaaae892c87ccb6a2f27cb06e0c2c", "ref_doc_id": "0b7bdb6f-5a8b-47a5-9734-29fa78473fff"}, "f2778c08-ae11-498e-b618-9f42219edc54": {"doc_hash": "6c7b1b4945366f406e8deacc8ecd403df7db3fb9e1a9d094c87f76ed5a6ad6ee", "ref_doc_id": "0b7bdb6f-5a8b-47a5-9734-29fa78473fff"}, "3666d275-6ad3-4304-a6c1-d71be4ad9a10": {"doc_hash": "40d4bdaf085f136f0d2590dd9bf8198a1bd9d902d1aaf541f7c249978891afcf", "ref_doc_id": "d8df1c19-159f-4dc5-98ee-100676d68f93"}, "5fdefbea-125e-436c-abe9-fee968faaffe": {"doc_hash": "92d053338d94ecea6a35bf44305481a6df5368bfc966bd443e263f7c71b9b136", "ref_doc_id": "d8df1c19-159f-4dc5-98ee-100676d68f93"}, "27c44e4b-0853-4e84-b312-eebef4ec34e3": {"doc_hash": "174cc4206cc19035061a9b43f56545bab0c19bde71dcc982b7b9a9d8237315f4", "ref_doc_id": "9ea55305-becb-4267-b610-886a97c90dd8"}, "cdc04712-0eff-4129-b5f9-5d541b979f7e": {"doc_hash": "c77770f979baf7daea56c6d7c9ba54241cf59cc1b1c61c80438f97f3ae58c34f", "ref_doc_id": "9ea55305-becb-4267-b610-886a97c90dd8"}, "878c756b-77d4-4214-a581-0e3181dba4ae": {"doc_hash": "1b970feb160995fec40be71a6c1584d8b7d6a70fbe4f57758642f9d6860908b3", "ref_doc_id": "314ecffd-b72d-4368-b290-f32f73c72c1b"}, "06143d6c-cee2-4c60-bcce-07c0ef34a04d": {"doc_hash": "713d1ffa57c27941d6b1758cc6f02ea66bc00add70020445c64ddc348883bcba", "ref_doc_id": "314ecffd-b72d-4368-b290-f32f73c72c1b"}, "b89f976d-61fb-4cad-9160-b718194fc4b2": {"doc_hash": "f923922215af07cfd2f64cc78c60fdad755ad4951f9660ace7ce5d06e1c5846f", "ref_doc_id": "c26d48e6-6f86-4927-8462-ab4319f02d7d"}, "7c96de64-1efc-4d58-9a9d-c5895691d9fb": {"doc_hash": "c11f98e32096b4b4f5e3d5f2fb741455ac9d9cc682d078985f12cc2caf5e7f48", "ref_doc_id": "c26d48e6-6f86-4927-8462-ab4319f02d7d"}, "0a29a959-d643-4f43-9cc1-d0ffc8df731b": {"doc_hash": "8023a31875ac6af00cde7a5a00d1c1316142bf24f8d4835e5ba2c49aaa115344", "ref_doc_id": "c26d48e6-6f86-4927-8462-ab4319f02d7d"}, "80ab1a71-5b3b-40f0-85f6-e9cb580e852d": {"doc_hash": "e502018ae91a81c9eecae2ba5fa572eb2c8f35ec492da49e11e131b16f48f457", "ref_doc_id": "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4"}, "f07546ac-e1d6-47e7-9498-d2ccb556829a": {"doc_hash": "21cea0fcfaf6494c1ae11a2eac4ee0979d9e51f1ae6dd4acfe5aff9d68fa2316", "ref_doc_id": "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4"}, "e2089b36-2428-4057-9599-754d00b90e88": {"doc_hash": "0b3816ca5aef4b1c63e2c819022c46ac90b14f304cc8121a4474f2e6ca18d312", "ref_doc_id": "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4"}, "aa36a3bf-b56c-4354-b56c-bdb83b6d0ce6": {"doc_hash": "9cd954405f741d745b430edda8ec496163222c86547a13c9a6c2232d268bbb37", "ref_doc_id": "ebd062fa-3516-4c56-aaf6-5b96479879bb"}, "cbd6c930-e3f0-47da-9951-73573c320aac": {"doc_hash": "af1a2970ffffe675a2aed2e9ee5d8363cac1f993bafd94398765c37467f69051", "ref_doc_id": "ebd062fa-3516-4c56-aaf6-5b96479879bb"}, "8944ebd3-b764-417f-a556-8d9b7af459b6": {"doc_hash": "fc7807d649c7604fec5d6690ec16ef22525c2903332df07cbf4991e8aafbe839", "ref_doc_id": "1998c9f7-e924-4785-91ee-1b75003ae3fd"}, "8114b580-7f6e-49bd-bace-133de333c3ac": {"doc_hash": "0da458192bcc3ee5a18452d39a5a57e6ca29f2f12b5d92810758560d246943de", "ref_doc_id": "1998c9f7-e924-4785-91ee-1b75003ae3fd"}, "4e32b78c-8386-4134-8a65-8621174694c3": {"doc_hash": "5fc3c6ed8066e2e990843e384b2846882f331d90f73fbef4482be25d606d55b3", "ref_doc_id": "5b90ffc8-a70c-4e0e-83e1-e1be8d48adac"}, "b0725c4e-4c66-49d0-9ff8-003443989b1b": {"doc_hash": "f97bb1798073c4240c4abde6153821e17d5002a5152b147feca9e48bdf69befa", "ref_doc_id": "5b90ffc8-a70c-4e0e-83e1-e1be8d48adac"}, "858045f3-b3e1-4a16-acc3-10f0abfa86e8": {"doc_hash": "44d42ba05069d3d52269bccd2829c57bbe397158efab7e94f0e83ae03bfff5e3", "ref_doc_id": "c62e3698-3ac2-41aa-a3b9-f5bc38ba38c5"}, "673e5630-c4de-44db-856d-4ae494f2aa67": {"doc_hash": "392653ef645039aecf7fcd0e3fdb6a9a8f3c63682419d263124a63e342bce21f", "ref_doc_id": "c62e3698-3ac2-41aa-a3b9-f5bc38ba38c5"}, "c3b6f0be-cbe7-41b9-b460-144e4f86d104": {"doc_hash": "132d918a0e3be6eaaadef8006de7abf31d9b55e59b3a1ec175aeeadaa0ce5daf", "ref_doc_id": "50e1b02c-e715-4183-90cf-8152355a4e93"}, "2c293de1-3a7f-4a9d-b054-ab75f91c5142": {"doc_hash": "1a8c43c994543604c180466bcbf32dbe3c7fa6e93fb7f6187c7e66b98de6420e", "ref_doc_id": "50e1b02c-e715-4183-90cf-8152355a4e93"}, "96b361f0-a79e-40ee-986d-da3fc5e40b13": {"doc_hash": "6ddb7e1321b61932563042dba9d065130ef7e7fc01a9f7d2ddd207ec0e51a1ab", "ref_doc_id": "525616b6-cbc2-44a9-80fc-bb9b9dc1ae59"}, "de3e955d-a1c5-46c4-8915-c70791f720f9": {"doc_hash": "e66362bedc12dd3ea2fb9f4ee4eba545974bad90cc261213e1d4e51b5ef0d9af", "ref_doc_id": "525616b6-cbc2-44a9-80fc-bb9b9dc1ae59"}, "557a9a0f-5681-4a2c-9b46-c0b2fd5685d1": {"doc_hash": "22f18e5e01494499d35ae37da2840b1c5b5413a09e40d51791abe090ecd4710c", "ref_doc_id": "0dbb2922-87f8-4e18-8797-bfad97717ee6"}, "d1e36ff7-fa18-454a-9c6d-409b7a82b1d7": {"doc_hash": "76e558d3ac0b874c0a928708c9aad3fb44722a37dd775d65b3f1565a03eb8910", "ref_doc_id": "0dbb2922-87f8-4e18-8797-bfad97717ee6"}, "b330a97c-97c2-4e52-912a-6b15f025a54b": {"doc_hash": "9765738547c000b24cd258f2e01bcf6209bbf72355d2fe471a6fe89fe80e3fad", "ref_doc_id": "0dbb2922-87f8-4e18-8797-bfad97717ee6"}, "da706f7a-604f-416b-82d4-eaca018057e1": {"doc_hash": "e290bb13c6885819bce6ff7222b7613fc60f4eb68547348f2577573daa999aa9", "ref_doc_id": "e4a7cfdb-f50d-41c1-ba3d-068260656679"}, "d86d941a-6d24-47c1-bd89-d15bffebaaea": {"doc_hash": "273084d7de358556d5ab846fcd8e075b1a776c6fd3a18b3e50e27649bb6b421c", "ref_doc_id": "e4a7cfdb-f50d-41c1-ba3d-068260656679"}, "6db57725-df2c-45fe-bc89-81ba049e7e56": {"doc_hash": "6666daeff86a750db3c3675db905de35c8d7b6db526bdb324fcff2d85307820b", "ref_doc_id": "3a0fac2c-7a09-4a1e-8f37-be8de3181a98"}, "3b3089a8-6754-45fe-82b4-f07a9664b4f3": {"doc_hash": "d72cbea6448dccfb01653c7a9a5d3ea9a6485d27ea856a32e99c2b14dbea9ec8", "ref_doc_id": "3a0fac2c-7a09-4a1e-8f37-be8de3181a98"}, "52e0d7db-1cd8-4af7-b6ff-342240db9b1a": {"doc_hash": "b4d2cb27295aeecd451b6c32de7388c7abe94144929f74c256c07c69fc352420", "ref_doc_id": "67754d78-2d8a-42e0-9819-933966d70cfa"}, "0faeb552-eaff-45d7-9246-ede75c9571fe": {"doc_hash": "4e6ead093113d3c33d52cee18e7d27e5fe75fe3cfb86a49783d5549f736fa842", "ref_doc_id": "67754d78-2d8a-42e0-9819-933966d70cfa"}, "d34b9ad7-1163-45be-b1f1-1f91a856aa09": {"doc_hash": "e1e4a3059ed2c096c4c3ab0b7239d2429838e2829d004aace8555712f162c464", "ref_doc_id": "e40b1e16-cbe1-46e8-baae-5fe32152ece1"}, "26bdf170-4fdb-4581-97a7-7c67d8c98d31": {"doc_hash": "faa34e1845d40d64cfdfcdaf4158a8be7ad1a8dfb139a5e4e204fa2678a2aa0d", "ref_doc_id": "df266c90-4474-49f7-b4df-58557c430490"}, "da020c15-acfe-4a9c-81a6-da3e68d878f9": {"doc_hash": "5a9a35d74752c216aa32e17898819b68f08ebd913a98dc4aae5e8d4975efb989", "ref_doc_id": "2d20308c-b41a-442a-96a4-10a4c7c2ec60"}, "ec626228-e5be-4a77-a73f-08ea0c16c994": {"doc_hash": "0e6688ce913dce63cfdad2acbf5a35f902c98360c06dac3f8a9bfe1c0b3b8c49", "ref_doc_id": "2d20308c-b41a-442a-96a4-10a4c7c2ec60"}, "126bcd9b-e88f-4820-9ef0-bb214b0bda5e": {"doc_hash": "5d5aa0ddc922b5a7f702a9a28b1fc9b940b0435bf3d6daf4122749226742df10", "ref_doc_id": "8c4a8659-26db-44d2-b748-e769c564b6df"}, "83ccaca9-1edb-4232-aa88-fe92d5f59a5c": {"doc_hash": "c1a1df7c6f10f33e319a51701c1d59bf5340e102c343bde7dec9eb8aac54604c", "ref_doc_id": "8c4a8659-26db-44d2-b748-e769c564b6df"}, "adb1a284-d42a-4018-a3ac-4baf4913cdf1": {"doc_hash": "9016157ff8edb3eb348a1f2ba484e9c2f77c9380acdfd6a327090e0b542f2b3e", "ref_doc_id": "4acf6c7a-4a2b-4d52-80cb-f6ca8d82d631"}, "456ca80c-6906-49e1-a56c-38392d599891": {"doc_hash": "a37b3cdd50898c4897e67c44c23eb2001eb7f68a1c3f61bb700992bde9e43f59", "ref_doc_id": "4acf6c7a-4a2b-4d52-80cb-f6ca8d82d631"}, "61df13f1-6782-4c13-8d57-e3275f219f1a": {"doc_hash": "59b3a65b6c561f7149174be4c687ccffde1439d1f414f6e52c7500fa657d0cab", "ref_doc_id": "48eb1f04-6d81-4122-a53d-daf0ac6e6ce4"}, "910b9f11-10e8-4b08-849b-0bdf621369cb": {"doc_hash": "6dfa639bf57246b532bc67da5c1acd0ab70bbc11dfe2f2c64a0dd22cc99e1c51", "ref_doc_id": "48eb1f04-6d81-4122-a53d-daf0ac6e6ce4"}, "1169d4b8-5f9c-4b15-ac38-24e8ab17ceb0": {"doc_hash": "7264e183d48d2c9b9a0a276419bfcec1f64f603bef64b66b2f777c5880ac759a", "ref_doc_id": "bda73d1c-5385-4628-b78a-a4961819d273"}, "76196820-1392-4b79-80f0-5e50ab26688b": {"doc_hash": "b24fb381b8d3111d4c811532ae301a1680f3ec80482d27f41a00182269eefc38", "ref_doc_id": "bda73d1c-5385-4628-b78a-a4961819d273"}, "bce4e170-8b29-424a-99ce-135278624385": {"doc_hash": "dea3ad360d9264b0b953ef6595a25bde9c0c4451fa4d0b08ee48b7b3827d1437", "ref_doc_id": "89400fa6-7b38-439f-a897-42d17a327ad6"}, "404df95b-a676-4c2f-9b95-72e48856a36a": {"doc_hash": "2338772cd8adfb92fdb9f04642707cdc0ea4193a13944ceb6b3d508d4015ca0f", "ref_doc_id": "89400fa6-7b38-439f-a897-42d17a327ad6"}, "4c6f9b93-5974-48f4-8310-e4882c381aca": {"doc_hash": "2ad63651a46d1555a509f07323a78b77f54ce1ceae6d585dc0b8d53ca0b4cd7d", "ref_doc_id": "baa57928-ca97-4615-859b-53f152d0e45a"}, "7720ceee-41aa-4115-bee5-e7c93c32c19d": {"doc_hash": "7e00470b9e9331e5e695627ebf06d4a7ac2ec7b2ee5cf83767247047c991ffa7", "ref_doc_id": "baa57928-ca97-4615-859b-53f152d0e45a"}, "cb398af0-a39c-4ea6-803d-c7eeb9e6d6a7": {"doc_hash": "6a770ce7970c097f2891e60627ccfe5287fc9506ccf868f22f2d78acce14278a", "ref_doc_id": "5df4c805-5dfd-4b3e-a1ed-012e27876352"}, "c962f74e-c72a-4bf1-8a78-7fdb66d9559f": {"doc_hash": "9a31b795c47a9e8a0bff06b6702ac96ec1ebf76276cc5fba568b1dc614686cd5", "ref_doc_id": "5df4c805-5dfd-4b3e-a1ed-012e27876352"}, "a24ad9f9-28ae-4824-9a78-5067a21edce3": {"doc_hash": "7649a6e3103846b7ced672c66b1338c45f6f6903998ea6ee3ad82835cbf0f279", "ref_doc_id": "9995bc76-b787-4461-be89-ddcb7a42e47e"}, "41dd1496-09eb-4423-b0c3-9d0852d296ce": {"doc_hash": "68be9d1c9e8628488e1e6e23a8958849d7af163351d7babd65501b843d83fd5b", "ref_doc_id": "9995bc76-b787-4461-be89-ddcb7a42e47e"}, "17a51524-c654-4d90-bb3b-d1ca43588e62": {"doc_hash": "1bfdced4dae189e1f5bbff1f9040f76388409c01c081b7021ef78cf188bfe067", "ref_doc_id": "69121cba-fdd9-4aa4-b771-09d96935105d"}, "1a700555-0f66-4bd5-9a07-84c044834092": {"doc_hash": "219514e29c25ade6b24f504a2c2952465ce79941206d4f3d01f7881a0778c652", "ref_doc_id": "69121cba-fdd9-4aa4-b771-09d96935105d"}, "4577e05c-3c8e-4a32-8ae7-dd50a1ad99ce": {"doc_hash": "842678d721cbe375f41e3d0a62cd6227db68996676697dd497e84c873a3bca87", "ref_doc_id": "85f9dfa3-4ade-454b-a540-c274d4d641e6"}, "bd9c4f22-07db-4cc9-a897-a53ee76c40a1": {"doc_hash": "bf1d523f3104af71d931988a8e07036316ecc9199f43b97d48c8480fe51fa2b9", "ref_doc_id": "85f9dfa3-4ade-454b-a540-c274d4d641e6"}, "a59b5e34-df5f-44e4-83cd-c4165de9c549": {"doc_hash": "5c9c7ce0207ef6e670b279f53e25080a44baaf095a66bacbb4fc2c4f7683ad7d", "ref_doc_id": "005cac5f-63f1-4329-bd14-bf4c1d14bac8"}, "3bedcf12-b7d8-4938-aaa3-d2f446635af3": {"doc_hash": "65c6046c71a5e2d3f6d3f541d232d886e94f0bbe089f1416a4b74e6936082e4a", "ref_doc_id": "005cac5f-63f1-4329-bd14-bf4c1d14bac8"}, "726e0c49-0b59-40ad-9c96-0b3c57174dc6": {"doc_hash": "6bfaf0a9fca0660ba34b134f11180d9f2e9bea1e8bed1a6603ab3a1f94774346", "ref_doc_id": "ecf0bf46-365a-4d32-940b-8b98806f0b9f"}, "311a55a8-3cbb-4871-bf3f-23300dfe6d47": {"doc_hash": "55cf6f1436da2b24526b736690255d07a2af5563dd7d1314bb9e2c1b44ad49d9", "ref_doc_id": "ecf0bf46-365a-4d32-940b-8b98806f0b9f"}, "022f9364-f283-4a7f-b167-be9813578e9d": {"doc_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "ref_doc_id": "38e7d198-eba4-4489-8ebb-dae71ccc6730"}, "da5122f3-eea0-4b8f-820a-c939b06b4e3c": {"doc_hash": "efe98b8982616d00a195346f56367cbb07926fd6809fcc5fa3264acc87e7188f", "ref_doc_id": "db76c7e8-cd2d-4130-8288-4f9c54a6ee34"}, "7355604c-0e5a-43f4-b0b2-9eb508684127": {"doc_hash": "c34a99d698ab7ab1316896bc4eb93c41cf7fa693b89a4a5f35a016931d1103b6", "ref_doc_id": "db76c7e8-cd2d-4130-8288-4f9c54a6ee34"}, "e887a8ad-7691-41a1-8dca-94b722e7aa09": {"doc_hash": "64a8b6588394715433b229671874f72e5e0fd29b15a9ed2a152fd628ed38b57f", "ref_doc_id": "577041ff-457e-4c28-bd16-e74c3aee7f3c"}, "e621e4d3-d309-41ed-ab3f-ee4d4f9955cb": {"doc_hash": "21194ba60b63db7113295a8a89129efd9d3c783c1244914b50cabd5d98a14704", "ref_doc_id": "a5e0ce9f-cd04-46b4-bb0a-b93bf280ebb4"}, "88fdf0f2-a725-4783-9110-3e40c3669795": {"doc_hash": "493a1af8bf5b3ff071bb5df9d894991b3556a79380954d8a84a772be492c0c23", "ref_doc_id": "a5e0ce9f-cd04-46b4-bb0a-b93bf280ebb4"}, "9ee80e67-aef8-4fc6-ae1c-a7b40fc112cf": {"doc_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "ref_doc_id": "cdd30fcd-23f3-468e-8d2f-103e7af8075b"}, "9dbb2f0c-66ed-4bae-85f8-a5e932ccbf89": {"doc_hash": "aa38e8d5a250a3bcfae8ec108ecfc8935d66d5ecfb6b2e1a20d1a7b286baca17", "ref_doc_id": "eeee4bdc-55da-4130-9662-30faac3aa84b"}, "756ba431-2558-4d80-88c6-7a5ea24eac4b": {"doc_hash": "848f21e3eb32d371f59854f18655852a21378e2d198669c4575e5585ca5f23c1", "ref_doc_id": "eeee4bdc-55da-4130-9662-30faac3aa84b"}, "3096652c-876d-4cdf-94b1-529906da4fd2": {"doc_hash": "30b27a8e1bd6cac7117aedaac5187b350730569c3ed481a6bfea76783919ddf6", "ref_doc_id": "cdb80dcb-8d36-4e81-b913-034b09a305a1"}, "b0fe874d-bab4-4996-883a-9af00870ca4f": {"doc_hash": "f8c18326a0edcbe41a57968f40a800a75883e1577aa68e8b889bb3ba11b0f339", "ref_doc_id": "cdb80dcb-8d36-4e81-b913-034b09a305a1"}, "ed467b30-910b-4258-b80d-d13ee540ad2f": {"doc_hash": "c18831115be443ffd8a69bc1652824123830eeeed5e89494050bc962feb5b367", "ref_doc_id": "cdb80dcb-8d36-4e81-b913-034b09a305a1"}, "8ee01ece-0013-4660-aa39-4ee207054ab3": {"doc_hash": "ae1193fd6a670f1d461562d29a5cd439bc955694c95ffa0af89d8f1d35ed1c52", "ref_doc_id": "9f8d873f-c784-4bd2-b80c-2e6f3698671a"}, "d20e16e7-4776-490b-bfff-b979d2efba56": {"doc_hash": "00ef332d3356992aab2522d4a01814d6bd52843f87689e78f21da6634e33daf8", "ref_doc_id": "9f8d873f-c784-4bd2-b80c-2e6f3698671a"}, "8e09e108-2cb1-4797-a4f9-85be41de69fd": {"doc_hash": "6b98615d2f37ac9669617303469e5af71372746a4dc39c5a156830597a1c5e1f", "ref_doc_id": "9ff126f6-ca37-41c6-a8e0-23a154c686f0"}, "505aee45-6d7c-43f4-a8f8-0591ab41db42": {"doc_hash": "f718529d05e857938466378e452d8c53e70894fe3be4044791b31c1be116eefa", "ref_doc_id": "9ff126f6-ca37-41c6-a8e0-23a154c686f0"}, "71f69050-730e-4585-b7ec-91b631cc6013": {"doc_hash": "54d627e0e69792253a0ba286cfbea0282fc3142596fde185d770516d3af2ab37", "ref_doc_id": "3021c611-ccba-41e4-ac04-8cc4afe5852b"}, "2b51d4c9-3562-4141-9364-938b08871f43": {"doc_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "ref_doc_id": "ba42d0d6-ee0a-45e9-be76-6fb2a50e1217"}, "9b6aa8b5-3d04-4c74-bea1-8ea87d0df106": {"doc_hash": "8c2b3330037c7a61f074cab26b419b5adb1bd30c21832a74a281c61f40e3986d", "ref_doc_id": "a1edffb2-ab7b-44e0-baec-cb6dcf469e7e"}, "1f6761b3-1396-4f87-967a-86fe5a800831": {"doc_hash": "386064bf99e1c4c934d28c68828d8dc536ecda11ea143d5c3171966d8fe4102a", "ref_doc_id": "e4629816-5cd7-450c-b8d3-7c1470af2147"}, "c664fe3b-366d-4a33-baad-199dd9564ce9": {"doc_hash": "0754d21b7cb44bb3cdd3a24bef83dfe955fae0a50c5b022987a247ac5dd56a27", "ref_doc_id": "0306128e-efeb-4c64-80bf-6cbf40e6bc9a"}, "0ead88ef-04fd-4932-8304-e950663a689a": {"doc_hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "ref_doc_id": "1a99632b-e21d-4473-9ae8-d74f9f4190b0"}, "ac7d6163-98cb-4ebf-a6cb-a84df519bc2d": {"doc_hash": "188816f8c4b004245e761af08fed37a9a7c5ef081b0b9989a6993900ad4a989c", "ref_doc_id": "7629df1e-27fe-4bd3-89b6-f358a730121a"}, "538f9528-7a59-493e-b2e2-6da54aad693f": {"doc_hash": "3624b3cef718bbe0e88b094d59eb1071fdd2dbec55b20ce9e617325c68cfb5a3", "ref_doc_id": "7629df1e-27fe-4bd3-89b6-f358a730121a"}, "f3b4b9a3-772b-4ea9-a711-417901f5d6be": {"doc_hash": "19d70c981bf6463f98203677b1c9ea8f62732b1c64829d9373c92928d0570698", "ref_doc_id": "b9e89939-c2c4-4d6e-b29d-28b46f51cb12"}, "2e41e407-3c87-4b0a-92d7-e0737c441714": {"doc_hash": "861593f8b5d8c99063ca06ec903895ac1c8b30772d51b2e5c8f7e57407b3915a", "ref_doc_id": "4be576b2-5a3d-4353-bb0b-b47b4214b883"}, "d96c0d0c-2053-4a92-95b1-f44b7c665ea4": {"doc_hash": "fd67616c56a079b898381b4bb09aeeed53e63540469c52bb29e25c1652a80962", "ref_doc_id": "4f54c988-2e34-453a-b05f-ca0774425df8"}, "56a31cc3-1edd-4203-8fbb-5acf354fffff": {"doc_hash": "4a46b3b544fe629d97ff18660591c920639df23d2a9fe449cfb598065b63c6fc", "ref_doc_id": "ed7a2859-0821-4472-81d2-26f82000540b"}, "a069426a-acf2-4aab-94bf-c58286c8e22d": {"doc_hash": "07e213b4a2742b1886f34d2eb46fee3f5ee080605b7ca73efea411b339f5b5a9", "ref_doc_id": "4dc33ac4-9a39-435e-b665-2eb7ea8889df"}, "aec30e33-f53b-4ecb-8e77-90e32e8ba2a6": {"doc_hash": "61f56d235a48c80a471ba5eb64c7550526e1de505cfbedf6fc64459ad51f3037", "ref_doc_id": "4dc33ac4-9a39-435e-b665-2eb7ea8889df"}, "a3f6117e-1944-411c-a2e8-217c78e81a76": {"doc_hash": "669b60a3c5e51ac6205d2aaf7e82b9060ecb4d10312b6a939fb5b44c5d7a6aaa", "ref_doc_id": "b37beb03-cf3b-413f-b7e0-76ee61fe6bea"}, "34bdbcc4-97dc-42c0-9d6d-717a510adfb8": {"doc_hash": "ce9e0e5f6413312c175b6d88ff21930b8cc81343374d5ac7e1cb638f501c0c0d", "ref_doc_id": "a91034b0-9840-4f89-b6c1-48ce44b3fc5d"}, "8622ec58-b503-4e90-9a84-d975df92864a": {"doc_hash": "605669602403de9fb4c2510f0ce440c6e7d1fd79b583d347d1a3647edfa7e62a", "ref_doc_id": "da2b88ce-56ac-444f-99b5-522e7f5653e9"}, "1d2c9222-398e-4bdd-817f-378d3b2c0770": {"doc_hash": "3760b27aa5349e53c9d41d88317bda3dbf638b366e64732002ceb6d6c2f46010", "ref_doc_id": "da2b88ce-56ac-444f-99b5-522e7f5653e9"}, "b7c34272-708f-4014-bad2-a97f260a1fe2": {"doc_hash": "5958defc4a44a5d41b8fc5a5c06f3529d09464a49dcf60c2dd8d7955870c68a5", "ref_doc_id": "c1a1c962-e3a0-4de3-9d33-2a640b06643f"}, "23b2ca84-bd68-4ef5-988c-81ea1d261771": {"doc_hash": "9286903a0225446f1c956f01e5e1dbbc77669923f167c88b819259fa5333690a", "ref_doc_id": "c1a1c962-e3a0-4de3-9d33-2a640b06643f"}, "f7bb8c8b-70dc-463d-96a5-9cdfefdae095": {"doc_hash": "8724aa5c4d2b48d3cb2c741c78c8a52454d0a607ffaeb0bfa464f587b79fdfc8", "ref_doc_id": "5f4a9738-5576-41e6-ab88-32f902f9e9ee"}, "0309751e-e8db-405d-8c01-22641380493b": {"doc_hash": "0b8c5e517652ecc99781bb76af61a6b6c467c2fcd0b11283b0ebaca8f1a298dc", "ref_doc_id": "5f4a9738-5576-41e6-ab88-32f902f9e9ee"}, "2d5602a8-3e70-4eac-9a44-9569edd02431": {"doc_hash": "62a935cc847ba9e900393d478621fa929d948cd5977c5ccd6eeb439a8bf58efb", "ref_doc_id": "953da057-f7db-4d8b-a8da-fdfae391a330"}, "88431954-6101-4392-b6c8-1479e2c77c98": {"doc_hash": "acc778ad44192b75855e2d0f0d9772cf2be6829d9f1365cdc486324f13561f41", "ref_doc_id": "19ef0b8a-7986-4a84-b3a7-76ab9055012e"}, "128b0061-9a19-4f0f-8456-2abdbd67e723": {"doc_hash": "1f2a9ee7d16d5a0c2f8f6431662051843591a5b86d84a1430ffcd9a3a1caae5a", "ref_doc_id": "19ef0b8a-7986-4a84-b3a7-76ab9055012e"}, "c1ada6aa-a0c1-4055-afdc-7c064d0c964f": {"doc_hash": "409b1ce970dbe93d3b587ab0a9439345eea7d00a9b440945b7eb97ae8c2ff5cb", "ref_doc_id": "955d2651-5599-46fa-acc3-98b49a170a77"}, "54277562-ccc3-4917-8e95-5649e276af66": {"doc_hash": "d457728932c9c0e0a3a5144de280c8fd660752b8ba0a8a005d604bcf0c2776e8", "ref_doc_id": "e17e0713-eec8-40c6-a8a8-86c50f7ed961"}, "6f6e554d-f47e-4a6a-84b8-b9cc3e30921d": {"doc_hash": "1be79c4046844475b233261110cea74c45b141a3160d6fa976533c455225f4f4", "ref_doc_id": "5c8555a0-32e3-4dd2-a344-1606f8aaae88"}, "3dea8d6d-0794-4480-b0e8-92ce783d2694": {"doc_hash": "31464dc98581ccfeaf5d19b891a4bf3040b85b5e004a77ab185d2ae914951301", "ref_doc_id": "5c8555a0-32e3-4dd2-a344-1606f8aaae88"}, "039ffc37-3908-47d8-bd4b-ee249b683b67": {"doc_hash": "bd52cd5b00a90eae0543fb37e1f69d852d759f64c36bd61ca89da38cb74ac281", "ref_doc_id": "73ed8557-e315-418b-8628-cce872a1a2f0"}, "63512fa8-7740-44b0-a242-605919796397": {"doc_hash": "305ba8c10f65a80b53e70ea85ec38314735b0a51e3f10aade55cffdcdde47300", "ref_doc_id": "fa26c4cd-dad6-4c67-b57b-bc16a431398d"}, "aaccb071-ef67-48b9-b2b2-44a42d6f4f40": {"doc_hash": "ded3c1816315053dd2448d45fe16fbce9a2c01c1422b0e888f6097597b752a06", "ref_doc_id": "0b274780-4c2b-40e1-9222-866fed636dde"}, "6dba0616-5af6-46f2-97a1-e16b0b2f128b": {"doc_hash": "49f828a9cd12bd634db11f48b9c6f5227468858b01da0d1f4e35b938ff9ca48d", "ref_doc_id": "0b274780-4c2b-40e1-9222-866fed636dde"}, "7820d590-e5b1-469d-9f06-ad875e17de5c": {"doc_hash": "777cc8c76ba209fbb2c4a31706c99c3640ee081b80eab0432a9035de99280ae2", "ref_doc_id": "7daa73ed-1725-4285-bc12-3783ed7be7e0"}, "96c2e0e0-7abf-4bdf-aa95-ad93599c03a6": {"doc_hash": "9957a6f9a52cc51739101f31803957937fc41f795b50c153f6e56d7416a4ee2e", "ref_doc_id": "7daa73ed-1725-4285-bc12-3783ed7be7e0"}, "dc8f26b9-4cf0-47ce-b4ff-f6fa18184bf2": {"doc_hash": "0bf8cbe38488475d149131192fc31e5349b4365d1b09025b51848913c5678540", "ref_doc_id": "427af184-71ad-40cc-8649-0ba87b243ee3"}, "3bfb0be2-da7e-4946-9082-db1fe4c58c18": {"doc_hash": "c3c72a61e85003e601eb6d243a0771a1c7f4d296c96ca400afd365f7e940cb1c", "ref_doc_id": "7714bb8c-1074-4e21-b7cb-515d58ec67a1"}, "aeed91a4-c919-46ba-bc33-39fd5a095e17": {"doc_hash": "a489314f717a83b6c3bab6730488f74793fb9ff26e33e794162511b498e58b03", "ref_doc_id": "04b9fd5f-1400-4c71-943d-945a9fc354a1"}, "1b97d644-5b3f-4ca8-9394-d57a40fcbe82": {"doc_hash": "19d68899e5d1d264257f3b32f8fd2a005442c5259064f85309b933c29a982c6b", "ref_doc_id": "14a9fabb-6cee-4223-a8c9-ac06eaaa63c6"}, "a42f7f01-ce19-4e6e-b90a-7a0fe6051288": {"doc_hash": "dd2442d8667724f38b305d0119c6da0e3dcc9737869fd3f18e459c8e981f9c7a", "ref_doc_id": "ebdfde79-ee74-4b68-8238-c6fd67a3a85a"}, "e7c805db-96ae-4490-8400-87b1c16cef85": {"doc_hash": "ca10fed9f79f4c0ce044fb3da6d51cdc0f2e270df9c58ee75e883130452cb950", "ref_doc_id": "e4773755-1f7c-4dc0-8af9-608bd8ad16a2"}, "0eaf5948-cbb7-4eb8-a851-3a7b758c3c66": {"doc_hash": "d392ffbff7dd2c6c4cd9e0da7b1a1ce120694b81ec939b2d6961b3b7e239e601", "ref_doc_id": "e4773755-1f7c-4dc0-8af9-608bd8ad16a2"}, "c1c3c7cf-e75f-4e99-a3b8-53f2f2652a05": {"doc_hash": "20ab94840f439ed9112eed21742c37e0077b26715b881fd99c6195cfce9f51c6", "ref_doc_id": "6bf77934-734b-4967-84dd-fb3ce0fafc2c"}, "879a7338-f96d-41fa-95d7-5228fc4f149f": {"doc_hash": "f186e4130e5b97e3eed0a87512d736c87beb74c6d1e86b6dd209c4a9ee5c5ba3", "ref_doc_id": "6bf77934-734b-4967-84dd-fb3ce0fafc2c"}, "31a9cc09-dbe6-4a85-b843-b545918c3bd3": {"doc_hash": "0aedfb4c85884ceac2ea77f65dd0fabfda04ebda5a1a6c5cdd888b7caf4a7f82", "ref_doc_id": "c8aca8ad-cbc5-4d10-bbae-317a5b7e56fe"}, "856e9e5b-8301-4098-82d7-f5b8ab74a990": {"doc_hash": "a0f977fc39f710a431c04cd5c9a313e3b05c57c28831bef8529836c9370ae39c", "ref_doc_id": "c8aca8ad-cbc5-4d10-bbae-317a5b7e56fe"}, "3e231298-9a83-4fd4-a5fe-6a3a8ac912b5": {"doc_hash": "a850224a99e4a1c71d23736f3b12ba8a0e8f55c2cc58c685e2ae7b4cb3211f0f", "ref_doc_id": "40dcc54e-286a-4a0c-9bc5-7d72f2ec130b"}, "72a02bf0-d968-4319-8272-41059a0a3509": {"doc_hash": "89f045f6d50289d53d81dea8dcce8a07adde7c8e125be8d7bcd0586ea7889318", "ref_doc_id": "dcf9d7ba-b366-48f0-be1b-8a5d3c4155e4"}, "d68edcc9-9a8b-4410-ad1e-f64dd472e84a": {"doc_hash": "4fa8e989aef9e2194a6016b36fb0a253f78ba9f191a0afbb7beedca771ff0863", "ref_doc_id": "b97e3d4a-2a72-437f-900e-bb76549e6f95"}, "f89d7ef1-bad6-40c9-994c-ce42fd89b793": {"doc_hash": "1a68a4f053e087dde154c515e68df97947f3a6a5a40d7d17f59a8a04b0aa4746", "ref_doc_id": "a31114dc-5953-408e-bc0d-1de11078072c"}, "2ac7930b-5f7f-429a-b256-b274b25a9345": {"doc_hash": "d3a04a5eb9c0147ed5dceedfd4bf365a9122b75022a7179980e7f3030eac7ccd", "ref_doc_id": "230895c4-2806-425d-a555-4bec9500a075"}, "b693fdc8-aaa3-4075-86c6-0a8f16106883": {"doc_hash": "27009828d110e3dbf37f1d30a455bd39ee7e9069053464da176ca1f9d4cf7511", "ref_doc_id": "b8d4d5a8-4071-49af-a172-af727dbb7b9e"}, "2417f347-513e-4391-9e25-5f77d62fde97": {"doc_hash": "61934ac0caf5a1b54852b28ab904b5a1105e3ee9b4a8311868fad93e021e4f4f", "ref_doc_id": "36bfd91e-65f9-46ce-92ca-a0397739a689"}, "43d180d3-66bf-45a7-a7c6-0a6c95aa9270": {"doc_hash": "f20c942e25bc9da99d931b47ff3f02028004ac688449c00041f5117ca7e0d838", "ref_doc_id": "86494091-718b-4367-a1be-21b30e258915"}, "e622ff48-27fb-45c7-8cd4-9e8b6b77fff5": {"doc_hash": "e17bb7965c32ffc092aa24a818f0cabc690c0def2a056dc2bdc50e2f206dbbd2", "ref_doc_id": "cddc73ef-a2f8-4584-809c-1e3d4fb3b981"}, "242b8446-3d02-4ab6-b744-1e76f0dda7f9": {"doc_hash": "bb86b1a7a0b157c1602cee53f53fdb85dbc5365c2daeb8ef1163e932285bad8e", "ref_doc_id": "c028ebb1-f2be-4ebf-b02e-6acf6f5fe978"}, "655be83c-b917-4767-935a-acca919fd820": {"doc_hash": "66c3631cdbb8e3d6a294ed161dcfbd92f16e44bbcd7788f8fc97384d52aa3d12", "ref_doc_id": "a9dd91f4-550d-465c-8ed9-f5f2abe19257"}, "06dc3abc-2bbd-480c-b718-de28e45ae610": {"doc_hash": "8f6bd7880ad77f4fc396f0cb82b96865615280b4384e5bee0028d33c93650d13", "ref_doc_id": "d4ebc4ad-d924-4820-9580-b1f0717b705a"}, "7e693d93-e902-4fdf-a0f9-7d1dd951b04e": {"doc_hash": "99c02388301da3665be4249e15007d28c218c49498daed11f2db24a71a6400e5", "ref_doc_id": "889d20d9-1497-44c9-9947-aab477630032"}, "097123db-8319-4309-ad66-64237b38a545": {"doc_hash": "313ea2f7e234c603c1f2613e847f209818cb29e4b00939e92e4e602958b84283", "ref_doc_id": "1cb8934b-b306-4ea6-a323-7627deb61a67"}, "c43bf933-3eae-4aa2-ab04-496d41c56932": {"doc_hash": "b3e1aee46ba88258ca4ea77297c749f4ce1eb4d7d9f42cf2500f7d2ab05fb128", "ref_doc_id": "a2f6c344-3c34-4864-8157-bd4922f9d099"}, "e56e2136-bb86-4e29-bf05-1a9414aeb5c6": {"doc_hash": "586c5a2e675a7f94148c325b723314c00499e8788a88fe5f3239f29ef3976df0", "ref_doc_id": "de7fbe80-78ac-43a6-8ea3-c88a162b1834"}, "a2286a6b-87a2-493a-a999-a7fc3b043368": {"doc_hash": "616ea8a69e39b83a66b2e018aeeb437fe06e05b73e1ed1dbf2b4f5ca5e29fcea", "ref_doc_id": "de7fbe80-78ac-43a6-8ea3-c88a162b1834"}, "b18378d4-8d21-4db1-96ca-5cca69c967a2": {"doc_hash": "0f7759301123cb13f9fa06cc3e04e971b898b5cde106d83dc674b35cc0980393", "ref_doc_id": "eca54a8e-1db1-4024-ae1b-b81f6aa140f6"}, "4b0d81d6-0502-4c0a-a614-91b4cf4d22b2": {"doc_hash": "76b2463c83bd05529fa87b4fba78c380035c67a343c304128d0872d2b02a9f7d", "ref_doc_id": "0edd5bf5-a398-4a79-b5bd-d225035cf251"}, "93d7e415-5d2a-4ab0-ba64-b0d52fee3e7f": {"doc_hash": "4cfc11167b2b210346a1d0cae27c2954150127169424afd53bbb1cfeacb00661", "ref_doc_id": "d088ffcf-8741-4646-93df-68c282c3ac67"}, "3140c27b-e824-4ae0-a4bc-4e1cbe93f1d6": {"doc_hash": "1d9747613e35d610ccc43f08c3bfeced3427e231001714300b3f26cc20748d17", "ref_doc_id": "5ae32cf5-293f-4d47-9534-00d2c197061f"}, "a03da2e5-1e6a-44c6-aca8-39335cb5ee42": {"doc_hash": "88efd017cc6a6e5cd9faf6649175deb484498dfcea0a65a4c5bdd592cfa16f91", "ref_doc_id": "19a2cde9-48d7-4b1a-a91c-f446f296dbb1"}, "0f61baa5-6c9e-4352-b14a-315bf956a64c": {"doc_hash": "e4f85e2c44cf4a75e32edcf2f2d7f921a6086bb221ca595d0badacb25f8cc870", "ref_doc_id": "efce34c4-dea4-4bb5-bb52-5c1adcbff233"}, "cce4c6bd-4079-485b-a0a8-896080eecf2c": {"doc_hash": "b6a98e8a77598e8454b95fd647d097083ce30ff0de5dcece7f31232fcc58198a", "ref_doc_id": "c119a010-f544-4fd4-ba6c-73887c6c85b2"}, "eb43d6d4-5f15-47a3-9291-f87b95931c4e": {"doc_hash": "34682f13e351dad8fb37ac001d7ef59c32307c3e90397f1bde70c6ef35c02b4b", "ref_doc_id": "bbe34053-568f-4dfc-aeb8-8a0b554d74d6"}, "afe994db-1348-4a38-a874-3875181a6ed9": {"doc_hash": "19521e72e1760c6a0b3591be9333781f0260e8280be735e1bbaec1799829cf24", "ref_doc_id": "bf7538f1-de7e-4b8f-88de-cba52c03f12b"}, "7412fe0f-f644-4c34-84f7-d70fd1174be1": {"doc_hash": "755193de755c2307d14237c13f96bacc4ec8f31edfd3c91f3b8d9e5418deeccc", "ref_doc_id": "bf7538f1-de7e-4b8f-88de-cba52c03f12b"}, "b0bf8df4-d6e2-4e32-b2e7-d886c5917347": {"doc_hash": "ec5713ac56830c9ad6a53c9e57c43a99aeda79d887734d7a548cc4cdb8fb684f", "ref_doc_id": "fd2a411c-7bc4-4813-9c70-55bb97b62103"}, "252b6170-6745-43a9-a6d2-99d2db096e3d": {"doc_hash": "7c0663d89999a2fb69084728ad271ebaccdd055a000220cbdd249afde6459427", "ref_doc_id": "46d520e9-6fb8-4ca4-ac8c-4a0e1c3baa6f"}, "fc7a11fa-ef4f-4075-b973-e883d4cc6d9c": {"doc_hash": "4e453e4f79ca9f860fd69f82e842272f96d91a0d487a7e765456c4d45a45405b", "ref_doc_id": "46d520e9-6fb8-4ca4-ac8c-4a0e1c3baa6f"}, "9209af47-af1a-4d70-a852-b5b269c1a101": {"doc_hash": "162ed620a04bdc1fde53cbc4e6fc6dc57cc7a97742f2e974bb72f14516d46644", "ref_doc_id": "70a4b2d2-3a64-4818-a46d-2bc0db2f746a"}, "8160ee55-b166-4e24-863a-b6e806df76d9": {"doc_hash": "f4c7eee1e2b2d803fe0ed851e340904c797f589854ce6115c53cbd374bf823b0", "ref_doc_id": "70a4b2d2-3a64-4818-a46d-2bc0db2f746a"}, "4b06c917-d0ac-44f2-a065-13dfd81935fb": {"doc_hash": "dda70a3168695688d72fc5c392095e137ea0754b6b05f1b0a186202a95c6bbf4", "ref_doc_id": "a975f660-f6e0-4e09-ba0f-ab457b6683e3"}, "35a02ef7-b7ac-4b02-b8ff-604ac4c7f9a0": {"doc_hash": "1785caa0d926081e78b48577773f407fd2434d079065bff3876e5b2ec64d3be8", "ref_doc_id": "f671dc41-e7fd-4954-913d-662b63c84e00"}, "28a72b9a-0c74-4660-8f27-8c1479db8b3c": {"doc_hash": "bf7fede5098ae17ef58de98f255e03cf5914e8272bb0cb7aed6c2e64c13416bf", "ref_doc_id": "845ceb00-1c22-46e8-b768-67349848d52f"}, "3ae6da1d-abf2-4078-8425-a0ae779a05c6": {"doc_hash": "04fd0f0bab15fa716b2d836f0c429b2809d4667b947a6db46b9e52ee2a65458e", "ref_doc_id": "6f3ed657-488f-4d3c-8d1b-4a625544cb31"}, "c591052a-2f17-41e1-8100-c5dbcd4012c7": {"doc_hash": "d8d15e4ce0cea7f58650b5d093b0317eea1609b7c34a825fb890906a7877bdfa", "ref_doc_id": "6f3ed657-488f-4d3c-8d1b-4a625544cb31"}, "3af92d02-1db6-4285-9cdf-ab136fa0741e": {"doc_hash": "9d1d905ffe88a5528569488b1840e436c1f78d6ef46b2d9df8d8da01ba8e979c", "ref_doc_id": "870fed0e-5c68-4223-9885-1785da4b3959"}, "6ec2c56b-1c40-4dc5-84e4-9b7a01c8c095": {"doc_hash": "8a920319bd5a7d8d30f50d57e1859b212dfa956bfcc0a5a7e9a07069b14f5961", "ref_doc_id": "e22f34f1-4930-4ccc-bb83-500ce89f4e83"}, "2e88878d-e413-473d-aeca-e4de18d50af2": {"doc_hash": "cb8485e03c3ab9900a7f339813e25045f054a64e636d6e81946c216bfafef197", "ref_doc_id": "e22f34f1-4930-4ccc-bb83-500ce89f4e83"}, "375645bf-a8fd-4caf-a1ed-a3f5566620ab": {"doc_hash": "9a33acd05c0a2253542f5d8b293ff003bb7b63ab05e374ffb819e1a14b933c8e", "ref_doc_id": "b5bf1b37-19c9-40a6-a086-7faff7a0e505"}, "b73da78c-f9be-4fc3-b68a-0fb8c4fc2e6e": {"doc_hash": "e2fcba3cee08f8dda441e7713af2b96bbef299624a27a5e8906bfaafb650ab61", "ref_doc_id": "58e7945b-8d0f-4633-ae74-b6233b8bc542"}, "0524568d-9d91-483f-b111-59730ea46463": {"doc_hash": "286e1a59d8286d76bf0cd445c4122dc7c693fe2fd69d94ccf9e9da57c4f4da8c", "ref_doc_id": "0ece548c-1254-4652-a107-98fd697ab686"}, "442c090e-2e35-4ffe-b5cf-6d270a1e9d2f": {"doc_hash": "2363468f9e5bc543318e4a8f4889a3f866037996714f1466f63cf2d1b5cb03dd", "ref_doc_id": "0ece548c-1254-4652-a107-98fd697ab686"}, "face4fca-aa51-4a08-8c44-3a7bb8d6cb11": {"doc_hash": "89996a13a7ef7d588a6227b8c88452c27414c3f5285c60d6dbca984369821b12", "ref_doc_id": "0ece548c-1254-4652-a107-98fd697ab686"}, "3b49fdc0-2932-4245-ab5b-7b38ae02e492": {"doc_hash": "25a6fb50b5e7d1519a2a7dd7bbb383d09240a5e013cad7222e4f1df854dcf875", "ref_doc_id": "d3aa2928-76eb-44ee-b6f3-a85d58cb7520"}, "44635f82-708b-4ccc-8e97-a43e73ef488d": {"doc_hash": "0fd903ef259f32bedfd753fcef619073f441db528630b4e117ca68b0e5598ce1", "ref_doc_id": "d3aa2928-76eb-44ee-b6f3-a85d58cb7520"}, "675c4e9f-1a58-46ee-ac8c-2d430c58e7a9": {"doc_hash": "e79dd98ea542a79162188d3c0c23bcf3d396933d248e0ef7475556b93e9145d8", "ref_doc_id": "d6c0ad75-a453-460a-b076-d7d6bbd05d77"}, "e7fdd825-2b50-447e-b170-6b4b22f4bbeb": {"doc_hash": "a5d4b308918f1914e0cded2e517933918f38fb1072de29fef18859574304dad5", "ref_doc_id": "7ad8b4cd-1c5a-4203-b5b2-62adb83bfbc3"}, "f3171e51-1b86-43fe-8a82-8cf190483158": {"doc_hash": "31c614223007d306703489fc20fdd62f7d0f9e27614dd4ffa48f9ca5352c9def", "ref_doc_id": "10532f87-49a0-423f-9cab-09016430586a"}, "944487ef-5318-4366-aabb-62abcff6e39b": {"doc_hash": "99140046e55bc872bbc878a73818a35a8af2e15274f9538046b981fa51874069", "ref_doc_id": "390f0fb4-1688-4bd4-b240-a6816598cf6e"}, "75291371-8dd7-404e-800b-d2892f33694c": {"doc_hash": "8b2d06e8e68ac97af33004cc2a9d52bb07808c4dedc92834fb568611162f430b", "ref_doc_id": "6951bcaa-d353-4940-bd6a-c12d82a6760d"}, "185869b5-a10c-4e9f-b13a-23d09a80dec2": {"doc_hash": "af556027e3370d47a1e79b48c12107d22f3b1d6cbad04e67c29ae13cf191892a", "ref_doc_id": "6d69e80c-d1b2-4f08-bda2-d46dfd02913f"}, "19fe51b2-7161-4148-a8f0-74a157acf1cf": {"doc_hash": "3eff318ef00460290122d2edd9a18b0120b21f9505db7aaf78bc16cba24b115e", "ref_doc_id": "6d69e80c-d1b2-4f08-bda2-d46dfd02913f"}, "d2f8da47-8256-4500-9f96-5d747cb6b966": {"doc_hash": "f3257aebbd586812a90d853a42b6ac505ca5054e41b672e52c328b69b3645d5f", "ref_doc_id": "79237b01-ea9b-4ae7-bcf0-1f92ff441c6a"}, "4ffbc115-6106-4d68-a0e7-cf4611b24444": {"doc_hash": "d70ad7505affac0cbd5ccdf70ea444309de4ad092465e26efc19dcc1391acf38", "ref_doc_id": "22bd62d2-7cd4-412c-a1de-00580193dd64"}, "c7444215-0971-4435-af37-fb4de5951160": {"doc_hash": "f7edaf7aed910d250a1aee627fbcda664b145254803c5619a78d8eed59fee9e2", "ref_doc_id": "22bd62d2-7cd4-412c-a1de-00580193dd64"}, "213a415a-a276-47d0-ac38-30f47c83f033": {"doc_hash": "c0cd82950423508e7b8e4838ed84e6abab9ea7688461fe64dc4b5990b7e19cab", "ref_doc_id": "0ab2dd62-e9a2-4d4c-9994-237ab61fed0f"}, "c7a37cad-4bbd-49f5-b9ce-50ed92213738": {"doc_hash": "a9b4e8577dae47acb415d008257852a77ec301c22acbd38bdbd667020defa388", "ref_doc_id": "fae9c19f-173d-425e-a5e3-21128e84eb04"}, "f3efcff1-54e3-4541-84c5-40cf7cf71496": {"doc_hash": "968fc8e84962281ad986cd2e6ae59f38cc22a2ed62da72d9919e31636de34851", "ref_doc_id": "16d2ae31-27ae-4464-b393-24ea2ca99a8c"}, "6055abb1-2af0-4cdf-a883-9bcf48a29d2d": {"doc_hash": "bf3edc59c326bbab0a0f0d1f01d3221d0fb1c9bd8842bdc724bf49d2bbad4d81", "ref_doc_id": "e68d3801-07c7-4186-aefa-43c158fa4bef"}, "394ee71a-5ba4-4f81-9d9d-cf6063ff0146": {"doc_hash": "5fbbe6ceef5bdcf6c349465cb4e0638176cca28ab7a8d55eada12c6cd616f272", "ref_doc_id": "e68d3801-07c7-4186-aefa-43c158fa4bef"}, "d17adbe1-9097-4c41-b185-60784484a701": {"doc_hash": "5ea997e57c15bcb7482ca82ae8ae43a2375097b822dbda1c5d2b0f6f7161ca3f", "ref_doc_id": "91616269-f156-4b41-83b6-334cb740ba00"}, "42cc9faa-6b16-4858-83cd-054778b257ce": {"doc_hash": "86b6bcd91965108b0ce3833c8044ce1d799cfddebc6d7e0ebd88940fb0c72b29", "ref_doc_id": "91616269-f156-4b41-83b6-334cb740ba00"}, "5784ce12-edfd-4bdc-aa57-c6c51e330d7a": {"doc_hash": "821335392387ae6c4fceacccd76268b19457dd1d71350be193cb46a95f0a3830", "ref_doc_id": "89494959-6a74-4cdb-8d60-27c591145bff"}, "e689585c-1f64-4238-a62e-6d170b8f8045": {"doc_hash": "87d2066d7e9a1eaf87dd5f31decad9b2550296486f64369915de0ed18aff9d1b", "ref_doc_id": "6390b09d-7a9f-41dd-9dc8-6790f77948e0"}, "a7ede0ab-2c76-489f-bf7f-75228f28f48a": {"doc_hash": "7d09fbc0c5b439d2c3bf332d0aaab0669696ea7c184a60456f350addf99c6e0f", "ref_doc_id": "6390b09d-7a9f-41dd-9dc8-6790f77948e0"}, "8c5839c8-6d76-49fa-813a-dd799094138d": {"doc_hash": "6c23cc7e3f8fbb849dc1875fb16a8eae23ac1cdb297da74ef34a45936ff4bda0", "ref_doc_id": "64055e18-de96-4163-812b-c130a5ec3f97"}, "5bf1f3e0-437b-445a-a921-c63e25efcfbb": {"doc_hash": "11bc5abc285f4b15b9a36d7170e1a2d6d8b1d5fb71e9ef99fc64c86ffddd2e06", "ref_doc_id": "64055e18-de96-4163-812b-c130a5ec3f97"}, "a2a20b0d-2b4f-4e9d-a28d-4ad6c7f14445": {"doc_hash": "5a744a71b1b1d5d14a811fd80440dc6907ff0145d54bb9257a98b03b01c7912f", "ref_doc_id": "4c60f5d5-686a-4713-98ec-18c385b0fcdf"}, "ad29cb5b-1bbc-4cc1-88df-ce425096dc7c": {"doc_hash": "516ca8c321c7adbd472493851ab71dd37e77ddf528278cecf2f0f4b755712528", "ref_doc_id": "4c60f5d5-686a-4713-98ec-18c385b0fcdf"}, "4b72ed29-52e0-49f6-b80e-a83a1c8b1f95": {"doc_hash": "c801191726b7881bcbca6b16a669a57294e88498cf15a75ce3ad6032353206e8", "ref_doc_id": "98e3775c-336e-40d0-aca9-9267146911b2"}, "116513dc-dbeb-4d58-b762-1a2161414b05": {"doc_hash": "a9d40656dea69d338cdee5ff42d1886914478e456f2fcd1e99671329d62483d3", "ref_doc_id": "457ffbe3-3e00-4da3-88dc-243bcbd41275"}, "a7b1f719-6abd-41cb-b279-2abc432f9b5a": {"doc_hash": "b8291ab78e01c1a0f72251daba68aa1808df3e14bd44c1632d52d6a478160cc1", "ref_doc_id": "457ffbe3-3e00-4da3-88dc-243bcbd41275"}, "d68cfb5f-7efa-480b-a4d2-8c15bcdd168c": {"doc_hash": "33451699df266818edc6e2d81f33b987e3a7dfb6dd72d9b8d0c4607e1be77320", "ref_doc_id": "68a8ba39-3ef1-4d1b-a13e-b481f1d4936d"}, "4ff7c25b-4f41-4f51-9f1a-12fe9eb8b7d7": {"doc_hash": "7edc1463f0ca96462c6b743f2193365104777ac3433a2f7a6f566e612a112aa1", "ref_doc_id": "ecde64cb-a89e-4c04-8185-09ad19da898b"}, "9264b3b4-dab2-4858-96b9-251bd0dd0246": {"doc_hash": "ce2e9b97662bd65ab5d5e8c9cda0d6911e21f18f7ec117338467eee6c17fc7da", "ref_doc_id": "ecde64cb-a89e-4c04-8185-09ad19da898b"}, "7e2a721b-1a23-4ce7-aaeb-c8fabb425281": {"doc_hash": "e7e982f01aa66affa61371538af34df3be4b1e1c643773045afe35316e5b1435", "ref_doc_id": "234aaad4-09a4-4d88-97af-dbd97c86e4e3"}, "769353a5-dc92-48a2-a6bb-fc6309adbca4": {"doc_hash": "9598bd3519b07c93460e657077a965c1bab0ea9b865f5aa78550e38d5fbb0af2", "ref_doc_id": "567da195-2ad4-4189-83f6-b73350f940d3"}, "50564783-8235-44ef-93f3-dda05eddd918": {"doc_hash": "23c4075317a004e2877de5cf832c9d8cacc8758d0f84152d8114daf47437686b", "ref_doc_id": "bac1257e-0af7-4c9d-988f-82068bb8ff49"}, "0efc3d88-1885-4f7d-9c4b-c458d7d3db1e": {"doc_hash": "d1f84dbe5598c9dcb454105c09c9242086b79b1a4874e10e1fc4edadfeb12b80", "ref_doc_id": "6966c548-c3cd-4309-a234-69bd01b95b87"}, "838eee69-2173-403d-901b-447816fbb51c": {"doc_hash": "3f8457fc781ebb718edf418097086ddea3a607b5ed45d8f2dd99bf95f2343683", "ref_doc_id": "700b8d2d-5f6f-4c43-90a6-43b2e4f6905f"}, "8556b216-ea12-4405-8342-450aa7887a6f": {"doc_hash": "badf18a5c9699f6560b46b42f88875b2125766c5ec3d9f7be24a7efc8e50436d", "ref_doc_id": "a2f65be8-0f8c-4f11-9f5a-8a182932931c"}, "ea4531e4-002b-4cc9-84b7-410f18efe3d2": {"doc_hash": "995e81f9cac531fd563437aa10d906913263282df01f185439ca61d5e5c00036", "ref_doc_id": "a6e73269-10de-4578-9da6-6919c78b9d16"}, "0ab45e77-f50c-4e00-8e50-ed2b71eecf99": {"doc_hash": "bf134c291c78603e54573d31a7456c5e769832ed722dd7503e2d6ce6c54b2fbc", "ref_doc_id": "64ec1232-3291-48ab-a464-c42f4699ac6e"}, "ad193005-485e-4e29-96a4-491fdd35dfea": {"doc_hash": "73b550f11a3355372fb7495fc0a0cb74c77217a154e4da5905ecd773d24a205b", "ref_doc_id": "b972e0ab-89a7-4a7d-9ee7-da95b0db0dec"}, "977f82db-4052-4a02-9f02-3d48581e67cc": {"doc_hash": "f7a632617885f6cbf065a198489c34ab21808539f2304d763ba2394d861b7a5d", "ref_doc_id": "6c178835-ea83-4d07-912d-79b6cf059cba"}, "1040b630-cbe0-4d2a-94db-c3b263f95c37": {"doc_hash": "b2dad346fdb82688f43f9d40e6c1e4c18aab9e1a549b0cb655a1082755f6ed35", "ref_doc_id": "a67f4fc2-685f-4192-96d8-98c8069d925d"}, "e5ed18b2-28a0-495e-8b65-6e98f2228c4a": {"doc_hash": "a99ef654a6604542d44cbf26e529c9f9c0f1027f6b9de02173b5261c3f6a346e", "ref_doc_id": "a67f4fc2-685f-4192-96d8-98c8069d925d"}, "c8fc00fe-e84c-481e-a7d4-25bf3a733e33": {"doc_hash": "aaa53f24b71ae6d5f1254a6a11ce6aa5d7a321a204cdcb285bc5205a9d5b4f70", "ref_doc_id": "e30d8ba2-8b1b-4636-ad4c-1de448534ed1"}, "323e4f66-5874-49d9-be31-72e3c95af2d8": {"doc_hash": "e514bc70ca9baef416fae484ab6fbe9c3b1445645e0f9645d2f51c6327b06fe0", "ref_doc_id": "e30d8ba2-8b1b-4636-ad4c-1de448534ed1"}, "cf04fc64-6c4f-4472-9733-c7f4f137b5f8": {"doc_hash": "036648ef5f5cfb48388277badf10addd3025a6f0d3863945ae5f2a9f560b9c82", "ref_doc_id": "d2cf7473-a863-4f51-b591-50276ab9f6db"}, "f06ebad7-e3b4-414b-bc32-1afd2fa78f2b": {"doc_hash": "d66aa0f0a53be317d76275d33283906c7118d2730f68b9f248a06280acba17f9", "ref_doc_id": "a828857b-34c1-4414-a711-577a900dc233"}, "7d4d11d4-994f-4c71-af58-ce72ecc7adc8": {"doc_hash": "b6e0e20a3e6cf0d1eaa551f8f00d818cf413085d0439349fbee855bc47beb219", "ref_doc_id": "a828857b-34c1-4414-a711-577a900dc233"}, "585b52c7-3ad6-4145-816f-9936b1e2ae2c": {"doc_hash": "6d0d3f9dce5846d935520bbc3a9d976e0635252a5d147623e1d9ccc19093c202", "ref_doc_id": "5e1fa239-18f8-4d19-96a7-bdfc9c1eee60"}, "7ee1ca9d-8f97-4a50-9ae2-326fecca49fc": {"doc_hash": "5b9cee5213afd38b5a174c569128949ab745c087cbfbe8407183bc6e05d42f9b", "ref_doc_id": "d9d78de3-3142-4940-9111-304069374948"}, "2b80d02e-3acc-4aec-a4f6-fc6dcee5212d": {"doc_hash": "59cea2c36ef1532cf5ca61a013361495aacbebe76fe18ec7d09322f4c30a13bc", "ref_doc_id": "6350d9ad-cdeb-45c2-96f9-3f7960333f83"}, "8535e12e-d74f-45ba-b907-536b1a1c65c9": {"doc_hash": "00044eb0823da5889481240e53c69c2189d71c37b02b7fdd9bd4d673027bdfbc", "ref_doc_id": "16afd148-6c54-4664-bf37-65a82b515bab"}, "52bb2a95-fd18-4ef5-abb6-0fe176a21fee": {"doc_hash": "b6e9179dde65c80d26fd7b8a4aca74d7534f5e0bf32d12874c3914dcf5687abb", "ref_doc_id": "e7f67a0a-a134-4ef1-ab79-4a26a38e9066"}, "e5b36131-b13b-4305-84e6-df71a137e93f": {"doc_hash": "55e8313b803acb549d09f25f25b50ad7e3ea129471315dc48c72be5748c6005b", "ref_doc_id": "e72a25e3-5f06-4283-893d-7e6d16d6ef96"}, "14c3a972-1adb-42fc-9b15-6d84f600cd0b": {"doc_hash": "2a2e7c3eb807d522b5a1dd2d072ba6ce7ad04961005aa246856bd4b68bbdde9d", "ref_doc_id": "b45bdd31-0df5-4a22-926b-af65315a0d01"}, "d630e019-20f3-4d3c-a085-13210a7fbf98": {"doc_hash": "b2e644d66a5d985a6b06266fbb613c806aeeb93cb71727e4e4d425577722f001", "ref_doc_id": "5084c12c-3adf-4409-a4d2-c17e4728019e"}, "204b500d-e974-41f9-9d93-4004f3e6057b": {"doc_hash": "c86407ea79c888d7e581793b3be4fc0fada22a37d69f3f61866df284229e805d", "ref_doc_id": "f675e1a7-f2e1-4ffa-9d4d-fff755221d21"}, "f327e1a3-c7eb-463b-bb92-e760be1ef9ea": {"doc_hash": "d13e02b0dd3a5130ce1bfa0f8806a67bfc39f4a93335e57762f6c254bf12cf73", "ref_doc_id": "92922613-6405-4107-b763-a7ed65cf5968"}, "4053998a-802c-4ccc-9bf9-c53f5f81cf9e": {"doc_hash": "a7b3d8b479ec105148beee60252cab02effd839d421cfecbad4659cee94d4943", "ref_doc_id": "92922613-6405-4107-b763-a7ed65cf5968"}, "859a8c9e-ba22-4c3d-a54c-4af41b194ba1": {"doc_hash": "4cc6fe1793df07282d4969c562642816755e50b0c3dcc2b73c5f025bd2114251", "ref_doc_id": "f9ba861b-e745-4af4-a419-243434443849"}, "3f4356e7-6290-42c7-a88a-8ea0a134cdea": {"doc_hash": "d614501e72ac7402ef21439f855bfadb205caf60db0c96243587648aa5e59237", "ref_doc_id": "615c9b3b-f682-4ffa-a231-a8ac900ec143"}, "aa177698-a681-4f70-9843-02b32bfd00a0": {"doc_hash": "8e1f9a14f5d7b9a60ff79ef0f94e851e4143772a3cb431f4369eda7f47448c8e", "ref_doc_id": "118cf916-4848-4119-a7ad-6faa24c4585c"}, "95723fce-7598-4d2b-9960-8b69aeb03981": {"doc_hash": "50c08ef8d91df03db9c4357d0fac3abb798e095c3a84ee0d77d459d59d6c839d", "ref_doc_id": "62a18152-1752-4e69-bedb-9158aa52c972"}, "67bbb77c-c601-4fb0-9fdd-36c4f2a56f81": {"doc_hash": "3b0534680ef085e62c60b698a7bfaeb0a2f319c517c54a44e4e2a29a6979564f", "ref_doc_id": "b27c6276-3acf-4a64-af02-44abdfe5a7fd"}, "82771733-a644-4f63-a6da-8e7c7c9e889b": {"doc_hash": "b55ff2788c17a76434a73674a784e4fc96d8a32c9dd4f4c3abdbef0c0ce3b24a", "ref_doc_id": "98edb035-5e38-47d8-abc0-1d064ae2dfdb"}, "c3833b86-dfb9-47ea-a0d4-f6c3674c0d46": {"doc_hash": "5572081f226ec8bd22a95bf22176bbd1be14bcc293ac6864fd5db8a4f070260b", "ref_doc_id": "848502e6-3271-4195-88d0-a381bb3e866b"}, "43923c40-859b-444a-b259-a0741e2f67c8": {"doc_hash": "3ac77dac0c8348f5e4e7cd71ba3183ab2251b0efebc624217240fc388f167639", "ref_doc_id": "afc8ea44-63bc-4b8b-ab04-003c6c7ab056"}, "e3845fbb-a953-45cd-92a0-5b61092cdf89": {"doc_hash": "c04f791114b0746435e6d925f586d199975f303c4722c2545e476ac7f11c3ad4", "ref_doc_id": "e82a4b96-fe23-4c4f-9527-132217b21b1b"}, "dd013e1e-77d8-481a-811c-aca184032f76": {"doc_hash": "e1c29ec987bc8a3aa3fa6277cfaeb0b28ee2a08755f20175cc0a6f445f781b79", "ref_doc_id": "2149ec21-ef1c-449b-b490-5ad4b06d92f0"}, "021056e6-8d30-4637-bff3-cd0bf2be5663": {"doc_hash": "f9df3f7b5b0eff4b79dae3e803f039d3624583b29649930ff600e5f3fc64f2fe", "ref_doc_id": "76a109d9-854e-4885-b2ee-9419c2a34b4b"}, "d5250742-d59a-4381-8022-1cc417f5f412": {"doc_hash": "8a7324618feacc796479cb6cd859da98741028cc0622ba4ac367d2ab38cecf60", "ref_doc_id": "330269f8-9185-4529-8658-1052855ce5c2"}, "8e8644c6-5705-4165-a1c2-49f66959d8ee": {"doc_hash": "8bec007c5b93bd9d77ae919c921d054e8b9c26745aefc5f0c01328bbe10ca103", "ref_doc_id": "958f3714-453b-443d-b0e3-e38fee332f76"}, "34eaceed-cb7b-49fe-9d2d-c695f4e8e993": {"doc_hash": "fed846c8b28b3998d5ecf75639ef5ca7954e3c8383f342065936bb807ea1a01b", "ref_doc_id": "953acc30-bd77-483f-a19a-3154e267269c"}, "e2622b50-078f-4f7f-99b5-7747636fc861": {"doc_hash": "9ee656ee973f1b09bad052399ce7017d8a49263149d9f6bf3787124538f6c4a4", "ref_doc_id": "8c8e0a3c-6db3-4931-a853-5020f7e86020"}, "272d07f4-8115-4401-9fa4-9a13b9436d24": {"doc_hash": "8ec53bdfdc5db1d102c9399d832c799931e25ec9c1d187eb65562cca54f2d44e", "ref_doc_id": "1aca0ac0-ac89-4636-b7a0-773658c0f2a3"}, "88f4cece-34a9-4b3d-ace8-2a9ea14e7ce8": {"doc_hash": "389c754955a4fad671823fe03cd1d269145bb5719c0d032cb0f008fd1c24fc40", "ref_doc_id": "94e52ed0-36a1-4ec6-9fc2-f3a710d3b530"}, "641d848a-d1aa-4423-862a-24830baeca26": {"doc_hash": "fa6587788d3b382050b595d5b72f46fa894b8a8154c403ccc5bd4788bc3dcab5", "ref_doc_id": "34f57a5b-285f-4ce0-89a7-b3f7b04fe1e8"}, "ed3805a5-c060-4ad6-8116-c3d5433b951c": {"doc_hash": "a9dbb90bcad64bfaf657b7843c6ce3010a9b721748d1280f95b1bc0dfc609a2d", "ref_doc_id": "34f57a5b-285f-4ce0-89a7-b3f7b04fe1e8"}, "080219ba-e4dc-46f6-9747-bb6f86d02b29": {"doc_hash": "5ccf2196179d40783bb346017db74bc6c26944ccf360e2f7b8a800d39207e70e", "ref_doc_id": "e297ff0c-2cf0-43e6-9fdb-65bc6423cd92"}, "51675fd1-a70d-46ba-b70b-d3af98198c03": {"doc_hash": "75fbf406d9577fa3fe708d6bc55df51da1f4d9e3f73eb72379e4592bf5a67ca6", "ref_doc_id": "0e5bbb2d-80b8-4931-93ea-16ae758f10a4"}, "c93bcf80-0742-4648-bb8e-bde29076ec30": {"doc_hash": "186b67604ba138ae02409a8b034af4a2039be753c5f221ec8083d5b715e6e2e0", "ref_doc_id": "34598745-1e6c-4547-b298-0c68d892b481"}, "deeda100-7be1-4751-8265-6bbeae4d8a2c": {"doc_hash": "b1f8164f65f03141d5169bfbcd7a36b4849a4ac435cd6670914a1baa53402f72", "ref_doc_id": "9b1c7e72-53b5-4514-91a7-6716325ec7aa"}, "321d588a-4b1a-4205-b406-93d0dc052462": {"doc_hash": "c6464dfe7d22e1aad89d15ccba799d7943961c6a0ab48b05506e2faba157652b", "ref_doc_id": "e4394c03-f508-4552-b0fa-edaac16f5c94"}, "675b2482-638a-4c03-82de-f05568353214": {"doc_hash": "7bf23a5749cc37b6a72a0c2ab7b32aa5222e02fb1c0460aca0bc81de157dfa71", "ref_doc_id": "0dd59eb0-b18b-44fe-804b-80d77f2981ff"}, "50c16ccf-38b5-4719-bfc4-ca95586b8fec": {"doc_hash": "b3380d07f0a10d767828816b2093b39575e7fa3617049ddf1bd90c713c3d6480", "ref_doc_id": "4ad41de1-c652-4d0a-b799-33188c7d7fc2"}, "7826483e-d8a2-4b1d-bdcc-55d6d3fa18d1": {"doc_hash": "ef0f55c59c34dad8687a0317f0b453c4bb23b852bcef6e0952de737aa0f1d6c1", "ref_doc_id": "e859d7fe-f1c0-48b6-b1bc-7e19cf7996e8"}, "776b472c-31a9-4b56-8604-aa2546b6752d": {"doc_hash": "0299aaaf0d6f20a8ad0a4baa32d7effe763ad4f4b4e19a2993e09941f9ffb9c9", "ref_doc_id": "16a578be-947e-41c0-9078-6e4f2f1a0b60"}, "83aa8f39-6e5b-47c3-806c-6fc2a65007ff": {"doc_hash": "1687dfa3013a64decf0648fc3f8dd36d0a50a9815d35484348ad771901a5a0f7", "ref_doc_id": "3ce35ae3-c7c0-4b7d-af82-4bc42cef8c68"}, "dd19e4f4-6bc5-44b0-92b7-8dc7314a6642": {"doc_hash": "ebe7e696094ff68eeef2c031bd29814b7d212ac61bd7b8a598fb76f98ab4c64a", "ref_doc_id": "b7f2bdb7-07f1-4d3c-803f-675176c3cc0f"}, "509897ce-3b58-4df7-8a03-bab6687fa2b4": {"doc_hash": "26d41c19dffc40206aa1dd86288088f0b38c2213901156339732328e52d2bce5", "ref_doc_id": "92df0a1b-3074-4cf1-9ae9-f2a87ef8d11b"}, "614e4809-8025-4762-ba4f-71b7cd475d0a": {"doc_hash": "ec5beab9a609908dfed91a4dde3e163f1b0fa92fa2d0973a47075801b89e9b38", "ref_doc_id": "b730dcac-3444-434c-a56c-86157f3b8f57"}, "d09d8c5d-5488-4f7d-849e-01d22a3eed8f": {"doc_hash": "041d8f140c17004a99c9dc55b513cf3a9ef9f611d842584f7c199f3d83e871bc", "ref_doc_id": "b730dcac-3444-434c-a56c-86157f3b8f57"}, "c0466bad-6bfb-4fb8-a0e1-181746573d3f": {"doc_hash": "f019b4a061889f3bd627d7196143cb91ce8201ba2de2f80379f8194a9da8e44b", "ref_doc_id": "2017215e-1489-40fa-a06a-a204ae0d3942"}, "3785552a-6eb2-43a4-a038-822e62bacb80": {"doc_hash": "4ba7ff56f5157d65a9c327021d09b72f296b76809eb51d3bbd9e3f0b18af81af", "ref_doc_id": "2017215e-1489-40fa-a06a-a204ae0d3942"}, "3dcf76fa-dc60-435e-a546-a3638e14d47c": {"doc_hash": "60fc85024c00bb7eba582012ca039b4bde4fc5a9886ef20bdd4b6fbd492922e5", "ref_doc_id": "a3ffd28c-3bdc-42ec-8164-a8c5e6d79016"}, "920776a0-3d2f-4aec-b222-fe318268414a": {"doc_hash": "7fc0c9499ae1d7a9c7f7d394c9449c6dfa3410c36ec6cb1e302cc0ac13671f92", "ref_doc_id": "ba01fa1b-bca1-4cf8-8f08-90b2012b8d0a"}, "68b0b680-b951-415e-8f11-4fbb608beb15": {"doc_hash": "16ac17391511660cf32f2030b191e7587759704065e8a254461a8a0f378cefe3", "ref_doc_id": "75d9475c-c5dc-417f-808d-417f66623b0e"}, "ae6987d4-33e5-4c3f-bc2e-e1aa111f49a4": {"doc_hash": "50b0185e577e459f50fb18ad04dc5ea0466fa91104785b80a6495c4efdc824e0", "ref_doc_id": "de178844-90cf-4dc9-a03d-652283c9854e"}, "0eac418c-cf1b-444a-a257-f38600ae334f": {"doc_hash": "c71afa8fe32ae31e5a5c24878a75bd647dbb3a5353e2ee1f51971d1fc22e6060", "ref_doc_id": "dab23684-10a7-4351-8e2a-fc8a0b2e10d6"}, "19d9937d-cf0a-4075-b0a1-9b4ba4df16c2": {"doc_hash": "8c298cf7c08b2ea2008f8d42df603cb2bc244587fe6a290dc083508f6bd228e6", "ref_doc_id": "dab23684-10a7-4351-8e2a-fc8a0b2e10d6"}, "ff08296f-4291-47e9-b397-92ed6eb13be8": {"doc_hash": "0a0b2d8d7dc5edc313e9bc1f400624d125f30760115d7d22a3b57d788f479d0b", "ref_doc_id": "ed285ee3-bfc0-474f-9787-754db0c9274a"}, "06ca22ca-aa92-4e8a-9bd8-f285a975d809": {"doc_hash": "765e09e538b3b5e703ca55e4e7470bb707799978804cd458aa41821f6db85dd9", "ref_doc_id": "ed285ee3-bfc0-474f-9787-754db0c9274a"}, "47e8ef7d-9097-45f8-9b4b-bdad0f8bfccd": {"doc_hash": "3a6a26b7b60a311357cd53cd7f7128db4f8a8ee630483234fea7190141547e8f", "ref_doc_id": "cc430645-b670-4995-8983-2db599be3dce"}, "7667e828-218f-4306-83b0-cfa81b067792": {"doc_hash": "26c26a9ff9b032194f119e910c990ffa9ccd4f9b7b9facc76266fff6a32a7255", "ref_doc_id": "cc430645-b670-4995-8983-2db599be3dce"}, "155d0ac7-9de6-43aa-ac9c-1f0e02bf292b": {"doc_hash": "725ba9ba6c65d091036cb3e5dbc73a9642524550f834d81d5cca004bb77080fa", "ref_doc_id": "9a730fb6-826c-40d4-9ac1-ca1c8e0d0ea8"}, "aba371cd-e0a8-4df7-a937-664abfd674a8": {"doc_hash": "2278bb237240f16da55dcdd994cf1d9d086ca5c9d1f2d81abab4a3460d55e4b4", "ref_doc_id": "9a730fb6-826c-40d4-9ac1-ca1c8e0d0ea8"}, "96b9d787-bdd7-46d8-bdca-85349c28bbe2": {"doc_hash": "6fe43cc3273649b6000d1a7c751eee4a17d73f0243de67b53bc9f59338031d57", "ref_doc_id": "a5b8f2e7-ef11-455b-9206-21a45319ded8"}, "077679e8-f39e-40cf-8613-34e9043449dd": {"doc_hash": "37874a0110216c6761895b264d5a9759bd28dad0f7f9b00914c5fb54358b403d", "ref_doc_id": "a5b8f2e7-ef11-455b-9206-21a45319ded8"}, "8d1f7d63-434b-4a56-9783-54454ed95058": {"doc_hash": "e16043ebe83b2f730d2bb17d90f528ba22e80ccb882cccad99e9b9421bb413eb", "ref_doc_id": "2e7dd01f-57c2-465d-90da-b79959e0c07a"}, "bd94f597-0eee-4b67-9a2e-ac591b254220": {"doc_hash": "6adb1ba9d577700159edba9e10740dbc20366bb34e00c4d76a39d66bd9b27779", "ref_doc_id": "1eaba30c-1b5a-45b9-8fae-ed76cef6f5a1"}, "910a0527-ce94-482b-a0f0-959c52cab568": {"doc_hash": "d12d094d86e368a2e31373b22d22e9ca9b1ead3eb5144ea2f4f7730938784a53", "ref_doc_id": "1eaba30c-1b5a-45b9-8fae-ed76cef6f5a1"}, "588825c6-b4cc-4a72-9b8e-bf60c8e702dc": {"doc_hash": "f970bb10b3c0b73c101c116e48c2328cf49eaf2ac4ef905569071effebf38529", "ref_doc_id": "2a6b3dea-a28b-4946-acca-276eeda39edd"}, "ebaf7165-9e36-4b3a-8ff3-478627f070c6": {"doc_hash": "62622e125ba360c7f76f651c63e4a393e69f3b2782bac92f48d0b6076bbf2480", "ref_doc_id": "23e82263-d8ae-4313-9ef9-ad0e362e3a4c"}, "4764cc15-e199-440b-9d13-442af4555fc7": {"doc_hash": "e2604eb4d6742b45db06def4d66e1a78e632b2bcde307564375e5c363f448eb7", "ref_doc_id": "d2cf115d-cbc9-44e9-8da0-a96e31a62eae"}, "dcb7246a-9d5e-4fb9-a68d-5bafe0be78b1": {"doc_hash": "a7c74e2da819bc1d012ce2625731916edad804ca0159a42ecd84d0b7aae4c9c2", "ref_doc_id": "d2cf115d-cbc9-44e9-8da0-a96e31a62eae"}, "4636c9ae-2489-4a5b-aabe-d30b08377e43": {"doc_hash": "5059cd2043b2a5a0502cbdce0608204499e70994853977b171fca922246f9579", "ref_doc_id": "4424dd13-f9c3-4566-b6f1-1efbf04d9e7a"}, "334fc59a-750c-4ffe-b29a-d2070f4c4fdc": {"doc_hash": "b1a125a1d29dc154ac67372e6493a09cbb2df462aa765ff09c399c49cc54cf7a", "ref_doc_id": "d189ee29-7b6f-4b98-afa4-291dd4e073d0"}, "f7dec049-8f94-439a-8339-b7237f79ba33": {"doc_hash": "3f8600d40382b2d3f00ef46f32f0c1a33ebdd68505d7ab885ebb58c3a8781b83", "ref_doc_id": "868ec625-74ea-4462-8d1d-a280cbee093a"}, "63a5ba90-391e-4bd9-a517-5da8299f17b8": {"doc_hash": "1a12479db3e0be1a4fa737330a8ff1ba41cd071a217c83a2e28db3f021764819", "ref_doc_id": "a61cd69f-4267-4d1b-8b0e-681dc64e8338"}, "967b27a6-3a14-4439-95b8-53e80d4f3823": {"doc_hash": "dbaef84e254d4e9e262f4cb7581c6acf44afe61f80e8416bb77f82500579f7b0", "ref_doc_id": "74b23be7-e109-4669-ae9f-1cbfb86c2a96"}, "0d3c028e-f142-4b05-9734-79f650fbec26": {"doc_hash": "462f871b9e62428a470b90264be13a4f70ce0a8969179db16e2808b311172195", "ref_doc_id": "74b23be7-e109-4669-ae9f-1cbfb86c2a96"}, "8446aabe-ac27-4b3a-99e7-bffe09d5c25e": {"doc_hash": "d07edd3f09ec926a43cd61879421d8b2c1f27ec6285312630aa410aa01266b7a", "ref_doc_id": "35380de1-3534-460e-b57b-8a03885b1ebc"}, "988ef22a-7d04-48e8-b63e-9e45f3051278": {"doc_hash": "6b601ab11060742ecbddc60ca8959656f225a9cb4fbd7e55c09db3654d9fe618", "ref_doc_id": "be13b912-d1da-4fde-b513-8d3025a4b454"}, "80959e95-602a-4534-97ca-b9fe3f7b6407": {"doc_hash": "67b121a416482f5abebc31429ab6f31859973a126c39b5df58c5f933c9e02a9c", "ref_doc_id": "15abc1b8-e52c-4d8e-aee8-3886bee9417e"}, "36b86b4f-55a8-42bb-98d0-bbbd6f6776db": {"doc_hash": "0f2cb3ae7225f90a2e58a4c167ef2dd17c8576b3f4ef9e94136ee2c44ed602cf", "ref_doc_id": "15abc1b8-e52c-4d8e-aee8-3886bee9417e"}, "8d56cd29-f7e9-40ac-b5af-c14139405961": {"doc_hash": "4d7184fa077ded27b9ea68f643bcf83273b0bc122287a43f67e9032185a75262", "ref_doc_id": "736d6892-2b96-422c-a160-9b121fafabd1"}, "473f3fa4-50b9-4d45-ba53-05bccba36a90": {"doc_hash": "cda73641e6548e1556e6544a688ab101d95c6713091a618df96a9d034efe054a", "ref_doc_id": "26e57395-6c49-4723-a8b8-4b5734f39f98"}, "e730f6f2-ced1-4c05-867e-289539715639": {"doc_hash": "f5fe37ca51f670a4188c364fd238b4e6a21b4104c53c4838417d59cc48f2ffe9", "ref_doc_id": "8ba8ce27-5617-406e-9ff2-e9a4abf4ae94"}, "d565c92c-89cd-4c27-b890-e7dab579a0d9": {"doc_hash": "393d663229be00be573f021626ed0cfb0ed350d1bd3c51d334b83002cc3601ac", "ref_doc_id": "676b9552-94f4-4fcb-a980-953013d5451e"}, "98340ff5-2980-4641-b4fe-74d15f7af169": {"doc_hash": "630ea4f2fef5c1ec8de4364e7c7a80fc4e4f7d4417c9b3d379d9599ac5fd7e93", "ref_doc_id": "4db85410-ddec-466b-be97-5a57627b64c1"}, "5f235132-4845-471e-8601-c918c935a41a": {"doc_hash": "a92ef72bf074788ab8a439d66f51c714b54fe6db52abbaeac28ee674fe0d3b78", "ref_doc_id": "4db85410-ddec-466b-be97-5a57627b64c1"}, "d772ac8c-fca1-452e-8731-8d25d3a8fb2a": {"doc_hash": "8d730f0952db5d0591b21c9e074eaff96274707fa6a635fc291339e4927b71d6", "ref_doc_id": "4c677def-e81b-4720-a3eb-004672271098"}, "9024ec31-5e4e-4119-8c8a-3a667ac30e12": {"doc_hash": "d660079a42ca6a876e7dbb9bc4cdcb25db957b0a9f12d2bdbbbc8268a4aefc30", "ref_doc_id": "8321bb81-a9fa-458d-8e0c-1580cd9c12da"}, "54cac05c-97d6-46b0-8a95-dff9966f9af8": {"doc_hash": "cbdd8a3a8ed5185b3e66676c8ab8f7026dbcd4ca444393d9d29765fc69c65a33", "ref_doc_id": "8321bb81-a9fa-458d-8e0c-1580cd9c12da"}, "1f4ecb7b-4939-485d-8304-ac382b15faab": {"doc_hash": "05edd0bc0ee90833a4e3ff32d83104b4dde047c565b5781d14d9cdf253ef1e32", "ref_doc_id": "951fc487-535a-40de-9f76-903860959e0e"}, "907d563a-d3b1-4bf3-a550-33bb2bc6db10": {"doc_hash": "c232b7ff00166c9b78a4ba64fd15d9219a6305dad3698d315582a0427237f577", "ref_doc_id": "927f55fe-fb86-41c6-a7b7-4408f528bc4a"}, "bd6d881c-32b7-4c64-83a0-e81166b0f80b": {"doc_hash": "62c86c0a3b3f4e128b8f752137e4f25d78ac8de72e0b7295e205b13ba9a5acee", "ref_doc_id": "2588cbf9-e66d-4b40-bfae-702491cb7ada"}, "c00245d0-89ed-48f6-933d-60850a2f9379": {"doc_hash": "00de9a1f3ec59c873b99f01438fb67d7b9599f10189adc3251bd1c18a7383995", "ref_doc_id": "cd2418f7-60e5-4300-b325-ba3c4dda6cde"}, "136f3582-d527-4b99-b8b4-e9ba6df2d145": {"doc_hash": "2abb8ec2a0aa40572f5541b7c80faed008dada227c1b03b0fbdb3501636aa538", "ref_doc_id": "46aadfe0-72a4-4f6f-867b-0e358162a0af"}, "7b47bbf2-4366-4d5a-b4c4-b58de030deb2": {"doc_hash": "5735d2741699a9b628dfdbbe72a281adf7cffbc396c11b7be5c92926a51a8cff", "ref_doc_id": "e00d473d-1435-4e1d-87b6-0a6377c162b6"}, "55ba10d5-d705-4655-a190-55e0d0fdff9d": {"doc_hash": "e46c28b8453c7a5dbaba33537750514d2cfde47768aa8e640b620ac53c52878d", "ref_doc_id": "647dac79-9d62-45a7-ba36-aa2f3d82b010"}, "b9ad4620-c076-475e-b769-72638b04786d": {"doc_hash": "515bc35401182963fbc530308c42478a8834f6baabfefa2427c97d490b60ba17", "ref_doc_id": "231c945a-3016-4654-a3ee-222898759a01"}, "3d62bee3-358e-4f37-9f83-6d9e6a1414da": {"doc_hash": "936ef62d3e04b4c1bdb5f67e1d56c1954069ce325387ced840b7985155b04665", "ref_doc_id": "8c53a4db-8aec-4871-a5ff-392ea1fd2fdc"}, "88c4f7ce-bba2-47be-9d87-d09e8aa7c859": {"doc_hash": "ba329cd029932bdff8a18e5b108f28b8e08978a3fce0b83ef6e6b12d47e1c3d1", "ref_doc_id": "8c53a4db-8aec-4871-a5ff-392ea1fd2fdc"}, "4b23d0ed-0ff4-42d1-a4d7-8808cade4aab": {"doc_hash": "e0b31c1dff49f354609827d4c7afb4b2992e87b7c25d45e6d014da36f66e9d2e", "ref_doc_id": "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6"}, "287dbd85-80e1-46ed-9fe5-d1d948df310d": {"doc_hash": "940a777e498f43861b363e701ba0a1ec23be696848c8d6937be8959135bd538b", "ref_doc_id": "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6"}, "1682e6c6-1c29-4c98-923a-fec3b7def77a": {"doc_hash": "3a650fec16c161ab288f06ca9e5a6cecf62cbff1011e039d8e07cbd9a112e250", "ref_doc_id": "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6"}, "6a4ea91c-9b8b-4bac-b7aa-1de55352dc20": {"doc_hash": "f0c36fc7880cb02771488a3236e8cf903bb143f9c5bcd5236bd24e3d2d1b00c5", "ref_doc_id": "6e3fb751-0d15-4903-9e4e-1bc5ede4516f"}, "60d75214-f758-485c-b701-c50276e498a8": {"doc_hash": "3c00c0b1f0d1220fcc45842136d7a1b768d4595146d2086cd1da8717e0528587", "ref_doc_id": "6e3fb751-0d15-4903-9e4e-1bc5ede4516f"}, "c19f5608-8058-4780-90ce-4fde10f3fba0": {"doc_hash": "be984e09ad5a3a6de3c558d110ceec37ea6a6ec9760f87d60da085d52e3b7e88", "ref_doc_id": "78469b53-3988-49f5-9492-5eec75c8cd52"}, "ad3a6e7a-00b0-4a81-95d2-986596737ba9": {"doc_hash": "fa87827140a63bb45e8eca5dfceb3ec6f34129182fbb50883c29b0d00dfce01e", "ref_doc_id": "ff727822-c671-4f15-8803-baf4aaf4e5b4"}, "a6d382dc-cfac-452d-b043-f5e370e42830": {"doc_hash": "cb14196ae1c6e1dbb6ba56b3765dcfdc58957e10b8f3f953fd4f2c7a302a4949", "ref_doc_id": "ff727822-c671-4f15-8803-baf4aaf4e5b4"}, "97e8f0ee-ecf2-453f-bdec-db0a8ef2eda7": {"doc_hash": "ffbea9d95bd4c846e4ee82b464dc10883daaab9e69055215516e44da617a89b1", "ref_doc_id": "3cceb3e4-e03b-4d2f-acad-d4d731c33097"}, "c7f8f349-31be-41d4-ad98-f07372011122": {"doc_hash": "d4291bce854de9dfe24477b9fb9ffb081eababf3eec25d8ce0aa46615d3ddff7", "ref_doc_id": "3cceb3e4-e03b-4d2f-acad-d4d731c33097"}, "ed7933e3-8acf-4139-822e-af7064f84e4e": {"doc_hash": "087628df9a0c5ecf4d59b3797604c9e81ff5f55082d398257f62a01ef7321877", "ref_doc_id": "440b35dc-6c25-4d4a-a181-fdcd65a40e99"}, "f2f1b73a-db4d-4501-9999-f106c68da956": {"doc_hash": "524b30c237ff40ee23a4cbacc4c06a999272e9c02b380317b60f6b91c81c1997", "ref_doc_id": "440b35dc-6c25-4d4a-a181-fdcd65a40e99"}, "db1be5c9-d172-4d11-9523-790e5978c2e8": {"doc_hash": "9304a1eef212fd2b4ec14e9d9da5b536a79a0cdec888e801eb420302c0b96f0f", "ref_doc_id": "69617976-9e63-4711-84fb-dd4cd43037c3"}, "4b98ffe7-21f2-4397-9125-77fb3a968dd6": {"doc_hash": "4a992ef4195b7dc606482b623deae8788b286707bf8e37bc2fae075cf4252adf", "ref_doc_id": "2431477d-c450-408a-8c73-1bc4855d6fee"}, "fb41bab9-f4e3-491c-9a4a-6d7d9ae97e1e": {"doc_hash": "cdd77da8049a651638a84f026419a204d9cc70389dd0f44842e7f5555ab542ae", "ref_doc_id": "b6afc202-65d7-4e86-817e-ccdfb43d41a4"}, "2d6d02be-865f-4be3-9c0b-a967fa96c027": {"doc_hash": "d32298f32510ea765c8479cec644bb6c631d00b517a34794c9ae2cc3e25402d2", "ref_doc_id": "b6afc202-65d7-4e86-817e-ccdfb43d41a4"}, "edf9786f-3a7f-46c9-9a14-2957f33b0594": {"doc_hash": "d251f455a9570ec91fe28180ed7b29420ee42a14c7bb306dbc1b13f68cfb892d", "ref_doc_id": "79de4572-9a0f-4c42-945a-52be174aaebb"}, "5b33f3e0-713c-4b81-9ba9-6221d2653a1c": {"doc_hash": "16679cab3af1bc7217e886dc483a45ddcb98a43e78bce0d9bfdb4339e2d6b10e", "ref_doc_id": "2acd36c1-147f-4735-a297-b5d53d8bebfd"}, "414b3f97-23ea-4463-bcba-6a8b83ca79fe": {"doc_hash": "4fd94242e516f7163ea8b8e627e115cf26ae46bb2c3ad95e5576a3e512fb2f11", "ref_doc_id": "2acd36c1-147f-4735-a297-b5d53d8bebfd"}, "3327450c-5dd0-4930-bed3-70d62f6175e3": {"doc_hash": "59bcb482a2ac0409e4f5a6b6abaae866ec2faf3e2b9204b82341c5a7e15e4d40", "ref_doc_id": "ae90fb7b-cbdb-4b27-a9c9-6349770aede6"}, "b0bff575-e1db-477d-854e-a2880dca6f00": {"doc_hash": "87fb561d15c03e71631c0e93b7778a1b95133c521e57a03a6b3cdf9987835940", "ref_doc_id": "ae90fb7b-cbdb-4b27-a9c9-6349770aede6"}, "ae1e8883-74b1-49af-a29b-592161315eeb": {"doc_hash": "f539d498565bf5041a71b75251ccd69128e9b428c2667c59e1125e3282e42d34", "ref_doc_id": "2af79f01-202c-4357-b77e-07594328f382"}, "972d1ec1-5bbd-40b5-b8bf-48cc286e427d": {"doc_hash": "709a977a4cb80085994dbf3d5a47c9b815e1d3e6a11eb9d3aa5d21133fabc05c", "ref_doc_id": "3ea0e739-4e3f-4b7d-a18d-7ce5a5b0d341"}, "d234832f-b8cd-4a67-b3cb-32e7c72be6f4": {"doc_hash": "71023b37d6757bf1591fe70769bd2405149eabb2f1762743672accb36e13128f", "ref_doc_id": "3ea0e739-4e3f-4b7d-a18d-7ce5a5b0d341"}, "19ca25ba-35e3-48fa-a38d-57c33eacf87a": {"doc_hash": "9479a09342f173eadc2bfd98dfc59dd2350bea82e6b2b31cf55794fe906731f7", "ref_doc_id": "cfc8cd4e-9865-4349-8ee8-85262b2b3493"}, "b39579a8-676f-4a44-9f42-d4a8fc22c828": {"doc_hash": "2305b72cf1fbb65275df31afff8900d87fb2d365534456080bc236dd512183c0", "ref_doc_id": "a63978ce-2ced-4ef3-bb25-8d63b9d59e85"}, "3bcc46ff-ed3e-4d14-8706-86add0f9a474": {"doc_hash": "60c08103179cfe878a79b50c58b3183e483a8c742efd5b71af42e72935535450", "ref_doc_id": "9e3703f3-a66e-406c-8ebe-9bea03626ea0"}, "351e95c2-0f3e-4dfb-be04-306c533d030e": {"doc_hash": "3a7ff39f53f43db35e4705192648e2837ada27ffd6aecb7b138855499eb09157", "ref_doc_id": "9e3703f3-a66e-406c-8ebe-9bea03626ea0"}, "68c3c8c6-4ea3-45d5-99fc-40aaab314f6b": {"doc_hash": "4433c37de0ac0f7e5e50f023238259a1e727b37c645ccd8d52216c545c401963", "ref_doc_id": "b610df1c-d621-4259-ae4e-a5f71651de7c"}, "087a35b9-5c3e-4ef3-b50c-076537fecaab": {"doc_hash": "dc41949455e9eeb5d50ef94887161a7ec92b1df97d8ad293c62d438e0dbbe4d3", "ref_doc_id": "b610df1c-d621-4259-ae4e-a5f71651de7c"}, "fab605a4-80b5-4d27-b008-aa3c8a8a63b5": {"doc_hash": "c1088f71f9ae249e721e5fbe8543b4a63cb7c29db31005abaf6dc0b27de9e6e8", "ref_doc_id": "98e352b0-8871-4a5b-a12b-59ddf6d9681b"}, "6a9be596-184b-4145-a896-806c9142f13e": {"doc_hash": "3580816e51df0cd22c51579139dc0e657fc6d5ccab35f1db922d470fe2f84f56", "ref_doc_id": "f4ae5df7-08c1-4b91-8aef-d0810b16b6e0"}, "4be47621-3c46-4b2e-9d82-79201cba5e3a": {"doc_hash": "86cbf8c928c3647a3649c1d934d0d0e4e9dc59b6ab3a76732ac50c621e0efc19", "ref_doc_id": "dab5f6ea-e576-47ec-8ddd-3c273022c160"}, "5afc08fa-cf06-4247-9baa-95880c2e9349": {"doc_hash": "563f8847f33240c5f3f9fcb225042c9663e3049fd2b4807cdcefd4a92e8e9eca", "ref_doc_id": "dab5f6ea-e576-47ec-8ddd-3c273022c160"}, "7e560fca-46f5-47e6-b69c-311b289f55ac": {"doc_hash": "261887ab3d63f4e5fdc863f3684f76f3e8c181698fd4f22fd6a01d57c4eb2d6b", "ref_doc_id": "62bb7310-e8e6-4632-9be2-70857f57a398"}, "eb75a462-9982-40c7-aed8-ce0e3861cb78": {"doc_hash": "27c8477d34fb6a01a36f5e2ce31000b092b9fabad45400b4f6647b2b01d1836e", "ref_doc_id": "62bb7310-e8e6-4632-9be2-70857f57a398"}, "80d564d7-7efb-411d-a5bd-16b2ded177e8": {"doc_hash": "95834f78b517230cabc839e9dc5856865cc6377e614e5f2d88a352d7a2cfcae8", "ref_doc_id": "054805d1-7565-47be-abcb-828b80865677"}, "1443802d-703e-4488-9450-795a686ef6d6": {"doc_hash": "178c5b56aeeb37a297d1c1abcada2792a63e5e0fb6c687be628dab3138b33b9b", "ref_doc_id": "63c34568-9f8b-4829-b7c5-94684a0d9b43"}, "75f10b70-80ac-450c-a225-2b6d89198338": {"doc_hash": "d8df7dd9173313263c3b807f1ede0b09ab8fc925457161d66fbbba8370059bab", "ref_doc_id": "429b62e8-53b3-43f3-bb3e-fd2811fb84bd"}, "dfce92e8-faa7-4f04-bede-cda7b2b923b4": {"doc_hash": "0a8654c1ed1bd10f6143d07f416fb3626e18a512775ea7d337eb98a928007f73", "ref_doc_id": "22945e50-65ff-4ab4-a5d2-5f18d390fe9d"}, "17242412-8b6e-4519-bfcd-e3af8fb6248b": {"doc_hash": "ae525bc6e78544b37c39f50097cf3b5b7a35fada52d551b103b52b0c376a0e76", "ref_doc_id": "22945e50-65ff-4ab4-a5d2-5f18d390fe9d"}, "4fa06638-286a-4c40-b305-67125034c341": {"doc_hash": "7ababcecdf0262effb14e3a727b7979d015d5925f39a813f2c4078b694cb59b0", "ref_doc_id": "01ffeb69-8745-40ab-aed2-7145a918765c"}, "10b033e3-2f3f-4154-97c0-f4f9b3c63a9c": {"doc_hash": "a7a1bb08e72a2da6d1cc0d29af612fad15b94ed16238a2139d03556c86eb74ed", "ref_doc_id": "a9e24ebb-33af-4eb0-8630-f9b3c6113f8d"}, "3722b8c6-b4fa-48e7-8e52-375cef16c6b6": {"doc_hash": "e00b1c8cfa56e3ff4daabc4f6df9308292a5fadb7e74bbca66cda5c7a79efa60", "ref_doc_id": "ed35f918-e951-4f10-80c2-487dd199812f"}, "466ac213-a696-40e5-85da-f7ca6cef08cd": {"doc_hash": "278b39f3d966e8c3e47264b5da7f925f993c403b5d90bbdddcb1788c276ad839", "ref_doc_id": "c3808861-e9a4-4c2d-a47e-0b988cb8fb8a"}, "3735c379-c49f-40f5-83b1-7ba7c246c269": {"doc_hash": "3c9bff22a5b5c2f991ce8f0f3cce34a92d1ae87532f413d5f38e7235f24d3bf3", "ref_doc_id": "02dbfccb-f987-4023-8bc6-54b85e13748b"}, "d035b07a-039a-4d05-8fc4-a0918e3e749e": {"doc_hash": "eee272c77d9e79eb5d23998e1d1530cdc23b4fcf932edd30522a8524cc8f3497", "ref_doc_id": "6e8b53ff-c46b-49b7-b973-8d2ffbf353c5"}, "f46be61b-c4ad-4ea0-a997-dea51688aaa1": {"doc_hash": "250ff1a20c9665421acfed870f888684ebf128cf3f7e2f53d16f60624e3c84bb", "ref_doc_id": "a0532feb-46a9-4966-bd11-8f553287d210"}, "00cbf6cb-dabc-4bf9-b2b8-23b32416f82b": {"doc_hash": "cedb5d87d76f2b35a6de34f2b2ac4f7423114158d67a92691d0db31096877333", "ref_doc_id": "03d59791-d271-44e7-97b8-8f5a3c8eb884"}, "c04ef9ff-7a98-452c-a2ae-595f428e2a28": {"doc_hash": "29d5d6640589b255bc8752103dd944ffaa5a72b8e0f3eccc49ebc63c0d21fb21", "ref_doc_id": "49b8b73d-f71a-44f2-895b-eca6efcae1ea"}, "6f313318-b0e1-43b6-92f3-9f27f3ab6ec2": {"doc_hash": "1ba73f741c39258e6b8ab2aa203e3e7e7ea9bb6294589f0da1ea6895c113f0e6", "ref_doc_id": "bd34b269-ad1a-4131-aec7-646647516eed"}, "dd8625e0-bd18-4dd5-a096-b45e53b553aa": {"doc_hash": "a0fe11045bf6e494a6cefb90478f53721049410c1ab4ecca6b4a5b719c917df2", "ref_doc_id": "8a781c9e-7989-4e9a-9451-f4683ba993ad"}, "6e0f93f7-e7bb-46dc-a684-f7c4951339de": {"doc_hash": "77f67805a70b678c2c9c51b0716cf9e53854110e3876bb120b00240c002a6318", "ref_doc_id": "86a464f5-11e2-49e8-99e4-19922e429fbd"}, "f86073d6-b4a7-47b5-bc00-bdf57c2d2197": {"doc_hash": "36317928d59b1c3767a7e99feff50dab3b1d4aba77aaa8076fe284df15753940", "ref_doc_id": "919bcfa5-8ae1-4da9-88cf-6ac8fff7ff93"}, "16dfa3c0-7d58-4196-8150-e7bb14b41751": {"doc_hash": "b8a2711d7f0a538eb77922b38a29691be5f37470e10eb5a594a87fa73b28c646", "ref_doc_id": "723898d6-727b-4197-bcd4-d33eb3c4d0d1"}, "cb57a945-b9f1-4cde-b300-efc9092b8c95": {"doc_hash": "c1a9bc3189d52af9ac99145d712580cac256b4eb45875e2a9320645616733f4c", "ref_doc_id": "723898d6-727b-4197-bcd4-d33eb3c4d0d1"}, "d876fe8e-7670-4bb0-ace3-451600f332c6": {"doc_hash": "d53c1358962960cb7b0d19860fcce79be065b2550e42c20746725b707ea15bcb", "ref_doc_id": "ed7a3cf0-b3e1-4f95-a76e-1b1087c73729"}, "bb11df46-9d69-408f-878a-f4d03678ebfb": {"doc_hash": "869229fb48cbcb05c5c30471b315a235f37984c0ec645ecbc3f18700cebbd8d1", "ref_doc_id": "8c8e2c75-96a7-4a1f-8423-349d4cdb04f7"}, "0f4098c4-5b4a-4dc2-ba39-8a1a97254423": {"doc_hash": "488b4b31edd83d21e593712b5de4832f8e792a20631aab2a6c28876f6426ad28", "ref_doc_id": "8c8e2c75-96a7-4a1f-8423-349d4cdb04f7"}, "14bac667-5be9-4f9c-afea-e9367da2e9e2": {"doc_hash": "b5cbeef856f26306e72f3c2e0ee1096b0efa943d7422650c51f7b275905a5f34", "ref_doc_id": "11a27966-c5fa-4fa0-b714-2b408fb268c4"}, "f325d036-8aa6-4707-8d73-3f44d2598b02": {"doc_hash": "1a9c4ff0ac6258c86f7fed8998736b6ad551ade5c9747a36b4caa3c133e74742", "ref_doc_id": "45731b8e-d3ab-44af-b57e-bcd47ba218d4"}, "44a642ca-5f4d-450b-aa56-96f83dbe44ee": {"doc_hash": "d4065954dc975cd2023464bff0cc8c5194b65aa6e1e3c1de31725799f349f1c3", "ref_doc_id": "af1daf9c-13fd-420e-a5ce-5f2590840fc8"}, "d65b4d95-5baa-438e-90d2-c7d20e297346": {"doc_hash": "890dedb515e1c300907c9934d7dd85de08e6792cb76a658e7af3ffadbd96e8aa", "ref_doc_id": "8161c0f7-bae4-4f74-8e44-b0feec1d9aa5"}, "edac6333-acb3-4bce-a091-e4a6f9242b82": {"doc_hash": "13309adfa1cfc7e6d021b2a19b8c4e8b9bb97416865de4ec9283d7bad11620bc", "ref_doc_id": "efcffdde-f36f-4e9e-bddf-ae80245a8198"}, "55bd21b0-52e6-4c44-9d50-f2aa44230fdd": {"doc_hash": "f5c1ee35b119a4f24b41a986a1243c4c3358bf1dd3a7508305b3064434c5b025", "ref_doc_id": "efcffdde-f36f-4e9e-bddf-ae80245a8198"}, "7c265080-48c8-47c3-ae41-5b2344ed721f": {"doc_hash": "06e08614734e82c5958864fcfdde59601865d3ccf4aa8e9df5b4d6b4b421f5b9", "ref_doc_id": "467109dc-adce-46de-b6d0-1e3e187a1952"}, "bebbd227-7cf4-4315-9470-608799b025a1": {"doc_hash": "19b012e9117aee1dc6f0a86bf6b6cd6de4142b9a8125d3f1682de849ed5bd643", "ref_doc_id": "b24b4691-204e-488f-8954-80157048208f"}, "2c014fda-4e27-482e-9932-7e348f1f8b82": {"doc_hash": "0f33ed0aa3dd2a6c974845466d79a022d67d60dee4fac9c1530712dc689ae912", "ref_doc_id": "b24b4691-204e-488f-8954-80157048208f"}, "9063840e-929e-430d-81fd-6fead2dbfb60": {"doc_hash": "d8d5b7fd617610dcdc0fbb9264d4a21bd5e0acc06d64ea4ede9675d3b92d4f87", "ref_doc_id": "24628a93-89b4-4a78-8715-5bdeb750b3f5"}, "f3303123-bd43-4e35-8c77-37ec057126ea": {"doc_hash": "e08c562c7f97854d9f9d965ef1b5a1cde673eef7fb9346bd5cc1f1f37059f06f", "ref_doc_id": "24628a93-89b4-4a78-8715-5bdeb750b3f5"}, "c4c9f495-a482-40fe-8d09-446b24a70cfc": {"doc_hash": "f24a3265dcb434f6dbf8161e9bf48836556e3d40e27fa611b68d7c9d3ee8146d", "ref_doc_id": "20773f74-3832-4dce-b7ca-88124e2b09ec"}, "f1f04976-61f9-4fb4-bbbd-84f9b3e2bf7d": {"doc_hash": "d16d33337753b5d217ad921eeb3f86aaf1ed6f3f7998ffa8d1732284b6233cc5", "ref_doc_id": "20773f74-3832-4dce-b7ca-88124e2b09ec"}, "2e3b3f5c-ce19-4d68-aaaf-cb7c92711160": {"doc_hash": "a334a3dfedaf6ea09688eca81b1baac49bdd19731f4ca41ff563b62955275eb1", "ref_doc_id": "d5c529ba-e85b-46b6-9b29-b183a883d36a"}, "779811c3-8732-4547-8be3-2cdef1062d85": {"doc_hash": "176095f28b4ffbc80929313da2bdec38c1ef8c170cd6009cb97f98483abf064a", "ref_doc_id": "d5c529ba-e85b-46b6-9b29-b183a883d36a"}, "333a0ee6-07d8-45ac-9cc4-4b7775f5e007": {"doc_hash": "08c69f702cd5983a2cd3fc8be584cc02d83cceeeb12c139495c441a941057e14", "ref_doc_id": "4a778863-12fc-4482-b6d1-80447c68e03b"}, "ab9e8e01-946c-4c79-84de-70e60554f5ef": {"doc_hash": "e002333bad25e0fc926a3f4de66daf95f983450475efdd4b506857dadfb90d30", "ref_doc_id": "2513f373-5131-4fd1-b7a1-dce1995590c6"}, "159ea16a-86eb-4b76-bf4c-fd5e15ae30b5": {"doc_hash": "5966ec599915a299dc1a0749ed6ffcc90885fbd8f185a3855466baece97ab4c8", "ref_doc_id": "2513f373-5131-4fd1-b7a1-dce1995590c6"}, "25a62417-125e-461d-a7c7-b8a3c40d4f68": {"doc_hash": "a1ab1ea673bd1f43b7626675195d9b5af128561107d0bae889d4a1af683bcd5d", "ref_doc_id": "35e2f20c-6fba-46a9-9259-4e7811b44377"}, "ab533df3-0d3d-4b93-b0c5-3b5749bfd368": {"doc_hash": "b3040ca64219d87ea6aa10e3f93130b50cdafc15382b4f0f2e7b8aab69a52f21", "ref_doc_id": "5af93b52-0c9e-4335-ad63-9a50d9606584"}, "6b6eded0-5a20-4b49-b2c8-912adc4cb434": {"doc_hash": "226ba64d2969b7b757086a2b3fff669c60f3e4e88452a8309503e20c53f15882", "ref_doc_id": "1f439fd7-3e60-4448-8fff-6bef29fdd82f"}, "295eba58-3367-4c42-a4b3-eaf19974c164": {"doc_hash": "b9a803ea1b2f1f4946d3624616602190f94649224b5746cb3251efd5e6677b26", "ref_doc_id": "1f439fd7-3e60-4448-8fff-6bef29fdd82f"}, "8b4afadc-aaf3-4999-aa89-1afccf9e038a": {"doc_hash": "2a93b8213bb2e5d05e361c03be3874e3d9f1fee3a7b12b455316a1a377ae05ea", "ref_doc_id": "0573a59b-a199-44f9-b6d0-a8a9ba7622e3"}, "b3dde61e-26bb-4960-99cc-569d2c7b89ba": {"doc_hash": "9b39e0c290170b490ffed3337c3ace9f3d4030e370823c2175baf4590a7a03a1", "ref_doc_id": "8915eeaf-e9d0-4442-87a6-fe3105a45a2e"}, "3bfdc513-885f-4c91-9fe5-0a9f34b658c2": {"doc_hash": "2a4b090ac92a3a834d73b4dc9c509d101a1e5485b4a1a70b8dc4636ff27f117e", "ref_doc_id": "95221215-1051-4590-9fdd-1a93c200a4a6"}, "95b47f51-545b-4c30-9eff-9a720115d30f": {"doc_hash": "b4fce4e4a38d78910c408b81d5d2bc77023bd94dbebf19b66943fcb837eab6fa", "ref_doc_id": "f2cc89e7-ff7c-4a53-8cd1-13588506bdd4"}, "6b1464ee-6a50-43fe-b1a7-67b1464a355d": {"doc_hash": "bf29c95d890ceba7d20cf346608585ff61c220ee9d3725d094f48d24129c0914", "ref_doc_id": "419cf36b-7e26-4a8a-9f6b-13a136668953"}, "3dcae77f-a07f-4fe6-a551-2261a7f3ab6f": {"doc_hash": "effa5074c0057d6a644d53ca9ff62932e5628273f57c9cd51259e877f3a86a81", "ref_doc_id": "33e8e824-e1e8-40c5-b7b7-fce360b5fe47"}, "1fcf757d-6926-4ac7-bf8f-48b34dcb992f": {"doc_hash": "9a3ae940b5fcb68f3c4597cf91e8e79012b8e5ef13cf1baf99ce4a62359c3dce", "ref_doc_id": "fa59aa8d-1a9e-4b50-82e2-d619f90f4b9e"}, "eed755e6-1557-4c7b-b898-104e6c0d7976": {"doc_hash": "99eeaaf423aa5cf9baadcee3f793ac4de867e8a897c8b566e7d5b8352c39e63b", "ref_doc_id": "5e3b55aa-2cca-4505-8391-33dc53cde066"}, "fef8e3f3-d3df-4b3b-89c5-535a3cfa1bde": {"doc_hash": "bcb02bd104682848a5cd2e00c16ae2976a09d1d99f36be59b688cf9ea2315055", "ref_doc_id": "908bf419-b077-4f43-94c6-a411f0319ab7"}, "745e5ba6-8dae-4413-a033-8580938caab6": {"doc_hash": "0227af1f1e865f27d3b6cfcaac3b446cb0dcfb618f7030a42c10c66fef0776d0", "ref_doc_id": "59b3eeb3-492f-4c93-97ea-978db88ce748"}, "b11a52a6-2982-4f9e-9b2d-d82c01ddbde2": {"doc_hash": "8da55d8b61461126b81be0601528aa65fa02ca57c86221c8b94bb06f497f777e", "ref_doc_id": "db0898e4-2de5-4074-ad34-45eed910c15a"}, "721daa79-b006-4fa6-8019-4031bcda0670": {"doc_hash": "e1220240d7bc3b817f209cc9edb95f7481ad2ecd413cd7c70878664015811ca8", "ref_doc_id": "b05bf3da-7663-4beb-96b1-292c462f5907"}, "7f0aed4d-0521-4208-a636-5a851616fb28": {"doc_hash": "870d9566c1f30cbb4129a5dbebf2262d7e5b36ec29c691387f0d250e57c8a300", "ref_doc_id": "b05bf3da-7663-4beb-96b1-292c462f5907"}, "285c509c-5545-4904-b531-e1f7b2459aad": {"doc_hash": "bc2229ee7090ae0492c22703d89ba6e7035a04ac5b3d19c86269461b2b9cd074", "ref_doc_id": "3739abeb-95e9-401a-81f3-0094f7fbc856"}, "10b61b28-0530-46a5-98eb-5ad961745681": {"doc_hash": "92b654804a4321708921e285d70f5703c07b5912e7cd35f334404424ae931595", "ref_doc_id": "3739abeb-95e9-401a-81f3-0094f7fbc856"}, "69dd5448-d886-48b4-9d00-aaeec7a4ff3f": {"doc_hash": "234df5b6f5817765df548432bffbc87c664629ed60c8a595be2ff88cbf992c54", "ref_doc_id": "8e9f7f13-c6e1-4161-93e2-c9deb9a083b8"}, "c04d6e30-c6ef-435b-a908-cf1fbde7c7d3": {"doc_hash": "d56d8b34868dfe157f365ff922faeee54ff6b8150aecd99397655b85c6b261ff", "ref_doc_id": "8e9f7f13-c6e1-4161-93e2-c9deb9a083b8"}, "7912deda-2c30-439c-8115-6ea69a08c26f": {"doc_hash": "900468bff2f0c623ad1a42fcdc50452dc0bc26da491462b356844c6f1124a806", "ref_doc_id": "5a946f37-34f6-4223-8a66-05c10e2bdf03"}, "70489cc7-fa20-4fd6-b35c-c17b1264c4f8": {"doc_hash": "1d706a80a9597f9475abfef414ea3577da0fced7f52387f0b4071d708ff56e59", "ref_doc_id": "5a946f37-34f6-4223-8a66-05c10e2bdf03"}, "249639af-8d3e-4b31-ba31-b67b984a69b5": {"doc_hash": "2f5b3ef4bef86ff3cefc880a52a8668345b841b0798c0636039cbfed69659b29", "ref_doc_id": "c93ed076-2f36-465b-bbf2-15c4c8411abd"}, "7b2d42b0-7767-4b0d-a2a8-6625642a30f7": {"doc_hash": "84dfb9dee11182e42eed4c60d3bbdaa48169575db256ba77aa0c4607c897329d", "ref_doc_id": "42a2db7e-7b6c-4763-bdc3-abd5eb04d5b9"}, "85666528-56a8-4480-84d0-72565b47fe96": {"doc_hash": "2b0341480aeb1bac148391badc21abefe7966b070f7bc6adf2de7a61c4cbd1ac", "ref_doc_id": "1152c968-950d-43af-a35e-265bd4d0df81"}, "5af1c62b-fb2c-4d05-a97e-17e6372940d3": {"doc_hash": "e15fca7726a9c3e2530392153db8700246842d575438f34ce758ac22edb75789", "ref_doc_id": "1152c968-950d-43af-a35e-265bd4d0df81"}, "7e91a175-cd81-4226-a6ee-bc3f7b0422c0": {"doc_hash": "85d182a79dcc85b68dcc78ac35d98fa0874c42f9ffd3093487a0991c69abbd9b", "ref_doc_id": "36ce2372-d1b6-4d8b-8135-aaa696ee9b07"}, "0dba63f1-9224-4ab8-81b8-fea0c5f64bac": {"doc_hash": "5c3550644a620c1ff4dfae2f21fc01fef669eee041a562b498f2f606e5b4f2d4", "ref_doc_id": "c984b1a1-696a-4cad-8240-729684ccd758"}, "ac960ca7-e260-4724-a1e6-d40278419643": {"doc_hash": "d96e02626a1538f52c7216673744db972eb81ba2ca350e352d58b2a1cb7ee25e", "ref_doc_id": "17e6a965-7105-427d-87ef-ff06c9b5909b"}, "317acb3c-419e-4446-9eff-db6a9427aff8": {"doc_hash": "bd71a8d33fb77ba679227e83f862dbd00576713b5c88a6295ac6b0a896034237", "ref_doc_id": "166fbd76-f5db-4211-97a1-4d2a75350985"}, "5a8066d1-8e92-4f7f-9942-b1752c7561f0": {"doc_hash": "80bf9f4f95ef3d77f5b2405a8f7fe0d86114f046ef424ce1788552051c9f8212", "ref_doc_id": "166fbd76-f5db-4211-97a1-4d2a75350985"}, "318c54b9-3a84-425c-a84c-0dea43e5702f": {"doc_hash": "b85b2840060c9845a61fbed40df85cd2ea03f84abec832dad39c4ec02c90bd24", "ref_doc_id": "57544394-3c23-4a89-864c-bbf2139eb206"}, "203fb962-697d-4e31-a1b3-05106979b8cc": {"doc_hash": "8243f8b49da2ed3d088767378646ebad61c019f24701b5737ff76fc79b81cc1b", "ref_doc_id": "19a2cc1a-1f0c-495e-a1ef-6f23e25af291"}, "087674de-4e33-41ec-a94c-d169ba42f00d": {"doc_hash": "3540302d4154dd8099859f18e1f42e1fc3b61b94a370951031069f72aa7249dd", "ref_doc_id": "19a2cc1a-1f0c-495e-a1ef-6f23e25af291"}, "49a4f36f-deb8-4a07-a5f8-3f6e60e19a9d": {"doc_hash": "ff4ee575c47a0c7a11aa119ce5b44fbcf3aad718a0fdcaf0ad2dd821a3e06218", "ref_doc_id": "57bbe390-3dff-49d6-935e-a16b34b8a5df"}, "d1af2705-7fa2-4a23-a404-57b8237eaed5": {"doc_hash": "5f13210fd801dbe82e1382a4f1ac6e38680b3fbbb838561333b09bd53c615f37", "ref_doc_id": "57bbe390-3dff-49d6-935e-a16b34b8a5df"}, "117e207b-b35c-4505-98bc-8e6cc75fffd3": {"doc_hash": "db39d1f08f275047fb43b51d330962b136c3d81e7f907ece666fb5bb31e43510", "ref_doc_id": "f2d24cd1-0419-4148-8aca-de99d11e1c6e"}, "ffd18c57-8e15-4929-8767-65ebe4dc7705": {"doc_hash": "e369af3c958f6f7fbcbafffb4b7bc86523a93a68509347c922efb108a17045ce", "ref_doc_id": "f2d24cd1-0419-4148-8aca-de99d11e1c6e"}, "26abcb13-4c1a-4aa5-9a47-aa299ed508bc": {"doc_hash": "1aa99732e592cbf424b249f8f589bd3d75a79bc463a3eff09735873093ed0b0e", "ref_doc_id": "dce5b2fa-f296-4165-b1b5-9e1d942f82f3"}, "ae05e88c-4e19-4e27-8e66-5aa7cc3673f2": {"doc_hash": "2e5020f5ca66aaebf875b7df9548979b85f45c5c110a0aeef5e0859a86603cb4", "ref_doc_id": "1201048e-4f35-4df8-b552-2ca10fbb21d3"}, "333800c0-3b7b-4737-b8d0-7640c541b5d9": {"doc_hash": "b7a7ddd78202d152f93e8e94734c4527b44c0761a13f4f5813a49cce970ae471", "ref_doc_id": "e29b79dd-c7e3-4e53-b776-39bc4064b557"}, "0b45d9ae-d23d-43c1-bfe5-92ba94a4fb64": {"doc_hash": "5dedd2b8923eb0f078428b0dc48ecf39ae871abe998d744552b4bcaa8e6125ce", "ref_doc_id": "0e13b7f6-c55b-424a-baa8-03e4f9e36ce9"}, "a8154d84-4ff3-4695-b6db-444474f47057": {"doc_hash": "a1cb66be8d6c755df58909a404dae7738eac52689a8671560f46c06c9f8deccc", "ref_doc_id": "0e13b7f6-c55b-424a-baa8-03e4f9e36ce9"}, "858da336-b4e8-47b5-8e5f-e4327eb55f60": {"doc_hash": "233149fd3de4b3ee3f083abb88d00685da12a2a5b27155faaa7dcda2aa94081c", "ref_doc_id": "07bd22b6-4fab-4553-9a49-de920235eade"}, "ce89c73e-c904-401c-a6a7-f3d05f38d951": {"doc_hash": "394fe75822b4523db582067be943a9e6f4a8390af9a0c4a048cf4973308827ba", "ref_doc_id": "4ffe9236-fd03-402d-8e29-90fad74eec94"}, "6e231def-dccf-44c6-9e87-4ea6c3acc979": {"doc_hash": "97d8d99f322cd265e0f5a82b89195c7d4fe83813ef971e9465f5cbb50318c4eb", "ref_doc_id": "d61db280-fd51-4c54-a34f-9a5171689b88"}, "faa107bd-0e03-46c5-8f73-f071ee7ca29c": {"doc_hash": "c8a35739f347ecff7560865c74d009d26da8929298461b6e18c01d80361f2132", "ref_doc_id": "eb36d47d-b9c4-4d3f-a19a-792e65042b47"}, "74e75a5e-428f-428f-a4ee-bd0ce3be109d": {"doc_hash": "b5d0ff624d3e6f136a9c7c435ab40da8f93aebab881cc7edd104a132e19c6e3d", "ref_doc_id": "bd018312-2a86-4585-a726-c36a668e5044"}, "199d1cd4-1e01-444f-841d-be1d8251c415": {"doc_hash": "dc923ce3197499ddaffa8005ed5b40a8764236441df1f95a0e0ade1825257570", "ref_doc_id": "bd018312-2a86-4585-a726-c36a668e5044"}, "aa940b8b-74c7-4663-a49d-fe4daf7c16f2": {"doc_hash": "911c5b407cc54e68fe41697c3267590f2fa53d6afc3cdacd0d06ebb5bc74633e", "ref_doc_id": "2a9648dd-bd99-4386-99da-637f7657af89"}, "fa0d478f-854e-4f3a-b152-8ae261e9feb5": {"doc_hash": "9f1452636c8f1a262e9028230dd60ccb2735de43ea478cc695eb107d535d6698", "ref_doc_id": "098ec2df-1a80-470a-9966-ba693493135f"}, "ead689b0-5186-4f4a-a0b6-072e1e64e11f": {"doc_hash": "0d1ac67d93f2b9b598a425647f2c84fd6f65d3ef4bd96f2d36d58b681585b01f", "ref_doc_id": "66e408ab-ca6a-45f0-b4a0-735a57f69890"}, "c2afac6d-cda1-49f9-9cda-7dfcef955af9": {"doc_hash": "8bfb763c3173e00e58579660f4610275c12bcf83e8bbeb67e4f47b802522bebe", "ref_doc_id": "ba3dfa6c-0552-4935-aeac-0522dcd83514"}, "d03eb545-70fd-4207-9a45-d2238e5b1c07": {"doc_hash": "48593bd0b3a3de11537612369410fc77a43ddb212c8f094510c7df63f0375d1c", "ref_doc_id": "b5323a54-44f4-46f3-8419-89166818f34f"}, "4ee4f400-9c7f-46c1-a399-367f26f3a252": {"doc_hash": "07b7bdad56e94ff174d752e77819c1da5140ac0606acad0146674c431c0c7df6", "ref_doc_id": "0e28e14d-7e68-4061-b259-b65d917e340c"}, "43b14de9-df6f-4479-b17b-6acd7149400a": {"doc_hash": "64761c7c0484bc5e341e6441b02e963f330f6a36ec40272118c4021b61fc0871", "ref_doc_id": "0e28e14d-7e68-4061-b259-b65d917e340c"}, "6214579f-9331-41a7-8100-101e13c6bad0": {"doc_hash": "d5727997a76260fa7fa49887e55c5af5fa8de5ea94d232f6ff1f5eed93d86db1", "ref_doc_id": "3fc04974-90f7-4c4a-967e-67d5dfafaf79"}, "6ae7ece6-5914-4c0b-95b4-7f191024684d": {"doc_hash": "f62f95d1980cf0542f0df5d2cb0f7bf414b4e11c26a8177717593e52f888f229", "ref_doc_id": "48226cba-9d81-413e-b04e-0c52a168780f"}, "845af96c-ef21-4c53-8944-054c555c5662": {"doc_hash": "41665367019a97c82aae16d130e81289732383208e668a2f536cbaf473cb66ed", "ref_doc_id": "7970fa1f-c6f4-4413-b884-d15b85756f30"}, "554bb08d-53b2-4b21-99ee-5fdb0e76bf2d": {"doc_hash": "b250accdb22331c5b83a5f4e048d3bb88c2d063b5e27c8d96070db7ca84a4dc0", "ref_doc_id": "977a47f5-689b-4171-af17-ee34543989ab"}, "23869b78-bbc3-49b5-bf04-c66cc73fb5c0": {"doc_hash": "b5ea9e5034ae91442219d59121cd646b9427f2ad57e5a228d52b761e6df86633", "ref_doc_id": "a330f747-1007-42c5-a668-544ecffa9a1c"}, "fcd2a600-57ec-4f44-af56-93721579acf1": {"doc_hash": "88e568d6ee14886c108b70a4eff72a9b5622cfdddccbe69b6bbaba9d1d517741", "ref_doc_id": "c196a41b-35a8-4e77-8833-4ad7065b1feb"}, "a8d8e7ff-6fb9-4691-b15e-2af36ed6f970": {"doc_hash": "76785e1adcb434b8f307b8b243ed593385db2df5b7bbc3d20546b16276734c0e", "ref_doc_id": "c196a41b-35a8-4e77-8833-4ad7065b1feb"}, "2ae5f350-670d-4e05-abac-98f2242e89c4": {"doc_hash": "c85e804278ff2b4168de7ae4d0d99358fa1835a0edd83099d96daeb33ee9fe28", "ref_doc_id": "d5b347f9-b563-42ec-a614-9c735d7876f6"}, "5c889757-0914-460a-a913-dd6f4318bbc0": {"doc_hash": "23affcae40381b3d4e6275e8079e9158926bdbc2eccbbce46d5adf2df4f4b190", "ref_doc_id": "d5b347f9-b563-42ec-a614-9c735d7876f6"}, "cec0ddb7-e04f-40c3-a705-c6a346442413": {"doc_hash": "0b8afa98110d6784bb992210a4119b21d891d6e0fac73e46f2b43ae79d31b3b7", "ref_doc_id": "22fc2b88-089b-4d65-83ff-1969b75a5063"}, "7e26d0a9-09a3-462c-90a0-a1a7fffbb862": {"doc_hash": "7db2dc39162ad172e65f3b936d6dc7a693e239e6d13bfc49672c2b9ce5d777ec", "ref_doc_id": "dee52d4a-76d4-4860-990c-0c3e315a2ee4"}, "7f4542f2-8c81-42e2-a79f-84f008a93634": {"doc_hash": "ec1522eacaa71d8313bcc17bb533b1a3964d23fb79addffb3da90a22e0cd8fdf", "ref_doc_id": "4751cd6a-d8ca-4622-972d-11aed6d8e025"}, "843f8835-0f6f-454c-b3d5-ea8e7a8585a0": {"doc_hash": "b76395908b3ebc5f7a0a78018d36af12b2fbf5aeabee4907dce947df426804c9", "ref_doc_id": "102316cd-962e-44fc-a603-b8d9298aa34c"}, "39ea7e09-f487-48e1-90e3-ee5dd26cfb06": {"doc_hash": "c56b31f7a233386a3e2a5d29ee08afaaa50cddce53ebdeb44931628c0caa3eb5", "ref_doc_id": "64b45e1a-bead-422d-9ecc-fc88b32611cd"}, "9cb6834a-131c-470a-918b-28a29bd23f23": {"doc_hash": "e0268a13c18445a89239571ecc19efe2514ed40a8474f796065029ac1b5acc95", "ref_doc_id": "62ae83ee-7d9f-4e89-80e2-5c910c258075"}, "7e9c5b15-836f-4e4c-891e-543d2ec199f9": {"doc_hash": "9f1074b0e28708563690a3743c33d563b5176c1ecb1deff15fece6bd4f555fd3", "ref_doc_id": "62ae83ee-7d9f-4e89-80e2-5c910c258075"}, "78fe4b14-073c-4bbb-80dc-9676a40e3aa0": {"doc_hash": "02b888b5b72d4e220610e465a38390811026199995319651513349d16a736169", "ref_doc_id": "45fc0569-809f-4acd-b345-ad1888bd9bde"}, "48313c64-154e-4b8f-a5ed-6d260866a9c2": {"doc_hash": "dde3c280df71deee31f9058e491b137e9cdfff4b9c20435a01eb1258be7379f8", "ref_doc_id": "45fc0569-809f-4acd-b345-ad1888bd9bde"}, "e25b9705-1e0f-404d-9de4-18a1248a3f28": {"doc_hash": "0a671334edc58adf38318f4aec38ccb50eb3afaccca871686d35e9d17900c8c9", "ref_doc_id": "45028eca-869c-4542-8639-9649187e5949"}, "3fcd3943-2b4d-4647-9a00-826e2b4a22ab": {"doc_hash": "227db9d286edeb0ff77d4e2e78c70cce725b41e37e984a544d98caf619f0d95d", "ref_doc_id": "f6806765-be99-4d79-8a99-d83d5f069ccd"}, "fe96a019-c602-49f9-ba0d-6b5a7b261d52": {"doc_hash": "47b7d1b7a0eca3ac9978ff203c00d2e5219f543cde5e1c461632e770871fda3c", "ref_doc_id": "2f223b85-9784-4f6b-b4a0-2a0d6f0d587e"}, "628d5061-30db-4f8e-b928-585a463c19a9": {"doc_hash": "9ff1821a3d4699e647e573c7fb48e71220b59df80ab15e941f168bbcc3ee75e4", "ref_doc_id": "390b1dee-d796-4e3e-9da6-3fcb52f62699"}, "8ea7da7a-889a-43e2-b1f1-0b2481adf88d": {"doc_hash": "316d0d491d268bb32a018304fe8f14620a6f125a904262f9d3cea06a53139f8b", "ref_doc_id": "390b1dee-d796-4e3e-9da6-3fcb52f62699"}, "d9be2d78-77b7-4619-8960-b74c8cd61c01": {"doc_hash": "84beccd2c14c7a6bac91fae2155560c9e4f3c2ce02f7948ccc92c35b1478ae9d", "ref_doc_id": "496b5367-9ba7-4974-805e-c917ecd86ad4"}, "56103495-4f01-427d-a578-bab9e09a25f9": {"doc_hash": "65b3ffb3c664a2c078a9a8703feca553f6981ff402398ab23961afe62f05b126", "ref_doc_id": "496b5367-9ba7-4974-805e-c917ecd86ad4"}, "a159f822-bc9e-404a-9067-de899c40583d": {"doc_hash": "0627b4d745e651a865d149ff427c36455af551c880464fbdb66d0d247315bf2c", "ref_doc_id": "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad"}, "6faec326-5818-493f-93b1-ea6f22816e37": {"doc_hash": "b89e8f9d5eb56784facdfc9afd0ae13dab10e4583b9988ea3e642145be0ab22f", "ref_doc_id": "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad"}, "419ae9a8-6296-4145-8b43-33e6efef6623": {"doc_hash": "908a532361ad43c314ad2366f8b34f5229912b177620e07998286427b8cadc28", "ref_doc_id": "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad"}, "7fbe84ef-9f7e-4c17-bcf0-1f29c9c656e0": {"doc_hash": "880355238fb08e8beb2079ac67a559533aa147b4316e3c47f9bace16c88a368b", "ref_doc_id": "085d1b75-491b-4dc4-a55f-b6124713690f"}, "c4b63c8e-c431-4327-a0c2-ff77e2cc50f6": {"doc_hash": "a38b38bfe4310c0a6180f0f326921b561b4d19710fe6fcef1b2922d9d47fa377", "ref_doc_id": "085d1b75-491b-4dc4-a55f-b6124713690f"}, "f9e88db2-30b5-496c-ace7-46b59cac1ae1": {"doc_hash": "41b08b7e50373ff6a03a04394b768dd2d12f88cc2a0cfe99ca666a0729fb1026", "ref_doc_id": "fc53991d-8771-4018-ac46-1e4026acc321"}, "60e27bd8-dd1a-4077-ae6e-f28279f1c3e3": {"doc_hash": "dbbedf732707edd9329449901b525cdefd14d356bbc26c9b2da06236e9d5f6d2", "ref_doc_id": "fc53991d-8771-4018-ac46-1e4026acc321"}, "1251bde0-de9d-49bc-8f5a-860f279ae979": {"doc_hash": "22c09c28d39637a0c3d57d807bc1938e9ac401da5ee8b3c3358ad35d8d5a3ab3", "ref_doc_id": "8cb1129e-7b6e-464b-81f1-b583dde7fc89"}, "310a2681-a4da-40a2-b827-8fe18e029b2f": {"doc_hash": "6126db8e15e776e8b5025f31d53e7ced926414d3500395ca62542622f1a59bd0", "ref_doc_id": "8cb1129e-7b6e-464b-81f1-b583dde7fc89"}, "f06b194a-7911-4f67-8321-ee2ae39a0644": {"doc_hash": "343fc9eec58cd121775310a6cf30694d13759f34bc1f95b3a53b474572890583", "ref_doc_id": "e1f67a52-05af-4967-b5c8-d2ada706ded7"}, "6960ceef-1eb4-4781-9a4f-078259e0d015": {"doc_hash": "032656abe2f0d54de7a73da9cc0f1a8eab242d8f6a141d58560b207b7cbe1a83", "ref_doc_id": "3ad9c6b9-bffe-4fbc-949c-b5fd82b48fb2"}, "079da608-c40d-4c16-a315-857cf254385e": {"doc_hash": "d8eb4dc16c7754174786805aedd9b922afc7b06e3f448e02c01fc32996f6d74f", "ref_doc_id": "3ad9c6b9-bffe-4fbc-949c-b5fd82b48fb2"}, "5e691f14-9a29-4bb0-95ca-6bd38a317ef1": {"doc_hash": "58046f57a1aaf26cabfd0de4bfb09f5478dfc6945d95a2ae9d000fc44d4d36c8", "ref_doc_id": "122faea4-d55a-4b52-89e0-09bb7ce86026"}, "d9abc138-9a23-4722-8a77-82e11c1f3a6a": {"doc_hash": "d4df6dbcd6fb08616e6a881c72b9ba45e8531f0f78c20d6996ded033b3865e95", "ref_doc_id": "a988b73f-3bae-4d54-b7fa-acbe96d15dc9"}, "86626aa0-4a06-436e-9c41-d10d654b9727": {"doc_hash": "e55a2e59947c37ae0cbdf0e2849391484d0bef6450359f5e3c3c1abc5aae4759", "ref_doc_id": "b45e8378-0ce3-4059-ab7c-bd29cf325ed3"}, "5fe19cae-5ffd-4a46-abf3-d6c3f3c9ea7c": {"doc_hash": "f2326d2f9f9208488cd5c30df1d975b2afeaa3836fb81db0259768f889a68fcc", "ref_doc_id": "7fba029e-d201-4d8e-9b90-d548f9d8689c"}, "3a7383fb-58a5-4948-8eab-1f203baf67ed": {"doc_hash": "78b22572ce6ef97d6f155f2b07a8dd8e0f135288d75ca5bd50f1822bb1a36306", "ref_doc_id": "6832a2de-b608-40dd-ad52-2ae9abd72269"}, "02cd066a-3dec-4c6e-958a-e9d6362e750a": {"doc_hash": "544381f18366ef31cce60b6f51ae6c1f082ed931f458524dce1b3e4d220f4ab9", "ref_doc_id": "6832a2de-b608-40dd-ad52-2ae9abd72269"}, "212bf609-9cb2-4706-a4e3-553d1827a467": {"doc_hash": "a1764e77ba808cccca2b30b9d216a4a9fd7b3afe6b3050075244b9e906c59037", "ref_doc_id": "92309dbe-43aa-48c1-bb95-2d062651ee48"}, "b47f2fc2-90e4-49b8-88fb-6e57d2de1fc0": {"doc_hash": "5fb5e9644bac8fbc1274f776a539dda50f5f0fe48b144a5d951b8d31ed648135", "ref_doc_id": "3c5b1908-da7c-4d07-a06f-4cb728fbf7cd"}, "6664f8f1-1f16-466e-b944-06e889d48cb2": {"doc_hash": "78e56f9f39c19606d2fb66abde1afd0f84a10ead7c80249adbe84fbb1e26b164", "ref_doc_id": "789cedd5-09aa-40b9-acec-6fd633bc7d35"}, "6fcf3b2e-d594-4659-adab-9cb8f646fd23": {"doc_hash": "69e34bebc14265b3899d16ff3a3c1dc04225c936eb993eac245c1da2f6e771a8", "ref_doc_id": "f3af6b96-4ef9-4094-b242-c61bbf2a6860"}, "e387fe88-ad79-49b5-825a-8740e03c3929": {"doc_hash": "66515219fb0de14071c03e5329f959cf389a36382545111b1786376320a0fc03", "ref_doc_id": "f3af6b96-4ef9-4094-b242-c61bbf2a6860"}, "ca67252b-078e-456b-81a2-53b7f64188e6": {"doc_hash": "a119557312f0cdcbd67661dcd95cf240a642cf1bb180453f5b94517e40859b42", "ref_doc_id": "d46265f0-292e-4abb-9a8e-3eb07d9f171d"}, "56b697bf-f78d-46b6-97b1-39e525bdeca5": {"doc_hash": "31723895f6c226f3d7324cb083c01d1cb8078a773f2c4f676afb85f444cb4674", "ref_doc_id": "19a956cc-e02d-4bfa-b1f5-09da9d22c5de"}, "dac3660a-b956-4a62-b117-17febfa37a2f": {"doc_hash": "9f6f8d2b22b50530a127f9887a33ebd1e617a8d2c04562fa6b90337dc5193660", "ref_doc_id": "0733f068-eebe-446e-8133-efeaf3d32b1a"}, "12bfcda4-3d48-495a-bfe6-a71ec7177372": {"doc_hash": "6974719e322e6b57c1863d807e50dcacc2f8a530b95d80f163132cf2e974e1a1", "ref_doc_id": "0733f068-eebe-446e-8133-efeaf3d32b1a"}, "81f805bb-65f4-4290-8e5d-4b9825dffa5e": {"doc_hash": "638b2404be6530dda283469e776f1f7fba6802856c958a13e3d415800a5bd924", "ref_doc_id": "b94a4771-d491-4847-a169-3e48e5ca6df2"}, "3756e8c3-8eb1-44f4-9675-068e9cab90d6": {"doc_hash": "f6449ce9b9a2b6957b2eb6fcb180bfb155f02adbd370b9b42307be4adedc147e", "ref_doc_id": "b94a4771-d491-4847-a169-3e48e5ca6df2"}, "253469b4-7be3-4cda-9869-a20c19c6934b": {"doc_hash": "88f96b03b1419d75065ff8c0151d4b8766bf39d54f9d7e914515a39c36d215dd", "ref_doc_id": "bd655a77-9998-440f-864c-c6009d7f9b79"}, "bc73a439-1536-40f9-b6de-5747d27f9e97": {"doc_hash": "e2680ed3212218bc6ce77cbd3f471ba033c05a9509448f1fde00dd5b898de1f4", "ref_doc_id": "bd655a77-9998-440f-864c-c6009d7f9b79"}, "1b1fca71-4088-4ac4-9063-667c5e7dfdc1": {"doc_hash": "d6bc3301a0fe54b28675886a3a6dfd4c5eb1776990178887f2379740286459a7", "ref_doc_id": "00b913bc-fadb-4394-926f-9ae18688cf9a"}, "c7f3580c-6909-4949-a4d5-6a1ccc45d6cf": {"doc_hash": "2a7084961dc8c66fbe4ff5c1973c3344f78227c1ecc87d4004dbadf71e7276b0", "ref_doc_id": "e6a4ce20-112d-4ae5-8620-c0a5d48eb661"}, "9010ac5f-3668-4811-8cf4-2fdf75c5d453": {"doc_hash": "0875464edc4a12c3dbcf56fed9496f453c42927cd62cfff500785804d15c32b2", "ref_doc_id": "e6a4ce20-112d-4ae5-8620-c0a5d48eb661"}, "6888a12d-f11e-4f9d-9137-b6d1a31c08a3": {"doc_hash": "96d0124d988b16bdcb997879bb7df3a06f4d341ed79ac722f31c6bf333d9f562", "ref_doc_id": "334d8091-3d9e-4352-86d8-ec69c1d3bc62"}, "75730431-24e1-40eb-8c58-68d857e98afc": {"doc_hash": "a252820597142d712ce67b941ea8d7c6b05aeb1f97ae85ffae9e2fb3e551b970", "ref_doc_id": "5f786d5a-e32e-4cf8-80f7-acd6fe248054"}, "6d72e18c-c712-40b1-b104-92da5e8c2d75": {"doc_hash": "ff23f793f6a7f5a20c78cb1a62e0bc7f03a9dc880b3c4a1b9f843f96ab6625ed", "ref_doc_id": "c0a396e3-eb38-4650-8abf-9f9a3feda2f1"}, "8571b392-7e32-4b03-b59c-17e682a6a8a8": {"doc_hash": "085ed9f83eebd3dbfcf25ab18a31a6721459d0f13927c8ac450eae1a7974c93f", "ref_doc_id": "44fa1e22-599d-40a4-88ba-b2a7ecf4e6f3"}, "b97b094d-05d7-4b43-80d0-714f1a7c33c2": {"doc_hash": "e044dde36e6a62442cb7d8bd975be4a63c1b2392ad5a165f1ed0ff43ef470d1a", "ref_doc_id": "d83db27f-c410-4a68-b2ae-60f7d4c64336"}, "0e9fafa6-e0e5-4909-9c28-f1b6f7ea8b32": {"doc_hash": "f813ccb6587ba5d7dcad6b117cf12baf416ade216b379a4e75a366068abb495d", "ref_doc_id": "d83db27f-c410-4a68-b2ae-60f7d4c64336"}, "423f1477-2d3d-495e-9406-4e2f99d3578b": {"doc_hash": "442fba64b99fcbee9f6ad423efde9b542ccc9830636b0abf3dc7b6338b6cecdf", "ref_doc_id": "00a5842f-9017-4939-ab74-64008f39499b"}, "6c9162e4-f31f-4ffe-975f-7ac2742fd106": {"doc_hash": "9fe2993fd3c1963f50edf6c3070ee779138fd5fc5c71007c21818123ce74fbfc", "ref_doc_id": "00a5842f-9017-4939-ab74-64008f39499b"}, "44591e19-065f-48be-8c1c-7fb082f611c9": {"doc_hash": "971d9f87caf505ea16cbb4ab5ffb935dee4e91a11b485b5ca09b1331dd1c11b7", "ref_doc_id": "8579799b-e319-4661-912f-355d7b3fb9bc"}, "a71d2cfb-6cbb-4fec-8787-603df817e6af": {"doc_hash": "575a5b4c96f64f5561ad67aee8e3b5c7d709668cb806024750f61c15af5ea391", "ref_doc_id": "8579799b-e319-4661-912f-355d7b3fb9bc"}, "bb460d2a-c4a3-4ede-b4ec-c0d65eadaa7a": {"doc_hash": "155bbb505609ebfd84906b838dae99a9d5983c1157c6d7c210ebfb86f0d51317", "ref_doc_id": "2e31394f-39cc-4c43-b8be-587232773edb"}, "179ab2af-e03a-4437-9221-f39adb475d8d": {"doc_hash": "e4cd8a7c0bf078ce310cb41b59d920543d80fbce95d87d8309cbb9ff2abb9f95", "ref_doc_id": "2e31394f-39cc-4c43-b8be-587232773edb"}, "88060d9e-36fb-435b-bb33-2733ff137f4b": {"doc_hash": "321f7b414f3dfb6184c181776d53a92fac4daa88ca66edc5b077752bec6069cb", "ref_doc_id": "65ef89c6-165b-4857-b1fd-c5cc5b7d38ae"}, "42ad2b31-fde7-4eee-8329-ce32b0a31111": {"doc_hash": "bece8cdf609ddb9ccf5bc4b1864374dc0bcbe5a19bd4cfb79221aa204126ec77", "ref_doc_id": "0b629de8-3a47-4a3d-a3ac-248a560fc3c7"}, "e10e8eef-5d5d-44bf-921a-a6fb663c549c": {"doc_hash": "0757f494ef0f7a7eaef8dbdb61fa04035391fddc93dadab4fb2a00b2faf94e5f", "ref_doc_id": "28f1f524-87f1-47da-b400-a532030980c1"}, "b1e86450-cc22-4a78-a1e8-095a1c8647df": {"doc_hash": "792aa4fb2daf0539eba25fcaabdafccbd1e363d8b939d48e3e2dfcd573a56a1b", "ref_doc_id": "28f1f524-87f1-47da-b400-a532030980c1"}, "72c31dbd-debc-4e2b-850b-c549d3574b62": {"doc_hash": "bceaf059365bc112385c7950f6472fa951a330ed708547509e83b633ede60e38", "ref_doc_id": "8028d069-bfd1-4d8e-aa39-50b2fdc8f9d9"}, "71b52179-8e64-45d9-9aaa-fd8bd0cadd02": {"doc_hash": "87d8ac87bc0e054f86a610efe6b4bdaabc2489df378521042113c045e6ea1897", "ref_doc_id": "164b06cb-7e1d-4aab-988b-58f5520fccef"}, "a088c3cd-fa44-4627-a5d7-fb8db1533b73": {"doc_hash": "f50b4b640df3b6a4d338cde88dcfaa79d84dccca04632a751c22ead614fcfabe", "ref_doc_id": "16960f53-567e-4a21-ad3a-23d15b0d03ee"}, "2d50ac7a-bca4-4958-a399-8654b930326e": {"doc_hash": "d0967f06c6e08a89b71c9aa9fea59fec10b1b83dda507bc3471b4b161442edd9", "ref_doc_id": "30ee295d-daad-4fd8-b07d-05faeaf21546"}, "3ae95ff0-49a0-4a57-a591-78a57df05494": {"doc_hash": "5d33bcd4ffb2a3796fd8974d999683a9e86c7f8215ef97e4074e883239f4c640", "ref_doc_id": "30ee295d-daad-4fd8-b07d-05faeaf21546"}, "f81a0d7d-0a16-4808-9bcd-c01e2674a8c5": {"doc_hash": "705834b4d6ae932dce80f17940a9a075becb8c6320d2330518f18c37fd775788", "ref_doc_id": "02699bbc-a1df-4415-84f7-5ccf7320a3cf"}, "33e4cbf4-4744-4b81-b2dc-eee3ddc1764b": {"doc_hash": "a65fbf7dd5dcddaab8b81a08bd485ed5be9a322cc5b89b89795daf4575fcffc7", "ref_doc_id": "94660f53-787f-41af-b42f-be0dd3b4dde6"}, "d84e26cd-8b73-4276-aa2a-af4fc453ed41": {"doc_hash": "3cecc37f7bfb988636f5547abcd676b3ce70d9699af029be2a3a5a188d3ad7b1", "ref_doc_id": "0d32ffe0-fb10-4f05-9c4f-8b86de29f355"}, "e6cab7ca-fad8-4790-bdce-0e9c15c2afb7": {"doc_hash": "cf516026cf59b8a59e8a632c20fc55e950bbd95e04031da3ffaed96fa04a9cd7", "ref_doc_id": "b7e18ef6-5672-44bc-93e4-ac25b624327c"}, "f8f639d3-34b1-490e-a0c5-4c0b9efe3c7a": {"doc_hash": "b6fc216ac03192d909655500ac19bf442c681fc66ea4c31cd76a96e1b19a0d61", "ref_doc_id": "b4a3c896-fdaa-476a-86f0-34152c768e9e"}, "cefccc08-7544-4506-8f0c-d4cd71cc8aba": {"doc_hash": "0aea2745ea89488e60897976741316595cc4d0448b3cc545e3fe08c2f57f4646", "ref_doc_id": "f8879d15-9fd1-4b18-8e1f-f3b5e977eec6"}, "573ed616-92df-4bae-8df9-b38ed46b0122": {"doc_hash": "294e2bab146be0eb6040b2666d0502b39cf2814b0b0046e51bd719c7ea8ad79b", "ref_doc_id": "201f557d-5d61-419d-b92f-18941f83cf1e"}, "9efe43ca-a254-4dc8-ae0e-f8e417f661af": {"doc_hash": "a5b2b574a98bd03cfa0dc1791fc0acaac91b7b1ecf962f3b3b24a7fecaef4b33", "ref_doc_id": "201f557d-5d61-419d-b92f-18941f83cf1e"}, "04b10f32-13cf-425e-b124-5d789b62304d": {"doc_hash": "1222da75136890e46f29a4d6d02f5458b3c68735ed16915967ba0149a8168b8d", "ref_doc_id": "9e373bc0-ecc6-49c6-aab0-b9228245cf2e"}, "74586c1e-80ca-45dc-b2d9-aa062d1f2731": {"doc_hash": "e14b36dbf3f8ff9e21b04ef217648a464815fbe8f08f9277ec8fba26560de0e2", "ref_doc_id": "9e373bc0-ecc6-49c6-aab0-b9228245cf2e"}, "b896d10e-61e0-49b8-92dd-8cc26b882625": {"doc_hash": "059f45a12be9197d45ae941be0261826e8eedeb88e05013b3ec1ca947656bbf8", "ref_doc_id": "95b8b164-623f-4b24-a30e-7a44bf01844b"}, "82295db2-23f4-4c17-9cc4-a39779878fa8": {"doc_hash": "4a6d7852dc6f3a341f993d29a94241793c73c4d411cb3fdde3ed5ff826a223b1", "ref_doc_id": "1b7d3748-0e3b-4140-9483-d7db2fc8021b"}, "3461aaae-7ad3-4923-ac2d-d48e0d88ce6b": {"doc_hash": "f16bf79f24d0469c40341b3ae6e2105e8d1821809dabc273b6eb4adbc59adf8d", "ref_doc_id": "720c23e6-df24-4d4d-9e96-78b21638be7d"}, "854f8fff-ea6a-4727-a021-bdcab50fcdd0": {"doc_hash": "800ff0431fff0ff8e946d8127be56664e7abc6cd59af1dca7959a00461956463", "ref_doc_id": "e4814b2e-e63d-4e54-a497-89d90ee54642"}, "1de088be-2c6b-4cce-9221-80556f85522c": {"doc_hash": "49c43e26a056c7c4a94539e89bdaee5393a2106fe8f1de472b7d0e6c628211fa", "ref_doc_id": "cd6f6a69-6d88-45c3-b558-d62fde5af908"}, "8ddcbda7-c086-40e0-8cb4-6420252216b8": {"doc_hash": "dc5891bfab3ce1f601a23dfbc3f2fb95abf51c98409e2bd43d23745e875e176f", "ref_doc_id": "a0e78c0f-da99-45cf-9325-4ea90c7fae77"}, "94c5e137-7f74-4302-acb0-534f3b1904da": {"doc_hash": "3fd30cb63e4046e23a46431f99385be0093802364620974a34cf21d396b9cbee", "ref_doc_id": "a0e78c0f-da99-45cf-9325-4ea90c7fae77"}, "9f6208bf-709a-456f-863c-411fcc9bf40a": {"doc_hash": "f233e14f432f562f71bb53fdaf35931f4e8fe6a9714af91ffc9b783b433111bf", "ref_doc_id": "2a8ed719-e766-4b9f-8a12-8f8995b5263d"}, "f0d6736a-da6a-4c16-97b2-e47575493e2f": {"doc_hash": "21231720534067cff35abdbaa436fb8bd79be1c17e736d99ffbdc8dc91224ad0", "ref_doc_id": "2a8ed719-e766-4b9f-8a12-8f8995b5263d"}, "a2841f79-c1c0-4998-9a0c-2a95977b9525": {"doc_hash": "0d01c78144c73b95a98f26629266cb8d3a19c53f21bdd60bddc2f6da7a8c7d54", "ref_doc_id": "570fceb4-40ba-4773-ba0f-a65d8bb912ee"}, "7165d15e-e885-4442-9b05-12150cda98a8": {"doc_hash": "16c1177294461c5f6bfb0385c00d82390f83fdfab98c4d7db97ac607e0f9d4fb", "ref_doc_id": "8b37ea0c-24f9-4dca-82bd-a5f1b131f589"}, "9d5f5b2c-a94f-4426-b5e4-7eebbf6da0ff": {"doc_hash": "9689596e20b0c82fe56793bca3ab74ecc0afbbb6bd963e577552dd1b832ec7a9", "ref_doc_id": "b0c5720f-2520-40bc-a291-2aa5320a7138"}, "6e89af5d-f00c-4627-acda-ee950b5cd143": {"doc_hash": "08230eec6b8fd328780749ecee853164da44130bb8bc7cc87e19f98dbf339c79", "ref_doc_id": "b0c5720f-2520-40bc-a291-2aa5320a7138"}, "81b11957-7426-43e9-96ea-ea54e9347fdb": {"doc_hash": "c3c8f420a14d82c90f615209e7fceb3196e28cac17cbeb37191a437655c6fd73", "ref_doc_id": "5419bc8b-d3d2-4389-a28e-5d735fb70a36"}, "d2828290-5547-47c7-80ce-c051673d4c70": {"doc_hash": "bd43b795f8f7c243d518e759ab77d6278083dddaec8b8279ed9ee66f9556e840", "ref_doc_id": "c4bfc011-c184-4fc8-9f31-dd61a502bd0f"}, "e6991790-6b23-4930-bcc9-8539635f63ce": {"doc_hash": "7505011c0f0370e76246085a15929e18e808ba996c98784c1a6dcd74d64404b1", "ref_doc_id": "b3b5057d-d9bc-45c7-b2fc-4b282ae26e61"}, "ba529725-7aee-4fe2-aa5f-c5d500bb6873": {"doc_hash": "e0e025be7eb760e8cfe0df353fcf137b994ce0c5cbb93fa6f0b9fe13fe92a16e", "ref_doc_id": "505edeb4-876e-44c9-89fe-cf3f1a329a78"}, "cf9df832-3a02-4ad3-b56b-3f77ada1f5fd": {"doc_hash": "65c3750fb50ec29ea869535f4125b20604dbd52f01b27424d6a32d06b71deaca", "ref_doc_id": "505edeb4-876e-44c9-89fe-cf3f1a329a78"}, "4aaec4b2-a3d9-46f6-9c1c-481ca5f70633": {"doc_hash": "4dfef80090712a0dc2ebf869e7c4653506af6c84dc35b6a66467d761b5abdd0a", "ref_doc_id": "3bcacd02-e253-4b7d-93db-4d7d173cdb64"}, "eaded1e1-5091-4605-9585-10a757077560": {"doc_hash": "cacec5909daac15abd8472c171f43b058cc98f5011d3f87657a90197d58bec87", "ref_doc_id": "3bcacd02-e253-4b7d-93db-4d7d173cdb64"}, "2dac5018-7acf-4701-a700-c57a7bca758c": {"doc_hash": "31fcd83a6af5c293c8a5bcbf47c2f0007635c04e8150f1b8d824692395443ad9", "ref_doc_id": "cceeea3d-3002-4c01-95c7-7d387e36af00"}, "ebc4c799-ff92-468b-ad67-0990aa7b2955": {"doc_hash": "6df1927fb91ea5fbcbf1da8db0cfcfd81b230b9f918222e14b2f077b7e6ca059", "ref_doc_id": "b08fd5d0-e215-4802-b725-9d6af447cc33"}, "dcc1f61d-71a4-4dac-9866-8459ded60bce": {"doc_hash": "db602cd9fd1e9ad959123e9d14200b76271efa7e3c6cf333bc4eb063926759ce", "ref_doc_id": "0ff41244-5b87-4e0e-85dc-c57e77e130b1"}, "3708d1ac-113f-4c1f-b448-983513aab3b6": {"doc_hash": "df68baf349abdd278c48f2616f90d46f6150575452442c93ee2ea60e64aaefc8", "ref_doc_id": "98bbb677-751d-4d93-9962-7e49528bd2bf"}, "677862df-081b-4733-8a2a-1a40a5d5c706": {"doc_hash": "ee9023341967698fdb8296583eadcab62024eceef063a09f376d939f5f6b60e3", "ref_doc_id": "6a73139d-e85e-4c3e-acf6-ba63f7aa8c19"}, "50568410-9f92-4d60-b3ca-ecd1034f2eaa": {"doc_hash": "706e399f521f88a65ac8b128adacbee7a70b9988b5e6fd22c9ba1e90dbb9895f", "ref_doc_id": "d9c7b8c1-7e64-425b-8c69-3c9938cab3a6"}, "e685ec38-941e-453a-bd20-ea7b4283fa86": {"doc_hash": "9e676400bf9c4329e1463544e651ef5c02cff58d71c432646a7fac892365bd92", "ref_doc_id": "a35bdd4f-0ef9-4b16-b44f-30cc8cce69e7"}, "67f6d0c7-898c-4958-b206-9b1cdea1ba07": {"doc_hash": "10d9c931909c31458127593407361fbd5dcc6dcdf3dee570c92f5420cf532fdb", "ref_doc_id": "7592c211-ad5d-4483-89ec-c29d018384e9"}, "b060f30e-6ee3-4cac-ad29-dbf098e40445": {"doc_hash": "843f54dd43dd1431d1b40fedffe19e89e5b6a7164e5e207a094d84222a5b1b44", "ref_doc_id": "7592c211-ad5d-4483-89ec-c29d018384e9"}, "ae38bb0e-d32b-4c70-bd27-4c3026d8b6bf": {"doc_hash": "1f0838f476e85b020a48a45bb5eb1dd9b5865a62ed7292111e58cd36e1500b2b", "ref_doc_id": "82ca54ac-254c-4c16-816a-aeb47e43a026"}, "8c32ed54-bb95-40f8-8ca5-ebe666011ac5": {"doc_hash": "df59fb815a386258fac23ac789da6205dea9135c49afa86a7fe0b38d563e2e25", "ref_doc_id": "82ca54ac-254c-4c16-816a-aeb47e43a026"}, "46fdcc6c-7002-4a2d-b1e1-28286298c6b6": {"doc_hash": "cfa92e6ad3e1fc20b2b2f69c762c548b14a2f6f23433899c848ef1758785df8a", "ref_doc_id": "539b671e-252e-47d3-83f4-4fb086e619b1"}, "7988a0b8-7bff-4d55-8877-ad3a7570f1a2": {"doc_hash": "303aabb0904503e84426607bc7944d5acb685b2a44d5ba72768d33208c261ac0", "ref_doc_id": "539b671e-252e-47d3-83f4-4fb086e619b1"}, "d98fed7b-1414-428b-a54c-8dde77f3f76c": {"doc_hash": "09e0af85c8f351407f7c138dad6c5be15e350f6a9638204b8cd4ae0e9aafbe4b", "ref_doc_id": "5449077e-d179-4824-a75a-41c3ed71c337"}, "424f6f3e-e511-4e40-ab8f-ed374d107594": {"doc_hash": "b30bb324153213531c023e8cd193236d9c229f0599aa0af56b247af8a6f498af", "ref_doc_id": "2073e0f3-4fe5-4407-a994-88305ff20770"}, "320b3a99-8f04-49f4-aef0-347bd1ea6fdc": {"doc_hash": "5e1c786f7df2eb75c9fe4ced8221578793d9d5ebbb0ae5751ea7d28507b4427b", "ref_doc_id": "2073e0f3-4fe5-4407-a994-88305ff20770"}, "4fa5ec7b-9e0c-4185-ad0a-087f409175fa": {"doc_hash": "e4fb7928eb96c7100f7e25eb9c8864fba2c58bcfdd9e149af93632a2e7b833f3", "ref_doc_id": "80ad3994-53e2-4326-903f-503fd21f505a"}, "368c2271-568f-4caf-953d-dcc2eec54100": {"doc_hash": "9cd45db844f441aeb3ee508980d0510fe8ca8309dcebaa294ee7360d344aa303", "ref_doc_id": "b6b47ce6-d660-4878-950e-5c674b593a87"}, "5a4a5e4b-c9eb-446e-aa06-5832ea605c03": {"doc_hash": "4aa694be3590b5bf6cb4d4f2a0b3afb43b667c1a3c755ba032c559457e3460a2", "ref_doc_id": "3343c01d-b616-4332-af5e-44fa55b4234d"}, "ae74e51e-bef5-4c9c-96a3-1db7b646b3ea": {"doc_hash": "c9b6cca0fc3055bee5e381928818e089073a07004bc2b9a8b7a35723a0b2c142", "ref_doc_id": "3553a940-617e-4492-aa86-380626e9ee8a"}, "24d91793-7977-42ca-934d-fbff41c712ad": {"doc_hash": "d15ac7af0143c960a7921b8397fb9360bd77053cea037a124165196a664a3388", "ref_doc_id": "3553a940-617e-4492-aa86-380626e9ee8a"}, "0753eb33-6e21-4e91-9bef-05109152ff48": {"doc_hash": "319b0b7c4dca19b83ecfc6b6b4aa977223baa5480f2610fe2fc3b6abe7c3175b", "ref_doc_id": "622bcaa2-9fbd-440c-b621-add1c94dc179"}, "f0f60573-1f2d-40b3-b48b-6d6afcc4a193": {"doc_hash": "cde99b1339c55617a3b5ec19176226b3b48be959effae83ad46b72925131bd4a", "ref_doc_id": "654c4d42-60c2-46b9-92b1-d2a697f5641b"}, "e1566818-8d78-494d-a7f0-5895a46ad573": {"doc_hash": "a45be1fdf6b8d42d6806ed4008ea1a382e554e313057179d6753cdaa728a9c5e", "ref_doc_id": "47bd1ca3-79cd-4799-96ab-7d2f5defae24"}, "60eebb48-3c16-4f2c-a91f-7b9ebfbfe8f6": {"doc_hash": "9564e4ff09512d7dd9068587636e9619edbc177968bf2f359bd6bb409ed2c25b", "ref_doc_id": "99922753-730b-412d-af74-78ea435d32ab"}, "3d9d8122-5620-4834-9d73-db80c49bb567": {"doc_hash": "7a949c770eb9287c32b65928c57a8925cc82f12ab534146fb29ada668061764a", "ref_doc_id": "33f4cdfd-a7d0-4a38-a805-d7123d7e3184"}, "65e472f7-8731-454b-8425-fcbbbf7d48f2": {"doc_hash": "c550fd85d625f82dd7d246a22af85f61b5e9d25f6b39340a6f302a94590d84bf", "ref_doc_id": "7b6a294f-5837-4869-adc9-c2f393b99ee4"}, "b51d3afc-5582-430d-8a39-5126f3b98640": {"doc_hash": "b7fa241cad68ea419b063e9db1dd8b528ddfbf89085fb369398cf077997859b8", "ref_doc_id": "753e0c41-6f8f-403e-babc-5c3b534bda52"}, "ef8792c1-1946-4d16-80ae-b3b5fa875815": {"doc_hash": "36f4b1e1eadbf9b046ae392be33cae60f3fb97ada44c6c5c71a800787a4605a7", "ref_doc_id": "753e0c41-6f8f-403e-babc-5c3b534bda52"}, "0e71e6fc-0505-4656-8cbd-d417f2d418b3": {"doc_hash": "76703acc49856c54a2414f63d2393bdd6af6342edb3b3ef93aa0892c8c6c0914", "ref_doc_id": "c387eaa3-17e7-468c-ac6b-cb3943b12493"}, "9e0addc0-66c5-4fd2-ac7c-435397ec96d0": {"doc_hash": "bc482a193b900044d1fc96271022ca1c5859380e1df4ae14eef1e82d88cd4904", "ref_doc_id": "c387eaa3-17e7-468c-ac6b-cb3943b12493"}, "aaaf276e-64fe-4d16-9d3e-505aed3d3d0b": {"doc_hash": "89fa651819391cb0e49b389cb3092e8f7ca0053e362c02f23c233cf83a59033e", "ref_doc_id": "02a6c621-50b7-4008-a9db-cd1592ec068e"}, "a0cd4116-83fb-4969-9f45-a5abbd84fd59": {"doc_hash": "6b9910183082cdb4f28e74866da55b29853e6a4f02bb38064849b927e03191de", "ref_doc_id": "91c9436f-d154-48c0-91d4-d6bd38d1b9d8"}, "12fd2304-b215-4128-910e-c06652ad82d8": {"doc_hash": "eb5d48157cd6e159daf5d07ba7cfa0a8440fc5fa8515e21656adeeef21783200", "ref_doc_id": "91c9436f-d154-48c0-91d4-d6bd38d1b9d8"}, "98e344c3-3be7-44b5-ad33-d071acb14bd5": {"doc_hash": "bdffd3e10628e93cdbfe4484a742c6e72105d786305af4962fd24a6c52a8e741", "ref_doc_id": "29022a59-b1fb-467e-86df-2e1a58b1e8af"}, "067ea3df-13b0-419b-b49c-e1e1db259c0a": {"doc_hash": "46d664765649b631da04cf19f55924cd6eabfc1c08b0934f505e2c9d85906fbe", "ref_doc_id": "a31e5ee0-8e84-4c9c-8183-31c6142af2e8"}, "7d8bf80f-c94b-48c6-bbc2-c79d2a1cf351": {"doc_hash": "d453018b2c5b33063d37bf641aaed54fec9886b24dfc18c61e8615500f86e64a", "ref_doc_id": "d1930c6c-fc74-45d2-9cec-100738be13c9"}, "b121e7bd-9984-4936-a304-97eb54ca9cb2": {"doc_hash": "5e6bb124c593efb0baecb3e9749360a28cdc0ad661122c789ccb7731b594926e", "ref_doc_id": "a80b34bf-1067-408a-9895-b9824bbb6de0"}, "5354e4e5-0438-4e3e-8705-28334b11c68f": {"doc_hash": "c541c8b4cf0d115f62a8c24d8e158673e3b722bfc51d00145b87d6e047ab5a59", "ref_doc_id": "7cf594d3-0793-4685-ae3e-3b5ce08460fc"}, "c1d8c36b-f22c-4aff-aaa5-adb74d358fbe": {"doc_hash": "52cd1fee83369f15d340026fe9d7b8a4c9474a202e60099ce870c69767fc45f8", "ref_doc_id": "6989a426-d5ea-4a40-8303-9669649683ad"}, "a94696b9-22f9-4e90-b5ac-36850dd17f84": {"doc_hash": "ce9916899e7992a1637834a68a526a94e96d1e39fcd5a98ba4df0a0a1259a07f", "ref_doc_id": "fd8dac9e-ec6d-4e25-99bd-4338d02a8ef7"}, "61ec6fba-391f-408a-a425-db89bb689cb0": {"doc_hash": "21ee18b9f3dcfe5c205e671e60eaae3d8abecb6343cb58c82b8638daca66d006", "ref_doc_id": "fda02e31-0ec6-4f6f-ab09-b5ea1cc71b26"}, "8af08fad-ace7-4356-a705-3f5fb74c638f": {"doc_hash": "fb6881478ebdbee014e40c603daf22f8e2d35a3c6265556f1ac2690a70fdcd19", "ref_doc_id": "fda02e31-0ec6-4f6f-ab09-b5ea1cc71b26"}, "b28aa2d9-705b-411a-a009-df9a4272fc9f": {"doc_hash": "0570d8e9d5360a510bad673416c76f3628683b53ca29391cfdd2ce270ea67152", "ref_doc_id": "5b1094bb-ca6f-4ba6-9914-c1f075d9d494"}, "dc2600e8-6e3f-4367-8e18-e98579303629": {"doc_hash": "a8d1308d29b22eebe536164e76e9c0d4bb30112fc4dd1b90b6a725cdf94caa39", "ref_doc_id": "0d5bab5b-d399-46da-9336-9bb147ea4a5d"}, "dbfbe41b-d4b7-465a-8808-a808c8568ad9": {"doc_hash": "a209702531099ee72f4dae775ca6ad69f9ec1772afbcd5deebe288ec6d3ae16c", "ref_doc_id": "3c7d77eb-3af9-4fb4-ad94-6d036161194b"}, "d13cb459-52b5-4cd5-99df-12431d91be5a": {"doc_hash": "3361a88dc4606748576e7982c804e0ef49b4fcf56a4ffcf6f3c5f16679eb97ef", "ref_doc_id": "3c7d77eb-3af9-4fb4-ad94-6d036161194b"}, "e28396c0-50e0-4a52-8a85-adfd86710c81": {"doc_hash": "2c586b0e8a8059e11ee24479b86d8f26520b87657f6ee083134b9ac0ff0185ef", "ref_doc_id": "1d6b68f7-31a9-4ce9-850c-35513a3c17c0"}, "680788bd-feab-454e-8b1f-e80297cbab26": {"doc_hash": "807b389152c8a469b1dbe47d642926b488a479b69a0cb0f5fadf1390a7eeb46c", "ref_doc_id": "c12bdbb5-afd0-4849-b772-9436b2169c25"}, "43cf18c4-5206-41c4-8c29-30b25b360497": {"doc_hash": "4540baf86ceac007f2f679c8b416c733c168ca656c9d4435c0786f066c1a4286", "ref_doc_id": "c12bdbb5-afd0-4849-b772-9436b2169c25"}, "eea6bc82-3618-4201-b8b4-0ff471dcb0c4": {"doc_hash": "7de5a4de2219f89577486f6d958e69ce13b53496de538fd9dc084aab4c89ff57", "ref_doc_id": "a5240837-6a36-4340-bff1-97546f4c8132"}, "1dcbd81e-9a18-4535-b0a1-09017bf5acb1": {"doc_hash": "2978646d28d5fb9b0b68cbcc31deb16fff8ea7c97b31f860df822d56ae720e79", "ref_doc_id": "ec19f834-eaf1-4b5e-a4fe-5bf50a606e97"}, "30f51ef8-5090-4264-a8c3-0d2d8b4bc54a": {"doc_hash": "9c4a4fd407f57a4cf7a328dc7f89294d876c0e10e4dce244edb51c3d1f1977f6", "ref_doc_id": "7dc6e144-71b4-4faf-942b-744e19cd4e8d"}, "96114eba-be67-442a-9220-9aa051a2ea25": {"doc_hash": "16650ce0e54fa5281df22b2722a0f3a054a9845b7c747a2eb5d358a3f316f65e", "ref_doc_id": "2f7e7c5f-2eac-40eb-8f9d-1a1f39ae5a32"}, "58687c06-6852-4ccb-9fc1-481ece90b121": {"doc_hash": "288021776afc3e9db7f53bc85f6d6a4622b08b1ff5fd92db15d37fb0d254e402", "ref_doc_id": "cf3bf32c-7713-4497-b0c7-9a091df0443d"}, "d261bc88-972b-4d20-9afe-e9654852b151": {"doc_hash": "6d1df9fc9c6c6198979e9bc8e1f4ec17e8800ce7478329a96a1a4efe948b9eb9", "ref_doc_id": "765ca9e2-504a-4b41-9312-4178b1b3dbc6"}, "6dfd46e5-594b-4e7d-ba2c-5e2b6d036c7e": {"doc_hash": "d83e07aea342033f1d40867c9eace2ac485142d672453c16c97d65e34c0065d5", "ref_doc_id": "765ca9e2-504a-4b41-9312-4178b1b3dbc6"}, "7d29c55e-71fe-4c19-89d9-9bedeeed25d9": {"doc_hash": "d075df8e97aa9d10456f053b52c7f4729612de410d4a840f9004c80f5e0adcf6", "ref_doc_id": "bc0f2de9-5e81-433d-955f-dfa422536662"}, "5fe305a7-3893-4c2f-83c7-941e8b6530f3": {"doc_hash": "928650eca499b11719961737e390d0634b01cf4467a9095a383b09eb26470bf6", "ref_doc_id": "00362a1a-3e53-4f0d-94be-14b845326781"}, "aee8acc2-a8aa-41f5-ba38-376864ae3766": {"doc_hash": "70d0a69e4279fdec8d9a04e7c407c4db793bf22c1934ae9eed858bbb41408bbb", "ref_doc_id": "00362a1a-3e53-4f0d-94be-14b845326781"}, "8fec5790-dc91-4b10-ab2a-3b834ee5282a": {"doc_hash": "77b6a04fb2ec1be58a7eb2d835bd5bae75bcd68b8706b8d9e2dd5923d9150483", "ref_doc_id": "be95984d-d42c-4999-8f9a-904c9cb19d3e"}, "2c33e381-6842-4964-911e-a817ed101483": {"doc_hash": "2de9047d1b513bd11739eb802d384ed7f69b0072096455b2f6254388a5931f0f", "ref_doc_id": "be95984d-d42c-4999-8f9a-904c9cb19d3e"}, "3065fb0e-8478-4475-a6ab-68c2ee3fb0a8": {"doc_hash": "904f2c8cb3543bf0fea4dab32ec53120d1a5a405c27f0e6c0c3a77f69e398f13", "ref_doc_id": "5cf72c0f-04ff-4ef1-ab5c-4e4005c8fed9"}, "f1eb3f2e-3957-4e57-8617-22ec131d4492": {"doc_hash": "5ca290c238b224ffe95bc22978a00f509034b6b486a486c617dc91c80e4df74d", "ref_doc_id": "b10e859c-193d-47c0-aef3-11d2f0148ee3"}, "a1f4bb8b-556f-474e-a210-53620b0ac5e4": {"doc_hash": "e452c8a00d5e087ed426ce0da434f76ba2de03f5762bc6f9368183e2b8cacdc3", "ref_doc_id": "6d50c8fb-382c-4469-8f7b-1f9f2f62c1a1"}, "f6d269b9-3f9a-4205-a0c3-0520cefd28d5": {"doc_hash": "0bb9b69a05c584490c87f655b08536514a8a4f27a79cdc901bad25eb7225fb97", "ref_doc_id": "b4656e68-bc74-497d-a128-f8bd2dd25a6a"}, "21656f14-ea9e-4038-a113-d072df6f9548": {"doc_hash": "dc012751bb2da4cc88c179e4adfbf973cda21d478ac24c59944c19c8a96a5902", "ref_doc_id": "b4656e68-bc74-497d-a128-f8bd2dd25a6a"}, "a4ebb4cf-dfba-4356-b2a7-0bef62841c90": {"doc_hash": "09ecf6589db47825210e96b9bb80bfdc88cebca4b93d53fb038ef76d49075e44", "ref_doc_id": "1d7a8027-23e4-4f9c-8009-134d00c20ea8"}, "a8a697b4-5494-4581-b28e-feb3eca228be": {"doc_hash": "03af8077565d3c79c233dbd188cc16c1f1bf5b27f3cfca6ab21dbd324cd075f5", "ref_doc_id": "0381a1d6-3dcf-41b3-9be6-182346ff46ab"}, "c10acca2-64a3-4581-af6c-1cec3d65ffb6": {"doc_hash": "6d7579386b2ca66752e26de7019e2f392480a74afdd715931f5a4bdd43eae728", "ref_doc_id": "b4560112-5b79-45a2-a86b-1093e711da46"}, "06995493-5ec7-46c9-84a1-7d0f53814461": {"doc_hash": "7cdb5ad68899ef030c0d1f2a5a498059e9118e8b6a4a3ecbe4f4dc3746237eb8", "ref_doc_id": "67e171c8-68dd-425a-9f0e-d4cc3ce80b92"}, "8421528c-4592-47d0-9cdd-54bd5ecb27b4": {"doc_hash": "c102e1bee52fae90a23702092742a90986c7ce3dfda3de1295790f068aaa3460", "ref_doc_id": "7961492d-ff2c-46c5-83df-5dcba24c8aa7"}, "d20172f2-247a-4275-9fee-0c08d163c460": {"doc_hash": "504157095edf4e50aac80b0e5d9babaaa8c5fef0a1f08dac60ae33f10489d299", "ref_doc_id": "87bd58c3-9b5c-4ed4-ad3a-3035432f6117"}, "6fa5f4ae-4f48-465f-a05d-3f163122a5e2": {"doc_hash": "a3686ec76bbf604db2a6842cb8ea7dcc28951a24a41ba5d13bef2ee09513eb0d", "ref_doc_id": "e8c4e379-f533-4c97-86c4-08ce384a9998"}, "ecb31328-e429-4b2c-b81e-eac60cc29538": {"doc_hash": "1d79b3ae39e7141e5189289d0553951a5d9bf4274be3bc6fd94d348deb29a4ce", "ref_doc_id": "c1dca49c-b8fe-46a6-9ff1-3c0399ffe74c"}, "2adf18b8-a296-4c14-b7cd-680607590d65": {"doc_hash": "78a9c69c96815f4773a73ddb113c7af3c6e294c94ec7ed80e1275595ac63265a", "ref_doc_id": "c1dca49c-b8fe-46a6-9ff1-3c0399ffe74c"}, "25f6289b-d528-45e8-a98b-48b448f6ef8c": {"doc_hash": "02aef64415fe0813e81fb6bac3bb38751a79686af2f0478d541cf476bf05696a", "ref_doc_id": "49add987-bb96-4545-b0e8-446855d3d298"}, "644729bf-cdd1-4b6e-9116-0550f4e06b1f": {"doc_hash": "fdd1abb72bda3db6210770393f49e127e09c54a33555af465a10ccd9ae862d48", "ref_doc_id": "ce46fc25-7a87-4764-82d6-f4d52d64bc51"}, "cf2e0f84-1c82-4dd4-9b74-d2fe627f7d16": {"doc_hash": "ba2edbdd0fd1bb64dc2663bd712a91335630fab744739db8a69e05f9bbbcc57e", "ref_doc_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60"}, "1dee60aa-417e-4989-a831-17b730c7a229": {"doc_hash": "ba6d345ac3320024f1bd38922de0dc0f772a0dd41a1fe487421d926721b4bc0f", "ref_doc_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60"}, "63546c38-6a6a-45ec-ad89-28856b2adc27": {"doc_hash": "2e45e17c898d06338bd0d98d67ed2270c2d389981751c5494ecf8364ec31998c", "ref_doc_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60"}, "bf0c97ec-1001-4807-bd89-68c7724e4fca": {"doc_hash": "3477b1f75e104559f635c1be6e65648608c6751197328bcdabb2b3cf8d092f0c", "ref_doc_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60"}, "7bf3573d-2324-436f-a8bd-809dd157c87b": {"doc_hash": "f6e8eda56fdfb4f14b01454a6005b83021d47f74afd3e244ea633170dc0bfe6d", "ref_doc_id": "0566410c-3875-4367-9a7e-31397687b0ec"}, "11ff767e-b08d-4933-ae5c-bed57e90dcf4": {"doc_hash": "48dce1e1128f556b7572623d29c101673b80260dca34c26de8384afd307dd346", "ref_doc_id": "0566410c-3875-4367-9a7e-31397687b0ec"}, "7027af05-2a02-4140-a64d-1dafd18af326": {"doc_hash": "281459a159f557e1ecca0a7df145faa903494ba7e1d65230b96a187509ed2391", "ref_doc_id": "d2ecfef4-741e-4a79-b534-5473c03d6d53"}, "a971eb50-6399-4b9e-9431-3af9e6e0ee60": {"doc_hash": "d2c9c79c001bf73ab2b171735defc260d7473f5cbd2940aea0571edd0cbf4fbf", "ref_doc_id": "371c647c-4326-4058-8c53-dee918ee9326"}, "8ee84c82-8fd2-496d-9054-dd6b494da394": {"doc_hash": "7749ab926622e7559cf36c685f4f277850f88df7c0b647553c2031e270f7c3a5", "ref_doc_id": "371c647c-4326-4058-8c53-dee918ee9326"}, "e47add75-abd4-403c-8c8e-daa6181c0330": {"doc_hash": "c6905cd7a3d87d33d88dac8d5bf78a3436116d785a064d41b3ec81dd2d1dfa5f", "ref_doc_id": "371c647c-4326-4058-8c53-dee918ee9326"}, "a0c1ee18-5bb5-4124-9ff9-a44ff8ae6730": {"doc_hash": "c825d52548c1b87d0b01f71606506de55e54d758462a8c3b5afcbf651caf88a9", "ref_doc_id": "18598596-a2fe-4316-ac0b-06416604831c"}, "6afff525-7d8d-4a71-a9e9-66b6d97b4089": {"doc_hash": "f6639e7b59fbd36944a87cc165bf18574096801dfc6a2b5dc1ba02dcd831ec84", "ref_doc_id": "18598596-a2fe-4316-ac0b-06416604831c"}, "bd3d003e-d912-4d78-bb91-5cb5fa56ba53": {"doc_hash": "c80d6561e3ae4e65995988b846e710ec3305f0c356abfa91fc36a9e412458fdf", "ref_doc_id": "30845a06-7e73-4567-8181-8e8f1eee8763"}, "6bac5002-2c50-45cf-969c-ce3283a4c6e7": {"doc_hash": "07b8577899311d33b6fe737895e34c61f41de1c987341745c3a8d117acf5a27d", "ref_doc_id": "41ca359d-6965-4197-a39b-b9e6cd1de0d5"}, "7a17fc8c-4258-4731-a63b-ff1cd195eaf5": {"doc_hash": "b4f1c12b1fc3823fcd5b199865053a4bef868349fcf8612d3088bb0f71d4652e", "ref_doc_id": "41ca359d-6965-4197-a39b-b9e6cd1de0d5"}, "d6d916bf-f729-4c72-b28a-8db2c1d792e7": {"doc_hash": "4a9323a6e4dbf553b0dcf0f3084732d4009ced726f62e6babb610783c5a94a16", "ref_doc_id": "23ffdcf2-17e4-453e-bc9c-abcd12557425"}, "b288319c-73ab-41df-b75b-36224ce75e38": {"doc_hash": "099256625091e80f386a343fc40933d6b2953e007494aa35e98ed3a08a3a0b89", "ref_doc_id": "d3def662-6302-40ac-8990-244e33a2aeea"}, "0cdd8496-8479-44fa-a58c-834721e849e5": {"doc_hash": "cc7372e8c0bfcfc22e4d540e3ef628aa45a18783fa37e0f0c8fa58742a0a360b", "ref_doc_id": "f6463fb4-11b6-465c-a6e1-73e7ff1f5a47"}, "d5f220cc-9af5-400b-8787-127c519602dd": {"doc_hash": "f81c279f11c1f047beb5a6eb4836361615b0c8091d1c128a84caf159ebbe4c47", "ref_doc_id": "aa4a61f4-9580-48b7-95aa-11ed97ca0465"}, "fed8d49c-f080-4529-a452-3157b94d18a0": {"doc_hash": "1272a54d7391857d7daf947d23f537af54912867a4eff14f419422a288a4ab79", "ref_doc_id": "1cc5567a-52bd-4dad-99c4-66bdd66a50a5"}, "a045ed99-e378-4b96-91da-bc8812e64eb2": {"doc_hash": "6d14760f1be1271acf3a5c83f6b654d39637995161524f3baa87458e44d1c877", "ref_doc_id": "40e8d202-38ba-4c0d-9a1d-b0f084c59d5d"}, "84fd2174-3561-44cd-9b78-15297812e34a": {"doc_hash": "ec8741d6703bb0c74ca56c61a01b68388a7c7abcce062ce331c485458bc2461e", "ref_doc_id": "40e8d202-38ba-4c0d-9a1d-b0f084c59d5d"}, "adc16d65-ca95-492e-9bc7-f124fc3e717f": {"doc_hash": "b57fdff51a74c19cf033ac8542cda53b19e7d319dfaaa4629e17bd8fbd2e03dc", "ref_doc_id": "15692e79-f9a7-4502-8011-2dd396a32dff"}, "e1dbc4aa-2589-4cfa-a06b-40e0cf81c6d1": {"doc_hash": "6dbc77d187f06fd9fad60a26ff2f004e225a5ecdb7a7d977f5d1c6fa414a9906", "ref_doc_id": "15692e79-f9a7-4502-8011-2dd396a32dff"}, "896404f1-bfee-4fb6-abab-b7b9b1cfa63d": {"doc_hash": "b84904fc3343e5bbe08862749ffdc2a409c45e713b84d77516e23bbfebd7aa6f", "ref_doc_id": "754076d0-63af-4b0d-80de-0b0557a5a5e4"}, "2f05de0f-5127-4d38-b96e-752d9acb7703": {"doc_hash": "73d7b821edff8f6b8ce2f3d955f8df5d414134a831e59fed6dff231f7a3e7290", "ref_doc_id": "754076d0-63af-4b0d-80de-0b0557a5a5e4"}, "e83b29e9-09c8-4923-9400-fb8d99205366": {"doc_hash": "4651a9f014eac3bda8f533ecee91bb0e92ab750a713ea26e4eddf0c8bd1f6e89", "ref_doc_id": "45b745b3-b913-4a15-b7e7-8cad3383d792"}, "c91e05c7-187a-4cc0-868b-818186be13e5": {"doc_hash": "9e654c324e248b42f57dab025a6a8705feb3c24f57e27d7a1fd18bb852a4b04a", "ref_doc_id": "e19d1e0d-32c5-4ee7-b30f-dcbb4c59caeb"}, "ded40fd4-8fc4-43d7-b975-1303be4b1f2c": {"doc_hash": "b74a1dbb07f97dcfebaab59e875a97a601d5ee0c5a9709739a9308fee077b237", "ref_doc_id": "e19d1e0d-32c5-4ee7-b30f-dcbb4c59caeb"}, "448eff9c-dd55-4aa3-818a-d35672ec7f58": {"doc_hash": "dba19fcabe745f59a48b71ab91079da22116f6bb014d8866ecb5207116fff3b3", "ref_doc_id": "f02e1b9c-d8b4-41be-8e36-e202a70b75e3"}, "9c3af35c-0ca9-4619-897d-3bd7f5dcfa7f": {"doc_hash": "a4f32cdf8d820cf334af7953ad488a3b5a70c74a68f599cd6d217014dea47448", "ref_doc_id": "f02e1b9c-d8b4-41be-8e36-e202a70b75e3"}, "78df908d-e65a-40b8-b3a5-3a7b1ede5a74": {"doc_hash": "e33c3a4d8382f6ef0176b541c46934f79474d6e30fb04236c5a10c5c7ed39116", "ref_doc_id": "a2e21c7e-8e78-4487-b639-aa0162818fd1"}, "0864f849-0805-436a-9b03-0cd885008e8d": {"doc_hash": "c1ff31089c2f655cf51c212faa69473e11c46a5cbe7d6193a7c91f6fa971d5d9", "ref_doc_id": "a2e21c7e-8e78-4487-b639-aa0162818fd1"}, "428dc4b8-7775-4b49-a168-156255222385": {"doc_hash": "f612a6eb821f506f1d6a2d99fa92435dedcec3f2d03c48b98ed9842b4227a70b", "ref_doc_id": "a2e21c7e-8e78-4487-b639-aa0162818fd1"}, "a310f74d-7e80-4ce7-abea-2c25f65226fa": {"doc_hash": "7dc3e8ccea19e93f595a1efcd57dac80a01dcf193f673e5ab268dafd04a9a096", "ref_doc_id": "a49c0271-6778-439e-b451-9af772769b49"}, "aadd485b-f8af-488e-9f46-6f124f4d04a3": {"doc_hash": "d6e1d99173b13bec5a9e13ef8effaac81062ee0be002a503451063b88ff8bda7", "ref_doc_id": "a49c0271-6778-439e-b451-9af772769b49"}, "a05cb6de-3ce6-451e-9502-927eccafc02a": {"doc_hash": "afbc5061a8520913da1917aacf7ee9edb26d77fe42b4e1ecb06e8d19d397ee97", "ref_doc_id": "cf968f92-0e31-4682-99d8-e99f448e0ff6"}, "d8ccf620-d4cb-4576-bcfd-7f90a24fed2e": {"doc_hash": "a52801512f4a37fdd0b586633ae36827c76e5a9fe33e785aa9130d8595386176", "ref_doc_id": "cf968f92-0e31-4682-99d8-e99f448e0ff6"}, "3fbd0881-b870-4e94-9a42-73c6118ebcb5": {"doc_hash": "b5a116aaae437296e417252b0a5a69ad5ee1071e4c63d195f926bc16f7f61e8d", "ref_doc_id": "143fda6d-1dee-4d3d-ac44-1a451827d2e6"}, "1c6e83d3-8a58-4929-a691-3bc60152459c": {"doc_hash": "9384d7cae5594e1e9a3b778dd928d6df27bd7fb8ad5abe0f813967221b34f7b4", "ref_doc_id": "143fda6d-1dee-4d3d-ac44-1a451827d2e6"}, "048224f0-7cf0-4402-a844-aa14c311c801": {"doc_hash": "0317bb49f21f7f89f56b7d0ef94bc720362e1a54ed98ca5a1ab975344c6dfe37", "ref_doc_id": "a22c2682-b3f2-4ccd-b617-0068fd92f0d5"}, "4672c884-24ad-4afe-be8a-77873a43b1b1": {"doc_hash": "f80a3946cad0346e4a76f0e356c107af9cc414a818cc9d8da80ceb4aa1f838ba", "ref_doc_id": "a22c2682-b3f2-4ccd-b617-0068fd92f0d5"}, "90e4d2a9-00b1-4350-b18b-03770688f88a": {"doc_hash": "ecb6448dc11ba09be01d374edcefccaddce64cc06bc54a21f4e75a1e054460b4", "ref_doc_id": "d1ae1b30-fd5c-49c0-a294-cf8f700b2899"}, "cf4c0125-9f81-423b-9d34-d7e51912fdc6": {"doc_hash": "7a4dd687d6cc2044085c3376b79fbd191d0fb18e8e9e39475df64734464fc4c0", "ref_doc_id": "d1ae1b30-fd5c-49c0-a294-cf8f700b2899"}, "4143f95d-1f50-4fbf-a9b2-6f628a7792fb": {"doc_hash": "a4badd7e606d703876c6188140afb263893c466a60fa1acf2bac47c928097c83", "ref_doc_id": "dd14b3c8-6d59-4c65-8cef-ea20d292499b"}, "30a1563b-d59c-43ba-a68c-7139ce0d6d32": {"doc_hash": "98e11a741f586415d3bfda34b3f91cabe7085ab3ff43ae1e2b198fbb3c0b00b3", "ref_doc_id": "6adeaa1f-5b2b-48b3-97d7-0a24e80d7bd0"}, "5f63d2e1-1a3b-4ea0-aa03-5a3fc771bf60": {"doc_hash": "1e883d86059bfe6031dac83bb5a88ca536d18b86d343cfd5b22c99ec0e6889ec", "ref_doc_id": "62b5f45d-23a1-4757-a1d4-dd5059786e5e"}, "282196be-98ed-4754-a2c3-0e9c2c2048d5": {"doc_hash": "3fb161b74fd1f53418f306a3008e04a0ce9c8e15de01a0563ac069f681d7f21f", "ref_doc_id": "8b58752f-aa1e-4deb-a225-1cb63ad61da6"}, "062bfe17-46ee-4769-abd5-067d74c3498f": {"doc_hash": "6309f5b4f41731cdd078f04bc937114b15995db0ccb49ee8743e0edcc1a61050", "ref_doc_id": "0fb8059f-b672-4746-9b9c-a4cfb0357b0c"}, "fb2532c4-c9ed-45c9-866e-b6606a21989b": {"doc_hash": "4ca5e50ec20af194ccaf87d0899428a4ec9d44c911e60ba9da04a8acc5a4f385", "ref_doc_id": "e216ffee-1bbf-48c6-88b8-738f45c199d8"}, "308343cd-e8f3-4353-958f-2c5b33b09b5e": {"doc_hash": "d696d7e1343ae656b095b7b99b1ce03ee9d5058411032b3c4e9ad55d539d437a", "ref_doc_id": "e216ffee-1bbf-48c6-88b8-738f45c199d8"}, "997443d5-9301-47d6-abaa-5a3c9e232c14": {"doc_hash": "24353c8a350ad86ab6ec65d4d8a202055ded3a8a06403789259d622b7d88641a", "ref_doc_id": "49a84924-00aa-492d-9d3b-92f3aec4dfaa"}, "384ccd6d-8c24-41ff-8973-1d6d719d239c": {"doc_hash": "58975f73f6d82708890f71a29cd2c61bb235c6f943ac7e825e6bbf665c907e7c", "ref_doc_id": "636067c3-5713-41d5-af7f-5d1e8387d11e"}, "1ab32100-951d-424d-ae93-a77fa055c623": {"doc_hash": "4a779665828ad3bddc6c89a1d93d6a3960cda17fed646a011efb071718d6f7e6", "ref_doc_id": "877144bd-c895-4a94-babb-690d9370e067"}, "abbadfa6-3ce9-476e-96f9-bf0b4fed421c": {"doc_hash": "d1c93fd36cba797af611dd6aef5a6e13645d1970d0a818640b285de7528626ad", "ref_doc_id": "254423bf-e349-49ac-87a7-aa7f8f0d3570"}, "d61f8d66-d003-4450-8f06-50fb59714f34": {"doc_hash": "53876bfc37c983b3eebe46802b1f7b12ab58179cff6191403ac1c562f17dd2ae", "ref_doc_id": "6e422ef1-bff1-47ad-b600-a21e6eedebc1"}, "c1935036-027c-46ad-b30e-37217fc9b8b2": {"doc_hash": "2090d1f975c1f978f9863c40453e98dda7daf8c6703bef0cb2a977d0f42d198a", "ref_doc_id": "5591d6f2-9b51-4f6d-afcd-9b09ebaf6bbb"}, "dbae13e2-a1e3-4dcc-a8b1-c4a7ab97ef15": {"doc_hash": "14dd39dcfa0e71e990e180bd2cbc8b85312200daf80773ade26229c00c1e59b4", "ref_doc_id": "ae26a09d-ae67-419e-a483-04549d9f2ddf"}, "d09e671b-01ea-467f-8344-ef5e8eb0c577": {"doc_hash": "306ff88e7db4f387dcdb6bb08cf7a5fe7035b2b3f868e312584c6d278bb55e63", "ref_doc_id": "ae26a09d-ae67-419e-a483-04549d9f2ddf"}, "1b8cdd61-da97-45f2-83f6-6957b02b6a37": {"doc_hash": "422087d22f00aaa16aaeb7b56df75c1e44fa854df6582cb140c47b185084b50b", "ref_doc_id": "bc368d80-f8fa-4849-a5b1-484f83069f88"}, "de7b7719-b1a2-4b56-b7bd-1193303054de": {"doc_hash": "1eeb1588fc32a2f3e5f47d5ccd06b4e8457c024b6302f01408e5db1f5729f7dd", "ref_doc_id": "bc368d80-f8fa-4849-a5b1-484f83069f88"}, "e5de6b01-87b8-4246-9082-912dcb9a1619": {"doc_hash": "a2d65dbd2ff1f0a85b36a9117006e6dbe0592845bd7f6d7e0a2613bc5f431d65", "ref_doc_id": "5ce9213d-8254-4bdd-9857-97a5d259ec91"}, "ae8e831f-05b6-4085-87de-887d489223f7": {"doc_hash": "c5bf1431603bbe715c0c1d7ce84cc69409f9b2553f10a03af23dbbb7a1ca7654", "ref_doc_id": "6949fd72-750a-446e-9071-29ef7140a8da"}, "ab2852e3-f927-4ada-b024-baa9b3fd0356": {"doc_hash": "79a4cf2e86092e7fd219788d18cc6d9afe71317939090d4f1e30d3bf8671cf23", "ref_doc_id": "f03d70a7-bd9e-4e51-9eb3-33525aa855b6"}, "052df950-c537-498a-91a5-f5fc9dd653e5": {"doc_hash": "66cbb20dee2ef0a3e21611d937096a46dc88bb2a80da03004a04fff7ba8d0027", "ref_doc_id": "709c1f67-ab5c-4efe-8e0c-63b4bc080a7a"}, "747fc62f-6934-476b-a7bc-9d2c488e8322": {"doc_hash": "09615461d36e657f848249da0cbdab448cb4e6368a17cea188f65b5c6c92eb93", "ref_doc_id": "709c1f67-ab5c-4efe-8e0c-63b4bc080a7a"}, "a6f7c348-f061-4dc2-8e1f-7a18b1236ca1": {"doc_hash": "6e23b0970e6da0b2a77ad664d4689611c3ed014ee06ec1a3c158fcc4322e6d33", "ref_doc_id": "208035d6-a30e-45af-a20e-286bd10c9a7b"}}, "docstore/data": {"a371ccfb-bce3-4fe4-bd8f-1b84a0886644": {"__data__": {"id_": "a371ccfb-bce3-4fe4-bd8f-1b84a0886644", "embedding": null, "metadata": {"page_label": "1", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "249bc1fa-6aaa-4df4-ae30-6b57ad2d3bf0", "node_type": "4", "metadata": {"page_label": "1", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d0c88a5d7462fbe2697c34081fd9f52c09b6eb4b3c3bb53c9426921aa247340", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6ae014a-fdf3-4343-ad59-0646c4618e75", "node_type": "1", "metadata": {}, "hash": "9bf0a7fd003b1de118e581e3304519dee767f6db694cefd24781c5afae415308", "class_name": "RelatedNodeInfo"}}, "hash": "f020835c6f24c5e9cbe6be01c22d777bffb56aad16f037b381ad448befed8b48", "text": "http://www.python.org.arTraducido y empaquetado por\nla comunidad de Python Argentina\nPy  Ar", "start_char_idx": 0, "end_char_idx": 91, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6ae014a-fdf3-4343-ad59-0646c4618e75": {"__data__": {"id_": "e6ae014a-fdf3-4343-ad59-0646c4618e75", "embedding": null, "metadata": {"page_label": "2", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e49b6579-f242-4d43-a91f-6833d57c0596", "node_type": "4", "metadata": {"page_label": "2", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae900dfbf2b6a5089e3e4526da4c6519a2ee921a2ed3b170f556873d98de5852", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a371ccfb-bce3-4fe4-bd8f-1b84a0886644", "node_type": "1", "metadata": {"page_label": "1", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f020835c6f24c5e9cbe6be01c22d777bffb56aad16f037b381ad448befed8b48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c9ab438-67fb-4970-944a-3e6dc8bb6dbb", "node_type": "1", "metadata": {}, "hash": "14fe55ee4ce3cdbc8118a0a28e5a80a44f1f8a24d73d9949c0ecd91ee582ebe1", "class_name": "RelatedNodeInfo"}}, "hash": "9bf0a7fd003b1de118e581e3304519dee767f6db694cefd24781c5afae415308", "text": "Autor original: Guido van Rossum \nEditor original: Fred L. Drake, Jr.\nEste material fue traducido por voluntarios del\ngrupo de usuarios de Python de Argentina.\nUna versi\u00f3n actualizada de este Tutorial\npuede encontrarse en:\nhttp://tutorial.python.org.ar/\nFebrero 2017\nEste PDF fue generado usando la herramienta rst2pdf\nCopyright \u00a9 Python Software Foundation\nEsta documentaci\u00f3n est\u00e1 cubierta por la Licencia PSF para Python 3.6.0, que \nbasicamente permite que use, copies, modifiques y distribuyas este contenido. \nPara un mayor detalle: http://docs.python.org/3/license.html", "start_char_idx": 0, "end_char_idx": 574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c9ab438-67fb-4970-944a-3e6dc8bb6dbb": {"__data__": {"id_": "6c9ab438-67fb-4970-944a-3e6dc8bb6dbb", "embedding": null, "metadata": {"page_label": "3", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70998970-b012-4918-93f0-739e09aedce4", "node_type": "4", "metadata": {"page_label": "3", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "54c2e7d78086f313d11ac6924fe860357b44ec14d830b1602e2495235ce7e094", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6ae014a-fdf3-4343-ad59-0646c4618e75", "node_type": "1", "metadata": {"page_label": "2", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9bf0a7fd003b1de118e581e3304519dee767f6db694cefd24781c5afae415308", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08528392-8502-4732-a81f-b752dbd169b6", "node_type": "1", "metadata": {}, "hash": "cbb76cd6b25aef4a07096c75e3f402d563f1b6d3638f02e79e673b744eea1671", "class_name": "RelatedNodeInfo"}}, "hash": "14fe55ee4ce3cdbc8118a0a28e5a80a44f1f8a24d73d9949c0ecd91ee582ebe1", "text": "3", "start_char_idx": 0, "end_char_idx": 1, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08528392-8502-4732-a81f-b752dbd169b6": {"__data__": {"id_": "08528392-8502-4732-a81f-b752dbd169b6", "embedding": null, "metadata": {"page_label": "4", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2353b39b-b71f-4440-affb-75a7f4fb18fe", "node_type": "4", "metadata": {"page_label": "4", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6a8fade7b2359dd93ee712a9ff5d3a64e1baf175ed2a4dea173111c33fe1b05b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c9ab438-67fb-4970-944a-3e6dc8bb6dbb", "node_type": "1", "metadata": {"page_label": "3", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14fe55ee4ce3cdbc8118a0a28e5a80a44f1f8a24d73d9949c0ecd91ee582ebe1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7680d240-f925-4e59-a969-d8dc21f715f8", "node_type": "1", "metadata": {}, "hash": "2244b1f9eb9a4adfac324b5a1d880b483aab45fe520a4ddb075fba30b7da6d7c", "class_name": "RelatedNodeInfo"}}, "hash": "cbb76cd6b25aef4a07096c75e3f402d563f1b6d3638f02e79e673b744eea1671", "text": "Contenido\nIntroducci\u00f3n\n 1\n Abriendo tu apetito\n 3\n Usando el int\u00e9rprete de Python\n 5\n Invocando al int\u00e9rprete\n 5\n Pasaje de argumentos\n 6\n Modo interactivo\n 6\n El int\u00e9rprete y su entorno\n 6\n Codificaci\u00f3n del c\u00f3digo fuente\n 6\n Una introducci\u00f3n informal a Python\n 8\n Usar Python como una calculadora\n 8\n N\u00fameros\n 8\n Cadenas de caracteres\n 9\n Listas\n 13\n Primeros pasos hacia la programaci\u00f3n\n 14\n M\u00e1s herramientas para control de flujo\n 16\n La sentencia if\n 16\n La sentencia for\n 16\n La funci\u00f3n range()\n 17\n Las sentencias break, continue, y else en lazos\n 18\n La sentencia pass\n 18\n Definiendo funciones\n 19\n M\u00e1s sobre definici\u00f3n de funciones\n 20\n Argumentos con valores por omisi\u00f3n\n 20\n Palabras claves como argumentos\n 22\n Listas de argumentos arbitrarios\n 23\n Desempaquetando una lista de argumentos\n 23\n Expresiones lambda\n 24\n Cadenas de texto de documentaci\u00f3n\n 24\n Anotaci\u00f3n de funciones\n 25\n Intermezzo: Estilo de codificaci\u00f3n\n 25\n Estructuras de datos\n 27\n M\u00e1s sobre listas\n 27\n Usando listas como pilas\n 28\n Usando listas como colas\n 28\n Comprensi\u00f3n de listas\n 29\n Listas por comprensi\u00f3n anidadas\n 30\n La instrucci\u00f3n del\n 31\n Tuplas y secuencias\n 31\n Conjuntos\n 32\n Diccionarios\n 33\n \n i", "start_char_idx": 0, "end_char_idx": 1194, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7680d240-f925-4e59-a969-d8dc21f715f8": {"__data__": {"id_": "7680d240-f925-4e59-a969-d8dc21f715f8", "embedding": null, "metadata": {"page_label": "5", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57f2a052-ce26-4328-a825-5bc57c1d9457", "node_type": "4", "metadata": {"page_label": "5", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f53fa8d2c35f0bce91fa54e6bbc654889f85ec3c9e2cb401c45b26e7c43ac61d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08528392-8502-4732-a81f-b752dbd169b6", "node_type": "1", "metadata": {"page_label": "4", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cbb76cd6b25aef4a07096c75e3f402d563f1b6d3638f02e79e673b744eea1671", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7e67c7e-c9ad-4513-8ca9-ea8c8200ba73", "node_type": "1", "metadata": {}, "hash": "a2032eaf9c07b6d025319bfbb22c9df6603e5b5702822f74db1ad4ded0acd2ea", "class_name": "RelatedNodeInfo"}}, "hash": "2244b1f9eb9a4adfac324b5a1d880b483aab45fe520a4ddb075fba30b7da6d7c", "text": "T\u00e9cnicas de iteraci\u00f3n\n 34\n M\u00e1s acerca de condiciones\n 35\n Comparando secuencias y otros tipos\n 36\n M\u00f3dulos\n 37\n M\u00e1s sobre los m\u00f3dulos\n 38\n Ejecutando m\u00f3dulos como scripts\n 38\n El camino de b\u00fasqueda de los m\u00f3dulos\n 39\n Archivos \"compilados\" de Python\n 39\n M\u00f3dulos est\u00e1ndar\n 40\n La funci\u00f3n dir()\n 40\n Paquetes\n 42\n Importando * desde un paquete\n 43\n Referencias internas en paquetes\n 44\n Paquetes en m\u00faltiples directorios\n 44\n Entrada y salida\n 46\n Formateo elegante de la salida\n 46\n Viejo formateo de cadenas\n 49\n Leyendo y escribiendo archivos\n 49\n M\u00e9todos de los objetos Archivo\n 49\n Guardar datos estructurados con json\n 51\n Errores y excepciones\n 53\n Errores de sintaxis\n 53\n Excepciones\n 53\n Manejando excepciones\n 54\n Levantando excepciones\n 56\n Excepciones definidas por el usuario\n 56\n Definiendo acciones de limpieza\n 57\n Acciones predefinidas de limpieza\n 58\n Clases\n 59\n Unas palabras sobre nombres y objetos\n 59\n \u00c1mbitos y espacios de nombres en Python\n 59\n Ej\u00e9mplo de \u00e1mbitos y espacios de nombre\n 61\n Un primer vistazo a las clases\n 61\n Sintaxis de definici\u00f3n de clases\n 61\n Objetos clase\n 62\n Objetos instancia\n 63\n Objetos m\u00e9todo\n 63\n Variables de clase y de instancia\n 64\n Algunas observaciones\n 65\n Herencia\n 66\n Herencia m\u00faltiple\n 67\n Variables privadas\n 67\n \n ii", "start_char_idx": 0, "end_char_idx": 1282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7e67c7e-c9ad-4513-8ca9-ea8c8200ba73": {"__data__": {"id_": "f7e67c7e-c9ad-4513-8ca9-ea8c8200ba73", "embedding": null, "metadata": {"page_label": "6", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a9267e2-4535-433b-bf40-dbbfda349226", "node_type": "4", "metadata": {"page_label": "6", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4e285313f0a925212ec480d479ab6e49eb46ebd52a94985421802d51fa4b7069", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7680d240-f925-4e59-a969-d8dc21f715f8", "node_type": "1", "metadata": {"page_label": "5", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2244b1f9eb9a4adfac324b5a1d880b483aab45fe520a4ddb075fba30b7da6d7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20bdb004-ca17-4159-b1f8-6e86f0f6f9c7", "node_type": "1", "metadata": {}, "hash": "f8947b601617f72d0f6365ec41660c2168f0bcd4a4091f1c7af4e9cbbe2ccf2e", "class_name": "RelatedNodeInfo"}}, "hash": "a2032eaf9c07b6d025319bfbb22c9df6603e5b5702822f74db1ad4ded0acd2ea", "text": "Cambalache\n 68\n Iteradores\n 68\n Generadores\n 70\n Expresiones generadoras\n 70\n Peque\u00f1o paseo por la Biblioteca Est\u00e1ndar\n 72\n Interfaz al sistema operativo\n 72\n Comodines de archivos\n 72\n Argumentos de linea de \u00f3rdenes\n 72\n Redirecci\u00f3n de la salida de error y finalizaci\u00f3n del programa\n 73\n Coincidencia en patrones de cadenas\n 73\n Matem\u00e1tica\n 73\n Acceso a Internet\n 74\n Fechas y tiempos\n 74\n Compresi\u00f3n de datos\n 75\n Medici\u00f3n de rendimiento\n 75\n Control de calidad\n 75\n Las pilas incluidas\n 76\n Peque\u00f1o paseo por la Biblioteca Est\u00e1ndar - Parte II\n 77\n Formato de salida\n 77\n Plantillas\n 78\n Trabajar con registros estructurados conteniendo datos binarios\n 79\n Multi-hilos\n 79\n Registrando\n 80\n Referencias d\u00e9biles\n 80\n Herramientas para trabajar con listas\n 81\n Aritm\u00e9tica de punto flotante decimal\n 82\n Entornos Virtuales y Paquetes\n 83\n Introducci\u00f3n\n 83\n Creando Entornos Virtuales\n 83\n Manejando paquetes con pip\n 84\n \u00bfY ahora qu\u00e9?\n 87\n Edici\u00f3n de entrada interactiva y sustituci\u00f3n de historial\n 89\n Autocompletado con tab e historial de edici\u00f3n\n 89\n Alternativas al int\u00e9rprete interactivo\n 89\n Aritm\u00e9tica de Punto Flotante: Problemas y Limitaciones\n 91\n Error de Representaci\u00f3n\n 93\n Links a la documentaci\u00f3n de Python\n 97\n Extendiendo e Integrando el Int\u00e9rprete de Python\n 97\n Referencia de la API Python/C\n 97\n La referencia de la biblioteca\n 97\n Tipos integrados\n 97\n Excepciones integradas\n 97\n \n iii", "start_char_idx": 0, "end_char_idx": 1406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20bdb004-ca17-4159-b1f8-6e86f0f6f9c7": {"__data__": {"id_": "20bdb004-ca17-4159-b1f8-6e86f0f6f9c7", "embedding": null, "metadata": {"page_label": "7", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c06eb39b-9124-44b3-a092-9cf2cece3f65", "node_type": "4", "metadata": {"page_label": "7", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae72d4e25c340855ebf1fe0f75418cc9b311173c66e3197bbb8e4a213f5dd234", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7e67c7e-c9ad-4513-8ca9-ea8c8200ba73", "node_type": "1", "metadata": {"page_label": "6", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2032eaf9c07b6d025319bfbb22c9df6603e5b5702822f74db1ad4ded0acd2ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd20942b-15ce-43ed-81bb-c03b9858d65b", "node_type": "1", "metadata": {}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}}, "hash": "f8947b601617f72d0f6365ec41660c2168f0bcd4a4091f1c7af4e9cbbe2ccf2e", "text": "La referencia del lenguaje\n 97\n Expresiones\n 97\n Declaraciones simples\n 98\n Declaraciones compuestas\n 98\n Instalando m\u00f3dulos de Python\n 98\n Glosario\n 98\n Distribuyendo m\u00f3dulos de Python\n 98\n L\u00ednea de comandos y entorno\n 98\n Ap\u00e9ndice\n 101\n Modo interactivo\n 101\n Manejo de errores\n 101\n Programas ejecutables de Python\n 101\n El archivo de inicio interactivo\n 101\n Los m\u00f3dulos de customizaci\u00f3n\n 102\n \n iv", "start_char_idx": 0, "end_char_idx": 402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd20942b-15ce-43ed-81bb-c03b9858d65b": {"__data__": {"id_": "cd20942b-15ce-43ed-81bb-c03b9858d65b", "embedding": null, "metadata": {"page_label": "8", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78ba9af6-87ff-47cc-8f07-6c1f0aee27a8", "node_type": "4", "metadata": {"page_label": "8", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4aae5735b3e98426d48b9d23d45aefa4a464882d1a4aa68fc1333dfb6d0bcbc7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20bdb004-ca17-4159-b1f8-6e86f0f6f9c7", "node_type": "1", "metadata": {"page_label": "7", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f8947b601617f72d0f6365ec41660c2168f0bcd4a4091f1c7af4e9cbbe2ccf2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8b0c15b-50da-4109-9dd7-e79bfebfec81", "node_type": "1", "metadata": {}, "hash": "ed75647b168e86bcd200dbfd6cf588e37e6a0d9465d40e87aec91ada4da46f4f", "class_name": "RelatedNodeInfo"}}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8b0c15b-50da-4109-9dd7-e79bfebfec81": {"__data__": {"id_": "d8b0c15b-50da-4109-9dd7-e79bfebfec81", "embedding": null, "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd0e1ba5-a04c-4ca4-9cc5-b0a5ad73ea92", "node_type": "4", "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1f8fd2cb6c65b015f59b35816bfec99683bc48b795aac910f0bb6d96c9ad0b89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd20942b-15ce-43ed-81bb-c03b9858d65b", "node_type": "1", "metadata": {"page_label": "8", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7163f738-5ac8-4503-8748-c41585752257", "node_type": "1", "metadata": {}, "hash": "a5e28e2ee336036e53197f1d35d3cf7539fd0382bd721ee83f13529397a6086a", "class_name": "RelatedNodeInfo"}}, "hash": "ed75647b168e86bcd200dbfd6cf588e37e6a0d9465d40e87aec91ada4da46f4f", "text": "Introducci\u00f3nPython es un lenguaje de programaci\u00f3n poderoso y f\u00e1cil de aprender. Cuenta con estructuras de datos eficientes y de alto\nnivel y un enfoque simple pero efectivo a la programaci\u00f3n orientada a objetos. La elegante sintaxis de Python y su tipado\ndin\u00e1mico, junto con su naturaleza interpretada, hacen de \u00e9ste un lenguaje ideal para scripting y desarrollo r\u00e1pido de\naplicaciones en diversas \u00e1reas y sobre la mayor\u00eda de las plataformas.\nEl int\u00e9rprete de Python y la extensa biblioteca est\u00e1ndar est\u00e1n a libre disposici\u00f3n en forma binaria y de c\u00f3digo fuente para las\nprincipales plataformas desde el sitio web de Python, https://www.python.org/, y puede distribuirse libremente. El mismo sitio\ncontiene tambi\u00e9n distribuciones y enlaces de muchos m\u00f3dulos libres de Python de terceros, programas y herramientas, y\ndocumentaci\u00f3n adicional.\nEl int\u00e9rprete de Python puede extenderse f\u00e1cilmente con nuevas funcionalidades y tipos de datos implementados en C o\nC++ (u otros lenguajes accesibles desde C). Python tambi\u00e9n puede usarse como un lenguaje de extensiones para\naplicaciones personalizables.\nEste tutorial introduce de manera informal al lector a los conceptos y caracter\u00edsticas b\u00e1sicas del lenguaje y el sistema de\nPython. Es bueno tener un interprete de Python a mano para experimentar, sin embargo todos los ejemplos est\u00e1n aislados,\npor lo tanto el tutorial puede leerse estando desconectado.\nPara una descripci\u00f3n de los objetos y m\u00f3dulos est\u00e1ndar, mir\u00e1 La referencia de la biblioteca. La referencia de la biblioteca\nprovee una definici\u00f3n m\u00e1s formal del lenguaje. Para escribir extensiones en C o C++, le\u00e9 Extendiendo e Integrando el\nInt\u00e9rprete de Python y la Referencia de la API Python/C. Hay tambi\u00e9n numerosos libros que tratan a Python en profundidad.\nEste tutorial no pretende ser exhaustivo ni tratar cada una de las caracter\u00edsticas, o siquiera las caracter\u00edsticas m\u00e1s usadas.", "start_char_idx": 0, "end_char_idx": 1890, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7163f738-5ac8-4503-8748-c41585752257": {"__data__": {"id_": "7163f738-5ac8-4503-8748-c41585752257", "embedding": null, "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd0e1ba5-a04c-4ca4-9cc5-b0a5ad73ea92", "node_type": "4", "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1f8fd2cb6c65b015f59b35816bfec99683bc48b795aac910f0bb6d96c9ad0b89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8b0c15b-50da-4109-9dd7-e79bfebfec81", "node_type": "1", "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ed75647b168e86bcd200dbfd6cf588e37e6a0d9465d40e87aec91ada4da46f4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "984b5eb4-22aa-4de8-9363-01f49a56ba9e", "node_type": "1", "metadata": {}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}}, "hash": "a5e28e2ee336036e53197f1d35d3cf7539fd0382bd721ee83f13529397a6086a", "text": "En cambio, introduce la mayor\u00eda de las caracter\u00edsticas m\u00e1s notables de Python, y te dar\u00e1 una buena idea del gusto y estilo\ndel lenguaje. Luego de leerlo, ser\u00e1s capaz de leer y escribir m\u00f3dulos y programas en Python, y estar\u00e1s listo para aprender\nm\u00e1s de los variados m\u00f3dulos de la biblioteca de Python descriptos en La referencia de la biblioteca.\nTambi\u00e9n vale la pena mirar el glosario.\n 1", "start_char_idx": 1891, "end_char_idx": 2280, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "984b5eb4-22aa-4de8-9363-01f49a56ba9e": {"__data__": {"id_": "984b5eb4-22aa-4de8-9363-01f49a56ba9e", "embedding": null, "metadata": {"page_label": "10", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9cc5eed2-9d6a-4092-a4b0-0579d9174411", "node_type": "4", "metadata": {"page_label": "10", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "040a71a51e8538a9e21c886eb5072c9cc23fe31bcdd532ac11cc5c91940c8f98", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7163f738-5ac8-4503-8748-c41585752257", "node_type": "1", "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a5e28e2ee336036e53197f1d35d3cf7539fd0382bd721ee83f13529397a6086a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "391f965f-9bcc-404e-9190-8cd7f15a5486", "node_type": "1", "metadata": {}, "hash": "d7f3af859ac6e6ee9cfe86973d064efd88cf3d0f5babc0d4848d1f47dceb9b5e", "class_name": "RelatedNodeInfo"}}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "391f965f-9bcc-404e-9190-8cd7f15a5486": {"__data__": {"id_": "391f965f-9bcc-404e-9190-8cd7f15a5486", "embedding": null, "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32517139-fb6c-4356-a59d-e043cf8c9c61", "node_type": "4", "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cabd836d506d247d57b92bec47cd3f34dc94c049a54e412629f2c64d657e33b9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "984b5eb4-22aa-4de8-9363-01f49a56ba9e", "node_type": "1", "metadata": {"page_label": "10", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b21cb30b-c1e9-46b0-87f4-62dfc4a9b4e4", "node_type": "1", "metadata": {}, "hash": "58b62a4177e054313b5ac26aa8d8fb7c4dbc25f490e5baed3616703a36edb559", "class_name": "RelatedNodeInfo"}}, "hash": "d7f3af859ac6e6ee9cfe86973d064efd88cf3d0f5babc0d4848d1f47dceb9b5e", "text": "Abriendo tu apetitoSi trabaj\u00e1s mucho con computadoras, eventualmente encontrar\u00e1s que te gustar\u00eda automatizar alguna tarea. Por ejemplo,\npodr\u00edas desear realizar una b\u00fasqueda y reemplazo en un gran n\u00famero de archivos de texto, o renombrar y reorganizar un\nmont\u00f3n de archivos con fotos de una manera compleja. Tal vez quieras escribir alguna peque\u00f1a base de datos\npersonalizada, o una aplicaci\u00f3n especializada con interfaz gr\u00e1fica, o un juego simple.\nSi sos un desarrollador de software profesional, tal vez necesites trabajar con varias bibliotecas de C/C++/Java pero\nencuentres que se hace lento el ciclo usual de escribir/compilar/testear/recompilar. Tal vez est\u00e1s escribiendo una bater\u00eda de\npruebas para una de esas bibliotecas y encuentres que escribir el c\u00f3digo de testeo se hace una tarea tediosa. O tal vez has\nescrito un programa al que le vendr\u00eda bien un lenguaje de extensi\u00f3n, y no quieres dise\u00f1ar/implementar todo un nuevo\nlenguaje para tu aplicaci\u00f3n.\nPython es el lenguaje justo para ti.\nPodr\u00edas escribir un script (o programa) en el interprete de comandos o un archivo por lotes de Windows para algunas de\nestas tareas, pero los scripts se lucen para mover archivos de un lado a otro y para modificar datos de texto, no para\naplicaciones con interfaz de usuario o juegos. Podr\u00edas escribir un programa en C/C++/Java, pero puede tomar mucho tiempo\nde desarrollo obtener al menos un primer borrador del programa. Python es m\u00e1s f\u00e1cil de usar, est\u00e1 disponible para sistemas\noperativos Windows, Mac OS X y Unix, y te ayudar\u00e1 a realizar tu tarea m\u00e1s velozmente.\nPython es f\u00e1cil de usar, pero es un lenguaje de programaci\u00f3n de verdad, ofreciendo mucha m\u00e1s estructura y soporte para\nprogramas grandes de lo que pueden ofrecer los scripts de Unix o archivos por lotes.", "start_char_idx": 0, "end_char_idx": 1769, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b21cb30b-c1e9-46b0-87f4-62dfc4a9b4e4": {"__data__": {"id_": "b21cb30b-c1e9-46b0-87f4-62dfc4a9b4e4", "embedding": null, "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32517139-fb6c-4356-a59d-e043cf8c9c61", "node_type": "4", "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cabd836d506d247d57b92bec47cd3f34dc94c049a54e412629f2c64d657e33b9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "391f965f-9bcc-404e-9190-8cd7f15a5486", "node_type": "1", "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d7f3af859ac6e6ee9cfe86973d064efd88cf3d0f5babc0d4848d1f47dceb9b5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "608b9e31-cbcf-4ef2-af5f-a4f5e3ddde54", "node_type": "1", "metadata": {}, "hash": "b6cba5b0c1f6dd24021b4f1df396980843cf8656236b45e4c0000083a54cc84f", "class_name": "RelatedNodeInfo"}}, "hash": "58b62a4177e054313b5ac26aa8d8fb7c4dbc25f490e5baed3616703a36edb559", "text": "Por otro lado, Python ofrece mucho\nm\u00e1s chequeo de error que C, y siendo un lenguaje de muy alto nivel, tiene tipos de datos de alto nivel incorporados como\narreglos de tama\u00f1o flexible y diccionarios. Debido a sus tipos de datos m\u00e1s generales Python puede aplicarse a un dominio\nde problemas mayor que Awk o incluso Perl, y a\u00fan as\u00ed muchas cosas siguen siendo al menos igual de f\u00e1cil en Python que\nen esos lenguajes.\nPython te permite separar tu programa en m\u00f3dulos que pueden reusarse en otros programas en Python. Viene con una gran\ncolecci\u00f3n de m\u00f3dulos est\u00e1ndar que puedes usar como base de tus programas, o como ejemplos para empezar a aprender a\nprogramar en Python. Algunos de estos m\u00f3dulos proveen cosas como entrada/salida a archivos, llamadas al sistema,\nsockets, e incluso interfaces a sistemas de interfaz gr\u00e1fica de usuario como Tk.\nPython es un lenguaje interpretado, lo cual puede ahorrarte mucho tiempo durante el desarrollo ya que no es necesario\ncompilar ni enlazar. El int\u00e9rprete puede usarse interactivamente, lo que facilita experimentar con caracter\u00edsticas del lenguaje,\nescribir programas descartables, o probar funciones cuando se hace desarrollo de programas de abajo hacia arriba. Es\ntambi\u00e9n una calculadora de escritorio pr\u00e1ctica.\nPython permite escribir programas compactos y legibles. Los programas en Python son t\u00edpicamente m\u00e1s cortos que sus\nprogramas equivalentes en C, C++ o Java por varios motivos:\n\u007f\nlos tipos de datos de alto nivel permiten expresar operaciones complejas en una sola instrucci\u00f3n\n\u007f\nla agrupaci\u00f3n de instrucciones se hace por sangr\u00eda en vez de llaves de apertura y cierre\n\u007f\nno es necesario declarar variables ni argumentos.", "start_char_idx": 1770, "end_char_idx": 3441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "608b9e31-cbcf-4ef2-af5f-a4f5e3ddde54": {"__data__": {"id_": "608b9e31-cbcf-4ef2-af5f-a4f5e3ddde54", "embedding": null, "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32517139-fb6c-4356-a59d-e043cf8c9c61", "node_type": "4", "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cabd836d506d247d57b92bec47cd3f34dc94c049a54e412629f2c64d657e33b9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b21cb30b-c1e9-46b0-87f4-62dfc4a9b4e4", "node_type": "1", "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "58b62a4177e054313b5ac26aa8d8fb7c4dbc25f490e5baed3616703a36edb559", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8263f76c-595f-4423-8eab-747f3d9431c8", "node_type": "1", "metadata": {}, "hash": "2676e473420a6df5a4c2ec63ebcf2065b9685aaa487886b44b2a045251d4780c", "class_name": "RelatedNodeInfo"}}, "hash": "b6cba5b0c1f6dd24021b4f1df396980843cf8656236b45e4c0000083a54cc84f", "text": "Python es extensible: si ya sabes programar en C es f\u00e1cil agregar una nueva funci\u00f3n o m\u00f3dulo al int\u00e9rprete, ya sea para\nrealizar operaciones cr\u00edticas a velocidad m\u00e1xima, o para enlazar programas Python con bibliotecas que tal vez s\u00f3lo est\u00e9n\ndisponibles en forma binaria (por ejemplo bibliotecas gr\u00e1ficas espec\u00edficas de un fabricante). Una vez que est\u00e9s realmente\nentusiasmado, pod\u00e9s enlazar el int\u00e9rprete Python en una aplicaci\u00f3n hecha en C y usarlo como lenguaje de extensi\u00f3n o de\ncomando para esa aplicaci\u00f3n.\n 3", "start_char_idx": 3442, "end_char_idx": 3955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8263f76c-595f-4423-8eab-747f3d9431c8": {"__data__": {"id_": "8263f76c-595f-4423-8eab-747f3d9431c8", "embedding": null, "metadata": {"page_label": "12", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "718671f4-a146-4a4f-a8a2-008f0a59fa3f", "node_type": "4", "metadata": {"page_label": "12", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ad0bbb44c72b00afdab295b08583b0d7d1709bfce3e541409155591ded0c7bbd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "608b9e31-cbcf-4ef2-af5f-a4f5e3ddde54", "node_type": "1", "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6cba5b0c1f6dd24021b4f1df396980843cf8656236b45e4c0000083a54cc84f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a26621de-6fee-4276-86d8-fc5e8db3c5b5", "node_type": "1", "metadata": {}, "hash": "7569e855fc789c7c913e128a0a98f32ca88f723ec326ce94fe3c666fdffaed4c", "class_name": "RelatedNodeInfo"}}, "hash": "2676e473420a6df5a4c2ec63ebcf2065b9685aaa487886b44b2a045251d4780c", "text": "Por cierto, el lenguaje recibe su nombre del programa de televisi\u00f3n de la BBC \"Monty Python's Flying Circus\" y no tiene\nnada que ver con reptiles. Hacer referencias a sketches de Monty Python en la documentaci\u00f3n no s\u00f3lo esta permitido, \u00a1sino\nque tambi\u00e9n est\u00e1 bien visto!\nAhora que ya est\u00e1s emocionado con Python, querr\u00e1s verlo en m\u00e1s detalle. Como la mejor forma de aprender un lenguaje es\nusarlo, el tutorial te invita a que juegues con el int\u00e9rprete de Python a medida que vas leyendo.\nEn el pr\u00f3ximo cap\u00edtulo se explicar\u00e1 la mec\u00e1nica de uso del int\u00e9rprete. Esta es informaci\u00f3n bastante mundana, pero es\nesencial para poder probar los ejemplos que aparecer\u00e1n m\u00e1s adelante.\nEl resto del tutorial introduce varias caracter\u00edsticas del lenguaje y el sistema Python a trav\u00e9s de ejemplos, empezando con\nexpresiones, instrucciones y tipos de datos simples, pasando por funciones y m\u00f3dulos, y finalmente tocando conceptos\navanzados como excepciones y clases definidas por el usuario.\n 4", "start_char_idx": 0, "end_char_idx": 979, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a26621de-6fee-4276-86d8-fc5e8db3c5b5": {"__data__": {"id_": "a26621de-6fee-4276-86d8-fc5e8db3c5b5", "embedding": null, "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65bdfa2a-1506-4c0f-b35e-9b192ec171e2", "node_type": "4", "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76a633b4c536863fb678aeb1d4e4ff1873dc11fecebdfb1e67f5a0ca0869a6e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8263f76c-595f-4423-8eab-747f3d9431c8", "node_type": "1", "metadata": {"page_label": "12", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2676e473420a6df5a4c2ec63ebcf2065b9685aaa487886b44b2a045251d4780c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90c3c137-69e0-46a7-977d-3dc928b35c16", "node_type": "1", "metadata": {}, "hash": "4f0eec8ec646b5055fecb44722ac1d3e8623a23d70684d4857c5133f007c6e6c", "class_name": "RelatedNodeInfo"}}, "hash": "7569e855fc789c7c913e128a0a98f32ca88f723ec326ce94fe3c666fdffaed4c", "text": "Usando el int\u00e9rprete de Python\nInvocando al int\u00e9rpretePor lo general, el int\u00e9rprete de Python se instala en /usr/local/bin/python3.6 en las m\u00e1quinas d\u00f3nde est\u00e1 disponible; poner\n/usr/local/bin en el camino de b\u00fasqueda de tu int\u00e9rprete de comandos Unix hace posible iniciarlo ingresando la orden:\npython3.6\n...en la terminal. 1 Ya que la elecci\u00f3n del directorio d\u00f3nde vivir\u00e1 el int\u00e9rprete es una opci\u00f3n del proceso de instalaci\u00f3n, puede\nestar en otros lugares; consult\u00e1 a tu Gur\u00fa Python local o administrador de sistemas. (Por ejemplo, /usr/local/python es una\nalternativa popular).\nEn m\u00e1quinas con Windows, la instalaci\u00f3n de Python por lo general se encuentra en C:\\Python36, aunque se puede cambiar\ndurante la instalaci\u00f3n. Para a\u00f1adir este directorio al camino, podes ingresar la siguiente orden en el prompt de DOS:\nset path=%path%;C:\\python36\nSe puede salir del int\u00e9rprete con estado de salida cero ingresando el car\u00e1cter de fin de archivo (Control-D en Unix, Control-Z\nen Windows) en el prompt primario. Si esto no funciona, se puede salir del int\u00e9rprete ingresando: quit().\nLas caracter\u00edsticas para editar l\u00edneas del int\u00e9rprete incluyen edici\u00f3n interactiva, sustituci\u00f3n usando el historial y completado\nde c\u00f3digo en sistemas que soportan readline. Tal vez la forma m\u00e1s r\u00e1pida de detectar si las caracter\u00edsticas de edici\u00f3n est\u00e1n\npresentes es ingresar Control-P en el primer prompt de Python que aparezca. Si se escucha un beep, las caracter\u00edsticas\nest\u00e1n presentes; ver Ap\u00e9ndice Edici\u00f3n de entrada interactiva y sustituci\u00f3n de historial para una introducci\u00f3n a las teclas. Si\nno pasa nada, o si aparece ^P, estas caracter\u00edsticas no est\u00e1n disponibles; solo vas a poder usar backspace para borrar los\ncaracteres de la l\u00ednea actual.", "start_char_idx": 0, "end_char_idx": 1732, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90c3c137-69e0-46a7-977d-3dc928b35c16": {"__data__": {"id_": "90c3c137-69e0-46a7-977d-3dc928b35c16", "embedding": null, "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65bdfa2a-1506-4c0f-b35e-9b192ec171e2", "node_type": "4", "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76a633b4c536863fb678aeb1d4e4ff1873dc11fecebdfb1e67f5a0ca0869a6e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a26621de-6fee-4276-86d8-fc5e8db3c5b5", "node_type": "1", "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7569e855fc789c7c913e128a0a98f32ca88f723ec326ce94fe3c666fdffaed4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41fc8df7-d6c4-4fa2-90d5-0487f4e15064", "node_type": "1", "metadata": {}, "hash": "6afca877f4ed15075d183f3d811df96255af3d6647f63d99fafdd954447aba95", "class_name": "RelatedNodeInfo"}}, "hash": "4f0eec8ec646b5055fecb44722ac1d3e8623a23d70684d4857c5133f007c6e6c", "text": "La forma de operar del int\u00e9rprete es parecida a la l\u00ednea de comandos de Unix: cuando se la llama con la entrada est\u00e1ndar\nconectada a una terminal lee y ejecuta comandos en forma interactiva; cuando es llamada con un nombre de archivo como\nargumento o con un archivo como entrada est\u00e1ndar, lee y ejecuta un script del archivo.\nUna segunda forma de iniciar el int\u00e9rprete es python -c comando [arg] ..., que ejecuta las sentencias en comando,\nsimilar a la opci\u00f3n -c de la l\u00ednea de comandos. Ya que las sentencias de Python suelen tener espacios en blanco u otros\ncaracteres que son especiales en la l\u00ednea de comandos, es normalmente recomendado citar comando entre comillas dobles.\nAlgunos m\u00f3dulos de Python son tambi\u00e9n \u00fatiles como scripts. Pueden invocarse usando python -m module [arg] ...,\nque ejecuta el c\u00f3digo de module como si se hubiese ingresado su nombre completo en la l\u00ednea de comandos.\nCuando se usa un script, a veces es \u00fatil correr primero el script y luego entrar al modo interactivo. Esto se puede hacer\npas\u00e1ndole la opci\u00f3n -i antes del nombre del script.\nTodas las opciones de l\u00ednea de comandos est\u00e1n se descriptas en L\u00ednea de comandos y entorno.\n 5", "start_char_idx": 1733, "end_char_idx": 2896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41fc8df7-d6c4-4fa2-90d5-0487f4e15064": {"__data__": {"id_": "41fc8df7-d6c4-4fa2-90d5-0487f4e15064", "embedding": null, "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dead090f-908b-4f6a-9470-2c78a4669714", "node_type": "4", "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "33b75df3f1f4f40aee2e750c81c7d52b093076ee4d64aface4220b68a23249a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90c3c137-69e0-46a7-977d-3dc928b35c16", "node_type": "1", "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4f0eec8ec646b5055fecb44722ac1d3e8623a23d70684d4857c5133f007c6e6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a87e76a-80d7-43d9-97fe-8b832c62d0e3", "node_type": "1", "metadata": {}, "hash": "b8b4fab2724b412cdf7fe1a6fd017d7a63a51bc94194702b0c6d000613c5f347", "class_name": "RelatedNodeInfo"}}, "hash": "6afca877f4ed15075d183f3d811df96255af3d6647f63d99fafdd954447aba95", "text": "Pasaje de argumentosCuando son conocidos por el int\u00e9rprete, el nombre del script y los argumentos adicionales son entonces convertidos a una\nlista de cadenas de texto asignada a la variable argv del m\u00f3dulo sys. Pod\u00e9s acceder a esta lista haciendo import sys.\nEl largo de esta lista es al menos uno; cuando ning\u00fan script o argumentos son pasados, sys.argv[0] es una cadena\nvac\u00eda. Cuando se pasa el nombre del script con '-' (lo que significa la entrada est\u00e1ndar), sys.argv[0] vale '-'.\nCuando se usa -c command, sys.argv[0] vale '-c'. Cuando se usa -m module, sys.argv[0] toma el valor del\nnombre completo del m\u00f3dulo. Las opciones encontradas luego de -c command o -m module no son consumidas por el\nprocesador de opciones de Python pero de todas formas almacenadas en sys.argv para ser manejadas por el comando o\nm\u00f3dulo.\nModo interactivo\nSe dice que estamos usando el int\u00e9rprete en modo interactivo, cuando los comandos son le\u00eddos desde una terminal. En este\nmodo espera el siguiente comando con el prompt primario, usualmente tres signos mayor-que (>>>); para las l\u00edneas de\ncontinuaci\u00f3n espera con el prompt secundario, por defecto tres puntos (...). Antes de mostrar el prompt primario, el\nint\u00e9rprete muestra un mensaje de bienvenida reportando su n\u00famero de versi\u00f3n y una nota de copyright:\n$ python3.6\nPython 3.6 (default, Sep 16 2015, 09:25:04)\n[GCC 4.8.2] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\nLas l\u00edneas de continuaci\u00f3n son necesarias cuando queremos ingresar un constructor multil\u00ednea. Como en el ejemplo, mir\u00e1 la\nsentencia if:\n>>> el_mundo_es_plano = True\n>>> if el_mundo_es_plano:\n...     print(\"\u00a1Ten\u00e9 cuidado de no caerte!\")\n...\n\u00a1Ten\u00e9 cuidado de no caerte!", "start_char_idx": 0, "end_char_idx": 1712, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a87e76a-80d7-43d9-97fe-8b832c62d0e3": {"__data__": {"id_": "7a87e76a-80d7-43d9-97fe-8b832c62d0e3", "embedding": null, "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dead090f-908b-4f6a-9470-2c78a4669714", "node_type": "4", "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "33b75df3f1f4f40aee2e750c81c7d52b093076ee4d64aface4220b68a23249a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41fc8df7-d6c4-4fa2-90d5-0487f4e15064", "node_type": "1", "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6afca877f4ed15075d183f3d811df96255af3d6647f63d99fafdd954447aba95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "62e60ac2-a470-4347-83fa-7f03b42db0b0", "node_type": "1", "metadata": {}, "hash": "6fa7278e5405581d33c3a452ede8cf1a40c369e4ee1b42ff19e36f1a3686af71", "class_name": "RelatedNodeInfo"}}, "hash": "b8b4fab2724b412cdf7fe1a6fd017d7a63a51bc94194702b0c6d000613c5f347", "text": "...\n\u00a1Ten\u00e9 cuidado de no caerte!\nPara m\u00e1s informaci\u00f3n sobre el modo interactivo, ve a Modo interactivo.\nEl int\u00e9rprete y su entorno\nCodificaci\u00f3n del c\u00f3digo fuente\nPor default, los archivos fuente de Python son tratados como codificados en UTF-8. En esa codificaci\u00f3n, los caracteres de la\nmayor\u00eda de los lenguajes del mundo pueden ser usados simult\u00e1neamente en literales, identificadores y comentarios, a pesar\nde que la biblioteca est\u00e1ndar usa solamente caracteres ASCII para los identificadores, una convenci\u00f3n que deber\u00eda seguir\ncualquier c\u00f3digo que sea portable. Para mostrar estos caracteres correctamente, tu editor debe reconocer que el archivo\nest\u00e1 en UTF-8 y usar una tipograf\u00eda que soporte todos los careacteres del archivo.\nTambi\u00e9n es posible especificar una codificaci\u00f3n distinta para los archivos fuente. Para hacer esto, pon\u00e9 una o m\u00e1s lineas de\ncomentarios especiales luego de la linea del #! para definir la codificaci\u00f3n del archivo fuente:\n# -*- coding: encoding -*-\nCon esa declaraci\u00f3n, todo en el archivo fuente ser\u00e1 tratado utilizando la codificaci\u00f3n encoding en lugar de UTF-8. La lista de\nposibles codificaciones se puede encontrar en la Referencia de la Biblioteca de Python, en la secci\u00f3n sobre codecs.\nPor ejemplo, si tu editor no soporta la codificaci\u00f3n UTF-8 e insiste en usar alguna otra, digamos Windows-1252, pod\u00e9s\nescribir:\n# -*- coding: cp-1252 -*-\n 6", "start_char_idx": 1681, "end_char_idx": 3061, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62e60ac2-a470-4347-83fa-7f03b42db0b0": {"__data__": {"id_": "62e60ac2-a470-4347-83fa-7f03b42db0b0", "embedding": null, "metadata": {"page_label": "15", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b61ab5d-f70c-4e05-be5c-472fb7153bfe", "node_type": "4", "metadata": {"page_label": "15", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dfeb99ae2ace591d18ba8f3338085c0486a65bb22688baaf4bf29a8dea482b71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a87e76a-80d7-43d9-97fe-8b832c62d0e3", "node_type": "1", "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b8b4fab2724b412cdf7fe1a6fd017d7a63a51bc94194702b0c6d000613c5f347", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd49dc4f-62b6-4407-81b4-a60c304d2ce6", "node_type": "1", "metadata": {}, "hash": "06a4889b4663252c070b1bcdac0851fe7dd2bbc015513453c7e73b1826f5ee84", "class_name": "RelatedNodeInfo"}}, "hash": "6fa7278e5405581d33c3a452ede8cf1a40c369e4ee1b42ff19e36f1a3686af71", "text": "y usar todos los caracteres del conjunto de Windows-1252 en los archivos fuente. El comentario especial de la codificaci\u00f3n\ndebe estar en la primera o segunda linea del archivo.\n1\nEn Unix, el int\u00e9rprete de Python 3.x no se instala por default con el ejecutable llamado python para que no\nconflict\u00fae con un ejecutable de Python 2.x que est\u00e9 instalado simultaneamente.\n 7", "start_char_idx": 0, "end_char_idx": 368, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd49dc4f-62b6-4407-81b4-a60c304d2ce6": {"__data__": {"id_": "bd49dc4f-62b6-4407-81b4-a60c304d2ce6", "embedding": null, "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c223f765-ac56-48ca-896a-2a6f14088fc3", "node_type": "4", "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bd1255a964beb51b4a42a35838f62037aae331dbdcb73d160dafd42a52aa463c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "62e60ac2-a470-4347-83fa-7f03b42db0b0", "node_type": "1", "metadata": {"page_label": "15", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6fa7278e5405581d33c3a452ede8cf1a40c369e4ee1b42ff19e36f1a3686af71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40c3330f-e469-4ff0-989e-51c33a9b93ba", "node_type": "1", "metadata": {}, "hash": "91946d17965a2b88aef05f81f415d7f07b65ae2e77f767f3d8b4564fd5f8a795", "class_name": "RelatedNodeInfo"}}, "hash": "06a4889b4663252c070b1bcdac0851fe7dd2bbc015513453c7e73b1826f5ee84", "text": "Una introducci\u00f3n informal a PythonEn los siguientes ejemplos, las entradas y salidas son distinguidas por la presencia o ausencia de los prompts (>>> y ...):\npara reproducir los ejemplos, deb\u00e9s escribir todo lo que est\u00e9 despu\u00e9s del prompt, cuando este aparezca; las l\u00edneas que no\ncomiencen con el prompt son las salidas del int\u00e9rprete. Ten\u00e9 en cuenta que el prompt secundario que aparece por si s\u00f3lo en\nuna l\u00ednea de un ejemplo significa que deb\u00e9s escribir una l\u00ednea en blanco; esto es usado para terminar un comando\nmultil\u00ednea.\nMuchos de los ejemplos de este manual, incluso aquellos ingresados en el prompt interactivo, incluyen comentarios. Los\ncomentarios en Python comienzan con el car\u00e1cter numeral, #, y se extienden hasta el final f\u00edsico de la l\u00ednea. Un comentario\nquiz\u00e1s aparezca al comienzo de la l\u00ednea o seguidos de espacios blancos o c\u00f3digo, pero no dentro de una cadena de\ncaracteres. Un car\u00e1cter numeral dentro de una cadena de caracteres es s\u00f3lo un car\u00e1cter numeral. Ya que los comentarios\nson para aclarar c\u00f3digo y no son interpretados por Python, pueden omitirse cuando se escriben los ejemplos.\nAlgunos ejemplos:\n# este es el primer comentario\nspam = 1                 # y este es el segundo comentario\n                         # ... y ahora un tercero!\ntext = \"# Este no es un comentario\".\nUsar Python como una calculadora\nVamos a probar algunos comandos simples en Python. Inici\u00e1 un int\u00e9rprete y esper\u00e1 por el prompt primario, >>>. (No\ndeber\u00eda demorar tanto).\nN\u00fameros\nEl int\u00e9rprete act\u00faa como una simple calculadora; pod\u00e9s ingresar una expresi\u00f3n y este escribir\u00e1 los valores. La sintaxis es\nsencilla: los operadores +, -, * y / funcionan como en la mayor\u00eda de los lenguajes (por ejemplo, Pascal o C); los\npar\u00e9ntesis (()) pueden ser usados para agrupar.", "start_char_idx": 0, "end_char_idx": 1770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40c3330f-e469-4ff0-989e-51c33a9b93ba": {"__data__": {"id_": "40c3330f-e469-4ff0-989e-51c33a9b93ba", "embedding": null, "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c223f765-ac56-48ca-896a-2a6f14088fc3", "node_type": "4", "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bd1255a964beb51b4a42a35838f62037aae331dbdcb73d160dafd42a52aa463c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd49dc4f-62b6-4407-81b4-a60c304d2ce6", "node_type": "1", "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "06a4889b4663252c070b1bcdac0851fe7dd2bbc015513453c7e73b1826f5ee84", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a88fadce-70c0-4b85-8380-f4d06a861a54", "node_type": "1", "metadata": {}, "hash": "f1bce3230075242faf492d9ae5c8cd8e878dc4c330b9d53929b56a18cfdf8d8e", "class_name": "RelatedNodeInfo"}}, "hash": "91946d17965a2b88aef05f81f415d7f07b65ae2e77f767f3d8b4564fd5f8a795", "text": "Por ejemplo:\n>>> 2 + 2\n4\n>>> 50 - 5*6\n20\n>>> (50 - 5*6) / 4\n5.0\n>>> 8 / 5  # la divisi\u00f3n simpre retorna un n\u00famero de punto flotante\n1.6\nLos n\u00fameros enteros (por ejemplo 2, 4, 20) son de tipo int, aquellos con una parte fraccional (por ejemplo 5.0, 1.6) son\nde tipo float. Vamos a ver m\u00e1s sobre tipos de n\u00fameros luego en este tutorial.\nLa divisi\u00f3n (/) siempre retorna un punto flotante. Para hacer floor division y obtener un resultado entero (descartando\ncualquier resultado fraccional) pod\u00e9s usar el operador //; para calcular el resto pod\u00e9s usar %:\n>>> 17 / 3  # la divisi\u00f3n cl\u00e1sica retorna un punto flotante\n5.666666666666667\n>>>\n>>> 17 // 3  # la divisi\u00f3n entera descarta la parte fraccional\n5\n 8", "start_char_idx": 1771, "end_char_idx": 2471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a88fadce-70c0-4b85-8380-f4d06a861a54": {"__data__": {"id_": "a88fadce-70c0-4b85-8380-f4d06a861a54", "embedding": null, "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01547349-0911-4809-bf54-8ba1be02837c", "node_type": "4", "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "697e85466ce40725b6ceff361fafc9bf8a44ac41ebcd3a34843690253c0a208f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40c3330f-e469-4ff0-989e-51c33a9b93ba", "node_type": "1", "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "91946d17965a2b88aef05f81f415d7f07b65ae2e77f767f3d8b4564fd5f8a795", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5639e67b-a4c7-426f-86a7-e17bd9220de0", "node_type": "1", "metadata": {}, "hash": "7467c696b5de7237b16ccf1d7cb473dee312f1d57eee1260634d4cffbd7a2d2e", "class_name": "RelatedNodeInfo"}}, "hash": "f1bce3230075242faf492d9ae5c8cd8e878dc4c330b9d53929b56a18cfdf8d8e", "text": ">>> 17 % 3  # el operado % retorna el resto de la divisi\u00f3n\n2\n>>> 5 * 3 + 2  # resultado * divisor + resto\n17\nCon Python, es posible usar el operador ** para calcular potencias 2:\n>>> 5 ** 2  # 5 al cuadrado\n25\n>>> 2 ** 7  # 2 a la potencia de 7\n128\nEl signo igual (=) es usado para asignar un valor a una variable. Luego, ning\u00fan resultado es mostrado antes del pr\u00f3ximo\nprompt:\n>>> ancho = 20\n>>> largo = 5 * 9\n>>> ancho * largo\n900\nSi una variable no est\u00e1 \"definida\" (con un valor asignado), intentar usarla producir\u00e1 un error:\n>>> n  # tratamos de acceder a una variable no definida\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'n' is not defined\nEn el modo interactivo, la \u00faltima expresi\u00f3n impresa es asignada a la variable _. Esto significa que cuando est\u00e9s usando\nPython como una calculadora de escritorio, es m\u00e1s f\u00e1cil seguir calculando, por ejemplo:\n>>> impuesto = 12.5 / 100\n>>> precio = 100.50\n>>> precio * impuesto\n12.5625\n>>> precio + _\n113.0625\n>>> round(_, 2)\n113.06\nEsta variable deber\u00eda ser tratada como de s\u00f3lo lectura por el usuario. No le asignes expl\u00edcitamente un valor; crear\u00e1s una\nvariable local independiente con el mismo nombre enmascarando la variable con el comportamiento m\u00e1gico.\nAdem\u00e1s de int y float, Python soporta otros tipos de n\u00fameros, como ser Decimal y Fraction. Python tambi\u00e9n tiene\nsoporte integrado para n\u00famreos complejos, y usa el sufijo j o J para indicar la parte imaginaria (por ejemplo 3+5j).\nCadenas de caracteres\nAdem\u00e1s de n\u00fameros, Python puede manipular cadenas de texto, las cuales pueden ser expresadas de distintas formas.", "start_char_idx": 0, "end_char_idx": 1613, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5639e67b-a4c7-426f-86a7-e17bd9220de0": {"__data__": {"id_": "5639e67b-a4c7-426f-86a7-e17bd9220de0", "embedding": null, "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01547349-0911-4809-bf54-8ba1be02837c", "node_type": "4", "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "697e85466ce40725b6ceff361fafc9bf8a44ac41ebcd3a34843690253c0a208f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a88fadce-70c0-4b85-8380-f4d06a861a54", "node_type": "1", "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f1bce3230075242faf492d9ae5c8cd8e878dc4c330b9d53929b56a18cfdf8d8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0950de56-f656-4693-9f21-89b2e8051ce6", "node_type": "1", "metadata": {}, "hash": "d6a75fc33c9ff1eb2d629b110d64c02536ab733643c1d7de6420ec00caa08fbe", "class_name": "RelatedNodeInfo"}}, "hash": "7467c696b5de7237b16ccf1d7cb473dee312f1d57eee1260634d4cffbd7a2d2e", "text": "Pueden estar encerradas en comillas simples ('...') o dobles (\"...\") con el mismo resultado 3. \\ puede ser usado para\nescapar comillas:\n>>> 'huevos y pan'  # comillas simples\n'huevos y pan'\n>>> 'doesn\\'t'  # usa \\' para escapar comillas simples...\n\"doesn't\"\n>>> \"doesn't\"  # ...o de lo contrario usa comillas doblas\n\"doesn't\"\n>>> '\"Si,\" le dijo.'\n'\"Si,\" le dijo.'\n>>> \"\\\"Si,\\\" le dijo.\"\n 9", "start_char_idx": 1614, "end_char_idx": 2003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0950de56-f656-4693-9f21-89b2e8051ce6": {"__data__": {"id_": "0950de56-f656-4693-9f21-89b2e8051ce6", "embedding": null, "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46639f04-5bd3-4ddd-8597-1a14b727eb83", "node_type": "4", "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a54872c9de622a7f25fd34b52e55fb10f03ef3e4cf30197f1da5d5b7074f251", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5639e67b-a4c7-426f-86a7-e17bd9220de0", "node_type": "1", "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7467c696b5de7237b16ccf1d7cb473dee312f1d57eee1260634d4cffbd7a2d2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30f56776-8014-4aa1-8d80-d1175727c96e", "node_type": "1", "metadata": {}, "hash": "ef268c1c234e7ae9541f744df2d67b66cc45274eda73e3bd30beddfddcdd0b4c", "class_name": "RelatedNodeInfo"}}, "hash": "d6a75fc33c9ff1eb2d629b110d64c02536ab733643c1d7de6420ec00caa08fbe", "text": "'\"Si,\" le dijo.'\n>>> '\"Isn\\'t,\" she said.'\n'\"Isn\\'t,\" she said.'\nEn el int\u00e9prete interactivo, la salida de cadenas est\u00e1 encerrada en comillas y los caracteres especiales son escapados con\nbarras invertidas. Aunque esto a veces luzca diferente de la entrada (las comillas que encierran pueden cambiar), las dos\ncadenas son equivalentes. La cadena se encierra en comillas dobles si la cadena contiene una comilla simple y ninguna\ndoble, de lo contrario es encerrada en comillas simples. La funci\u00f3n print() produce una salida m\u00e1s legible, omitiendo las\ncomillas que la encierran e imprimiendo caracteres especiales y escapados:\n>>> '\"Isn\\'t,\" she said.'\n'\"Isn\\'t,\" she said.'\n>>> print('\"Isn\\'t,\" she said.')\n\"Isn't,\" she said.\n>>> s = 'Primerea l\u00ednea.\\nSegunda l\u00ednea.'  # \\n significa nueva l\u00ednea\n>>> s  # sin print(), \\n es inclu\u00eddo en la salida\n'Primera l\u00ednea.\\nSegunda l\u00ednea.'\n>>> print(s)  # con print(), \\n produce una nueva l\u00ednea\nPrimera l\u00ednea.\nSegunda l\u00ednea.\nSi no quer\u00e9s que los caracteres antepuestos por \\ sean interpretados como caracteres especiales, pod\u00e9s usar cadenas\ncrudas agregando una r antes de la primera comilla:\n>>> print('C:\\algun\\nombre')  # aqu\u00ed \\n significa nueva l\u00ednea!\nC:\\algun\nombre\n>>> print(r'C:\\algun\\nombre')  # nota la r antes de la comilla\nC:\\algun\\nombre\nLas cadenas de texto literales pueden contener m\u00faltiples l\u00edneas. Una forma es usar triple comillas: \"\"\"...\"\"\" o\n'''...'''. Los fin de l\u00ednea son inclu\u00eddos autom\u00e1ticamente, pero es posible prevenir esto agregando una \\ al final de la\nl\u00ednea.", "start_char_idx": 0, "end_char_idx": 1527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30f56776-8014-4aa1-8d80-d1175727c96e": {"__data__": {"id_": "30f56776-8014-4aa1-8d80-d1175727c96e", "embedding": null, "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46639f04-5bd3-4ddd-8597-1a14b727eb83", "node_type": "4", "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a54872c9de622a7f25fd34b52e55fb10f03ef3e4cf30197f1da5d5b7074f251", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0950de56-f656-4693-9f21-89b2e8051ce6", "node_type": "1", "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d6a75fc33c9ff1eb2d629b110d64c02536ab733643c1d7de6420ec00caa08fbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "098ff4f5-d78e-4fd7-9f7a-37140610f704", "node_type": "1", "metadata": {}, "hash": "8035d9e014556f9d68f0cf2da68d28ac8101e993b03e0351bbe65bdf08e438ae", "class_name": "RelatedNodeInfo"}}, "hash": "ef268c1c234e7ae9541f744df2d67b66cc45274eda73e3bd30beddfddcdd0b4c", "text": "Por ejemplo:\nprint(\"\"\"\\\nUso: algo [OPTIONS]\n     -h                        Muestra el mensaje de uso\n     -H nombrehost             Nombre del host al cual conectarse\n\"\"\")\nproduce la siguiente salida: (nota que la l\u00ednea inicial no est\u00e1 inclu\u00edda)\nUso: algo [OPTIONS]\n     -h                        Muestra el mensaje de uso\n     -H nombrehost             Nombre del host al cual conectarse\nLas cadenas de texto pueden ser concatenadas (pegadas juntas) con el operador + y repetidas con *:\n>>> # 3 veces 'un', seguido de 'ium'\n>>> 3 * 'un' + 'ium'\n'unununium'\nDos o m\u00e1s cadenas literales (aquellas encerradas entre comillas) una al lado de la otra son autom\u00e1ticamente concatenadas:\n>>> 'Py' 'thon'\n'Python'\nEsto solo funciona con dos literales, no con variables ni expresiones:\n 10", "start_char_idx": 1528, "end_char_idx": 2307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "098ff4f5-d78e-4fd7-9f7a-37140610f704": {"__data__": {"id_": "098ff4f5-d78e-4fd7-9f7a-37140610f704", "embedding": null, "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3076b1b4-5f45-4f77-b68d-555b0a96c860", "node_type": "4", "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a5229b89cdd89a22e17bff2c1fc57938bb97edf273a55bd9cec3b2c1dabae084", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30f56776-8014-4aa1-8d80-d1175727c96e", "node_type": "1", "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ef268c1c234e7ae9541f744df2d67b66cc45274eda73e3bd30beddfddcdd0b4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1712538f-ce50-49fe-8d73-1b33c9f9f38d", "node_type": "1", "metadata": {}, "hash": "9a7887a4f8ed12a224b441216087f35dade9994a1f4d06cb6bb5293bb6be8a33", "class_name": "RelatedNodeInfo"}}, "hash": "8035d9e014556f9d68f0cf2da68d28ac8101e993b03e0351bbe65bdf08e438ae", "text": ">>> prefix = 'Py'\n>>> prefix 'thon'  # no se puede concatenar una variable y una cadena literal\n  ...\nSyntaxError: invalid syntax\n>>> ('un' * 3) 'ium'\n  ...\nSyntaxError: invalid syntax\nSi quer\u00e9s concatenar variables o una variable con un literal, us\u00e1 +:\n>>> prefix + 'thon'\n'Python'\nEsta caracter\u00edstica es particularmente \u00fatil cuando quer\u00e9s separar cadenadas largas:\n>>> texto = ('Pon\u00e9 muchas cadenas dentro de par\u00e9ntesis '\n...          'para que ellas sean unidas juntas.')\n>>> texto\n'Pon\u00e9 muchas cadenas dentro de par\u00e9ntesis para que ellas sean unidas juntas.'\nLas cadenas de texto se pueden indexar (sub\u00edndices), el primer car\u00e1cter de la cadena tiene el \u00edndice 0. No hay un tipo de\ndato para los caracteres; un car\u00e1cter es simplemente una cadena de longitud uno:\n>>> palabra = 'Python'\n>>> palabra[0]  # caracter en la posici\u00f3n 0\n'P'\n>>> palabra[5]  # caracter en la posici\u00f3n 5\n'n'\nLos \u00edndices quiz\u00e1s sean n\u00fameros negativos, para empezar a contar desde la derecha:\n>>> palabra[-1]  # \u00faltimo caracter\n'n'\n>>> palabra[-2]  # ante \u00faltimo caracter\n'o'\n>>> palabra[-6]\n'P'\nNota que -0 es lo mismo que 0, los \u00edndice negativos comienzan desde -1.\nAdem\u00e1s de los \u00edndices, las rebanadas tambi\u00e9n est\u00e1n soportadas. Mientras que los \u00edndices son usados para obtener\ncaracteres individuales, las rebanadas te permiten obtener sub-cadenas:\n>>> palabra[0:2]  # caracteres desde la posici\u00f3n 0 (inclu\u00edda) hasta la 2 (exclu\u00edda)\n'Py'\n>>> palabra[2:5]  # caracteres desde la posici\u00f3n 2 (inclu\u00edda) hasta la 5 (exclu\u00edda)\n'tho'\nNota como el primero es siempre inclu\u00eddo, y que el \u00faltimo es siempre exclu\u00eddo.", "start_char_idx": 0, "end_char_idx": 1584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1712538f-ce50-49fe-8d73-1b33c9f9f38d": {"__data__": {"id_": "1712538f-ce50-49fe-8d73-1b33c9f9f38d", "embedding": null, "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3076b1b4-5f45-4f77-b68d-555b0a96c860", "node_type": "4", "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a5229b89cdd89a22e17bff2c1fc57938bb97edf273a55bd9cec3b2c1dabae084", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "098ff4f5-d78e-4fd7-9f7a-37140610f704", "node_type": "1", "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8035d9e014556f9d68f0cf2da68d28ac8101e993b03e0351bbe65bdf08e438ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6bdb469-7d38-482c-8fb8-64dcac3053c3", "node_type": "1", "metadata": {}, "hash": "2e08d21d140f81fc1503000b85a7f7f977a3672fd955860cde610801fddcb418", "class_name": "RelatedNodeInfo"}}, "hash": "9a7887a4f8ed12a224b441216087f35dade9994a1f4d06cb6bb5293bb6be8a33", "text": "Esto asegura que s[:i] + s[i:] siempre\nsea igual a s:\n>>> palabra[:2] + palabra[2:]\n'Python'\n>>> palabra[:4] + palabra[4:]\n'Python'\nLos \u00edndices de las rebanadas tienen valores por defecto \u00fatiles; el valor por defecto para el primer \u00edndice es cero, el valor por\ndefecto para el segundo \u00edndice es la longitud de la cadena a rebanar.\n>>> palabra[:2]  # caracteres desde el principio hasta la posici\u00f3n 2 (exclu\u00edda)\n'Py'\n 11", "start_char_idx": 1585, "end_char_idx": 2004, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6bdb469-7d38-482c-8fb8-64dcac3053c3": {"__data__": {"id_": "d6bdb469-7d38-482c-8fb8-64dcac3053c3", "embedding": null, "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6ad87a41-6a0a-45d3-b171-e275290e21de", "node_type": "4", "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cfca1333184a374bd5f3bda6d37651fdeec577ae94d0f46d73b85ffa34118180", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1712538f-ce50-49fe-8d73-1b33c9f9f38d", "node_type": "1", "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a7887a4f8ed12a224b441216087f35dade9994a1f4d06cb6bb5293bb6be8a33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba9498b3-d109-4958-ac38-5a7f5820ba9a", "node_type": "1", "metadata": {}, "hash": "de86b966c6a81cdc57d7b45bce222df89cc6221cee146d8100244deb03c404e9", "class_name": "RelatedNodeInfo"}}, "hash": "2e08d21d140f81fc1503000b85a7f7f977a3672fd955860cde610801fddcb418", "text": ">>> palabra[4:]  # caracterrs desde la posici\u00f3n 4 (inclu\u00edda) hasta el final\n'on'\n>>> palabra[-2:] # caracteres desde la ante-\u00faltima (inclu\u00edda) hasta el final\n'on'\nUna forma de recordar c\u00f3mo funcionan las rebanadas es pensar en los \u00edndices como puntos entre caracteres, con el punto\na la izquierda del primer car\u00e1cter numerado en 0. Luego, el punto a la derecha del \u00faltimo car\u00e1cter de una cadena de n\ncaracteres tienen \u00edndice n, por ejemplo:\n +---+---+---+---+---+---+\n | P | y | t | h | o | n |\n +---+---+---+---+---+---+\n 0   1   2   3   4   5   6\n-6  -5  -4  -3  -2  -1\nLa primer fila de n\u00fameros da la posici\u00f3n de los \u00edndices 0...6 en la cadena; la segunda fila da los correspondientes \u00edndices\nnegativos. La rebanada de i a j consiste en todos los caracteres entre los puntos etiquetados i y j, respectivamente.\nPara \u00edndices no negativos, la longitud de la rebanada es la diferencia de los \u00edndices, si ambos entran en los l\u00edmites. Por\nejemplo, la longitud de palabra[1:3] es 2.\nIntentar usar un \u00edndice que es muy grande resultar\u00e1 en un error:\n>>> palabra[42]  # la palabra solo tiene 6 caracteres\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIndexError: string index out of range\nSin embargo, \u00edndices fuera de rango en rebanadas son manejados satisfactoriamente:\n>>> palabra[4:42]\n'on'\n>>> palabra[42:]\n''\nLas cadenas de Python no pueden ser modificadas -- son immutable.", "start_char_idx": 0, "end_char_idx": 1401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba9498b3-d109-4958-ac38-5a7f5820ba9a": {"__data__": {"id_": "ba9498b3-d109-4958-ac38-5a7f5820ba9a", "embedding": null, "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6ad87a41-6a0a-45d3-b171-e275290e21de", "node_type": "4", "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cfca1333184a374bd5f3bda6d37651fdeec577ae94d0f46d73b85ffa34118180", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6bdb469-7d38-482c-8fb8-64dcac3053c3", "node_type": "1", "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2e08d21d140f81fc1503000b85a7f7f977a3672fd955860cde610801fddcb418", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67470121-3f76-40cb-ad2b-bf699e718362", "node_type": "1", "metadata": {}, "hash": "700be15b2198789d6446f279f0141a36e872c1753ecc920e5fa8a397a292b88d", "class_name": "RelatedNodeInfo"}}, "hash": "de86b966c6a81cdc57d7b45bce222df89cc6221cee146d8100244deb03c404e9", "text": "Por eso, asignar a una posici\u00f3n indexada de la\ncadena resulta en un error:\n>>> palabra[0] = 'J'\n  ...\nTypeError: 'str' object does not support item assignment\n>>> palabra[2:] = 'py'\n  ...\nTypeError: 'str' object does not support item assignment\nSi necesit\u00e1s una cadena diferente, deber\u00edas crear una nueva:\n>>> 'J' + palabra[1:]\n'Jython'\n>>> palabra[:2] + 'py'\n'Pypy'\nLa funci\u00f3n incorporada len() devuelve la longitud de una cadena de texto:\n>>> s = 'supercalifrastilisticoespialidoso'\n>>> len(s)\n33\n 12", "start_char_idx": 1402, "end_char_idx": 1904, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67470121-3f76-40cb-ad2b-bf699e718362": {"__data__": {"id_": "67470121-3f76-40cb-ad2b-bf699e718362", "embedding": null, "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cf21e22-c6c3-4123-a49f-8eef649c14b9", "node_type": "4", "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "513a5e36c72780880c76d6727418698fbda795f839b59ded972272dbbceec5b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba9498b3-d109-4958-ac38-5a7f5820ba9a", "node_type": "1", "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "de86b966c6a81cdc57d7b45bce222df89cc6221cee146d8100244deb03c404e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6bbb8ae-6a31-44b6-a4c8-79bf669f9809", "node_type": "1", "metadata": {}, "hash": "8627d4fa2114bd30d50452d7476224b257dc242b6dfbd0d5477d07a7d685d387", "class_name": "RelatedNodeInfo"}}, "hash": "700be15b2198789d6446f279f0141a36e872c1753ecc920e5fa8a397a292b88d", "text": "Ver tambi\u00e9n\nTipos integrados\nLas cadenas de texto son ejemplos de tipos secuencias, y soportan las operaciones comunes para esos tipos.\nTipos integrados\nLas cadenas de texto soportan una gran cantidad de m\u00e9todos para transformaciones b\u00e1sicas y b\u00fasqueda.\nf-strings\nLiterales de cadena que tienen expresiones embebidas.\nformatstrings\nAqu\u00ed se da informaci\u00f3n sobre formateo de cadenas de texto con str.format().\nTipos integrados\nAqu\u00ed se describe con m\u00e1s detalle las operaciones viejas para formateo usadas cuando una cadena de texto o una\ncadena Unicode est\u00e1n a la izquierda del operador %.\nListas\nPython tiene varios tipos de datos compuestos, usados para agrupar otros valores. El m\u00e1s vers\u00e1til es la lista, la cual puede\nser escrita como una lista de valores separados por coma (\u00edtems) entre corchetes. Las listas pueden contener \u00edtems de\ndiferentes tipos, pero usualmente los \u00edtems son del mismo tipo:\n>>> cuadrados = [1, 4, 9, 16, 25]\n>>> cuadrados\n[1, 4, 9, 16, 25]\nComo las cadenas de caracteres (y todos los otros tipos sequence integrados), las listas pueden ser indexadas y rebanadas:\n>>> cuadrados[0]  # \u00edndices retornan un \u00edtem\n1\n>>> cuadrados[-1]\n25\n>>> cuadrados[-3:]  # rebanadas retornan una nueva lista\n[9, 16, 25]\nTodas las operaciones de rebanado devuelven una nueva lista conteniendo los elementos pedidos.", "start_char_idx": 0, "end_char_idx": 1321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6bbb8ae-6a31-44b6-a4c8-79bf669f9809": {"__data__": {"id_": "d6bbb8ae-6a31-44b6-a4c8-79bf669f9809", "embedding": null, "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cf21e22-c6c3-4123-a49f-8eef649c14b9", "node_type": "4", "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "513a5e36c72780880c76d6727418698fbda795f839b59ded972272dbbceec5b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67470121-3f76-40cb-ad2b-bf699e718362", "node_type": "1", "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "700be15b2198789d6446f279f0141a36e872c1753ecc920e5fa8a397a292b88d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9322244-ea7b-4206-83b2-d66ad492807e", "node_type": "1", "metadata": {}, "hash": "5ac718b695e029ae12cfa8a5deb1a6b7778a6b8cbc92893e5dde904e7ea5cfca", "class_name": "RelatedNodeInfo"}}, "hash": "8627d4fa2114bd30d50452d7476224b257dc242b6dfbd0d5477d07a7d685d387", "text": "Esto significa que la\nsiguiente rebanada devuelve una copia superficial de la lista:\n>>> cuadrados[:]\n[1, 4, 9, 16, 25]\nLas listas tambi\u00e9n soportan operaciones como concatenaci\u00f3n:\n>>> cuadrados + [36, 49, 64, 81, 100]\n[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\nA diferencia de las cadenas de texto, que son immutable, las listas son un tipo mutable, es posible cambiar un su contenido:\n>>> cubos = [1, 8, 27, 65, 125]  # hay algo mal aqu\u00ed\n>>> 4 ** 3  # el cubo de 4 es 64, no 65!\n64\n>>> cubos[3] = 64  # reemplazar el valor incorrecto\n>>> cubos\n[1, 8, 27, 64, 125]\n 13", "start_char_idx": 1322, "end_char_idx": 1886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9322244-ea7b-4206-83b2-d66ad492807e": {"__data__": {"id_": "c9322244-ea7b-4206-83b2-d66ad492807e", "embedding": null, "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b31be195-6839-46c4-b971-676834a63e91", "node_type": "4", "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb1248eed7392417a753940012250c92d0e701ab86d66f8a1ee417a259795cc0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6bbb8ae-6a31-44b6-a4c8-79bf669f9809", "node_type": "1", "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8627d4fa2114bd30d50452d7476224b257dc242b6dfbd0d5477d07a7d685d387", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f67ba6cf-2694-48a4-bbdc-42841d7a1b2d", "node_type": "1", "metadata": {}, "hash": "75b538f6a5038ba9bb1ce8d21d0cb77eecd7c123a4975b8225a2287ab9728311", "class_name": "RelatedNodeInfo"}}, "hash": "5ac718b695e029ae12cfa8a5deb1a6b7778a6b8cbc92893e5dde904e7ea5cfca", "text": "Tambi\u00e9n pod\u00e9s agregar nuevos \u00edtems al final de la lista, usando el m\u00e9todo append() (vamos a ver m\u00e1s sobre los m\u00e9todos\nluego):\n>>> cubos.append(216)  # agregar el cubo de 6\n>>> cubos.append(7 ** 3)  # y el cubo de 7\n>>> cubos\n[1, 8, 27, 64, 125, 216, 343]\nTambi\u00e9n es posible asignar a una rebanada, y esto incluso puede cambiar la longitud de la lista o vaciarla totalmente:\n>>> letras = ['a', 'b', 'c', 'd', 'e', 'f', 'g']\n>>> letras\n['a', 'b', 'c', 'd', 'e', 'f', 'g']\n>>> # reemplazar algunos valores\n>>> letras[2:5] = ['C', 'D', 'E']\n>>> letras\n['a', 'b', 'C', 'D', 'E', 'f', 'g']\n>>> # ahora borrarlas\n>>> letras[2:5] = []\n>>> letras\n['a', 'b', 'f', 'g']\n>>> # borrar la lista reemplzando todos los elementos por una lista vac\u00eda\n>>> letras[:] = []\n>>> letras\n[]\nLa funci\u00f3n predefinida len() tambi\u00e9n sirve para las listas:\n>>> letras = ['a', 'b', 'c', 'd']\n>>> len(letras)\n4\nEs posible anidar listas (crear listas que contengan otras listas), por ejemplo:\n>>> a = ['a', 'b', 'c']\n>>> n = [1, 2, 3]\n>>> x = [a, n]\n>>> x\n[['a', 'b', 'c'], [1, 2, 3]]\n>>> x[0]\n['a', 'b', 'c']\n>>> x[0][1]\n'b'\nPrimeros pasos hacia la programaci\u00f3n\nPor supuesto, podemos usar Python para tareas m\u00e1s complicadas que sumar dos y dos.", "start_char_idx": 0, "end_char_idx": 1211, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f67ba6cf-2694-48a4-bbdc-42841d7a1b2d": {"__data__": {"id_": "f67ba6cf-2694-48a4-bbdc-42841d7a1b2d", "embedding": null, "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b31be195-6839-46c4-b971-676834a63e91", "node_type": "4", "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb1248eed7392417a753940012250c92d0e701ab86d66f8a1ee417a259795cc0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9322244-ea7b-4206-83b2-d66ad492807e", "node_type": "1", "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5ac718b695e029ae12cfa8a5deb1a6b7778a6b8cbc92893e5dde904e7ea5cfca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec901106-c81c-4947-81bb-a9f571db307f", "node_type": "1", "metadata": {}, "hash": "b731485f0e538a1d1bfca9471f11c4e1ff4387b06ba931719deb176559cc03f0", "class_name": "RelatedNodeInfo"}}, "hash": "75b538f6a5038ba9bb1ce8d21d0cb77eecd7c123a4975b8225a2287ab9728311", "text": "Por ejemplo, podemos escribir una\nsubsecuencia inicial de la serie de Fibonacci as\u00ed:\n>>> # Series de Fibonacci:\n... # la suma de dos elementos define el siguiente\n... a, b = 0, 1\n>>> while b < 10:\n...     print(b)\n...     a, b = b, a+b\n...\n1\n1\n2\n3\n 14", "start_char_idx": 1212, "end_char_idx": 1463, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec901106-c81c-4947-81bb-a9f571db307f": {"__data__": {"id_": "ec901106-c81c-4947-81bb-a9f571db307f", "embedding": null, "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "31822631-af2b-4855-b496-4dba03c30fdf", "node_type": "4", "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dbb9fd1de0c928e26cbaf0715e3d8826278d56c56fa402fa2d534af32c112b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f67ba6cf-2694-48a4-bbdc-42841d7a1b2d", "node_type": "1", "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "75b538f6a5038ba9bb1ce8d21d0cb77eecd7c123a4975b8225a2287ab9728311", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f04b2f88-3afb-4976-915f-f72cbd3be260", "node_type": "1", "metadata": {}, "hash": "a09755a4fbaf2fc9e875beba06e134ac97365870eacccb50b2d11f282e3e630f", "class_name": "RelatedNodeInfo"}}, "hash": "b731485f0e538a1d1bfca9471f11c4e1ff4387b06ba931719deb176559cc03f0", "text": "5\n8\nEste ejemplo introduce varias caracter\u00edsticas nuevas.\n\u007f\nLa primer l\u00ednea contiene una asignaci\u00f3n m\u00faltiple: las variables a y b toman en forma simultanea los nuevos valores 0\ny 1. En la \u00faltima linea esto se vuelve a usar, demostrando que las expresiones a la derecha son evaluadas antes de\nque suceda cualquier asignaci\u00f3n. Las expresiones a la derecha son evaluadas de izquierda a derecha.\n\u007f\nEl bucle while se ejecuta mientras la condici\u00f3n (aqu\u00ed: b < 10) sea verdadera. En Python, como en C, cualquier\nentero distinto de cero es verdadero; cero es falso. La condici\u00f3n tambi\u00e9n puede ser una cadena de texto o una lista,\nde hecho cualquier secuencia; cualquier cosa con longitud distinta de cero es verdadero, las secuencias vac\u00edas son\nfalsas. La prueba usada en el ejemplo es una comparaci\u00f3n simple. Los operadores est\u00e1ndar de comparaci\u00f3n se\nescriben igual que en C: < (menor qu\u00e9), > (mayor qu\u00e9), == (igual a), <= (menor o igual qu\u00e9), >= (mayor o igual\nqu\u00e9) y != (distinto a).\n\u007f\nEl cuerpo del bucle est\u00e1 sangrado: la sangr\u00eda es la forma que usa Python para agrupar declaraciones. En el int\u00e9rprete\ninteractivo deb\u00e9s teclear un tab o espacio(s) para cada l\u00ednea sangrada. En la pr\u00e1ctica vas a preparar entradas m\u00e1s\ncomplicadas para Python con un editor de texto; todos los editores de texto decentes tienen la facilidad de agregar la\nsangr\u00eda autom\u00e1ticamente. Al ingresar una declaraci\u00f3n compuesta en forma interactiva, deb\u00e9s finalizar con una l\u00ednea\nen blanco para indicar que est\u00e1 completa (ya que el analizador no puede adivinar cuando tecleaste la \u00faltima l\u00ednea).\nNot\u00e1 que cada l\u00ednea de un bloque b\u00e1sico debe estar sangrada de la misma forma.\n\u007f\nLa funci\u00f3n print() escribe el valor de el o los argumentos que se le pasan.", "start_char_idx": 0, "end_char_idx": 1719, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f04b2f88-3afb-4976-915f-f72cbd3be260": {"__data__": {"id_": "f04b2f88-3afb-4976-915f-f72cbd3be260", "embedding": null, "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "31822631-af2b-4855-b496-4dba03c30fdf", "node_type": "4", "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dbb9fd1de0c928e26cbaf0715e3d8826278d56c56fa402fa2d534af32c112b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec901106-c81c-4947-81bb-a9f571db307f", "node_type": "1", "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b731485f0e538a1d1bfca9471f11c4e1ff4387b06ba931719deb176559cc03f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38b821b8-6291-4bfe-a40d-ad5023c4debe", "node_type": "1", "metadata": {}, "hash": "905e46b482761075a79ee6f168c248bd40543510fc4c6d32c65c0b27b3b5be36", "class_name": "RelatedNodeInfo"}}, "hash": "a09755a4fbaf2fc9e875beba06e134ac97365870eacccb50b2d11f282e3e630f", "text": "Difiere de simplemente escribir la\nexpresi\u00f3n que se quiere mostrar (como hicimos antes en los ejemplos de la calculadora) en la forma en que maneja\nm\u00faltiples argumentos, cantidades en punto flotante, y cadenas. Las cadenas de texto son impresas sin comillas, y un\nespacio en blanco es insertado entre los elementos, as\u00ed pod\u00e9s formatear cosas de una forma agradable:\n>>> i = 256*256\n>>> print('El valor de i es', i)\nEl valor de i es 65536\nEl par\u00e1metro nombrado end puede usarse para evitar el salto de linea al final de la salida, o terminar la salida con una\ncadena diferente:\n>>> a, b = 0, 1\n>>> while b < 1000:\n...     print(b, end=',')\n...     a, b = b, a+b\n...\n1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,\n2\nDebido a que ** tiene mayor precedencia que -, -3**2 ser\u00e1 interpretado como -(3**2) y eso da como\nresultado -9. Para evitar esto y obtener 9, pod\u00e9s usar (-3)**2.\n3\nA diferencia de otros lenguajes, caracteres especiales como \\n tiene el mismo significado con simple ('...') y\ndoble (\"...\") comillas. La \u00fanica diferencia entre las dos es que dentro de las comillas simples no ten\u00e9s la\nnecesitada de escapar \" (pero ten\u00e9s que escapar \\') y viceversa.\n 15", "start_char_idx": 1720, "end_char_idx": 2886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38b821b8-6291-4bfe-a40d-ad5023c4debe": {"__data__": {"id_": "38b821b8-6291-4bfe-a40d-ad5023c4debe", "embedding": null, "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "863ec4d0-7504-4a76-8c6f-e493cfb3ac91", "node_type": "4", "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "596fc90f1bc3b9d94409e0a3ff41bfd569edf719acd1550593c19a25defe26a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f04b2f88-3afb-4976-915f-f72cbd3be260", "node_type": "1", "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a09755a4fbaf2fc9e875beba06e134ac97365870eacccb50b2d11f282e3e630f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a2de2ec-e152-455f-9db7-78568a289c8a", "node_type": "1", "metadata": {}, "hash": "e9ef987008a05087c3da60750f97dfceeb0affee3d3af1a33b8c8e9c2678a810", "class_name": "RelatedNodeInfo"}}, "hash": "905e46b482761075a79ee6f168c248bd40543510fc4c6d32c65c0b27b3b5be36", "text": "M\u00e1s herramientas para control de \nflujoAdem\u00e1s de la sentencia while que acabamos de introducir, Python soporta las sentencias de control de flujo que podemos\nencontrar en otros lenguajes, con algunos cambios.\nLa sentencia \nTal vez el tipo m\u00e1s conocido de sentencia sea el if. Por ejemplo:\n>>> x = int(input(\"Ingresa un entero, por favor: \"))\nIngresa un entero, por favor: 42\n>>> if x < 0:\n...      x = 0\n...      print('Negativo cambiado a cero')\n... elif x == 0:\n...      print('Cero')\n... elif x == 1:\n...      print('Simple')\n... else:\n...      print('M\u00e1s')\n...\n'Mas'\nPuede haber cero o m\u00e1s bloques elif, y el bloque else es opcional. La palabra reservada 'elif' es una abreviaci\u00f3n de\n'else if', y es \u00fatil para evitar un sangrado excesivo. Una secuencia if ... elif ... elif ... sustituye las sentencias switch\no case encontradas en otros lenguajes.\nLa sentencia \nLa sentencia for en Python difiere un poco de lo que uno puede estar acostumbrado en lenguajes como C o Pascal. En\nlugar de siempre iterar sobre una progresi\u00f3n aritm\u00e9tica de n\u00fameros (como en Pascal) o darle al usuario la posibilidad de\ndefinir tanto el paso de la iteraci\u00f3n como la condici\u00f3n de fin (como en C), la sentencia for de Python itera sobre los \u00edtems\nde cualquier secuencia (una lista o una cadena de texto), en el orden que aparecen en la secuencia.", "start_char_idx": 0, "end_char_idx": 1327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a2de2ec-e152-455f-9db7-78568a289c8a": {"__data__": {"id_": "0a2de2ec-e152-455f-9db7-78568a289c8a", "embedding": null, "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "863ec4d0-7504-4a76-8c6f-e493cfb3ac91", "node_type": "4", "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "596fc90f1bc3b9d94409e0a3ff41bfd569edf719acd1550593c19a25defe26a9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38b821b8-6291-4bfe-a40d-ad5023c4debe", "node_type": "1", "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "905e46b482761075a79ee6f168c248bd40543510fc4c6d32c65c0b27b3b5be36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d687451-6fac-4e70-a121-2473a0f9504c", "node_type": "1", "metadata": {}, "hash": "009c9d05b8de0de016a62a0b361c2e08f505a3a3d379d0b49964b4b8584349be", "class_name": "RelatedNodeInfo"}}, "hash": "e9ef987008a05087c3da60750f97dfceeb0affee3d3af1a33b8c8e9c2678a810", "text": "Por ejemplo:\n>>> # Midiendo cadenas de texto\n... palabras = ['gato', 'ventana', 'defenestrado']\n>>> for p in palabras:\n...     print(p, len(p))\n...\ngato 4\nventana 7\ndefenestrado 12\nSi necesit\u00e1s modificar la secuencia sobre la que est\u00e1s iterando mientras est\u00e1s adentro del ciclo (por ejemplo para borrar\nalgunos \u00edtems), se recomienda que hagas primero una copia. Iterar sobre una secuencia no hace impl\u00edcitamente una copia.\nLa notaci\u00f3n de rebanada es especialmente conveniente para esto:\n>>> for p in palabras[:]:  # hace una copia por rebanada de toda la lista\n...    if len(p) > 6:\n...        palabras.insert(0, p)\n...\n 16", "start_char_idx": 1328, "end_char_idx": 1951, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d687451-6fac-4e70-a121-2473a0f9504c": {"__data__": {"id_": "3d687451-6fac-4e70-a121-2473a0f9504c", "embedding": null, "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68c024c2-89d3-4ba2-a1d5-5ab73d6f56d7", "node_type": "4", "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "774788191b41ea204ed2e98af7692882205357ceabee7042e49c1a5036560118", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a2de2ec-e152-455f-9db7-78568a289c8a", "node_type": "1", "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e9ef987008a05087c3da60750f97dfceeb0affee3d3af1a33b8c8e9c2678a810", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b5b8365-b0eb-4956-b81a-c8dd2c02b4a7", "node_type": "1", "metadata": {}, "hash": "5f4f9bfccbd048d43202fda455c6dce0415be0beed373303320087b5da726d68", "class_name": "RelatedNodeInfo"}}, "hash": "009c9d05b8de0de016a62a0b361c2e08f505a3a3d379d0b49964b4b8584349be", "text": ">>> palabras\n['defenestrado', 'ventana', 'gato', 'ventana', 'defenestrado']\nCon for w in words:, el ejemplo intentar\u00eda crear una lista infinita, insertando defenestrado una y otra vez.\nLa funci\u00f3n \nSi se necesita iterar sobre una secuencia de n\u00fameros, es apropiado utilizar la funci\u00f3n integrada range(), la cual genera\nprogresiones aritm\u00e9ticas:\n>>> for i in range(5):\n...     print(i)\n...\n0\n1\n2\n3\n4\nEl valor final dado nunca es parte de la secuencia; range(10) genera 10 valores, los \u00edndices correspondientes para los\n\u00edtems de una secuencia de longitud 10. Es posible hacer que el rango empiece con otro n\u00famero, o especificar un incremento\ndiferente (incluso negativo; algunas veces se lo llama 'paso'):\nrange(5, 10)\n   5 through 9\nrange(0, 10, 3)\n   0, 3, 6, 9\nrange(-10, -100, -30)\n  -10, -40, -70\nPara iterar sobre los \u00edndices de una secuencia, pod\u00e9s combinar range() y len() as\u00ed:\n>>> a = ['Mary', 'tenia', 'un', 'corderito']\n>>> for i in range(len(a)):\n...     print(i, a[i])\n...\n0 Mary\n1 tenia\n2 un\n3 corderito\nEn la mayor\u00eda de los casos, sin embargo, conviene usar la funci\u00f3n enumerate(), mir\u00e1 T\u00e9cnicas de iteraci\u00f3n.\nAlgo extra\u00f1o sucede si mostr\u00e1s un range:\n>>> print(range(10))\nrange(0, 10)\nDe muchas maneras el objeto devuelto por range() se comporta como si fuera una lista, pero no lo es. Es un objeto que\ndevuelve los \u00edtems sucesivos de la secuencia deseada cuando iter\u00e1s sobre \u00e9l, pero realmente no construye la lista,\nahorrando entonces espacio.", "start_char_idx": 0, "end_char_idx": 1457, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b5b8365-b0eb-4956-b81a-c8dd2c02b4a7": {"__data__": {"id_": "8b5b8365-b0eb-4956-b81a-c8dd2c02b4a7", "embedding": null, "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68c024c2-89d3-4ba2-a1d5-5ab73d6f56d7", "node_type": "4", "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "774788191b41ea204ed2e98af7692882205357ceabee7042e49c1a5036560118", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d687451-6fac-4e70-a121-2473a0f9504c", "node_type": "1", "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "009c9d05b8de0de016a62a0b361c2e08f505a3a3d379d0b49964b4b8584349be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab312aed-161d-4281-9b08-83ea18b4c56d", "node_type": "1", "metadata": {}, "hash": "157e5c889476b0e24a2edba45040a433691129fb58c5579c0fb1d0d102332941", "class_name": "RelatedNodeInfo"}}, "hash": "5f4f9bfccbd048d43202fda455c6dce0415be0beed373303320087b5da726d68", "text": "Decimos que tal objeto es iterable; esto es, que se lo puede usar en funciones y construcciones que esperan algo de lo cual\nobtener \u00edtems sucesivos hasta que se termine. Hemos visto que la declaraci\u00f3n for es un iterador en ese sentido. La\nfunci\u00f3n list() es otra; crea listas a partir de iterables:\n 17", "start_char_idx": 1458, "end_char_idx": 1759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab312aed-161d-4281-9b08-83ea18b4c56d": {"__data__": {"id_": "ab312aed-161d-4281-9b08-83ea18b4c56d", "embedding": null, "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "061fb6c0-e230-4f10-a079-dd9f38d91e94", "node_type": "4", "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2730dd859ab62236f3ce7e915445c9b29607e64d2c925d06b89f381f9e189436", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b5b8365-b0eb-4956-b81a-c8dd2c02b4a7", "node_type": "1", "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5f4f9bfccbd048d43202fda455c6dce0415be0beed373303320087b5da726d68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b36e06c8-2d3e-4aad-b658-40f1d686c90e", "node_type": "1", "metadata": {}, "hash": "e407b3dca7d639939a883001af11fa90e3caaf2df3ffe7c6a0793b02869a7570", "class_name": "RelatedNodeInfo"}}, "hash": "157e5c889476b0e24a2edba45040a433691129fb58c5579c0fb1d0d102332941", "text": ">>> list(range(5))\n[0, 1, 2, 3, 4]\nM\u00e1s tarde veremos m\u00e1s funciones que devuelven iterables y que toman iterables como entrada.\nLas sentencias , , y  en lazos\nLa sentencia break, como en C, termina el lazo for o while m\u00e1s anidado.\nLas sentencias de lazo pueden tener una cl\u00e1usula else que es ejecutada cuando el lazo termina, luego de agotar la lista\n(con for) o cuando la condici\u00f3n se hace falsa (con while), pero no cuando el lazo es terminado con la sentencia break.\nSe ejemplifica en el siguiente lazo, que busca n\u00fameros primos:\n>>> for n in range(2, 10):\n...     for x in range(2, n):\n...         if n % x == 0:\n...             print(n, 'es igual a', x, '*', n/x)\n...             break\n...     else:\n...         # sigue el bucle sin encontrar un factor\n...         print(n, 'es un numero primo')\n...\n2 es un numero primo\n3 es un numero primo\n4 es igual a 2 * 2\n5 es un numero primo\n6 es igual a 2 * 3\n7 es un numero primo\n8 es igual a 2 * 4\n9 es igual a 3 * 3\n(S\u00ed, este es el c\u00f3digo correcto. Fijate bien: el else pertenece al ciclo for, no al if.)\nCuando se usa con un ciclo, el else tiene m\u00e1s en com\u00fan con el else de una declaraci\u00f3n try que con el de un if: el\nelse de un try se ejecuta cuando no se genera ninguna excepci\u00f3n, y el else de un ciclo se ejecuta cuando no hay\nning\u00fan break. Para m\u00e1s sobre la declaraci\u00f3n try y excepciones, mir\u00e1 Manejando excepciones.", "start_char_idx": 0, "end_char_idx": 1369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b36e06c8-2d3e-4aad-b658-40f1d686c90e": {"__data__": {"id_": "b36e06c8-2d3e-4aad-b658-40f1d686c90e", "embedding": null, "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "061fb6c0-e230-4f10-a079-dd9f38d91e94", "node_type": "4", "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2730dd859ab62236f3ce7e915445c9b29607e64d2c925d06b89f381f9e189436", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab312aed-161d-4281-9b08-83ea18b4c56d", "node_type": "1", "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "157e5c889476b0e24a2edba45040a433691129fb58c5579c0fb1d0d102332941", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0784f353-e5e3-4ec3-a1a7-63a5ac4d6a13", "node_type": "1", "metadata": {}, "hash": "6e4c8b22fd77f6e43bef4e368f3afdfc08793f76279a7a56b6e1cf1e5403a28a", "class_name": "RelatedNodeInfo"}}, "hash": "e407b3dca7d639939a883001af11fa90e3caaf2df3ffe7c6a0793b02869a7570", "text": "Para m\u00e1s sobre la declaraci\u00f3n try y excepciones, mir\u00e1 Manejando excepciones.\nLa declaraci\u00f3n continue, tambi\u00e9n tomada de C, continua con la siguiente iteraci\u00f3n del ciclo:\n>>> for num in range(2, 10):\n...     if num % 2 == 0:\n...         print(\"Encontr\u00e9 un n\u00famero par\", num)\n...         continue\n...     print(\"Encontr\u00e9 un n\u00famero\", num)\nEncontr\u00e9 un n\u00famero par 2\nEncontr\u00e9 un n\u00famero 3\nEncontr\u00e9 un n\u00famero par 4\nEncontr\u00e9 un n\u00famero 5\nEncontr\u00e9 un n\u00famero par 6\nEncontr\u00e9 un n\u00famero 7\nEncontr\u00e9 un n\u00famero par 8\nEncontr\u00e9 un n\u00famero 9\nLa sentencia \nLa sentencia pass no hace nada. Se puede usar cuando una sentencia es requerida por la sint\u00e1xis pero el programa no\nrequiere ninguna acci\u00f3n. Por ejemplo:\n 18", "start_char_idx": 1293, "end_char_idx": 1983, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0784f353-e5e3-4ec3-a1a7-63a5ac4d6a13": {"__data__": {"id_": "0784f353-e5e3-4ec3-a1a7-63a5ac4d6a13", "embedding": null, "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f378abf-9364-4e20-8333-b5d4c33e40dd", "node_type": "4", "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07fd20eb7b0bca55befd05b4e1d0f70e0c51e472ec86d1d5aa948bf8cfa216cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b36e06c8-2d3e-4aad-b658-40f1d686c90e", "node_type": "1", "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e407b3dca7d639939a883001af11fa90e3caaf2df3ffe7c6a0793b02869a7570", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a032d935-4f7f-48ca-9d7e-94fb142cd18c", "node_type": "1", "metadata": {}, "hash": "f728483e7c50923395e783c6a1ce38b40ee410f39370dfb700c88198a2229a2b", "class_name": "RelatedNodeInfo"}}, "hash": "6e4c8b22fd77f6e43bef4e368f3afdfc08793f76279a7a56b6e1cf1e5403a28a", "text": ">>> while True:\n...     pass  # Espera ocupada hasta una interrupci\u00f3n de teclado (Ctrl+C)\n...\nSe usa normalmente para crear clases en su m\u00ednima expresi\u00f3n:\n>>> class MyEmptyClass:\n...     pass\n...\nOtro lugar donde se puede usar pass es como una marca de lugar para una funci\u00f3n o un cuerpo condicional cuando est\u00e1s\ntrabajando en c\u00f3digo nuevo, lo cual te permite pensar a un nivel de abstracci\u00f3n mayor. El pass se ignora silenciosamente:\n>>> def initlog(*args):\n...     pass   # Acordate de implementar esto!\n...\nDefiniendo funciones\nPodemos crear una funci\u00f3n que escriba la serie de Fibonacci hasta un l\u00edmite determinado:\n>>> def fib(n):  # escribe la serie de Fibonacci hasta n\n...     \"\"\"Escribe la serie de Fibonacci hasta n.\"\"\"\n...     a, b = 0, 1\n...     while a < n:\n...         print(a, end=' ')\n...         a, b = b, a+b\n...     print()\n...\n>>> # Ahora llamamos a la funcion que acabamos de definir:\n... fib(2000)\n0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597\nLa palabra reservada def se usa para definir funciones. Debe seguirle el nombre de la funci\u00f3n y la lista de par\u00e1metros\nformales entre par\u00e9ntesis. Las sentencias que forman el cuerpo de la funci\u00f3n empiezan en la l\u00ednea siguiente, y deben estar\ncon sangr\u00eda.\nLa primer sentencia del cuerpo de la funci\u00f3n puede ser opcionalmente una cadena de texto literal; esta es la cadena de\ntexto de documentaci\u00f3n de la funci\u00f3n, o docstring. (Pod\u00e9s encontrar m\u00e1s acerca de docstrings en la secci\u00f3n Cadenas de\ntexto de documentaci\u00f3n.)\nHay herramientas que usan las docstrings para producir autom\u00e1ticamente documentaci\u00f3n en l\u00ednea o imprimible, o para\npermitirle al usuario que navegue el c\u00f3digo en forma interactiva; es una buena pr\u00e1ctica incluir docstrings en el c\u00f3digo que\nuno escribe, por lo que se debe hacer un h\u00e1bito de esto.", "start_char_idx": 0, "end_char_idx": 1786, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a032d935-4f7f-48ca-9d7e-94fb142cd18c": {"__data__": {"id_": "a032d935-4f7f-48ca-9d7e-94fb142cd18c", "embedding": null, "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f378abf-9364-4e20-8333-b5d4c33e40dd", "node_type": "4", "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07fd20eb7b0bca55befd05b4e1d0f70e0c51e472ec86d1d5aa948bf8cfa216cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0784f353-e5e3-4ec3-a1a7-63a5ac4d6a13", "node_type": "1", "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6e4c8b22fd77f6e43bef4e368f3afdfc08793f76279a7a56b6e1cf1e5403a28a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1737f908-7283-44c2-94df-a96aa8da6c93", "node_type": "1", "metadata": {}, "hash": "4b07a337d13ed2c875b11d4497093973b3a5bcd58a9272e7e7d55393984c9bf0", "class_name": "RelatedNodeInfo"}}, "hash": "f728483e7c50923395e783c6a1ce38b40ee410f39370dfb700c88198a2229a2b", "text": "La ejecuci\u00f3n de una funci\u00f3n introduce una nueva tabla de s\u00edmbolos usada para las variables locales de la funci\u00f3n. M\u00e1s\nprecisamente, todas las asignaciones de variables en la funci\u00f3n almacenan el valor en la tabla de s\u00edmbolos local; as\u00ed mismo\nla referencia a variables primero mira la tabla de s\u00edmbolos local, luego en la tabla de s\u00edmbolos local de las funciones\nexternas, luego la tabla de s\u00edmbolos global, y finalmente la tabla de nombres predefinidos. As\u00ed, no se les puede asignar\ndirectamente un valor a las variables globales dentro de una funci\u00f3n (a menos se las nombre en la sentencia global),\naunque si pueden ser referenciadas.\nLos par\u00e1metros reales (argumentos) de una funci\u00f3n se introducen en la tabla de s\u00edmbolos local de la funci\u00f3n llamada\ncuando esta es ejecutada; as\u00ed, los argumentos son pasados por valor (d\u00f3nde el valor es siempre una referencia a un objeto,\nno el valor del objeto). 4 Cuando una funci\u00f3n llama a otra funci\u00f3n, una nueva tabla de s\u00edmbolos local es creada para esa\nllamada.\n 19", "start_char_idx": 1787, "end_char_idx": 2795, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1737f908-7283-44c2-94df-a96aa8da6c93": {"__data__": {"id_": "1737f908-7283-44c2-94df-a96aa8da6c93", "embedding": null, "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e0242f5-0246-4f50-a51b-eecac64d6475", "node_type": "4", "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "89dc9d6ed53ee2389907cdc5da5aaec9117d4d583226afbfde9168bb1cd6027b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a032d935-4f7f-48ca-9d7e-94fb142cd18c", "node_type": "1", "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f728483e7c50923395e783c6a1ce38b40ee410f39370dfb700c88198a2229a2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52407be5-4241-4fd4-8873-3c10a76a4044", "node_type": "1", "metadata": {}, "hash": "ecf90ca7c324cedadf656242b216570d741cbd727290865a0aa28eed65dbce41", "class_name": "RelatedNodeInfo"}}, "hash": "4b07a337d13ed2c875b11d4497093973b3a5bcd58a9272e7e7d55393984c9bf0", "text": "La definici\u00f3n de una funci\u00f3n introduce el nombre de la funci\u00f3n en la tabla de s\u00edmbolos actual. El valor del nombre de la\nfunci\u00f3n tiene un tipo que es reconocido por el interprete como una funci\u00f3n definida por el usuario. Este valor puede ser\nasignado a otro nombre que luego puede ser usado como una funci\u00f3n. Esto sirve como un mecanismo general para\nrenombrar:\n>>> fib\n<function fib at 10042ed0>\n>>> f = fib\n>>> f(100)\n0 1 1 2 3 5 8 13 21 34 55 89\nViniendo de otros lenguajes, pod\u00e9s objetar que fib no es una funci\u00f3n, sino un procedimiento, porque no devuelve un valor.\nDe hecho, t\u00e9cnicamente hablando, los procedimientos s\u00ed retornan un valor, aunque uno aburrido. Este valor se llama None\n(es un nombre predefinido). El int\u00e9rprete por lo general no escribe el valor None si va a ser el \u00fanico valor escrito. Si\nrealmente se quiere, se puede verlo usando la funci\u00f3n print():\n>>> fib(0)\n>>> print(fib(0))\nNone\nEs simple escribir una funci\u00f3n que retorne una lista con los n\u00fameros de la serie de Fibonacci en lugar de imprimirlos:\n>>> def fib2(n): # devuelve la serie de Fibonacci hasta n\n...     \"\"\"Devuelve una lista conteniendo la serie de Fibonacci hasta n.\"\"\"\n...     result = []\n...     a, b = 0, 1\n...     while a < n:\n...         result.append(a)    # ver abajo\n...         a, b = b, a+b\n...     return result\n...\n>>> f100 = fib2(100)    # llamarla\n>>> f100                # escribir el resultado\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]\nEste ejemplo, como es usual, demuestra algunas caracter\u00edsticas m\u00e1s de Python:\n\u007f\nLa sentencia return devuelve un valor en una funci\u00f3n. return sin una expresi\u00f3n como argumento retorna None.", "start_char_idx": 0, "end_char_idx": 1631, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52407be5-4241-4fd4-8873-3c10a76a4044": {"__data__": {"id_": "52407be5-4241-4fd4-8873-3c10a76a4044", "embedding": null, "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e0242f5-0246-4f50-a51b-eecac64d6475", "node_type": "4", "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "89dc9d6ed53ee2389907cdc5da5aaec9117d4d583226afbfde9168bb1cd6027b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1737f908-7283-44c2-94df-a96aa8da6c93", "node_type": "1", "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b07a337d13ed2c875b11d4497093973b3a5bcd58a9272e7e7d55393984c9bf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b40289eb-f2a5-49cc-a207-800e4cb39316", "node_type": "1", "metadata": {}, "hash": "57decb8c0f052b7bee15c5b50463d7f44a7f61c588a41d877b6a009e94bc9be8", "class_name": "RelatedNodeInfo"}}, "hash": "ecf90ca7c324cedadf656242b216570d741cbd727290865a0aa28eed65dbce41", "text": "return sin una expresi\u00f3n como argumento retorna None. Si\nse alcanza el final de una funci\u00f3n, tambi\u00e9n se retorna None.\n\u007f\nLa sentencia result.append(a) llama a un m\u00e9todo del objeto lista result. Un m\u00e9todo es una funci\u00f3n que\n'pertenece' a un objeto y se nombra obj.methodname, d\u00f3nde obj es alg\u00fan objeto (puede ser una expresi\u00f3n), y\nmethodname es el nombre del m\u00e9todo que est\u00e1 definido por el tipo del objeto. Distintos tipos definen distintos\nm\u00e9todos. M\u00e9todos de diferentes tipos pueden tener el mismo nombre sin causar ambig\u00fcedad. (Es posible definir tipos\nde objetos propios, y m\u00e9todos, usando clases, mir\u00e1 Clases). El m\u00e9todo append() mostrado en el ejemplo est\u00e1\ndefinido para objetos lista; a\u00f1ade un nuevo elemento al final de la lista. En este ejemplo es equivalente a\nresult = result + [a], pero m\u00e1s eficiente.\nM\u00e1s sobre definici\u00f3n de funciones\nTambi\u00e9n es posible definir funciones con un n\u00famero variable de argumentos. Hay tres formas que pueden ser combinadas.\nArgumentos con valores por omisi\u00f3n\nLa forma m\u00e1s \u00fatil es especificar un valor por omisi\u00f3n para uno o m\u00e1s argumentos. Esto crea una funci\u00f3n que puede ser\nllamada con menos argumentos que los que permite. Por ejemplo:\n 20", "start_char_idx": 1578, "end_char_idx": 2761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b40289eb-f2a5-49cc-a207-800e4cb39316": {"__data__": {"id_": "b40289eb-f2a5-49cc-a207-800e4cb39316", "embedding": null, "metadata": {"page_label": "29", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "848c2713-f74a-4f6b-857c-1f0466878d1d", "node_type": "4", "metadata": {"page_label": "29", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09f8366b8b95d4dccc59f4175272607aa591513d4ecdb85e61b3cd8c7be9a731", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52407be5-4241-4fd4-8873-3c10a76a4044", "node_type": "1", "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ecf90ca7c324cedadf656242b216570d741cbd727290865a0aa28eed65dbce41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63c6ac7e-a92b-47de-8283-e1b31dde0443", "node_type": "1", "metadata": {}, "hash": "e31df512feeb2712fe51b5914050d0258e467f79956c657943a6051c9cb743c1", "class_name": "RelatedNodeInfo"}}, "hash": "57decb8c0f052b7bee15c5b50463d7f44a7f61c588a41d877b6a009e94bc9be8", "text": "def pedir_confirmacion(prompt, reintentos=4, recordatorio='Por favor, intente nuevamente!'):\n    while True:\n        ok = input(prompt)\n        if ok in ('s', 'S', 'si', 'Si', 'SI'):\n            return True\n        if ok in ('n', 'no', 'No', 'NO'):\n            return False\n        reintentos = reintentos - 1\n        if reintentos < 0:\n            raise ValueError('respuesta de usuario inv\u00e1lida')\n        print(recordatorio)\nEsta funci\u00f3n puede ser llamada de distintas maneras:\n\u007f\npasando s\u00f3lo el argumento obligatorio: pedir_confirmacion('\u00bfRealmente queres salir?')\n\u007f\npasando uno de los argumentos opcionales: pedir_confirmacion('\u00bfSobreescribir archivo?', 2)\n\u007f\no pasando todos los argumentos:\npedir_confirmacion('\u00bfSobreescribir archivo?', 2, \"Vamos, solo si o no!)\nEste ejemplo tambi\u00e9n introduce la palabra reservada in, la cual prueba si una secuencia contiene o no un determinado\nvalor.\nLos valores por omisi\u00f3n son evaluados en el momento de la definici\u00f3n de la funci\u00f3n, en el \u00e1mbito de la definici\u00f3n, entonces:\ni = 5\ndef f(arg=i):\n    print(arg)\ni = 6\nf()\n...imprimir\u00e1 5.\nAdvertencia importante: El valor por omisi\u00f3n es evaluado solo una vez. Existe una diferencia cuando el valor por omisi\u00f3n\nes un objeto mutable como una lista, diccionario, o instancia de la mayor\u00eda de las clases. Por ejemplo, la siguiente funci\u00f3n\nacumula los argumentos que se le pasan en subsiguientes llamadas:\ndef f(a, L=[]):\n    L.append(a)\n    return L\nprint(f(1))\nprint(f(2))\nprint(f(3))\nImprimir\u00e1:\n[1]\n[1, 2]\n[1, 2, 3]\nSi no se quiere que el valor por omisi\u00f3n sea compartido entre subsiguientes llamadas, se pueden escribir la funci\u00f3n as\u00ed:\ndef f(a, L=None):\n    if L is None:\n        L = []\n    L.append(a)\n    return L\n 21", "start_char_idx": 0, "end_char_idx": 1706, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63c6ac7e-a92b-47de-8283-e1b31dde0443": {"__data__": {"id_": "63c6ac7e-a92b-47de-8283-e1b31dde0443", "embedding": null, "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "770f3b12-6bdb-487d-b6de-ab57a864801e", "node_type": "4", "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4fdaebd4ea4f664e0dc134e9d0c0210befe55668d7bf89290677dd8fdd794648", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b40289eb-f2a5-49cc-a207-800e4cb39316", "node_type": "1", "metadata": {"page_label": "29", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "57decb8c0f052b7bee15c5b50463d7f44a7f61c588a41d877b6a009e94bc9be8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9891cfc4-0947-4070-83ac-7c5101be6fab", "node_type": "1", "metadata": {}, "hash": "92d28eeb1cd74e63c51e848b0c806df3135bd8013ab16020c60ec1a7a8a1fba1", "class_name": "RelatedNodeInfo"}}, "hash": "e31df512feeb2712fe51b5914050d0258e467f79956c657943a6051c9cb743c1", "text": "Palabras claves como argumentosLas funciones tambi\u00e9n puede ser llamadas usando argumentos de palabras clave (o argumentos nombrados) de la forma\nkeyword = value. Por ejemplo, la siguiente funci\u00f3n:\ndef loro(tension, estado='muerto', accion='explotar', tipo='Azul Nordico'):\n    print(\"-- Este loro no va a\", accion, end=' ')\n    print(\"si le aplic\u00e1s\", tension, \"voltios.\")\n    print(\"-- Gran plumaje tiene el\", tipo)\n    print(\"-- Est\u00e1\", estado, \"!\")\n...acepta un argumento obligatorio (tension) y tres argumentos opcionales (estado, accion, y tipo). Esta funci\u00f3n puede\nllamarse de cualquiera de las siguientes maneras:\nloro(1000)                                          # 1 argumento posicional\nloro(tension=1000)                                  # 1 argumento nombrado\nloro(tension=1000000, accion='VOOOOOM')             # 2 argumentos nombrados\nloro(accion='VOOOOOM', tension=1000000)             # 2 argumentos nombrados\nloro('un mill\u00f3n', 'despojado de vida', 'saltar')    # 3 args posicionales\nloro('mil', estado='viendo crecer las flores desde abajo')  # uno y uno\n...pero estas otras llamadas ser\u00edan todas inv\u00e1lidas:\nloro()                      # falta argumento obligatorio\nloro(tension=5.0, 'muerto') # argumento posicional luego de uno nombrado\nloro(110, tension=220)      # valor duplicado para el mismo argumento\nloro(actor='Juan Garau')    # nombre del argumento desconocido\nEn una llamada a una funci\u00f3n, los argumentos nombrados deben seguir a los argumentos posicionales. Cada uno de los\nargumentos nombrados pasados deben coincidir con un argumento aceptado por la funci\u00f3n (por ejemplo, actor no es un\nargumento v\u00e1lido para la funci\u00f3n loro), y el orden de los mismos no es importante.", "start_char_idx": 0, "end_char_idx": 1700, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9891cfc4-0947-4070-83ac-7c5101be6fab": {"__data__": {"id_": "9891cfc4-0947-4070-83ac-7c5101be6fab", "embedding": null, "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "770f3b12-6bdb-487d-b6de-ab57a864801e", "node_type": "4", "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4fdaebd4ea4f664e0dc134e9d0c0210befe55668d7bf89290677dd8fdd794648", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63c6ac7e-a92b-47de-8283-e1b31dde0443", "node_type": "1", "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e31df512feeb2712fe51b5914050d0258e467f79956c657943a6051c9cb743c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "953b4019-d958-4b0b-a7f7-691d82a814c9", "node_type": "1", "metadata": {}, "hash": "3eb41fcc9f99eee91fa522a962cece768113e35a96dabc1d1cc793d9dbaae56a", "class_name": "RelatedNodeInfo"}}, "hash": "92d28eeb1cd74e63c51e848b0c806df3135bd8013ab16020c60ec1a7a8a1fba1", "text": "Esto tambi\u00e9n se aplica a los\nargumentos obligatorios (por ejemplo, loro(tension=1000) tambi\u00e9n es v\u00e1lido). Ning\u00fan argumento puede recibir m\u00e1s de\nun valor al mismo tiempo. Aqu\u00ed hay un ejemplo que falla debido a esta restricci\u00f3n:\n>>> def funcion(a):\n...     pass\n...\n>>> funcion(0, a=0)\nTraceback (most recent call last):\n...\nTypeError: funcion() got multiple values for keyword argument 'a'\nCuando un par\u00e1metro formal de la forma **nombre est\u00e1 presente al final, recibe un diccionario (ver Tipos integrados)\nconteniendo todos los argumentos nombrados excepto aquellos correspondientes a un par\u00e1metro formal. Esto puede ser\ncombinado con un par\u00e1metro formal de la forma *nombre (descripto en la siguiente secci\u00f3n) que recibe una tupla\nconteniendo los argumentos posicionales adem\u00e1s de la lista de par\u00e1metros formales. (*nombre debe ocurrir antes de\n**nombre). Por ejemplo, si definimos una funci\u00f3n as\u00ed:\ndef ventadequeso(tipo, *argumentos, **palabrasclaves):\n    print(\"-- \u00bfTiene\", tipo, \"?\")\n    print(\"-- Lo siento, nos quedamos sin\", tipo)\n    for arg in argumentos:\n        print(arg)\n    print(\"-\" * 40)\n    claves = sorted(palabrasclaves.keys())\n    for c in claves:\n        print(c, \":\", palabrasclaves[c])\nPuede ser llamada as\u00ed:\n 22", "start_char_idx": 1701, "end_char_idx": 2937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "953b4019-d958-4b0b-a7f7-691d82a814c9": {"__data__": {"id_": "953b4019-d958-4b0b-a7f7-691d82a814c9", "embedding": null, "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4a6be40-7316-4ae0-90c8-8bfd97e25575", "node_type": "4", "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09c76269a5134009a89e72b22d4ad26f09f39dac87ccce8e880cba7ef76ace73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9891cfc4-0947-4070-83ac-7c5101be6fab", "node_type": "1", "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "92d28eeb1cd74e63c51e848b0c806df3135bd8013ab16020c60ec1a7a8a1fba1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb411765-c702-42aa-baa3-fbe24a5cae6b", "node_type": "1", "metadata": {}, "hash": "505027205289aa5502c85e2cde9545be91cf5c8a313b7ac87d825ef89ad3cc8c", "class_name": "RelatedNodeInfo"}}, "hash": "3eb41fcc9f99eee91fa522a962cece768113e35a96dabc1d1cc793d9dbaae56a", "text": "ventadequeso(\"Limburger\", \"Es muy liquido, sr.\",\n             \"Realmente es muy muy liquido, sr.\",\n             cliente=\"Juan Garau\",\n             vendedor=\"Miguel Paez\",\n             puesto=\"Venta de Queso Argentino\")\n...y por supuesto imprimir\u00e1:\n.. code-block:: none\n-- \u00bfTiene Limburger ? -- Lo siento, nos quedamos sin Limburger Es muy liquido, sr. Realmente es muy muy liquido, sr.\n---------------------------------------- cliente : Juan Garau vendedor : Miguel Paez puesto : Venta de Queso Argentino\nSe debe notar que la lista de nombres de argumentos nombrados se crea al ordenar el resultado del m\u00e9todo keys() del\ndiccionario antes de imprimir su contenido; si esto no se hace, el orden en que los argumentos son impresos no est\u00e1\ndefinido.\nListas de argumentos arbitrarios\nFinalmente, la opci\u00f3n menos frecuentemente usada es especificar que una funci\u00f3n puede ser llamada con un n\u00famero\narbitrario de argumentos. Estos argumentos ser\u00e1n organizados en una tupla (mir\u00e1 Tuplas y secuencias). Antes del n\u00famero\nvariable de argumentos, cero o m\u00e1s argumentos normales pueden estar presentes.:\ndef muchos_items(archivo, separador, *args):\n    archivo.write(separador.join(args))\nNormalmente estos argumentos de cantidad variables son los \u00faltimos en la lista de par\u00e1metros formales, porque toman todo\nel remanente de argumentos que se pasan a la funci\u00f3n. Cualquier par\u00e1metro que suceda luego del *args ser\u00e1 's\u00f3lo\nnombrado', o sea que s\u00f3lo se pueden usar como nombrados y no posicionales.:\n>>> def concatenar(*args, sep=\"/\"):\n...     return sep.join(args)\n...\n>>> concatenar(\"tierra\", \"marte\", \"venus\")\n'tierra/marte/venus'\n>>> concatenar(\"tierra\", \"marte\", \"venus\", sep=\".\")", "start_char_idx": 0, "end_char_idx": 1670, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb411765-c702-42aa-baa3-fbe24a5cae6b": {"__data__": {"id_": "fb411765-c702-42aa-baa3-fbe24a5cae6b", "embedding": null, "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4a6be40-7316-4ae0-90c8-8bfd97e25575", "node_type": "4", "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09c76269a5134009a89e72b22d4ad26f09f39dac87ccce8e880cba7ef76ace73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "953b4019-d958-4b0b-a7f7-691d82a814c9", "node_type": "1", "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3eb41fcc9f99eee91fa522a962cece768113e35a96dabc1d1cc793d9dbaae56a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca999fdb-df7d-4f2c-be6b-fb00d29defe4", "node_type": "1", "metadata": {}, "hash": "e03244852e0bcec800cc60177841c5d8c068e95561ea168746637156491c4762", "class_name": "RelatedNodeInfo"}}, "hash": "505027205289aa5502c85e2cde9545be91cf5c8a313b7ac87d825ef89ad3cc8c", "text": "'tierra.marte.venus'\nDesempaquetando una lista de argumentos\nLa situaci\u00f3n inversa ocurre cuando los argumentos ya est\u00e1n en una lista o tupla pero necesitan ser desempaquetados para\nllamar a una funci\u00f3n que requiere argumentos posicionales separados. Por ejemplo, la funci\u00f3n predefinida range() espera\nlos argumentos inicio y fin. Si no est\u00e1n disponibles en forma separada, se puede escribir la llamada a la funci\u00f3n con el\noperador para desempaquetar argumentos de una lista o una tupla *::\n>>> list(range(3, 6))   # llamada normal con argumentos separados\n[3, 4, 5]\n>>> args = [3, 6]\n>>> list(range(*args))  # llamada con argumentos desempaquetados de la lista\n[3, 4, 5]\nDel mismo modo, los diccionarios pueden entregar argumentos nombrados con el operador **::\n>>> def loro(tension, estado='rostizado', accion='explotar'):\n...     print(\"-- Este loro no va a\", accion, end=' ')\n...     print(\"si le aplic\u00e1s\", tension, \"voltios.\", end=' ')\n...     print(\"Est\u00e1\", estado, \"!\")\n...\n>>> d = {\"tension\": \"cinco mil\", \"estado\": \"demacrado\",\n 23", "start_char_idx": 1671, "end_char_idx": 2709, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca999fdb-df7d-4f2c-be6b-fb00d29defe4": {"__data__": {"id_": "ca999fdb-df7d-4f2c-be6b-fb00d29defe4", "embedding": null, "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d0f5f258-4daa-402d-808e-a6076757d436", "node_type": "4", "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ca88753578232b3bdeb9bb2a0ef23a2d0f5adde76c8cfb0f21f6bb23decb9362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb411765-c702-42aa-baa3-fbe24a5cae6b", "node_type": "1", "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "505027205289aa5502c85e2cde9545be91cf5c8a313b7ac87d825ef89ad3cc8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3036359f-f0a8-4e30-b178-aa3eb01e52fa", "node_type": "1", "metadata": {}, "hash": "eceb5c6ac19667e4626fa5e842cd863146c28048e8b5e5b487590516c70c5eec", "class_name": "RelatedNodeInfo"}}, "hash": "e03244852e0bcec800cc60177841c5d8c068e95561ea168746637156491c4762", "text": "...      \"accion\": \"VOLAR\"}\n>>> loro(**d)\n-- Este loro no va a VOLAR si le aplic\u00e1s cinco mil voltios. Est\u00e1 demacrado !\nExpresiones lambda\nPeque\u00f1as funciones an\u00f3nimas pueden ser creadas con la palabra reservada lambda. Esta funci\u00f3n retorna la suma de sus\ndos argumentos: lambda a, b: a + b. Las funciones Lambda pueden ser usadas en cualquier lugar donde sea\nrequerido un objeto de tipo funci\u00f3n. Est\u00e1n sint\u00e1cticamente restringidas a una sola expresi\u00f3n. Sem\u00e1nticamente, son solo\naz\u00facar sint\u00e1ctica para definiciones normales de funciones. Al igual que las funciones anidadas, las funciones lambda\npueden hacer referencia a variables desde el \u00e1mbito que la contiene:\n>>> def hacer_incrementador(n):\n...     return lambda x: x + n\n...\n>>> f = hacer_incrementador(42)\n>>> f(0)\n42\n>>> f(1)\n43\nCadenas de texto de documentaci\u00f3n\nAc\u00e1 hay algunas convenciones sobre el contenido y formato de las cadenas de texto de documentaci\u00f3n.\nLa primer l\u00ednea debe ser siempre un resumen corto y conciso del prop\u00f3sito del objeto. Para ser breve, no se debe mencionar\nexpl\u00edcitamente el nombre o tipo del objeto, ya que estos est\u00e1n disponibles de otros modos (excepto si el nombre es un verbo\nque describe el funcionamiento de la funci\u00f3n). Esta l\u00ednea debe empezar con una letra may\u00fascula y terminar con un punto.\nSi hay m\u00e1s l\u00edneas en la cadena de texto de documentaci\u00f3n, la segunda l\u00ednea debe estar en blanco, separando visualmente\nel resumen del resto de la descripci\u00f3n. Las l\u00edneas siguientes deben ser uno o m\u00e1s p\u00e1rrafos describiendo las convenciones\npara llamar al objeto, efectos secundarios, etc.\nEl analizador de Python no quita el sangrado de las cadenas de texto literales multi-l\u00edneas, entonces las herramientas que\nprocesan documentaci\u00f3n tienen que quitarlo si as\u00ed lo desean. Esto se hace mediante la siguiente convenci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1806, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3036359f-f0a8-4e30-b178-aa3eb01e52fa": {"__data__": {"id_": "3036359f-f0a8-4e30-b178-aa3eb01e52fa", "embedding": null, "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d0f5f258-4daa-402d-808e-a6076757d436", "node_type": "4", "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ca88753578232b3bdeb9bb2a0ef23a2d0f5adde76c8cfb0f21f6bb23decb9362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca999fdb-df7d-4f2c-be6b-fb00d29defe4", "node_type": "1", "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e03244852e0bcec800cc60177841c5d8c068e95561ea168746637156491c4762", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2684e0fa-d958-4274-8ad7-d00802129ed1", "node_type": "1", "metadata": {}, "hash": "82b2650b0a3cbaf2d476f25cba0f63f51e9626c6ce281283cacb333c5bb685cb", "class_name": "RelatedNodeInfo"}}, "hash": "eceb5c6ac19667e4626fa5e842cd863146c28048e8b5e5b487590516c70c5eec", "text": "Esto se hace mediante la siguiente convenci\u00f3n. La primer\nl\u00ednea que no est\u00e1 en blanco siguiente a la primer l\u00ednea de la cadena determina la cantidad de sangr\u00eda para toda la cadena\nde documentaci\u00f3n. (No podemos usar la primer l\u00ednea ya que generalmente es adyacente a las comillas de apertura de la\ncadena y el sangrado no se nota en la cadena de texto). Los espacios en blanco \"equivalentes\" a este sangrado son luego\nquitados del comienzo de cada l\u00ednea en la cadena. No deber\u00edan haber l\u00edneas con una sangr\u00eda menor, pero si las hay todos\nlos espacios en blanco del comienzo deben ser quitados. La equivalencia de espacios en blanco debe ser verificada luego\nde la expansi\u00f3n de tabs (a 8 espacios, normalmente).\nEste es un ejemplo de un docstring multi-l\u00ednea:\n>>> def mi_funcion():\n...     \"\"\"No hace mas que documentar la funcion.\n...\n...     No, de verdad. No hace nada.\n...     \"\"\"\n...     pass\n...\n>>> print(mi_funcion.__doc__)\nNo hace mas que documentar la funcion.\nNo, de verdad. No hace nada.\n 24", "start_char_idx": 1760, "end_char_idx": 2760, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2684e0fa-d958-4274-8ad7-d00802129ed1": {"__data__": {"id_": "2684e0fa-d958-4274-8ad7-d00802129ed1", "embedding": null, "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a865b743-c437-4302-a4ac-ea193afb06ea", "node_type": "4", "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "34cb6db4b343b9a27fa5fe4fbf38b95b58704191a9401dc0a573db059fe0ae88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3036359f-f0a8-4e30-b178-aa3eb01e52fa", "node_type": "1", "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eceb5c6ac19667e4626fa5e842cd863146c28048e8b5e5b487590516c70c5eec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cde80e36-998d-4e43-9b41-c46df8b8fbf7", "node_type": "1", "metadata": {}, "hash": "951a2d6f0b12f0f655db01e65b7053b19f97229b8b36f6b2c3823a0d416e0072", "class_name": "RelatedNodeInfo"}}, "hash": "82b2650b0a3cbaf2d476f25cba0f63f51e9626c6ce281283cacb333c5bb685cb", "text": "Anotaci\u00f3n de funciones+:ref:Function annotations <function> are completely optional metadata +information about the types used by user-defined\nfunctions (see PEP 484 +for more information).\nLas anotaciones de funciones son informaci\u00f3n completamente opcional sobre los tipos usadas en funciones definidas por el\nusuario (ver PEP 484 para m\u00e1s informaci\u00f3n).\nLas anotaciones se almacenan en el atributo __annotations__ de la funci\u00f3n como un diccionario y no tienen efecto en\nninguna otra parte de la funci\u00f3n. Las anotaciones de los par\u00e1metros se definen luego de dos puntos despu\u00e9s del nombre del\npar\u00e1metro, seguido de una expresi\u00f3n que eval\u00faa al valor de la anotaci\u00f3n. Las anotaciones de retorno son definidas por el\nliteral ->, seguidas de una expresi\u00f3n, entre la lista de par\u00e1metros y los dos puntos que marcan el final de la declaraci\u00f3n\ndef. El siguiente ejemplo tiene un argumento posicional, uno nombrado, y el valor de retorno anotado:\n>>> def f(jamon: str, huevos: str = 'huevos') -> str:\n...     print(\"Anotaciones:\", f.__annotations__)\n...     print(\"Argumentos:\", jamon, huevos)\n...     return jamon + ' y ' + huevos\n...\n>>> f('carne')\nAnotaciones: {'jamon': <class 'str'>, 'huevos': <class 'str'>, 'return': <class 'str'>}\nArgumentos: carne huevos\n'carne y huevos'\n>>>\nIntermezzo: Estilo de codificaci\u00f3n\nAhora que est\u00e1s a punto de escribir piezas de Python m\u00e1s largas y complejas, es un buen momento para hablar sobre estilo\nde codificaci\u00f3n. La mayor\u00eda de los lenguajes pueden ser escritos (o mejor dicho, formateados) con diferentes estilos;\nalgunos son mas f\u00e1ciles de leer que otros. Hacer que tu c\u00f3digo sea m\u00e1s f\u00e1cil de leer por otros es siempre una buena idea, y\nadoptar un buen estilo de codificaci\u00f3n ayuda tremendamente a lograrlo.", "start_char_idx": 0, "end_char_idx": 1745, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cde80e36-998d-4e43-9b41-c46df8b8fbf7": {"__data__": {"id_": "cde80e36-998d-4e43-9b41-c46df8b8fbf7", "embedding": null, "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a865b743-c437-4302-a4ac-ea193afb06ea", "node_type": "4", "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "34cb6db4b343b9a27fa5fe4fbf38b95b58704191a9401dc0a573db059fe0ae88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2684e0fa-d958-4274-8ad7-d00802129ed1", "node_type": "1", "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "82b2650b0a3cbaf2d476f25cba0f63f51e9626c6ce281283cacb333c5bb685cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73935dca-34d4-40b9-acc9-d11f605b5c9d", "node_type": "1", "metadata": {}, "hash": "4b5c4853c9352bb3dfbcbd06f5fef7809befd727b306de669baa30477f7d031d", "class_name": "RelatedNodeInfo"}}, "hash": "951a2d6f0b12f0f655db01e65b7053b19f97229b8b36f6b2c3823a0d416e0072", "text": "Para Python, PEP 8 se erigi\u00f3 como la gu\u00eda de estilo a la que m\u00e1s proyectos adhirieron; promueve un estilo de codificaci\u00f3n\nf\u00e1cil de leer y visualmente agradable. Todos los desarrolladores Python deben leerlo en alg\u00fan momento; aqu\u00ed est\u00e1n\nextra\u00eddos los puntos m\u00e1s importantes:\n\u007f\nUsar sangr\u00edas de 4 espacios, no tabs.\n4 espacios son un buen compromiso entre una sangr\u00eda peque\u00f1a (permite mayor nivel de sangrado)y una sangr\u00eda\ngrande (m\u00e1s f\u00e1cil de leer). Los tabs introducen confusi\u00f3n y es mejor dejarlos de lado.\n\u007f\nRecortar las l\u00edneas para que no superen los 79 caracteres.\nEsto ayuda a los usuarios con pantallas peque\u00f1as y hace posible tener varios archivos de c\u00f3digo abiertos, uno al lado\ndel otro, en pantallas grandes.\n\u007f\nUsar l\u00edneas en blanco para separar funciones y clases, y bloques grandes de c\u00f3digo dentro de funciones.\n\u007f\nCuando sea posible, poner comentarios en una sola l\u00ednea.\n\u007f\nUsar docstrings.\n\u007f\nUsar espacios alrededor de operadores y luego de las comas, pero no directamente dentro de par\u00e9ntesis:\na = f(1, 2) + g(3, 4).\n\u007f\nNombrar las clases y funciones consistentemente; la convenci\u00f3n es usar NotacionCamello para clases y\nminusculas_con_guiones_bajos para funciones y m\u00e9todos. Siempre us\u00e1 self como el nombre para el primer\nargumento en los m\u00e9todos (mir\u00e1 Un primer vistazo a las clases para m\u00e1s informaci\u00f3n sobre clases y m\u00e9todos).\n\u007f\nNo uses codificaciones estrafalarias si esper\u00e1s usar el c\u00f3digo en entornos internacionales. El default de Python,\nUTF-8, o incluso ASCII plano funcionan bien en la mayor\u00eda de los casos.\n 25", "start_char_idx": 1746, "end_char_idx": 3281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73935dca-34d4-40b9-acc9-d11f605b5c9d": {"__data__": {"id_": "73935dca-34d4-40b9-acc9-d11f605b5c9d", "embedding": null, "metadata": {"page_label": "34", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5aaf2b03-1e5c-4525-9db3-2311e97b772c", "node_type": "4", "metadata": {"page_label": "34", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ee36c598128f2c03659677fe7c18fe03d8fa16753434ab43231746c9aa0c0eba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cde80e36-998d-4e43-9b41-c46df8b8fbf7", "node_type": "1", "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "951a2d6f0b12f0f655db01e65b7053b19f97229b8b36f6b2c3823a0d416e0072", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f08fe69-a109-45a5-b910-b8cbf8bb0fcf", "node_type": "1", "metadata": {}, "hash": "d63f7c5a74ba010239ea22928fb5df0d9d244b1e1e55b729801852c21eae5346", "class_name": "RelatedNodeInfo"}}, "hash": "4b5c4853c9352bb3dfbcbd06f5fef7809befd727b306de669baa30477f7d031d", "text": "\u007f\nDe la misma manera, no uses caracteres no-ASCII en los identificadores si hay incluso una peque\u00f1\u00edsima chance de\nque gente que hable otro idioma tenga que leer o mantener el c\u00f3digo.\n4\nEn realidad, llamadas por referencia de objeto ser\u00eda una mejor descripci\u00f3n, ya que si se pasa un objeto mutable,\nquien realiza la llamada ver\u00e1 cualquier cambio que se realice sobre el mismo (por ejemplo \u00edtems insertados en\nuna lista).\n 26", "start_char_idx": 0, "end_char_idx": 423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f08fe69-a109-45a5-b910-b8cbf8bb0fcf": {"__data__": {"id_": "6f08fe69-a109-45a5-b910-b8cbf8bb0fcf", "embedding": null, "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6268731d-d74b-4233-ab62-d0db7c469d4e", "node_type": "4", "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "518c14a62c9d5c4a87ba566afa77331d8b4eec699fce8051435ff273ef6c62e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73935dca-34d4-40b9-acc9-d11f605b5c9d", "node_type": "1", "metadata": {"page_label": "34", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b5c4853c9352bb3dfbcbd06f5fef7809befd727b306de669baa30477f7d031d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ac466ab-5877-480b-a4da-11d4f795debd", "node_type": "1", "metadata": {}, "hash": "d4fe9cc33faa6eb6283817fed25aa09bc74863946d8d10109e60c1e7269ccae6", "class_name": "RelatedNodeInfo"}}, "hash": "d63f7c5a74ba010239ea22928fb5df0d9d244b1e1e55b729801852c21eae5346", "text": "Estructuras de datosEste cap\u00edtulo describe algunas cosas que ya aprendiste en m\u00e1s detalle, y agrega algunas cosas nuevas tambi\u00e9n.\nM\u00e1s sobre listas\nEl tipo de dato lista tiene algunos m\u00e9todos m\u00e1s. Aqu\u00ed est\u00e1n todos los m\u00e9todos de los objetos lista:\nlist.append (x)\nAgrega un \u00edtem al final de la lista. Equivale a a[len(a):] = [x].\nlist.extend (L)\nExtiende la lista agreg\u00e1ndole todos los \u00edtems de la lista dada. Equivale a a[len(a):] = L.\nlist.insert (i, x)\nInserta un \u00edtem en una posici\u00f3n dada. El primer argumento es el \u00edndice del \u00edtem delante del cual se insertar\u00e1, por lo tanto\na.insert(0, x) inserta al principio de la lista, y a.insert(len(a), x) equivale a a.append(x).\nlist.remove (x)\nQuita el primer \u00edtem de la lista cuyo valor sea x. Es un error si no existe tal \u00edtem.\nlist.pop ([, i])\nQuita el \u00edtem en la posici\u00f3n dada de la lista, y lo devuelve. Si no se especifica un \u00edndice, a.pop() quita y devuelve el\n\u00faltimo \u00edtem de la lista. (Los corchetes que encierran a i en la firma del m\u00e9todo denotan que el par\u00e1metro es opcional, no\nque deber\u00edas escribir corchetes en esa posici\u00f3n. Ver\u00e1s esta notaci\u00f3n con frecuencia en la Referencia de la Biblioteca de\nPython.)\nlist.clear ()\nQuita todos los elementos de la lista. Equivalente a del a[:].\nlist.index (x[, start[, end]])\nDevuelve un \u00edndice basado en cero en la lista del primer \u00edtem cuyo valor sea x. Levanta una excepci\u00f3n ValueError si\nno existe tal \u00edtem.\nLos argumentos opcionales start y end son interpetados como la notaci\u00f3n de rebanadas y se usan para limitar la\nb\u00fasqueda a una subsecuencia particular de x. El index retornado se calcula de manera relativa al inicio de la secuencia\ncompleta en lugar de con respecto al argumento start.", "start_char_idx": 0, "end_char_idx": 1694, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ac466ab-5877-480b-a4da-11d4f795debd": {"__data__": {"id_": "4ac466ab-5877-480b-a4da-11d4f795debd", "embedding": null, "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6268731d-d74b-4233-ab62-d0db7c469d4e", "node_type": "4", "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "518c14a62c9d5c4a87ba566afa77331d8b4eec699fce8051435ff273ef6c62e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f08fe69-a109-45a5-b910-b8cbf8bb0fcf", "node_type": "1", "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d63f7c5a74ba010239ea22928fb5df0d9d244b1e1e55b729801852c21eae5346", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cee50c1b-0235-4dfe-9a42-eadfffd3c5da", "node_type": "1", "metadata": {}, "hash": "97826fd735c893ec8b791b9c11f3294137c602603e0c7a08637927d70e0a583d", "class_name": "RelatedNodeInfo"}}, "hash": "d4fe9cc33faa6eb6283817fed25aa09bc74863946d8d10109e60c1e7269ccae6", "text": "list.count (x)\nDevuelve el n\u00famero de veces que x aparece en la lista.\nlist.sort (key=None, reverse=False)\nOrdena los \u00edtems de la lista in situ (los argumentos pueden ser usados para personalizar el orden de la lista, ve\nsorted() para su explicaci\u00f3n).\nlist.reverse ()\nInvierte los elementos de la lista in situ.\n 27", "start_char_idx": 1695, "end_char_idx": 2009, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cee50c1b-0235-4dfe-9a42-eadfffd3c5da": {"__data__": {"id_": "cee50c1b-0235-4dfe-9a42-eadfffd3c5da", "embedding": null, "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f97777fc-a670-4969-9d72-b590ff4052ca", "node_type": "4", "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8a5246871796cf0c46e621c0459b80ebd19cfa7a1c2504fe3668335c34c1099e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ac466ab-5877-480b-a4da-11d4f795debd", "node_type": "1", "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4fe9cc33faa6eb6283817fed25aa09bc74863946d8d10109e60c1e7269ccae6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f81de28-471f-46c9-b479-fc513f3e9a45", "node_type": "1", "metadata": {}, "hash": "694f3a369232a1bbc2133d46afdb2dfbe3dad4099e5df16d7143e8e10441ae55", "class_name": "RelatedNodeInfo"}}, "hash": "97826fd735c893ec8b791b9c11f3294137c602603e0c7a08637927d70e0a583d", "text": "list.copy ()\nDevuelve una copia superficial de la lista. Equivalente a a[:].\nUn ejemplo que usa la mayor\u00eda de los m\u00e9todos de lista:\n>>> frutas = ['naranja', 'manzana', 'pera', 'banana', 'kiwi', 'manzana', 'banana']\n>>> frutas.count('manzana')\n2\n>>> frutas.count('mandarina')\n0\n>>> frutas.index('banana')\n3\n>>> frutas.index('banana', 4)  # Find next banana starting a position 4\n6\n>>> frutas.reverse()\n>>> frutas\n['banana', 'manzana', 'kiwi', 'banana', 'pera', 'manzana', 'naranja']\n>>> frutas.append('uva')\n>>> frutas\n    ['banana', 'manzana', 'kiwi', 'banana', 'pera', 'manzana', 'naranja', 'uva']\n>>> frutas.sort()\n>>> frutas\n['manzana', 'manzana', 'banana', 'banana', 'uva', 'kiwi', 'naranja', 'pera']\n>>> frutas.pop()\n'pera'\nQuiz\u00e1s hayas notado que m\u00e9todos como insert, remove o sort, que solo modifican a la lista, no tienen impreso un valor\nde retorno -- devuelven None. 5 Esto es un principio de dise\u00f1o para todas las estructuras de datos mutables en Python.\nUsando listas como pilas\nLos m\u00e9todos de lista hacen que resulte muy f\u00e1cil usar una lista como una pila, donde el \u00faltimo elemento a\u00f1adido es el\nprimer elemento retirado (\"\u00faltimo en entrar, primero en salir\"). Para agregar un \u00edtem a la cima de la pila, use append().\nPara retirar un \u00edtem de la cima de la pila, use pop() sin un \u00edndice expl\u00edcito.", "start_char_idx": 0, "end_char_idx": 1309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f81de28-471f-46c9-b479-fc513f3e9a45": {"__data__": {"id_": "5f81de28-471f-46c9-b479-fc513f3e9a45", "embedding": null, "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f97777fc-a670-4969-9d72-b590ff4052ca", "node_type": "4", "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8a5246871796cf0c46e621c0459b80ebd19cfa7a1c2504fe3668335c34c1099e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cee50c1b-0235-4dfe-9a42-eadfffd3c5da", "node_type": "1", "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "97826fd735c893ec8b791b9c11f3294137c602603e0c7a08637927d70e0a583d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73352faf-ffb9-48a4-b507-c046cdd830e5", "node_type": "1", "metadata": {}, "hash": "a577c537843e0de85bf803fd3890dec8b58ee1d174a17a143abb46c585e27dfe", "class_name": "RelatedNodeInfo"}}, "hash": "694f3a369232a1bbc2133d46afdb2dfbe3dad4099e5df16d7143e8e10441ae55", "text": "Por ejemplo:\n>>> stack = [3, 4, 5]\n>>> stack.append(6)\n>>> stack.append(7)\n>>> stack\n[3, 4, 5, 6, 7]\n>>> stack.pop()\n7\n>>> stack\n[3, 4, 5, 6]\n>>> stack.pop()\n6\n>>> stack.pop()\n5\n>>> stack\n[3, 4]\nUsando listas como colas\nTambi\u00e9n es posible usar una lista como una cola, donde el primer elemento a\u00f1adido es el primer elemento retirado (\"primero\nen entrar, primero en salir\"); sin embargo, las listas no son eficientes para este prop\u00f3sito. Agregar y sacar del final de la lista\nes r\u00e1pido, pero insertar o sacar del comienzo de una lista es lento (porque todos los otros elementos tienen que ser\ndesplazados por uno).\nPara implementar una cola, us\u00e1 collections.deque el cual fue dise\u00f1ado para agregar y sacar de ambas puntas de\nforma r\u00e1pida. Por ejemplo:\n 28", "start_char_idx": 1310, "end_char_idx": 2064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73352faf-ffb9-48a4-b507-c046cdd830e5": {"__data__": {"id_": "73352faf-ffb9-48a4-b507-c046cdd830e5", "embedding": null, "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1a7e9773-188a-4cc7-9a64-32b84be05cb1", "node_type": "4", "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77cc34a5b6b3708b513328c95dd3fed471a98d524bd4cf857f2419675e886a2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f81de28-471f-46c9-b479-fc513f3e9a45", "node_type": "1", "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "694f3a369232a1bbc2133d46afdb2dfbe3dad4099e5df16d7143e8e10441ae55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3e7c942-75b1-48fe-84ec-0659b33dea02", "node_type": "1", "metadata": {}, "hash": "7e4a394423c5302212744c7ae9a8422ef62d4ca08070edcac3704053a23d9f33", "class_name": "RelatedNodeInfo"}}, "hash": "a577c537843e0de85bf803fd3890dec8b58ee1d174a17a143abb46c585e27dfe", "text": ">>> from collections import deque\n>>> queue = deque([\"Eric\", \"John\", \"Michael\"])\n>>> queue.append(\"Terry\")         # llega Terry\n>>> queue.append(\"Graham\")        # llega Graham\n>>> queue.popleft()               # el primero en llegar ahora se va\n'Eric'\n>>> queue.popleft()               # el segundo en llegar ahora se va\n'John'\n>>> queue                         # el resto de la cola en \u00f3rden de llegada\n['Michael', 'Terry', 'Graham']\nComprensi\u00f3n de listas\nLas comprensiones de listas ofrecen una manera concisa de crear listas. Sus usos comunes son para hacer nuevas listas\ndonde cada elemento es el resultado de algunas operaciones aplicadas a cada miembro de otra secuencia o iterable, o para\ncrear una subsecuencia de esos elementos para satisfacer una condici\u00f3n determinada.\nPor ejemplo, asumamos que queremos crear una lista de cuadrados, como:\n>>> cuadrados = []\n>>> for x in range(10):\n...     cuadrados.append(x**2)\n...\n>>> cuadrados\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nNota que esto crea (o sobreescribe) una variable llamada x que sigue existiendo luego de que el bucle haya terminado.\nPodemos calcular la lista de cuadrados sin ningun efecto secundario haciendo:\ncuadrados = list(map(lambda x: x**2, range(10)))\no, un equivalente:\ncuadrados = [x ** 2 for x in range(10)]\nque es m\u00e1s conciso y legible.\nUna lista de comprensi\u00f3n consiste de corchetes rodeando una expresi\u00f3n seguida de la declaraci\u00f3n for y luego cero o m\u00e1s\ndeclaraciones for o if. El resultado ser\u00e1 una nueva lista que sale de evaluar la expresi\u00f3n en el contexto de los for o if\nque le siguen.", "start_char_idx": 0, "end_char_idx": 1571, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3e7c942-75b1-48fe-84ec-0659b33dea02": {"__data__": {"id_": "e3e7c942-75b1-48fe-84ec-0659b33dea02", "embedding": null, "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1a7e9773-188a-4cc7-9a64-32b84be05cb1", "node_type": "4", "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77cc34a5b6b3708b513328c95dd3fed471a98d524bd4cf857f2419675e886a2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73352faf-ffb9-48a4-b507-c046cdd830e5", "node_type": "1", "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a577c537843e0de85bf803fd3890dec8b58ee1d174a17a143abb46c585e27dfe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5808ffbd-283d-468a-8f85-0529afc6922e", "node_type": "1", "metadata": {}, "hash": "98ca7684968a8cbae829f0d8230c7f7ee35eb18f364cac89a84371866bf00a33", "class_name": "RelatedNodeInfo"}}, "hash": "7e4a394423c5302212744c7ae9a8422ef62d4ca08070edcac3704053a23d9f33", "text": "Por ejemplo, esta lista de comprensi\u00f3n combina los elementos de dos listas si no son iguales:\n>>> [(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]\n[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]\ny es equivalente a:\n>>> combs = []\n>>> for x in [1,2,3]:\n...     for y in [3,1,4]:\n...         if x != y:\n...             combs.append((x, y))\n...\n>>> combs\n[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]\nNot\u00e1 como el orden de los for y if es el mismo en ambos pedacitos de c\u00f3digo.\nSi la expresi\u00f3n es una tupla (como el (x, y) en el ejemplo anterior), debe estar entre par\u00e9ntesis.\n>>> vec = [-4, -2, 0, 2, 4]\n>>> # crear una nueva lista con los valores duplicados\n 29", "start_char_idx": 1572, "end_char_idx": 2256, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5808ffbd-283d-468a-8f85-0529afc6922e": {"__data__": {"id_": "5808ffbd-283d-468a-8f85-0529afc6922e", "embedding": null, "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f40a78ad-3a2d-4fb9-9276-5aa9c023049a", "node_type": "4", "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6639379ee140d8d48088e7f5e55ad1be17c7120c4ae615dd737182d45262de49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3e7c942-75b1-48fe-84ec-0659b33dea02", "node_type": "1", "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7e4a394423c5302212744c7ae9a8422ef62d4ca08070edcac3704053a23d9f33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ef86399-05d9-4157-b98e-58584e68ea9b", "node_type": "1", "metadata": {}, "hash": "b2be107529c0f04e94d2109c00ce9c0274c66df4133f27fe3f44cfbd9a2b1b0a", "class_name": "RelatedNodeInfo"}}, "hash": "98ca7684968a8cbae829f0d8230c7f7ee35eb18f364cac89a84371866bf00a33", "text": ">>> [x * 2 for x in vec]\n[-8, -4, 0, 4, 8]\n>>> # filtrar la lista para excluir n\u00fameros negativos\n>>> [x for x in vec if x >= 0]\n[0, 2, 4]\n>>> # aplica una funci\u00f3n a todos los elementos\n>>> [abs(x) for x in vec]\n[4, 2, 0, 2, 4]\n>>> # llama un m\u00e9todo a cada elemento\n>>> frutafresca = ['  banana', '  mora de Logan ', 'maracuya  ']\n>>> [arma.strip() for arma in frutafresca]\n['banana', 'mora de Logan', 'maracuya']\n>>> # crea una lista de tuplas de dos como (n\u00famero, cuadrado)\n>>> [(x, x ** 2) for x in range(6)]\n[(0, 0), (1, 1), (2, 4), (3, 9), (4, 16), (5, 25)]\n>>> # la tupla debe estar entre par\u00e9ntesis, sino es un error\n>>> [x, x ** 2 for x in range(6)]\nTraceback (most recent call last):\n.\n    [x, x ** 2 for x in range(6)]\n                 ^\nSyntaxError: invalid syntax\n>>> # aplanar una lista usando comprensi\u00f3n de listas con dos 'for'\n>>> vec = [[1,2,3], [4,5,6], [7,8,9]]\n>>> [num for elem in vec for num in elem]\n[1, 2, 3, 4, 5, 6, 7, 8, 9]\nLas comprensiones de listas pueden contener expresiones complejas y funciones anidadas:\n>>> from math import pi\n>>> [str(round(pi, i)) for i in range(1, 6)]\n['3.1', '3.14', '3.142', '3.1416', '3.14159']\nListas por comprensi\u00f3n anidadas\nLa expresi\u00f3n inicial de una comprensi\u00f3n de listas puede ser cualquier expresi\u00f3n arbitraria,", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ef86399-05d9-4157-b98e-58584e68ea9b": {"__data__": {"id_": "7ef86399-05d9-4157-b98e-58584e68ea9b", "embedding": null, "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f40a78ad-3a2d-4fb9-9276-5aa9c023049a", "node_type": "4", "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6639379ee140d8d48088e7f5e55ad1be17c7120c4ae615dd737182d45262de49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5808ffbd-283d-468a-8f85-0529afc6922e", "node_type": "1", "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "98ca7684968a8cbae829f0d8230c7f7ee35eb18f364cac89a84371866bf00a33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b1a99a4-c226-4545-8bc4-c0caf1cd0c73", "node_type": "1", "metadata": {}, "hash": "641a99c0f05a8dbb3bbc756d72993adb99d7856d868926b9dec4f5b0234d221e", "class_name": "RelatedNodeInfo"}}, "hash": "b2be107529c0f04e94d2109c00ce9c0274c66df4133f27fe3f44cfbd9a2b1b0a", "text": "incluyendo otra comprensi\u00f3n de\nlistas.\nConsider\u00e1 el siguiente ejemplo de una matriz de 3x4 implementada como una lista de tres listas de largo 4:\n>>> matriz = [\n...     [1, 2, 3, 4],\n...     [5, 6, 7, 8],\n...     [9, 10, 11, 12],\n... ]\nLa siguiente comprensi\u00f3n de lista transpondr\u00e1 las filas y columnas:\n>>> [[fila[i] for fila in matriz] for i in range(4)]\n[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\nComo vimos en la secci\u00f3n anterior, la lista de comprensi\u00f3n anidada se evalua en el contexto del for que lo sigue, por lo\nque este ejemplo equivale a:\n>>> transpuesta = []\n>>> for i in range(4):\n...     transpuesta.append([fila[i] for fila in matriz])\n...\n>>> transpuesta\n[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\n 30", "start_char_idx": 1279, "end_char_idx": 2006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b1a99a4-c226-4545-8bc4-c0caf1cd0c73": {"__data__": {"id_": "4b1a99a4-c226-4545-8bc4-c0caf1cd0c73", "embedding": null, "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "229173d4-f97f-4296-9708-3c4658ffbf3b", "node_type": "4", "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae4aa428f5a0e844181cbb355733279d6b2d061885c9f0c732c32315b16bd43c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ef86399-05d9-4157-b98e-58584e68ea9b", "node_type": "1", "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b2be107529c0f04e94d2109c00ce9c0274c66df4133f27fe3f44cfbd9a2b1b0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fce912f-8ee9-41f3-99d5-2761c546d407", "node_type": "1", "metadata": {}, "hash": "157f334222187b8366fdd64493dcbc38897a4463ab82abf87718888f678b0798", "class_name": "RelatedNodeInfo"}}, "hash": "641a99c0f05a8dbb3bbc756d72993adb99d7856d868926b9dec4f5b0234d221e", "text": "el cual, a la vez, es lo mismo que:\n>>> transpuesta = []\n>>> for i in range(4):\n...     # las siguientes 3 lineas hacen la comprensi\u00f3n de listas anidada\n...     fila_transpuesta = []\n...     for fila in matriz:\n...         fila_transpuesta.append(fila[i])\n...     transpuesta.append(fila_transpuesta)\n...\n>>> transpuesta\n[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\nEn el mundo real, deber\u00edas preferir funciones predefinidas a declaraciones con flujo complejo. La funci\u00f3n zip() har\u00eda un\nbuen trabajo para este caso de uso:\n >>> list(zip(*matriz))\n[(1, 5, 9), (2, 6, 10), (3, 7, 11), (4, 8, 12)]\nVer Desempaquetando una lista de argumentos para detalles en el asterisco de esta l\u00ednea.\nLa instrucci\u00f3n \nHay una manera de quitar un \u00edtem de una lista dado su \u00edndice en lugar de su valor: la instrucci\u00f3n del. Esta es diferente del\nm\u00e9todo pop(), el cual devuelve un valor. La instrucci\u00f3n del tambi\u00e9n puede usarse para quitar secciones de una lista o\nvaciar la lista completa (lo que hac\u00edamos antes asignando una lista vac\u00eda a la secci\u00f3n). Por ejemplo:\n>>> a = [-1, 1, 66.25, 333, 333, 1234.5]\n>>> del a[0]\n>>> a\n[1, 66.25, 333, 333, 1234.5]\n>>> del a[2:4]\n>>> a\n[1, 66.25, 1234.5]\n>>> del a[:]\n>>> a\n[]\ndel puede usarse tambi\u00e9n para eliminar variables:\n>>> del a\nHacer referencia al nombre a de aqu\u00ed en m\u00e1s es un error (al menos hasta que se le asigne otro valor). Veremos otros usos\npara del m\u00e1s adelante.", "start_char_idx": 0, "end_char_idx": 1402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fce912f-8ee9-41f3-99d5-2761c546d407": {"__data__": {"id_": "4fce912f-8ee9-41f3-99d5-2761c546d407", "embedding": null, "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "229173d4-f97f-4296-9708-3c4658ffbf3b", "node_type": "4", "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae4aa428f5a0e844181cbb355733279d6b2d061885c9f0c732c32315b16bd43c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b1a99a4-c226-4545-8bc4-c0caf1cd0c73", "node_type": "1", "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "641a99c0f05a8dbb3bbc756d72993adb99d7856d868926b9dec4f5b0234d221e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f59419b5-83d9-453a-bb8a-b9b5222f85e6", "node_type": "1", "metadata": {}, "hash": "1cdada0c4ef3e0389bf39550ec2ca158dc07a972ca382dcefbdade606791c486", "class_name": "RelatedNodeInfo"}}, "hash": "157f334222187b8366fdd64493dcbc38897a4463ab82abf87718888f678b0798", "text": "Veremos otros usos\npara del m\u00e1s adelante.\nTuplas y secuencias\nVimos que las listas y cadenas tienen propiedades en com\u00fan, como el indizado y las operaciones de seccionado. Estas son\ndos ejemplos de datos de tipo secuencia (ver Tipos integrados). Como Python es un lenguaje en evoluci\u00f3n, otros datos de\ntipo secuencia pueden agregarse. Existe otro dato de tipo secuencia est\u00e1ndar: la tupla.\nUna tupla consiste de un n\u00famero de valores separados por comas, por ejemplo:\n>>> t = 12345, 54321, 'hola!'\n>>> t[0]\n12345\n>>> t\n(12345, 54321, 'hola!')\n>>> # Las tuplas pueden anidarse:\n 31", "start_char_idx": 1361, "end_char_idx": 1940, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f59419b5-83d9-453a-bb8a-b9b5222f85e6": {"__data__": {"id_": "f59419b5-83d9-453a-bb8a-b9b5222f85e6", "embedding": null, "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02dac68d-d9b8-4525-a531-160164988343", "node_type": "4", "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c7671e8aa21ab3c5e53db1631e231598e48800b51bdea05e868b45e215c15153", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fce912f-8ee9-41f3-99d5-2761c546d407", "node_type": "1", "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "157f334222187b8366fdd64493dcbc38897a4463ab82abf87718888f678b0798", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44eb7431-190e-4133-bc7f-aa11ee2c4aa1", "node_type": "1", "metadata": {}, "hash": "b03f6bb7e29f4294c12f6336f96a80f3c489340b244fe79f307180dfd85dbce9", "class_name": "RelatedNodeInfo"}}, "hash": "1cdada0c4ef3e0389bf39550ec2ca158dc07a972ca382dcefbdade606791c486", "text": "... u = t, (1, 2, 3, 4, 5)\n>>> u\n((12345, 54321, 'hola!'), (1, 2, 3, 4, 5))\n>>> # Las tuplas son inmutables:\n... t[0] = 88888\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'tuple' object does not support item assignment\n>>> # pero pueden contener objetos mutables:\n... v = ([1, 2, 3], [3, 2, 1])\n>>> v\n([1, 2, 3], [3, 2, 1])\nComo puedes ver, en la salida las tuplas siempre se encierran entre par\u00e9ntesis, para que las tuplas anidadas puedan\ninterpretarse correctamente; pueden ingresarse con o sin par\u00e9ntesis, aunque a menudo los par\u00e9ntesis son necesarios de\ntodas formas (si la tupla es parte de una expresi\u00f3n m\u00e1s grande). No es posible asignar a los \u00edtems individuales de una tupla,\npero sin embargo s\u00ed se puede crear tuplas que contengan objetos mutables, como las listas.\nA pesar de que las tuplas puedan parecerse a las listas, frecuentemente se utilizan en distintas situaciones y para distintos\nprop\u00f3sitos. Las tuplas son inmutables y normalmente contienen una secuencia heterog\u00e9nea de elementos que son\naccedidos al desempaquetar (ver m\u00e1s adelante en esta secci\u00f3n) o indizar (o incluso acceder por atributo en el caso de las\nnamedtuples). Las listas son mutables, y sus elementos son normalmente homog\u00e9neos y se acceden iterando a la lista.\nUn problema particular es la construcci\u00f3n de tuplas que contengan 0 o 1 \u00edtem: la sintaxis presenta algunas peculiaridades\npara estos casos.", "start_char_idx": 0, "end_char_idx": 1426, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44eb7431-190e-4133-bc7f-aa11ee2c4aa1": {"__data__": {"id_": "44eb7431-190e-4133-bc7f-aa11ee2c4aa1", "embedding": null, "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02dac68d-d9b8-4525-a531-160164988343", "node_type": "4", "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c7671e8aa21ab3c5e53db1631e231598e48800b51bdea05e868b45e215c15153", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f59419b5-83d9-453a-bb8a-b9b5222f85e6", "node_type": "1", "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1cdada0c4ef3e0389bf39550ec2ca158dc07a972ca382dcefbdade606791c486", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6aa0cd98-d10f-42f8-b587-edd35a3de6d8", "node_type": "1", "metadata": {}, "hash": "e8cfc557b896a698edcc44c443005f868ac8f2ab36da3501e674c82418fda6ed", "class_name": "RelatedNodeInfo"}}, "hash": "b03f6bb7e29f4294c12f6336f96a80f3c489340b244fe79f307180dfd85dbce9", "text": "Las tuplas vac\u00edas se construyen mediante un par de par\u00e9ntesis vac\u00edo; una tupla con un \u00edtem se construye\nponiendo una coma a continuaci\u00f3n del valor (no alcanza con encerrar un \u00fanico valor entre par\u00e9ntesis). Feo, pero efectivo.\nPor ejemplo:\n>>> vacia = ()\n>>> singleton = 'hola',    # <-- notar la coma al final\n>>> len(vacia)\n0\n>>> len(singleton)\n1\n>>> singleton\n('hola',)\nLa declaraci\u00f3n t = 12345, 54321, 'hola!' es un ejemplo de empaquetado de tuplas: los valores 12345, 54321 y\n'hola!' se empaquetan juntos en una tupla.\nLa operaci\u00f3n inversa tambi\u00e9n es posible:\n>>> x, y, z = t\nEsto se llama, apropiadamente, desempaquetado de secuencias, y funciona para cualquier secuencia en el lado derecho\ndel igual. El desempaquetado de secuencias requiere que la cantidad de variables a la izquierda del signo igual sea el\ntama\u00f1o de la secuencia. Not\u00e1 que la asignaci\u00f3n m\u00faltiple es en realidad s\u00f3lo una combinaci\u00f3n de empaquetado de tuplas y\ndesempaquetado de secuencias.\nConjuntos\nPython tambi\u00e9n incluye un tipo de dato para conjuntos. Un conjunto es una colecci\u00f3n no ordenada y sin elementos\nrepetidos. Los usos b\u00e1sicos de \u00e9stos incluyen verificaci\u00f3n de pertenencia y eliminaci\u00f3n de entradas duplicadas. Los\nconjuntos tambi\u00e9n soportan operaciones matem\u00e1ticas como la uni\u00f3n, intersecci\u00f3n, diferencia, y diferencia sim\u00e9trica.\nLas llaves o la funci\u00f3n set() pueden usarse para crear conjuntos. Not\u00e1 que para crear un conjunto vac\u00edo ten\u00e9s que usar\nset(), no {}; esto \u00faltimo crea un diccionario vac\u00edo, una estructura de datos que discutiremos en la secci\u00f3n siguiente.\n 32", "start_char_idx": 1427, "end_char_idx": 2986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6aa0cd98-d10f-42f8-b587-edd35a3de6d8": {"__data__": {"id_": "6aa0cd98-d10f-42f8-b587-edd35a3de6d8", "embedding": null, "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea02d236-2234-4cf3-9725-e0db095d2cca", "node_type": "4", "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "988f1f7a39491da283e8db7e86adfd404098f02e48e31eb041d05e87cf02af3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44eb7431-190e-4133-bc7f-aa11ee2c4aa1", "node_type": "1", "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b03f6bb7e29f4294c12f6336f96a80f3c489340b244fe79f307180dfd85dbce9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c4663ea-2915-4f5b-ae2a-19511b968d54", "node_type": "1", "metadata": {}, "hash": "d6c59f0eb2ab2a53d2a91f007b7b66cb28758d7e5b29770639d757014bfd1a40", "class_name": "RelatedNodeInfo"}}, "hash": "e8cfc557b896a698edcc44c443005f868ac8f2ab36da3501e674c82418fda6ed", "text": "Una peque\u00f1a demostraci\u00f3n:\n>>> canasta = {'manzana', 'naranja', 'manzana', 'pera', 'naranja', 'banana'}\n>>> print fruta                  # muestra que se removieron los duplicados\n{'pera', 'manzana', 'banana', 'naranja'}\n>>> 'naranja' in canasta         # verificaci\u00f3n de pertenencia r\u00e1pida\nTrue\n>>> 'yerba' in canasta\nFalse\n>>> # veamos las operaciones para las letras \u00fanicas de dos palabras\n...\n>>> a = set('abracadabra')\n>>> b = set('alacazam')\n>>> a                                  # letras \u00fanicas en a\n{a', 'r', 'b', 'c', 'd'}\n>>> a - b                              # letras en a pero no en b\n{'r', 'b', 'd'}\n>>> a | b                              # letras en a o en b\n{'a', 'c', 'b', 'd', 'm', 'l', 'r', 'z'}\n>>> a & b                              # letras en a y en b\n{'a', 'c'}\n>>> a ^ b                              # letras en a o b pero no en ambos\n{'b', 'd', 'm', 'l', 'r', 'z'}\nDe forma similar a las comprensiones de listas, est\u00e1 tambi\u00e9n soportada la comprensi\u00f3n de conjuntos:\n>>> a = {x for x in 'abracadabra' if x not in 'abc'}\n>>> a\n{'r', 'd'}\nDiccionarios\nOtro tipo de dato \u00fatil inclu\u00eddo en Python es el diccionario (ver Tipos integrados). Los diccionarios se encuentran a veces en\notros lenguajes como \"memorias asociativas\" o \"arreglos asociativos\". A diferencia de las secuencias, que se indexan\nmediante un rango num\u00e9rico, los diccionarios se indexan con claves, que pueden ser cualquier tipo inmutable; las cadenas y\nn\u00fameros siempre pueden ser claves.", "start_char_idx": 0, "end_char_idx": 1474, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c4663ea-2915-4f5b-ae2a-19511b968d54": {"__data__": {"id_": "2c4663ea-2915-4f5b-ae2a-19511b968d54", "embedding": null, "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea02d236-2234-4cf3-9725-e0db095d2cca", "node_type": "4", "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "988f1f7a39491da283e8db7e86adfd404098f02e48e31eb041d05e87cf02af3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6aa0cd98-d10f-42f8-b587-edd35a3de6d8", "node_type": "1", "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e8cfc557b896a698edcc44c443005f868ac8f2ab36da3501e674c82418fda6ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d54a0683-66b7-4204-9545-582b85b163de", "node_type": "1", "metadata": {}, "hash": "4b13ae8e8aea4baf9f7b820f3855fd4fbed5c12d6104b8a30f48874d80509790", "class_name": "RelatedNodeInfo"}}, "hash": "d6c59f0eb2ab2a53d2a91f007b7b66cb28758d7e5b29770639d757014bfd1a40", "text": "Las tuplas pueden usarse como claves si solamente contienen cadenas, n\u00fameros o\ntuplas; si una tupla contiene cualquier objeto mutable directa o indirectamente, no puede usarse como clave. No pod\u00e9s usar\nlistas como claves, ya que las listas pueden modificarse usando asignaci\u00f3n por \u00edndice, asignaci\u00f3n por secci\u00f3n, o m\u00e9todos\ncomo append() y extend().\nLo mejor es pensar en un diccionario como un conjunto no ordenado de pares clave: valor, con el requerimiento de que las\nclaves sean \u00fanicas (dentro de un diccionario en particular). Un par de llaves crean un diccionario vac\u00edo: {}. Colocar una lista\nde pares clave:valor separados por comas entre las llaves a\u00f1ade pares clave:valor iniciales al diccionario; esta tambi\u00e9n es la\nforma en que los diccionarios se presentan en la salida.\nLas operaciones principales sobre un diccionario son guardar un valor con una clave y extraer ese valor dada la clave.\nTambi\u00e9n es posible borrar un par clave:valor con del. Si us\u00e1s una clave que ya est\u00e1 en uso para guardar un valor, el valor\nque estaba asociado con esa clave se pierde. Es un error extraer un valor usando una clave no existente.\nHacer list(d.keys()) en un diccionario devuelve una lista de todas las claves usadas en el diccionario, en un orden\narbitrario (si las quer\u00e9s ordenadas, us\u00e1 en cambio sorted(d.keys()). 6 Para controlar si una clave est\u00e1 en el diccionario,\nus\u00e1 el in.\nUn peque\u00f1o ejemplo de uso de un diccionario:\n>>> tel = {'jack': 4098, 'sape': 4139}\n>>> tel['guido'] = 4127\n>>> tel\n 33", "start_char_idx": 1475, "end_char_idx": 2973, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d54a0683-66b7-4204-9545-582b85b163de": {"__data__": {"id_": "d54a0683-66b7-4204-9545-582b85b163de", "embedding": null, "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28a7e3e9-5fcc-4c9e-8608-0b03462feb4e", "node_type": "4", "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b652742f499fa39577c5f455a7c4a5b0bd2af2293bf7b9c039eb98931bb4b99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c4663ea-2915-4f5b-ae2a-19511b968d54", "node_type": "1", "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d6c59f0eb2ab2a53d2a91f007b7b66cb28758d7e5b29770639d757014bfd1a40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b64946d9-79da-4658-87aa-2360b2261617", "node_type": "1", "metadata": {}, "hash": "8f593bb36f136f7136841f800fd0ee84aa89a7904131e10da6243cd05fb0cd59", "class_name": "RelatedNodeInfo"}}, "hash": "4b13ae8e8aea4baf9f7b820f3855fd4fbed5c12d6104b8a30f48874d80509790", "text": "{'sape': 4139, 'jack': 4098, 'guido': 4127}\n>>> tel['jack']\n4098\n>>> del tel['sape']\n>>> tel['irv'] = 4127\n>>> tel\n{'jack': 4098, 'irv': 4127, 'guido': 4127}\n>>> list(tel.keys())\n['irv', 'guido', 'jack']\n>>> sorted(tel.keys())\n['guido', 'irv', 'jack']\n>>> 'guido' in tel\nTrue\n>>> 'jack' not in tel\nFalse\nEl constructor dict() crea un diccionario directamente desde secuencias de pares clave-valor:\n>>> dict([('sape', 4139), ('guido', 4127), ('jack', 4098)])\n{'sape': 4139, 'jack': 4098, 'guido': 4127}\nAdem\u00e1s, las comprensiones de diccionarios se pueden usar para crear diccionarios desde expresiones arbitrarias de clave y\nvalor:\n>>> {x: x ** 2 for x in (2, 4, 6)}\n{2: 4, 4: 16, 6: 36}\nCuando las claves son cadenas simples, a veces resulta m\u00e1s f\u00e1cil especificar los pares usando argumentos por palabra\nclave:\n>>> dict(sape=4139, guido=4127, jack=4098)\n{'sape': 4139, 'jack': 4098, 'guido': 4127}\nT \u00e9cnicas de iteraci\u00f3n\nCuando iteramos sobre diccionarios, se pueden obtener al mismo tiempo la clave y su valor correspondiente usando el\nm\u00e9todo items().\n>>> caballeros = {'gallahad': 'el puro', 'robin': 'el valiente'}\n>>> for k, v in caballeros.items():\n...     print(k, v)\n...\ngallahad el puro\nrobin el valiente\nCuando se itera sobre una secuencia, se puede obtener el \u00edndice de posici\u00f3n junto a su valor correspondiente usando la\nfunci\u00f3n enumerate().", "start_char_idx": 0, "end_char_idx": 1352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b64946d9-79da-4658-87aa-2360b2261617": {"__data__": {"id_": "b64946d9-79da-4658-87aa-2360b2261617", "embedding": null, "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28a7e3e9-5fcc-4c9e-8608-0b03462feb4e", "node_type": "4", "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b652742f499fa39577c5f455a7c4a5b0bd2af2293bf7b9c039eb98931bb4b99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d54a0683-66b7-4204-9545-582b85b163de", "node_type": "1", "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b13ae8e8aea4baf9f7b820f3855fd4fbed5c12d6104b8a30f48874d80509790", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53896a75-ae5a-407f-a623-a6639e996a01", "node_type": "1", "metadata": {}, "hash": "24443d3d2bb8524fb1ee22c37ebeacf126ab021b5f5270b98829de1206f26580", "class_name": "RelatedNodeInfo"}}, "hash": "8f593bb36f136f7136841f800fd0ee84aa89a7904131e10da6243cd05fb0cd59", "text": ">>> for i, v in enumerate(['ta', 'te', 'ti']):\n...     print(i, v)\n...\n0 ta\n1 te\n2 ti\nPara iterar sobre dos o m\u00e1s secuencias al mismo tiempo, los valores pueden emparejarse con la funci\u00f3n zip().\n>>> preguntas = ['nombre', 'objetivo', 'color favorito']\n>>> respuestas = ['lancelot', 'el santo grial', 'azul']\n>>> for p, r in zip(preguntas, respuestas):\n 34", "start_char_idx": 1353, "end_char_idx": 1708, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53896a75-ae5a-407f-a623-a6639e996a01": {"__data__": {"id_": "53896a75-ae5a-407f-a623-a6639e996a01", "embedding": null, "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ebb8c64-69a6-414a-ac2b-9de5ee6216d0", "node_type": "4", "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f52bddc45b7ecc8ef636bbd4f8faf85804d7708294441b07045a526385a00381", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b64946d9-79da-4658-87aa-2360b2261617", "node_type": "1", "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8f593bb36f136f7136841f800fd0ee84aa89a7904131e10da6243cd05fb0cd59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe3d5f90-37c3-45d3-a29c-ba875041d3d3", "node_type": "1", "metadata": {}, "hash": "f61ff5e2f15e518f043a844ef6345a62997c236cdce1076ac93bed6a3fd53df5", "class_name": "RelatedNodeInfo"}}, "hash": "24443d3d2bb8524fb1ee22c37ebeacf126ab021b5f5270b98829de1206f26580", "text": "...     print('Cual es tu {0}?  {1}.'.format(p, r))\n...\nCual es tu nombre?  lancelot.\nCual es tu objetivo?  el santo grial.\nCual es tu color favorito?  azul.\nPara iterar sobre una secuencia en orden inverso, se especifica primero la secuencia al derecho y luego se llama a la\nfunci\u00f3n reversed().\n>>> for i in reversed(range(1, 10, 2)):\n...     print(i)\n...\n9\n7\n5\n3\n1\nPara iterar sobre una secuencia ordenada, se utiliza la funci\u00f3n sorted() la cual devuelve una nueva lista ordenada\ndejando a la original intacta.\n>>> canasta = ['manzana', 'naranja', 'manzana', 'pera', 'naranja', 'banana']\n>>> for f in sorted(set(canasta)):\n...     print(f)\n...\nbanana\nmanzana\nnaranja\npera\nA veces uno intenta cambiar una lista mientras la est\u00e1 iterando; sin embargo, a menudo es m\u00e1s simple y seguro crear una\nnueva lista:\n>>> datos = [56.2, float('NaN'), 51.7, 55.3, 52.5, float('NaN'), 47.8]\n>>> datos_filtrados = []\n>>> for valor in datos:\n...     if not math.isnan(valor):\n...         datos_filtrados.append(valor)\n...\n>>> datos_filtrados\n[56.2, 51.7, 55.3, 52.5, 47.8]\nM\u00e1s acerca de condiciones\nLas condiciones usadas en las instrucciones while e if pueden contener cualquier operador, no s\u00f3lo comparaciones.\nLos operadores de comparaci\u00f3n in y not in verifican si un valor est\u00e1 (o no est\u00e1) en una secuencia. Los operadores is\ne is not comparan si dos objetos son realmente el mismo objeto; esto es significativo s\u00f3lo para objetos mutables como\nlas listas. Todos los operadores de comparaci\u00f3n tienen la misma prioridad, la cual es menor que la de todos los operadores\nnum\u00e9ricos.\nLas comparaciones pueden encadenarse.", "start_char_idx": 0, "end_char_idx": 1604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe3d5f90-37c3-45d3-a29c-ba875041d3d3": {"__data__": {"id_": "fe3d5f90-37c3-45d3-a29c-ba875041d3d3", "embedding": null, "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ebb8c64-69a6-414a-ac2b-9de5ee6216d0", "node_type": "4", "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f52bddc45b7ecc8ef636bbd4f8faf85804d7708294441b07045a526385a00381", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53896a75-ae5a-407f-a623-a6639e996a01", "node_type": "1", "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "24443d3d2bb8524fb1ee22c37ebeacf126ab021b5f5270b98829de1206f26580", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "840c76ed-bd44-40f2-a445-ec9fbbe04b37", "node_type": "1", "metadata": {}, "hash": "2a1b9d5ffbb0ad4a3189e7d9fa6e59485cc2e8b78819c11e6cdddf444c520522", "class_name": "RelatedNodeInfo"}}, "hash": "f61ff5e2f15e518f043a844ef6345a62997c236cdce1076ac93bed6a3fd53df5", "text": "Las comparaciones pueden encadenarse. Por ejemplo, a < b == c verifica si a es menor que b y adem\u00e1s si b es igual\na c.\nLas comparaciones pueden combinarse mediante los operadores booleanos and y or, y el resultado de una comparaci\u00f3n\n(o de cualquier otra expresi\u00f3n booleana) puede negarse con not. Estos tienen prioridades menores que los operadores de\ncomparaci\u00f3n; entre ellos not tiene la mayor prioridad y or la menor, o sea que A and not B or C equivale a\n(A and (not B)) or C. Como siempre, los par\u00e9ntesis pueden usarse para expresar la composici\u00f3n deseada.\n 35", "start_char_idx": 1567, "end_char_idx": 2132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "840c76ed-bd44-40f2-a445-ec9fbbe04b37": {"__data__": {"id_": "840c76ed-bd44-40f2-a445-ec9fbbe04b37", "embedding": null, "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "acf62b8c-b1d6-445c-8477-108895a8f54e", "node_type": "4", "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2707836943c79e2f48c8f20e4a3e26ed8e0156873aabe2e471d22fabd3b8620", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe3d5f90-37c3-45d3-a29c-ba875041d3d3", "node_type": "1", "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f61ff5e2f15e518f043a844ef6345a62997c236cdce1076ac93bed6a3fd53df5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ddd6a45-ab08-4e7d-9695-baf25cf9aa48", "node_type": "1", "metadata": {}, "hash": "27a21374f5af1fbad8d64d4d2ae70fa5ae80f3685887462ca2a6b772fa804288", "class_name": "RelatedNodeInfo"}}, "hash": "2a1b9d5ffbb0ad4a3189e7d9fa6e59485cc2e8b78819c11e6cdddf444c520522", "text": "Los operadores booleanos and y or son los llamados operadores cortocircuito: sus argumentos se eval\u00faan de izquierda a\nderecha, y la evaluaci\u00f3n se detiene en el momento en que se determina su resultado. Por ejemplo, si A y C son verdaderas\npero B es falsa, en A and B and C no se eval\u00faa la expresi\u00f3n C. Cuando se usa como un valor general y no como un\nbooleano, el valor devuelto de un operador cortocircuito es el \u00faltimo argumento evaluado.\nEs posible asignar el resultado de una comparaci\u00f3n u otra expresi\u00f3n booleana a una variable. Por ejemplo,\n>>> cadena1, cadena2, cadena3 = '', 'Trondheim', 'Paso Hammer'\n>>> non_nulo = cadena1 or cadena2 or cadena3\n>>> non_nulo\n'Trondheim'\nNot\u00e1 que en Python, a diferencia de C, la asignaci\u00f3n no puede ocurrir dentro de expresiones. Los programadores de C\npueden renegar por esto, pero es algo que evita un tipo de problema com\u00fan encontrado en programas en C: escribir = en\nuna expresi\u00f3n cuando lo que se quiere escribir es ==.\nComparando secuencias y otros tipos\nLas secuencias pueden compararse con otros objetos del mismo tipo de secuencia. La comparaci\u00f3n usa orden lexicogr\u00e1fico:\nprimero se comparan los dos primeros \u00edtems, si son diferentes esto ya determina el resultado de la comparaci\u00f3n; si son\niguales, se comparan los siguientes dos \u00edtems, y as\u00ed sucesivamente hasta llegar al final de alguna de las secuencias. Si dos\n\u00edtems a comparar son ambos secuencias del mismo tipo, la comparaci\u00f3n lexicogr\u00e1fica es recursiva. Si todos los \u00edtems de\ndos secuencias resultan iguales, se considera que las secuencias son iguales.\nSi una secuencia es una subsecuencia inicial de la otra, la secuencia m\u00e1s corta es la menor. El orden lexicogr\u00e1fico para\ncadenas de caracteres utiliza el orden de c\u00f3digos Unicode para caracteres individuales.", "start_char_idx": 0, "end_char_idx": 1773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ddd6a45-ab08-4e7d-9695-baf25cf9aa48": {"__data__": {"id_": "7ddd6a45-ab08-4e7d-9695-baf25cf9aa48", "embedding": null, "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "acf62b8c-b1d6-445c-8477-108895a8f54e", "node_type": "4", "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2707836943c79e2f48c8f20e4a3e26ed8e0156873aabe2e471d22fabd3b8620", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "840c76ed-bd44-40f2-a445-ec9fbbe04b37", "node_type": "1", "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a1b9d5ffbb0ad4a3189e7d9fa6e59485cc2e8b78819c11e6cdddf444c520522", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "689cf701-4d75-460d-b9c2-c7602648a0de", "node_type": "1", "metadata": {}, "hash": "7be12e5f93208a2e3fb10f903a32c5f760e1a5467a2077e452f5ade675c95698", "class_name": "RelatedNodeInfo"}}, "hash": "27a21374f5af1fbad8d64d4d2ae70fa5ae80f3685887462ca2a6b772fa804288", "text": "Algunos ejemplos de\ncomparaciones entre secuencias del mismo tipo:\n(1, 2, 3)              < (1, 2, 4)\n[1, 2, 3]              < [1, 2, 4]\n'ABC' < 'C' < 'Pascal' < 'Python'\n(1, 2, 3, 4)           < (1, 2, 4)\n(1, 2)                 < (1, 2, -1)\n(1, 2, 3)             == (1.0, 2.0, 3.0)\n(1, 2, ('aa', 'ab'))   < (1, 2, ('abc', 'a'), 4)\nObserv\u00e1 que comparar objetos de diferentes tipos con < o > es legal siempre y cuando los objetas tenga los m\u00e9todos de\ncomparaci\u00f3n apropiados. Por ejemplo, los tipos de n\u00fameros mezclados son comparados de acuerdo a su valor num\u00e9rico, o\nsea 0 es igual a 0.0, etc. Si no es el caso, en lugar de proveer un ordenamiento arbitrario, el int\u00e9rprete generar\u00e1 una\nexcepci\u00f3n TypeError.\n5\nOtros lenguajes pueden devolver el objeto mutado, lo cual permite encadenado de m\u00e9todos, como\nd->insert(\"a\")->remove(\"b\")->sort();.\n6\nLlamar a d.keys() devolver\u00e1 un objeto vista de diccionario. Soporta operaciones como prueba de pertenencia e\niteraci\u00f3n, pero sus contenidos dependen del diccionario original -- son s\u00f3lo una vista.\n 36", "start_char_idx": 1774, "end_char_idx": 2818, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "689cf701-4d75-460d-b9c2-c7602648a0de": {"__data__": {"id_": "689cf701-4d75-460d-b9c2-c7602648a0de", "embedding": null, "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48a87e18-9f9b-45f7-a30b-c9b49a1d4b75", "node_type": "4", "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c69b57a13cfa94a7961fb48a85e855c4f456b575ec513a8c4381921cc7a21db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ddd6a45-ab08-4e7d-9695-baf25cf9aa48", "node_type": "1", "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "27a21374f5af1fbad8d64d4d2ae70fa5ae80f3685887462ca2a6b772fa804288", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b876c16-4e6b-45bb-a8b2-28875d87971b", "node_type": "1", "metadata": {}, "hash": "9a01a901067ecddd02ffdfb50544afef8a56fbcb3959f8246765b5cbdd3b4883", "class_name": "RelatedNodeInfo"}}, "hash": "7be12e5f93208a2e3fb10f903a32c5f760e1a5467a2077e452f5ade675c95698", "text": "M\u00f3dulosSi sal\u00eds del int\u00e9rprete de Python y entr\u00e1s de nuevo, las definiciones que hiciste (funciones y variables) se pierden. Por lo\ntanto, si quer\u00e9s escribir un programa m\u00e1s o menos largo, es mejor que uses un editor de texto para preparar la entrada para\nel interprete y ejecutarlo con ese archivo como entrada. Esto es conocido como crear un gui\u00f3n, o script. Si tu programa se\nvuelve m\u00e1s largo, quiz\u00e1s quieras separarlo en distintos archivos para un mantenimiento m\u00e1s f\u00e1cil. Quiz\u00e1s tambi\u00e9n quieras\nusar una funci\u00f3n \u00fatil que escribiste desde distintos programas sin copiar su definici\u00f3n a cada programa.\nPara soportar esto, Python tiene una manera de poner definiciones en un archivo y usarlos en un script o en una instancia\ninteractiva del int\u00e9rprete. Tal archivo es llamado m\u00f3dulo; las definiciones de un m\u00f3dulo pueden ser importadas a otros\nm\u00f3dulos o al m\u00f3dulo principal (la colecci\u00f3n de variables a las que ten\u00e9s acceso en un script ejecutado en el nivel superior y\nen el modo calculadora).\nUn m\u00f3dulo es una archivo conteniendo definiciones y declaraciones de Python. El nombre del archivo es el nombre del\nm\u00f3dulo con el sufijo .py agregado. Dentro de un m\u00f3dulo, el nombre del mismo (como una cadena) est\u00e1 disponible en el valor\nde la variable global __name__.", "start_char_idx": 0, "end_char_idx": 1266, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b876c16-4e6b-45bb-a8b2-28875d87971b": {"__data__": {"id_": "7b876c16-4e6b-45bb-a8b2-28875d87971b", "embedding": null, "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48a87e18-9f9b-45f7-a30b-c9b49a1d4b75", "node_type": "4", "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c69b57a13cfa94a7961fb48a85e855c4f456b575ec513a8c4381921cc7a21db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "689cf701-4d75-460d-b9c2-c7602648a0de", "node_type": "1", "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7be12e5f93208a2e3fb10f903a32c5f760e1a5467a2077e452f5ade675c95698", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8375be9-2629-4285-881a-52b703e563fd", "node_type": "1", "metadata": {}, "hash": "921ea04f4d06780588f727d86febdf38b0fdd38eceed71f68d2e57aafbb66812", "class_name": "RelatedNodeInfo"}}, "hash": "9a01a901067ecddd02ffdfb50544afef8a56fbcb3959f8246765b5cbdd3b4883", "text": "Por ejemplo, us\u00e1 tu editor de textos favorito para crear un archivo llamado fibo.py en el\ndirectorio actual, con el siguiente contenido:\n# m\u00f3dulo de n\u00fameros Fibonacci\ndef fib(n):    # escribe la serie Fibonacci hasta n\n    a, b = 0, 1\n    while b < n:\n        print(b, end=' ')\n        a, b = b, a+b\n     print()\ndef fib2(n):   # devuelve la serie Fibonacci hasta n\n    resultado = []\n    a, b = 0, 1\n    while b < n:\n        resultado.append(b)\n        a, b = b, a+b\n    return resultado\nAhora entr\u00e1 al int\u00e9rprete de Python e import\u00e1 este m\u00f3dulo con la siguiente orden:\n>>> import fibo\nEsto no mete los nombres de las funciones definidas en fibo directamente en el espacio de nombres actual; s\u00f3lo mete ah\u00ed\nel nombre del m\u00f3dulo, fibo. Usando el nombre del m\u00f3dulo pod\u00e9s acceder a las funciones:\n>>> fibo.fib(1000)\n1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987\n>>> fibo.fib2(100)\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]\n>>> fibo.__name__\n'fibo'\nSi pens\u00e1s usar la funci\u00f3n frecuentemente, pod\u00e9s asignarla a un nombre local:\n 37", "start_char_idx": 1267, "end_char_idx": 2290, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8375be9-2629-4285-881a-52b703e563fd": {"__data__": {"id_": "b8375be9-2629-4285-881a-52b703e563fd", "embedding": null, "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1407d068-74b9-40a5-b390-57954296171e", "node_type": "4", "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "62363573d9b170d0015216c85310216fbd339562189844b2eb758606d62292b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b876c16-4e6b-45bb-a8b2-28875d87971b", "node_type": "1", "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a01a901067ecddd02ffdfb50544afef8a56fbcb3959f8246765b5cbdd3b4883", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dce00de-fd30-4864-8821-36c9a807a72f", "node_type": "1", "metadata": {}, "hash": "39902149f7c9e834f482e6b7ee613a86cef72d2630f624eb372c9d9e33accf33", "class_name": "RelatedNodeInfo"}}, "hash": "921ea04f4d06780588f727d86febdf38b0fdd38eceed71f68d2e57aafbb66812", "text": ">>> fib = fibo.fib\n>>> fib(500)\n1 1 2 3 5 8 13 21 34 55 89 144 233 377\nM\u00e1s sobre los m\u00f3dulos\nUn m\u00f3dulo puede contener tanto declaraciones ejecutables como definiciones de funciones. Estas declaraciones est\u00e1n\npensadas para inicializar el m\u00f3dulo. Se ejecutan solamente la primera vez que el m\u00f3dulo se encuentra en una sentencia\nimport. 7 (Son tambi\u00e9n ejecutados si el archivo es ejecutado como un script).\nCada m\u00f3dulo tiene su propio espacio de nombres, el que es usado como espacio de nombres global por todas las funciones\ndefinidas en el m\u00f3dulo. Por lo tanto, el autor de un m\u00f3dulo puede usar variables globales en el m\u00f3dulo sin preocuparse\nacerca de conflictos con una variable global del usuario. Por otro lado, si sab\u00e9s lo que est\u00e1s haciendo pod\u00e9s tocar las\nvariables globales de un m\u00f3dulo con la misma notaci\u00f3n usada para referirte a sus funciones,\nnombremodulo.nombreitem.\nLos m\u00f3dulos pueden importar otros m\u00f3dulos. Es costumbre pero no obligatorio el ubicar todas las declaraciones import al\nprincipio del m\u00f3dulo (o script, para el caso). Los nombres de los m\u00f3dulos importados se ubican en el espacio de nombres\nglobal del m\u00f3dulo que hace la importaci\u00f3n.\nHay una variante de la declaraci\u00f3n import que importa los nombres de un m\u00f3dulo directamente al espacio de nombres del\nm\u00f3dulo que hace la importaci\u00f3n. Por ejemplo:\n>>> from fibo import fib, fib2\n>>> fib(500)\n1 1 2 3 5 8 13 21 34 55 89 144 233 377\nEsto no introduce en el espacio de nombres local el nombre del m\u00f3dulo desde el cual se est\u00e1 importando (entonces, en el\nejemplo, fibo no se define).", "start_char_idx": 0, "end_char_idx": 1556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9dce00de-fd30-4864-8821-36c9a807a72f": {"__data__": {"id_": "9dce00de-fd30-4864-8821-36c9a807a72f", "embedding": null, "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1407d068-74b9-40a5-b390-57954296171e", "node_type": "4", "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "62363573d9b170d0015216c85310216fbd339562189844b2eb758606d62292b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8375be9-2629-4285-881a-52b703e563fd", "node_type": "1", "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "921ea04f4d06780588f727d86febdf38b0fdd38eceed71f68d2e57aafbb66812", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a324215b-9106-4faa-a087-10f05202b32a", "node_type": "1", "metadata": {}, "hash": "04d99cc47d18af4301b03c5c8f4fc63182ac538950fec06ca533894018db55f1", "class_name": "RelatedNodeInfo"}}, "hash": "39902149f7c9e834f482e6b7ee613a86cef72d2630f624eb372c9d9e33accf33", "text": "Hay incluso una variante para importar todos los nombres que un m\u00f3dulo define:\n>>> from fibo import *\n>>> fib(500)\n1 1 2 3 5 8 13 21 34 55 89 144 233 377\nEsto importa todos los nombres excepto aquellos que comienzan con un subrayado (_). La mayor\u00eda de las veces los\nprogramadores de Python no usan esto ya que introduce un conjunto de nombres en el int\u00e9rprete, posiblemente\nescondiendo cosas que ya estaban definidas.\nNot\u00e1 que en general la pr\u00e1ctica de importar * de un m\u00f3dulo o paquete est\u00e1 muy mal vista, ya que frecuentemente genera\nun c\u00f3digo poco legible. Sin embargo, est\u00e1 bien usarlo para ahorrar tecleo en sesiones interactivas.\nNota\nPor razones de eficiencia, cada m\u00f3dulo se importa una vez por sesi\u00f3n del int\u00e9rprete. Por lo tanto, si modific\u00e1s los\nm\u00f3dulos, ten\u00e9s que reiniciar el int\u00e9rprete -- o, si es s\u00f3lo un m\u00f3dulo que quer\u00e9s probar interactivamente, us\u00e1\nimp.reload(), por ejemplo\n``import importlib;\nimportlib.reload(modulename)``.\nEjecutando m\u00f3dulos como scripts\nCuando ejecut\u00e1s un m\u00f3dulo de Python con\n 38", "start_char_idx": 1557, "end_char_idx": 2577, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a324215b-9106-4faa-a087-10f05202b32a": {"__data__": {"id_": "a324215b-9106-4faa-a087-10f05202b32a", "embedding": null, "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eab8ecd5-86f5-4b06-83f5-8581caea74df", "node_type": "4", "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "acf6fe1a3791c0d05db7e325ec76d5a9ddd955da00b1ebfc1f59952f30f0e9df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dce00de-fd30-4864-8821-36c9a807a72f", "node_type": "1", "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "39902149f7c9e834f482e6b7ee613a86cef72d2630f624eb372c9d9e33accf33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00841731-78fc-4f28-90ea-f1661c638196", "node_type": "1", "metadata": {}, "hash": "1eddc01547582c5eb3297348fdbca31998de49c378553674373af2890403972a", "class_name": "RelatedNodeInfo"}}, "hash": "04d99cc47d18af4301b03c5c8f4fc63182ac538950fec06ca533894018db55f1", "text": "python fibo.py <argumentos>\n...el c\u00f3digo en el m\u00f3dulo ser\u00e1 ejecutado, tal como si lo hubieses importado, pero con __name__ con el valor de\n\"__main__\". Eso significa que agregando este c\u00f3digo al final de tu m\u00f3dulo:\nif __name__ == \"__main__\":\n    import sys\n    fib(int(sys.argv[1]))\n...pod\u00e9s hacer que el archivo sea utilizable tanto como script, como m\u00f3dulo importable, porque el c\u00f3digo que analiza la linea\nde \u00f3rdenes s\u00f3lo se ejecuta si el m\u00f3dulo es ejecutado como archivo principal:\n$ python fibo.py 50\n1 1 2 3 5 8 13 21 34\nSi el m\u00f3dulo se importa, ese c\u00f3digo no se ejecuta:\n>>> import fibo\n>>>\nEsto es frecuentemente usado para proveer al m\u00f3dulo una interfaz de usuario conveniente, o para prop\u00f3sitos de prueba\n(ejecutar el m\u00f3dulo como un script ejecuta el juego de pruebas).\nEl camino de b\u00fasqueda de los m\u00f3dulos\nCuando se importa un m\u00f3dulo llamado spam, el int\u00e9rprete busca primero por un m\u00f3dulo con ese nombre que est\u00e9 integrado\nen el int\u00e9rprete. Si no lo encuentra, entonces busca un archivo llamado spam.py en una lista de directorios especificada por\nla variable sys.path. sys.path se inicializa con las siguientes ubicaciones:\n\u007f\nel directorio conteniendo el script (o el directorio actual cuando no se especifica un archivo).\n\u007f\nPYTHONPATH (una lista de nombres de directorios, con la misma sintaxis que la variable de entorno PATH.\n\u007f\nel directorio default de la instalaci\u00f3n.\nNota\nEn sistemas de archivos que soportan enlaces simb\u00f3licos, el directorio conteniendo el script de entrada es calculado\ndespu\u00e9s de que el enlace simb\u00f3lico sea seguido. En otras palabras, el directorio conteniendo el enlace simb\u00f3lico no es\nagregado al m\u00f3dulo de busca del path.\nLuego de la inicializaci\u00f3n, los programas Python pueden modificar sys.path.", "start_char_idx": 0, "end_char_idx": 1738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00841731-78fc-4f28-90ea-f1661c638196": {"__data__": {"id_": "00841731-78fc-4f28-90ea-f1661c638196", "embedding": null, "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eab8ecd5-86f5-4b06-83f5-8581caea74df", "node_type": "4", "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "acf6fe1a3791c0d05db7e325ec76d5a9ddd955da00b1ebfc1f59952f30f0e9df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a324215b-9106-4faa-a087-10f05202b32a", "node_type": "1", "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "04d99cc47d18af4301b03c5c8f4fc63182ac538950fec06ca533894018db55f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c3b6649-8c8a-473e-8461-fa0e0ef91556", "node_type": "1", "metadata": {}, "hash": "365e2482616724840592c07029696e24d462f74fe57c32379dbc26143a716d91", "class_name": "RelatedNodeInfo"}}, "hash": "1eddc01547582c5eb3297348fdbca31998de49c378553674373af2890403972a", "text": "Luego de la inicializaci\u00f3n, los programas Python pueden modificar sys.path. El directorio que contiene el script que se\nest\u00e1 ejecutando se ubica al principio de la b\u00fasqueda, adelante de la biblioteca est\u00e1ndar. Esto significa que se cargar\u00e1n\nscripts en ese directorio en lugar de m\u00f3dulos de la biblioteca est\u00e1ndar con el mismo nombre. Esto es un error a menos que\nse est\u00e9 reemplazando intencionalmente. Mir\u00e1 la secci\u00f3n M\u00f3dulos est\u00e1ndar para m\u00e1s informaci\u00f3n.\nArchivos \"compilados\" de Python\nPara acelerar la carga de m\u00f3dulos, Python cachea las versiones compiladas de cada m\u00f3dulo en el directorio __pycache__\nbajo el nombre module.version.pyc d\u00f3nde la versi\u00f3n codifica el formato del archivo compilado; generalmente contiene el\nn\u00famero de version de Python. Por ejemplo, en CPython release 3.3 la version compilada de spam.py ser\u00eda cacheada como\n__pycache__/spam.cpython-33.pyc. Este convensi\u00f3n de nombre permite compilar m\u00f3dulos desde diferentes releases\ny versiones de Python para coexistir.\n 39", "start_char_idx": 1663, "end_char_idx": 2657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c3b6649-8c8a-473e-8461-fa0e0ef91556": {"__data__": {"id_": "9c3b6649-8c8a-473e-8461-fa0e0ef91556", "embedding": null, "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24448867-f142-4939-8223-7364eea72167", "node_type": "4", "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8870adc604ad0d18ffedef569ea3a242e767a0eb7ccf43b88acb3a34fcde0be3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00841731-78fc-4f28-90ea-f1661c638196", "node_type": "1", "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1eddc01547582c5eb3297348fdbca31998de49c378553674373af2890403972a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4be5360-7e42-4c78-9cbf-e0cbf9d5aca0", "node_type": "1", "metadata": {}, "hash": "269ab44b2a3c5a7c838fd9a669d6b73e23a60b008c3f41deffd88e5ac6cec825", "class_name": "RelatedNodeInfo"}}, "hash": "365e2482616724840592c07029696e24d462f74fe57c32379dbc26143a716d91", "text": "Python chequea la fecha de modificaci\u00f3n de la fuente contra la versi\u00f3n compilada para evr si esta es obsoleta y necesita ser\nrecompilada. Esto es un proceso completamente autom\u00e1tico. Tambi\u00e9n, los m\u00f3dulos compilados son independientes de la\nplataforma, as\u00ed que la misma librer\u00eda puede ser compartida a trav\u00e9s de sistemas con diferentes arquitecturas.\nPython no chequea el cach\u00e9 en dos circuntancias. Primero, siempre recompila y no graba el resultado del m\u00f3dulo que es\ncargado directamente desde la l\u00ednea de comando. Segundo, no chequea el cach\u00e9 si no hay m\u00f3dulo fuente.\nAlgunos consejos para expertos:\n\u007f\nPod\u00e9s usar la -O o -OO en el comando de Python para reducir el tama\u00f1o de los m\u00f3dulos compilados. La -O quita\nassert statements, la --O quita ambos, assert statements y cadenas de caracteres __doc__. Debido a que algunos\nprogramas se basan en que estos est\u00e9n disponibles, deber\u00edas usar esta opci\u00f3n \u00fanicamente si sab\u00e9s lo que est\u00e1s\nhaciendo. Los m\u00f3dulos \"optimizados\" tienen una etiqueta opt- y son normalmente m\u00e1s peque\u00f1os. Releases futuras\nquiz\u00e1s cambien los efectos de la optimizaci\u00f3n.\n\u007f\nUn programa no corre m\u00e1s r\u00e1pido cuando se lee de un archivo .pyc que cuando se lee del .py; lo \u00fanico que es m\u00e1s\nr\u00e1pido en los archivos .pyc es la velocidad con que se cargan.\n\u007f\nHay m\u00e1s detalles de este proceso, incluyendo un diagrama de flujo de la toma de decisiones, en la PEP 3147.\n\u007f\nEl m\u00f3dulo compilleall puede crear archivos .pyc para todos los m\u00f3dulos en un directorio.\nM\u00f3dulos est\u00e1ndar\nPython viene con una biblioteca de m\u00f3dulos est\u00e1ndar, descrita en un documento separado, la Referencia de la Biblioteca de\nPython (de aqu\u00ed en m\u00e1s, \"Referencia de la Biblioteca\").", "start_char_idx": 0, "end_char_idx": 1663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4be5360-7e42-4c78-9cbf-e0cbf9d5aca0": {"__data__": {"id_": "f4be5360-7e42-4c78-9cbf-e0cbf9d5aca0", "embedding": null, "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24448867-f142-4939-8223-7364eea72167", "node_type": "4", "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8870adc604ad0d18ffedef569ea3a242e767a0eb7ccf43b88acb3a34fcde0be3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c3b6649-8c8a-473e-8461-fa0e0ef91556", "node_type": "1", "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "365e2482616724840592c07029696e24d462f74fe57c32379dbc26143a716d91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "335e69a3-bb21-4fde-a271-9791bd5aedb8", "node_type": "1", "metadata": {}, "hash": "066fcc86b4dc9c24465199e0339adfea396eae289befd1511ecf60034d33df0a", "class_name": "RelatedNodeInfo"}}, "hash": "269ab44b2a3c5a7c838fd9a669d6b73e23a60b008c3f41deffd88e5ac6cec825", "text": "Algunos m\u00f3dulos se integran en el int\u00e9rprete; estos proveen acceso\na operaciones que no son parte del n\u00facleo del lenguaje pero que sin embargo est\u00e1n integrados, tanto por eficiencia como\npara proveer acceso a primitivas del sistema operativo, como llamadas al sistema. El conjunto de tales m\u00f3dulos es una\nopci\u00f3n de configuraci\u00f3n el cual tambi\u00e9n depende de la plataforma subyacente. Por ejemplo, el m\u00f3dulo winreg s\u00f3lo se\nprovee en sistemas Windows. Un m\u00f3dulo en particular merece algo de atenci\u00f3n: sys, el que est\u00e1 integrado en todos los\nint\u00e9rpretes de Python. Las variables sys.ps1 y sys.ps2 definen las cadenas usadas como cursores primarios y\nsecundarios:\n>>> import sys\n>>> sys.ps1\n'>>> '\n>>> sys.ps2\n'... '\n>>> sys.ps1 = 'C> '\nC> print('Yuck!')\nYuck!\nC>\nEstas dos variables est\u00e1n solamente definidas si el int\u00e9rprete est\u00e1 en modo interactivo.\nLa variable sys.path es una lista de cadenas que determinan el camino de b\u00fasqueda del int\u00e9rprete para los m\u00f3dulos. Se\ninicializa por omisi\u00f3n a un camino tomado de la variable de entorno PYTHONPATH, o a un valor predefinido en el int\u00e9rprete si\nPYTHONPATH no est\u00e1 configurada. Lo pod\u00e9s modificar usando las operaciones est\u00e1ndar de listas:\n>>> import sys\n>>> sys.path.append('/ufs/guido/lib/python')\nLa funci\u00f3n \nLa funci\u00f3n integrada dir() se usa para encontrar qu\u00e9 nombres define un m\u00f3dulo. Devuelve una lista ordenada de\ncadenas:\n>>> import fibo, sys\n>>> dir(fibo)\n 40", "start_char_idx": 1664, "end_char_idx": 3077, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "335e69a3-bb21-4fde-a271-9791bd5aedb8": {"__data__": {"id_": "335e69a3-bb21-4fde-a271-9791bd5aedb8", "embedding": null, "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd427dc3-06d6-4435-afb1-63fe67314d10", "node_type": "4", "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "097b1435717ac40c332869cdb21f4dc9eb749db71a6d7118ebb31f5f574f56b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4be5360-7e42-4c78-9cbf-e0cbf9d5aca0", "node_type": "1", "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "269ab44b2a3c5a7c838fd9a669d6b73e23a60b008c3f41deffd88e5ac6cec825", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b2bb40d-e2cd-4670-8ee2-57eeecb3816a", "node_type": "1", "metadata": {}, "hash": "11a27cde2dfe8ea249b3b9b759153c86bcd5b92b906a24897391399fee28e75f", "class_name": "RelatedNodeInfo"}}, "hash": "066fcc86b4dc9c24465199e0339adfea396eae289befd1511ecf60034d33df0a", "text": "['__name__', 'fib', 'fib2']\n>>> dir(sys)  # doctest: +NORMALIZE_WHITESPACE\n['__displayhook__', '__doc__', '__excepthook__', '__loader__', '__name__',\n '__package__', '__stderr__', '__stdin__', '__stdout__',\n '_clear_type_cache', '_current_frames', '_debugmallocstats', '_getframe',\n '_home', '_mercurial', '_xoptions', 'abiflags', 'api_version', 'argv',\n 'base_exec_prefix', 'base_prefix', 'builtin_module_names', 'byteorder',\n 'call_tracing', 'callstats', 'copyright', 'displayhook',\n 'dont_write_bytecode', 'exc_info', 'excepthook', 'exec_prefix',\n 'executable', 'exit', 'flags', 'float_info', 'float_repr_style',\n 'getcheckinterval', 'getdefaultencoding', 'getdlopenflags',\n 'getfilesystemencoding', 'getobjects', 'getprofile', 'getrecursionlimit',\n 'getrefcount', 'getsizeof', 'getswitchinterval', 'gettotalrefcount',\n 'gettrace', 'hash_info', 'hexversion', 'implementation', 'int_info',\n 'intern', 'maxsize', 'maxunicode', 'meta_path', 'modules', 'path',\n 'path_hooks', 'path_importer_cache', 'platform', 'prefix', 'ps1',\n 'setcheckinterval', 'setdlopenflags', 'setprofile', 'setrecursionlimit',\n 'setswitchinterval', 'settrace', 'stderr', 'stdin', 'stdout',\n 'thread_info', 'version', 'version_info', 'warnoptions']\nSin argumentos, dir() lista los nombres que ten\u00e9s actualmente definidos:\n>>> a = [1, 2, 3, 4, 5]\n>>> import fibo\n>>> fib = fibo.fib\n>>> dir()\n['__builtins__', '__name__', 'a', 'fib', 'fibo', 'sys']\nNot\u00e1 que lista todos los tipos de nombres: variables, m\u00f3dulos, funciones, etc.\ndir() no lista los nombres de las funciones y variables integradas. Si quer\u00e9s una lista de esos,", "start_char_idx": 0, "end_char_idx": 1595, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b2bb40d-e2cd-4670-8ee2-57eeecb3816a": {"__data__": {"id_": "8b2bb40d-e2cd-4670-8ee2-57eeecb3816a", "embedding": null, "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd427dc3-06d6-4435-afb1-63fe67314d10", "node_type": "4", "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "097b1435717ac40c332869cdb21f4dc9eb749db71a6d7118ebb31f5f574f56b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "335e69a3-bb21-4fde-a271-9791bd5aedb8", "node_type": "1", "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "066fcc86b4dc9c24465199e0339adfea396eae289befd1511ecf60034d33df0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ed539c2-41f1-45ae-a82b-7a681aa3e9b8", "node_type": "1", "metadata": {}, "hash": "f03a6fbd2fc5de9bf4de8ade9a0f8b5975896dd2686028639dd2724290cf6a45", "class_name": "RelatedNodeInfo"}}, "hash": "11a27cde2dfe8ea249b3b9b759153c86bcd5b92b906a24897391399fee28e75f", "text": "Si quer\u00e9s una lista de esos, est\u00e1n definidos en el\nm\u00f3dulo est\u00e1ndar builtins:\n>>> import builtins\n>>> dir(builtins)  # doctest: +NORMALIZE_WHITESPACE\n['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException',\n 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning',\n 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError',\n 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning',\n 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False',\n 'FileExistsError', 'FileNotFoundError', 'FloatingPointError',\n 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError',\n 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError',\n 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError',\n 'MemoryError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented',\n 'NotImplementedError', 'OSError', 'OverflowError',\n 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError',\n 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning',\n 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError',\n 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError',\n 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError',\n 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning',\n 'ValueError', 'Warning', 'ZeroDivisionError', '_', '__build_class__',\n '__debug__', '__doc__', '__import__', '__name__', '__package__', 'abs',\n 'all', 'any', 'ascii', 'bin', 'bool', 'bytearray', 'bytes', 'callable',\n 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits',\n 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit',\n 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr',\n 'hash',", "start_char_idx": 1567, "end_char_idx": 3318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ed539c2-41f1-45ae-a82b-7a681aa3e9b8": {"__data__": {"id_": "9ed539c2-41f1-45ae-a82b-7a681aa3e9b8", "embedding": null, "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd427dc3-06d6-4435-afb1-63fe67314d10", "node_type": "4", "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "097b1435717ac40c332869cdb21f4dc9eb749db71a6d7118ebb31f5f574f56b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b2bb40d-e2cd-4670-8ee2-57eeecb3816a", "node_type": "1", "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "11a27cde2dfe8ea249b3b9b759153c86bcd5b92b906a24897391399fee28e75f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fb3efcb-5dd4-42bf-a21a-48fcb1ba22b0", "node_type": "1", "metadata": {}, "hash": "dd892afcfc4783207d8c1c77024c749f568b98faebbcb886293d67bb21193ede", "class_name": "RelatedNodeInfo"}}, "hash": "f03a6fbd2fc5de9bf4de8ade9a0f8b5975896dd2686028639dd2724290cf6a45", "text": "'frozenset', 'getattr', 'globals', 'hasattr',\n 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass',\n 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview',\n 41", "start_char_idx": 3264, "end_char_idx": 3460, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fb3efcb-5dd4-42bf-a21a-48fcb1ba22b0": {"__data__": {"id_": "5fb3efcb-5dd4-42bf-a21a-48fcb1ba22b0", "embedding": null, "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9374bc17-7120-48d2-86ad-12ad222a90bd", "node_type": "4", "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4dbded15fb0823e69b9cf368574b44d4ecde5e2e5fcb1025b1e4005e2c9f5f21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ed539c2-41f1-45ae-a82b-7a681aa3e9b8", "node_type": "1", "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f03a6fbd2fc5de9bf4de8ade9a0f8b5975896dd2686028639dd2724290cf6a45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb5e5fd0-2e36-44c8-897b-c221acf159df", "node_type": "1", "metadata": {}, "hash": "e775afeafb9973e5aaed16bbbe9a9d695f888b446773bf0f55da84f612b455d7", "class_name": "RelatedNodeInfo"}}, "hash": "dd892afcfc4783207d8c1c77024c749f568b98faebbcb886293d67bb21193ede", "text": "'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property',\n 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice',\n 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars',\n 'zip']\nPaquetes\nLos paquetes son una manera de estructurar los espacios de nombres de Python usando \"nombres de m\u00f3dulos con\npuntos\". Por ejemplo, el nombre de m\u00f3dulo A.B designa un subm\u00f3dulo llamado B en un paquete llamado A. Tal como el\nuso de m\u00f3dulos evita que los autores de diferentes m\u00f3dulos tengan que preocuparse de los respectivos nombres de\nvariables globales, el uso de nombres de m\u00f3dulos con puntos evita que los autores de paquetes de muchos m\u00f3dulos, como\nNumPy o la Biblioteca de Im\u00e1genes de Python (Python Imaging Library, o PIL), tengan que preocuparse de los respectivos\nnombres de m\u00f3dulos.\nSuponete que quer\u00e9s designar una colecci\u00f3n de m\u00f3dulos (un \"paquete\") para el manejo uniforme de archivos y datos de\nsonidos. Hay diferentes formatos de archivos de sonido (normalmente reconocidos por su extensi\u00f3n, por ejemplo: .wav, .aiff,\n.au), por lo que ten\u00e9s que crear y mantener una colecci\u00f3n siempre creciente de m\u00f3dulos para la conversi\u00f3n entre los\ndistintos formatos de archivos. Hay muchas operaciones diferentes que quiz\u00e1s quieras ejecutar en los datos de sonido\n(como mezclarlos, a\u00f1adir eco, aplicar una funci\u00f3n ecualizadora, crear un efecto est\u00e9reo artificial), por lo que ademas estar\u00e1s\nescribiendo una lista sin fin de m\u00f3dulos para realizar estas operaciones.", "start_char_idx": 1, "end_char_idx": 1506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb5e5fd0-2e36-44c8-897b-c221acf159df": {"__data__": {"id_": "eb5e5fd0-2e36-44c8-897b-c221acf159df", "embedding": null, "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9374bc17-7120-48d2-86ad-12ad222a90bd", "node_type": "4", "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4dbded15fb0823e69b9cf368574b44d4ecde5e2e5fcb1025b1e4005e2c9f5f21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fb3efcb-5dd4-42bf-a21a-48fcb1ba22b0", "node_type": "1", "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dd892afcfc4783207d8c1c77024c749f568b98faebbcb886293d67bb21193ede", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59d0bd48-e21a-4a9f-a023-6175775e24fb", "node_type": "1", "metadata": {}, "hash": "a07138e8f7ebc250045ed4324d9631b2e192c153786644c181360fbe7be1d68c", "class_name": "RelatedNodeInfo"}}, "hash": "e775afeafb9973e5aaed16bbbe9a9d695f888b446773bf0f55da84f612b455d7", "text": "Aqu\u00ed hay una posible estructura para tu paquete\n(expresados en t\u00e9rminos de un sistema jer\u00e1rquico de archivos):\nsound/                          Paquete superior\n      __init__.py               Inicializa el paquete de sonido\n      formats/                  Subpaquete para conversiones de formato\n              __init__.py\n              wavread.py\n              wavwrite.py\n              aiffread.py\n              aiffwrite.py\n              auread.py\n              auwrite.py\n              ...\n      effects/                  Subpaquete para efectos de sonido\n              __init__.py\n              echo.py\n              surround.py\n              reverse.py\n              ...\n      filters/                  Subpaquete para filtros\n              __init__.py\n              equalizer.py\n              vocoder.py\n              karaoke.py\n              ...\nAl importar el paquete, Python busca a trav\u00e9s de los directorios en sys.path, buscando el subdirectorio del paquete.\nLos archivos __init__.py se necesitan para hacer que Python trate los directorios como que contienen paquetes; esto se hace\npara prevenir directorios con un nombre com\u00fan, como string, de esconder sin intenci\u00f3n a m\u00f3dulos v\u00e1lidos que se\nsuceden luego en el camino de b\u00fasqueda de m\u00f3dulos. En el caso m\u00e1s simple, __init__.py puede ser solamente un archivo\nvac\u00edo, pero tambi\u00e9n puede ejecutar c\u00f3digo de inicializaci\u00f3n para el paquete o configurar la variable __all__, descrita luego.\nLos usuarios del paquete pueden importar m\u00f3dulos individuales del mismo, por ejemplo:\nimport sound.effects.echo\nEsto carga el subm\u00f3dulo sound.effects.echo. Debe hacerse referencia al mismo con el nombre completo.\n 42", "start_char_idx": 1507, "end_char_idx": 3171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59d0bd48-e21a-4a9f-a023-6175775e24fb": {"__data__": {"id_": "59d0bd48-e21a-4a9f-a023-6175775e24fb", "embedding": null, "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86dbca87-087a-418c-af5c-9ade9a2d466b", "node_type": "4", "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a509abfad05133853e9d29f31343e5f3848abf332f0579654937cb81ea2a07f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb5e5fd0-2e36-44c8-897b-c221acf159df", "node_type": "1", "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e775afeafb9973e5aaed16bbbe9a9d695f888b446773bf0f55da84f612b455d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3c6e14a-d8dc-4202-956e-0dacfdaf973f", "node_type": "1", "metadata": {}, "hash": "4b9529dd93e9c6a56c1079a8167c333d3a07eeb68b16ec825b0b763e071963d2", "class_name": "RelatedNodeInfo"}}, "hash": "a07138e8f7ebc250045ed4324d9631b2e192c153786644c181360fbe7be1d68c", "text": "sound.effects.echo.echofilter(input, output, delay=0.7, atten=4)\nOtra alternativa para importar el subm\u00f3dulos es:\nfrom sound.effects import echo\nEsto tambi\u00e9n carga el subm\u00f3dulo echo, lo deja disponible sin su prefijo de paquete, por lo que puede usarse as\u00ed:\necho.echofilter(input, output, delay=0.7, atten=4)\nOtra variaci\u00f3n m\u00e1s es importar la funci\u00f3n o variable deseadas directamente:\nfrom sound.effects.echo import echofilter\nDe nuevo, esto carga el subm\u00f3dulo echo, pero deja directamente disponible a la funci\u00f3n echofilter():\nechofilter(input, output, delay=0.7, atten=4)\nNot\u00e1 que al usar from package import item el \u00edtem puede ser tanto un subm\u00f3dulo (o subpaquete) del paquete, o\nalg\u00fan otro nombre definido en el paquete, como una funci\u00f3n, clase, o variable. La declaraci\u00f3n import primero verifica si el\n\u00edtem est\u00e1 definido en el paquete; si no, asume que es un m\u00f3dulo y trata de cargarlo. Si no lo puede encontrar, se genera\nuna excepci\u00f3n ImportError.\nPor otro lado, cuando se usa la sintaxis como import item.subitem.subsubitem, cada \u00edtem excepto el \u00faltimo debe ser\nun paquete; el mismo puede ser un m\u00f3dulo o un paquete pero no puede ser una clase, funci\u00f3n o variable definida en el \u00edtem\nprevio.\nImportando * desde un paquete\nAhora, \u00bfqu\u00e9 sucede cuando el usuario escribe from sound.effects import *? Idealmente, uno esperar\u00eda que esto de\nalguna manera vaya al sistema de archivos, encuentre cuales subm\u00f3dulos est\u00e1n presentes en el paquete, y los importe a\ntodos. Esto puede tardar mucho y el importar sub-m\u00f3dulos puede tener efectos secundarios no deseados que s\u00f3lo deber\u00edan\nocurrir cuando se importe expl\u00edcitamente el sub-m\u00f3dulo.\nLa \u00fanica soluci\u00f3n es que el autor del paquete provea un \u00edndice expl\u00edcito del paquete.", "start_char_idx": 0, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3c6e14a-d8dc-4202-956e-0dacfdaf973f": {"__data__": {"id_": "b3c6e14a-d8dc-4202-956e-0dacfdaf973f", "embedding": null, "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86dbca87-087a-418c-af5c-9ade9a2d466b", "node_type": "4", "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a509abfad05133853e9d29f31343e5f3848abf332f0579654937cb81ea2a07f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59d0bd48-e21a-4a9f-a023-6175775e24fb", "node_type": "1", "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a07138e8f7ebc250045ed4324d9631b2e192c153786644c181360fbe7be1d68c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccc14088-ff9f-4329-a8dd-e8599d5ad7a0", "node_type": "1", "metadata": {}, "hash": "ad13fbb83faf5639a0dbf67a459ddc27bdb8079eb6888f48bb479b0a2e11f140", "class_name": "RelatedNodeInfo"}}, "hash": "4b9529dd93e9c6a56c1079a8167c333d3a07eeb68b16ec825b0b763e071963d2", "text": "La declaraci\u00f3n import usa la\nsiguiente convenci\u00f3n: si el c\u00f3digo del __init__.py de un paquete define una lista llamada __all__, se toma como la lista de\nlos nombres de m\u00f3dulos que deber\u00edan ser importados cuando se hace from package import *. Es tarea del autor del\npaquete mantener actualizada esta lista cuando se libera una nueva versi\u00f3n del paquete. Los autores de paquetes podr\u00edan\ndecidir no soportarlo, si no ven un uso para importar * en sus paquetes. Por ejemplo, el archivo sound/effects/__init__.py podr\u00eda\ncontener el siguiente c\u00f3digo:\n__all__ = [\"echo\", \"surround\", \"reverse\"]\nEsto significar\u00eda que from sound.effects import * importar\u00eda esos tres subm\u00f3dulos del paquete sound.\nSi no se define __all__, la declaraci\u00f3n from sound.effects import * no importa todos los subm\u00f3dulos del paquete\nsound.effects al espacio de nombres actual; s\u00f3lo se asegura que se haya importado el paquete sound.effects\n(posiblemente ejecutando alg\u00fan c\u00f3digo de inicializaci\u00f3n que haya en __init__.py) y luego importa aquellos nombres que est\u00e9n\ndefinidos en el paquete. Esto incluye cualquier nombre definido (y subm\u00f3dulos expl\u00edcitamente cargados) por __init__.py.\nTambi\u00e9n incluye cualquier subm\u00f3dulo del paquete que pudiera haber sido expl\u00edcitamente cargado por declaraciones\nimport previas. Consider\u00e1 este c\u00f3digo:\nimport sound.effects.echo\nimport sound.effects.surround\nfrom sound.effects import *\n 43", "start_char_idx": 1721, "end_char_idx": 3110, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccc14088-ff9f-4329-a8dd-e8599d5ad7a0": {"__data__": {"id_": "ccc14088-ff9f-4329-a8dd-e8599d5ad7a0", "embedding": null, "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87362424-3d2a-46ee-b6b0-531389473b41", "node_type": "4", "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c2b405994bb7fb1dd8b243a92eaff94d0e5f249be431b43eb5c84efa02729224", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3c6e14a-d8dc-4202-956e-0dacfdaf973f", "node_type": "1", "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b9529dd93e9c6a56c1079a8167c333d3a07eeb68b16ec825b0b763e071963d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a784d1c-43d5-4142-b9d3-762ea4c370db", "node_type": "1", "metadata": {}, "hash": "0d2df666f96d93939930dca2c0972c16a07bc9e497abe5645a2e8f0c81a54e91", "class_name": "RelatedNodeInfo"}}, "hash": "ad13fbb83faf5639a0dbf67a459ddc27bdb8079eb6888f48bb479b0a2e11f140", "text": "En este ejemplo, los m\u00f3dulos echo y surround se importan en el espacio de nombre actual porque est\u00e1n definidos en el\npaquete sound.effects cuando se ejecuta la declaraci\u00f3n from...import. (Esto tambi\u00e9n funciona cuando se define\n__all__).\nA pesar de que ciertos m\u00f3dulos est\u00e1n dise\u00f1ados para exportar solo nombres que siguen ciertos patrones cuando us\u00e1s\nimport *, tambi\u00e9n se considera una mala pr\u00e1ctica en c\u00f3digo de producci\u00f3n.\nRecord\u00e1 que no est\u00e1 mal usar from paquete import submodulo_especifico! De hecho, esta notaci\u00f3n se\nrecomienda a menos que el m\u00f3dulo que est\u00e1s importando necesite usar subm\u00f3dulos con el mismo nombre desde otros\npaquetes.\nReferencias internas en paquetes\nCuando se estructuran los paquetes en subpaquetes (como en el ejemplo sound), pod\u00e9s usar import absolutos para\nreferirte a subm\u00f3dulos de paquetes hermanos. Por ejemplo, si el m\u00f3dulo sound.filters.vocoder necesita usar el\nm\u00f3dulo echo en el paquete sound.effects, puede hacer from sound.effects import echo.\nTambi\u00e9n pod\u00e9s escribir import relativos con la forma from module import name. Estos imports usan puntos adelante\npara indicar los paquetes actual o padres involucrados en el import relativo. En el ejemplo surround, podr\u00edas hacer:\nfrom . import echo\nfrom .. import formats\nfrom ..filters import equalizer\nNot\u00e1 que los imports relativos se basan en el nombre del m\u00f3dulo actual. Ya que el nombre del m\u00f3dulo principal es siempre\n\"__main__\", los m\u00f3dulos pensados para usarse como m\u00f3dulo principal de una aplicaci\u00f3n Python siempre deber\u00edan usar\nimport absolutos.\nPaquetes en m\u00faltiples directorios\nLos paquetes soportan un atributo especial m\u00e1s, __path__. Este se inicializa, antes de que el c\u00f3digo en ese archivo se\nejecute, a una lista que contiene el nombre del directorio donde est\u00e1 el paquete. Esta variable puede modificarse, afectando\nb\u00fasquedas futuras de m\u00f3dulos y subpaquetes contenidos en el paquete.", "start_char_idx": 0, "end_char_idx": 1886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a784d1c-43d5-4142-b9d3-762ea4c370db": {"__data__": {"id_": "3a784d1c-43d5-4142-b9d3-762ea4c370db", "embedding": null, "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87362424-3d2a-46ee-b6b0-531389473b41", "node_type": "4", "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c2b405994bb7fb1dd8b243a92eaff94d0e5f249be431b43eb5c84efa02729224", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccc14088-ff9f-4329-a8dd-e8599d5ad7a0", "node_type": "1", "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ad13fbb83faf5639a0dbf67a459ddc27bdb8079eb6888f48bb479b0a2e11f140", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bec975c3-f2de-4384-b137-064618e747ad", "node_type": "1", "metadata": {}, "hash": "c4817387f906dbff762627be0dc464f606237ebdc5a5c022cc24686ef4a26d8f", "class_name": "RelatedNodeInfo"}}, "hash": "0d2df666f96d93939930dca2c0972c16a07bc9e497abe5645a2e8f0c81a54e91", "text": "Aunque esta caracter\u00edstica no se necesita frecuentemente, puede usarse para extender el conjunto de m\u00f3dulos que se\nencuentran en el paquete.\n7\nDe hecho las definiciones de funci\u00f3n son tambi\u00e9n 'declaraciones' que se 'ejecutan'; la ejecuci\u00f3n de una definici\u00f3n\nde funci\u00f3n a nivel de m\u00f3dulo mete el nombre de la funci\u00f3n en el espacio de nombres global.\n 44", "start_char_idx": 1887, "end_char_idx": 2239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bec975c3-f2de-4384-b137-064618e747ad": {"__data__": {"id_": "bec975c3-f2de-4384-b137-064618e747ad", "embedding": null, "metadata": {"page_label": "53", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a659e33f-2e37-4efe-8753-4764dde85045", "node_type": "4", "metadata": {"page_label": "53", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d72d836d6ab033a3920522b42e202132a433721ce093217dd64534706baebd24", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a784d1c-43d5-4142-b9d3-762ea4c370db", "node_type": "1", "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0d2df666f96d93939930dca2c0972c16a07bc9e497abe5645a2e8f0c81a54e91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ff9bf2d-4316-4276-8fcf-272d011993a6", "node_type": "1", "metadata": {}, "hash": "bb38185361016f1a860b969ea8912c41da77eb46db6e76c307a4a3e3d9899c8c", "class_name": "RelatedNodeInfo"}}, "hash": "c4817387f906dbff762627be0dc464f606237ebdc5a5c022cc24686ef4a26d8f", "text": "45", "start_char_idx": 0, "end_char_idx": 2, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ff9bf2d-4316-4276-8fcf-272d011993a6": {"__data__": {"id_": "9ff9bf2d-4316-4276-8fcf-272d011993a6", "embedding": null, "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "948eb31d-5c3c-4b53-8681-cbc334b2e94f", "node_type": "4", "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dd84bc774bdb01e33c970707fa559de14c99f10c71ca5f87cd12bb5cfb5d8a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bec975c3-f2de-4384-b137-064618e747ad", "node_type": "1", "metadata": {"page_label": "53", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c4817387f906dbff762627be0dc464f606237ebdc5a5c022cc24686ef4a26d8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b843699-ea86-4e79-9521-e859ad681b07", "node_type": "1", "metadata": {}, "hash": "caa7db5af0ed420d41c7efa459cd4597c7d7cd72f92c662ca30ab49d6e498747", "class_name": "RelatedNodeInfo"}}, "hash": "bb38185361016f1a860b969ea8912c41da77eb46db6e76c307a4a3e3d9899c8c", "text": "Entrada y salidaHay diferentes m\u00e9todos de presentar la salida de un programa; los datos pueden ser impresos de una forma legible por\nhumanos, o escritos a un archivo para uso futuro. Este cap\u00edtulo discutir\u00e1 algunas de las posibilidades.\nFormateo elegante de la salida\nHasta ahora encontramos dos maneras de escribir valores: declaraciones de expresi\u00f3n y la funci\u00f3n print(). (Una tercer\nmanera es usando el m\u00e9todo write() de los objetos tipo archivo; el archivo de salida est\u00e1ndar puede referenciarse como\nsys.stdout. Mir\u00e1 la Referencia de la Biblioteca para m\u00e1s informaci\u00f3n sobre esto.)\nFrecuentemente querr\u00e1s m\u00e1s control sobre el formateo de tu salida que simplemente imprimir valores separados por\nespacios. Hay dos maneras de formatear tu salida; la primera es hacer todo el manejo de las cadenas vos mismo: usando\nrebanado de cadenas y operaciones de concatenado pod\u00e9s crear cualquier forma que puedas imaginar. El tipo string\ncontiene algunos m\u00e9todos \u00fatiles para emparejar cadenas a un determinado ancho; estas las discutiremos en breve. La otra\nforma es usar formatted string literals o el m\u00e9todo str.format().\nEl m\u00f3dulo string contiene una clase string.Template que ofrece otra forma de sustituir valores en las cadenas.\nNos queda una pregunta, por supuesto: \u00bfc\u00f3mo convert\u00eds valores a cadenas? Afortunadamente, Python tiene maneras de\nconvertir cualquier valor a una cadena: pasalos a las funciones repr() o str().\nLa funci\u00f3n str() devuelve representaciones de los valores que son bastante legibles por humanos, mientras que repr()\ngenera representaciones que pueden ser le\u00eddas por el el int\u00e9rprete (o forzar\u00edan un SyntaxError si no hay sint\u00e1xis\nequivalente). Para objetos que no tienen una representaci\u00f3n en particular para consumo humano, str() devolver\u00e1 el\nmismo valor que repr(). Muchos valores, como n\u00fameros o estructuras como listas y diccionarios, tienen la misma\nrepresentaci\u00f3n usando cualquiera de las dos funciones. Las cadenas, en particular, tienen dos representaciones distintas.", "start_char_idx": 0, "end_char_idx": 1999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b843699-ea86-4e79-9521-e859ad681b07": {"__data__": {"id_": "5b843699-ea86-4e79-9521-e859ad681b07", "embedding": null, "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "948eb31d-5c3c-4b53-8681-cbc334b2e94f", "node_type": "4", "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dd84bc774bdb01e33c970707fa559de14c99f10c71ca5f87cd12bb5cfb5d8a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ff9bf2d-4316-4276-8fcf-272d011993a6", "node_type": "1", "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bb38185361016f1a860b969ea8912c41da77eb46db6e76c307a4a3e3d9899c8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1bd707b7-d248-4f35-86f6-ede3f22e9b63", "node_type": "1", "metadata": {}, "hash": "706596711f43b8b48dbf22db214a760e2a88d97ca25e41d23566b7a5fba0613b", "class_name": "RelatedNodeInfo"}}, "hash": "caa7db5af0ed420d41c7efa459cd4597c7d7cd72f92c662ca30ab49d6e498747", "text": "Las cadenas, en particular, tienen dos representaciones distintas.\nAlgunos ejemplos:\n>>> s = 'Hola mundo.'\n>>> str(s)\n'Hola mundo.'\n>>> repr(s)\n\"'Hola mundo.'\"\n>>> str(1 / 7)\n'0.142857142857'\n>>> x = 10 * 3.25\n>>> y = 200 * 200\n>>> s = 'El valor de x es ' + repr(x) + ', y es ' + repr(y) + '...'\n>>> print(s)\nEl valor de x es 32.5, y es 40000...\n>>> # El repr() de una cadena agrega ap\u00f3strofos y barras invertidas\n... hola = 'hola mundo\\n'\n>>> holas = repr(hola)\n>>> print(holas)\n'hola mundo\\n'\n>>> # El argumento de repr() puede ser cualquier objeto Python:\n... repr((x, y, ('carne', 'huevos')))\n\"(32.5, 40000, ('carne', 'huevos'))\"\nAc\u00e1 hay dos maneras de escribir una tabla de cuadrados y cubos:\n 46", "start_char_idx": 1933, "end_char_idx": 2634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bd707b7-d248-4f35-86f6-ede3f22e9b63": {"__data__": {"id_": "1bd707b7-d248-4f35-86f6-ede3f22e9b63", "embedding": null, "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01050cce-5a57-4c43-8c97-b0eb630c5f3d", "node_type": "4", "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3426c820d6e9d485a57429f3b6e0fcf2572edd3218bc6e5b6a85a8ac7e139037", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b843699-ea86-4e79-9521-e859ad681b07", "node_type": "1", "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "caa7db5af0ed420d41c7efa459cd4597c7d7cd72f92c662ca30ab49d6e498747", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30447c2e-0e2d-47d0-ae3a-fb67a493bf1a", "node_type": "1", "metadata": {}, "hash": "5c4a835b46aa8f927f0799c5469c4b4c447f5bd741c6a39108043def72d63360", "class_name": "RelatedNodeInfo"}}, "hash": "706596711f43b8b48dbf22db214a760e2a88d97ca25e41d23566b7a5fba0613b", "text": ">>> for x in range(1, 11):\n...     print(repr(x).rjust(2), repr(x * x).rjust(3), end=' ')\n...     # notar el uso de 'end' en la linea anterior\n...     print(repr(x * x * x).rjust(4))\n...\n 1   1    1\n 2   4    8\n 3   9   27\n 4  16   64\n 5  25  125\n 6  36  216\n 7  49  343\n 8  64  512\n 9  81  729\n10 100 1000\n>>> for x in range(1,11):\n...     print('{0:2d} {1:3d} {2:4d}'.format(x, x * x, x * x * x))\n...\n 1   1    1\n 2   4    8\n 3   9   27\n 4  16   64\n 5  25  125\n 6  36  216\n 7  49  343\n 8  64  512\n 9  81  729\n10 100 1000\n(Notar que en el primer ejemplo, un espacio entre cada columna fue agregado por la manera en que print() trabaja:\nsiempre agrega espacios entre sus argumentos)\nEste ejemplo muestra el m\u00e9todo str.rjust() de los objetos cadena, el cual ordena una cadena a la derecha en un\ncampo del ancho dado llen\u00e1ndolo con espacios a la izquierda. Hay m\u00e9todos similares str.ljust() y str.center().\nEstos m\u00e9todos no escriben nada, s\u00f3lo devuelven una nueva cadena. Si la cadena de entrada es demasiado larga, no la\ntruncan, sino la devuelven intacta; esto te romper\u00e1 la alineaci\u00f3n de tus columnas pero es normalmente mejor que la\nalternativa, que te estar\u00eda mintiendo sobre el valor.", "start_char_idx": 0, "end_char_idx": 1188, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30447c2e-0e2d-47d0-ae3a-fb67a493bf1a": {"__data__": {"id_": "30447c2e-0e2d-47d0-ae3a-fb67a493bf1a", "embedding": null, "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01050cce-5a57-4c43-8c97-b0eb630c5f3d", "node_type": "4", "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3426c820d6e9d485a57429f3b6e0fcf2572edd3218bc6e5b6a85a8ac7e139037", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1bd707b7-d248-4f35-86f6-ede3f22e9b63", "node_type": "1", "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "706596711f43b8b48dbf22db214a760e2a88d97ca25e41d23566b7a5fba0613b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aadfbc5e-37e6-4656-8559-69874701e300", "node_type": "1", "metadata": {}, "hash": "934848f27e68e40f62cac6ae7809b3ae1a830f653eb73c4c443332f6aa88016f", "class_name": "RelatedNodeInfo"}}, "hash": "5c4a835b46aa8f927f0799c5469c4b4c447f5bd741c6a39108043def72d63360", "text": "(Si realmente quer\u00e9s que se recorte, siempre pod\u00e9s agregarle una\noperaci\u00f3n de rebanado, como en x.ljust(n)[:n].)\nHay otro m\u00e9todo, str.zfill(), el cual rellena una cadena num\u00e9rica a la izquierda con ceros. Entiende signos positivos y\nnegativos:\n>>> '12'.zfill(5)\n'00012'\n>>> '-3.14'.zfill(7)\n'-003.14'\n>>> '3.14159265359'.zfill(5)\n'3.14159265359'\nEl uso b\u00e1sico del m\u00e9todo str.format() es como esto:\n>>> print('Somos los {} quienes decimos \"{}!\"'.format('caballeros', 'Nop'))\nSomos los caballeros quienes decimos \"Nop!\"\nLas llaves y caracteres dentro de las mismas (llamados campos de formato) son reemplazadas con los objetos pasados en\nel m\u00e9todo str.format(). Un n\u00famero en las llaves se refiere a la posici\u00f3n del objeto pasado en el m\u00e9todo.\n 47", "start_char_idx": 1189, "end_char_idx": 1933, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aadfbc5e-37e6-4656-8559-69874701e300": {"__data__": {"id_": "aadfbc5e-37e6-4656-8559-69874701e300", "embedding": null, "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bfd1d2df-fa59-4a94-887f-d4837329f3d6", "node_type": "4", "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "86ff56a7b5c5a819cd1200aa5ae88d06025cf63b50787728d09fa26ec69921a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30447c2e-0e2d-47d0-ae3a-fb67a493bf1a", "node_type": "1", "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5c4a835b46aa8f927f0799c5469c4b4c447f5bd741c6a39108043def72d63360", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0036b3a5-7e3f-4c4b-84f0-20a6a7b8ce84", "node_type": "1", "metadata": {}, "hash": "b37390d247d37454e3948dd182da6cacaa85c892587e8d721c316119cadaf242", "class_name": "RelatedNodeInfo"}}, "hash": "934848f27e68e40f62cac6ae7809b3ae1a830f653eb73c4c443332f6aa88016f", "text": ">>> print('{0} y {1}'.format('carne', 'huevos'))\ncarne y huevos\n>>> print('{1} y {0}'.format('carne', 'huevos'))\nhuevos y carne\nSi se usan argumentos nombrados en el m\u00e9todo str.format(), sus valores ser\u00e1n referidos usando el nombre del\nargumento.\n>>> print('Esta {comida} es {adjetivo}.'.format(\n...       comida='carne', adjetivo='espantosa'))\nEsta carne es espantosa.\nSe pueden combinar arbitrariamente argumentos posicionales y nombrados:\n>>> print('La historia de {0}, {1}, y {otro}.'.format('Bill', 'Manfred',\n...                                                   otro='Georg'))\nLa historia de Bill, Manfred, y Georg.\nSe pueden usar '!a' (aplica apply()), '!s' (aplica str()) y '!r' (aplica repr()) para convertir el valor antes de\nque se formatee.\n>>> contents = 'anguilas'\n>>> print('Mi aerodeslizador esta lleno de {}.'.format(contents))\nMi aerodeslizador esta lleno de anguilas.\n>>> print('My hovercraft is full of {!r}.'.format(contents))\nMi aerodeslizador esta lleno de 'anguilas'.\nUn ': y especificador de formato opcionales pueden ir luego del nombre del campo. Esto aumenta el control sobre c\u00f3mo el\nvalor es formateado. El siguiente ejemplo redondea Pi a tres lugares luego del punto decimal.\n>>> import math\n>>> print('El valor de PI es aproximadamente {0:.3f}.'.format(math.pi))\nEl valor de PI es aproximadamente 3.142.\nPasando un entero luego del ':' causar\u00e1 que que el campo sea de un m\u00ednimo n\u00famero de caracteres de ancho. Esto es \u00fatil\npara hacer tablas lindas.", "start_char_idx": 0, "end_char_idx": 1479, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0036b3a5-7e3f-4c4b-84f0-20a6a7b8ce84": {"__data__": {"id_": "0036b3a5-7e3f-4c4b-84f0-20a6a7b8ce84", "embedding": null, "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bfd1d2df-fa59-4a94-887f-d4837329f3d6", "node_type": "4", "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "86ff56a7b5c5a819cd1200aa5ae88d06025cf63b50787728d09fa26ec69921a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aadfbc5e-37e6-4656-8559-69874701e300", "node_type": "1", "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "934848f27e68e40f62cac6ae7809b3ae1a830f653eb73c4c443332f6aa88016f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b732ea8-45e1-477f-a703-ff6467687955", "node_type": "1", "metadata": {}, "hash": "788d0fa53567ea5ed05c41f7da99cecfeee6014e5d9945e21614e5ab1dee66a1", "class_name": "RelatedNodeInfo"}}, "hash": "b37390d247d37454e3948dd182da6cacaa85c892587e8d721c316119cadaf242", "text": "Esto es \u00fatil\npara hacer tablas lindas.\n>>> tabla = {'Sjoerd': 4127, 'Jack': 4098, 'Dcab': 7678}\n>>> for nombre, telefono in tabla.items():\n...     print('{0:10} ==> {1:10d}'.format(nombre, telefono))\n...\nDcab       ==>       7678\nJack       ==>       4098\nSjoerd     ==>       4127\nSi ten\u00e9s una cadena de formateo realmente larga que no quer\u00e9s separar, podr\u00eda ser bueno que puedas hacer referencia a\nlas variables a ser formateadas por el nombre en vez de la posici\u00f3n. Esto puede hacerse simplemente pasando el\ndiccionario y usando corchetes '[]' para acceder a las claves\n>>> tabla = {'Sjoerd': 4127, 'Jack': 4098, 'Dcab': 8637678}\n>>> print('Jack: {0[Jack]:d}; Sjoerd: {0[Sjoerd]:d}; '\n...       'Dcab: {0[Dcab]:d}'.format(tabla))\nJack: 4098; Sjoerd: 4127; Dcab: 8637678\nEsto se podr\u00eda tambi\u00e9n hacer pasando la tabla como argumentos nombrados con la notaci\u00f3n '**'.\n>>> tabla = {'Sjoerd': 4127, 'Jack': 4098, 'Dcab': 8637678}\n>>> print('Jack: {Jack:d}; Sjoerd: {Sjoerd:d}; '\n          'Dcab: {Dcab:d}'.format(**tabla))\nJack: 4098; Sjoerd: 4127; Dcab: 8637678\n 48", "start_char_idx": 1441, "end_char_idx": 2504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b732ea8-45e1-477f-a703-ff6467687955": {"__data__": {"id_": "2b732ea8-45e1-477f-a703-ff6467687955", "embedding": null, "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e450cbc9-1ab9-46a8-9f3f-74eed9269096", "node_type": "4", "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4462ebd01606dff742c6954aa99f9c1cba889a4c5ab655660a04ff956fc5e82e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0036b3a5-7e3f-4c4b-84f0-20a6a7b8ce84", "node_type": "1", "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b37390d247d37454e3948dd182da6cacaa85c892587e8d721c316119cadaf242", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e13f422-6616-4b80-b8ef-de8638107f4b", "node_type": "1", "metadata": {}, "hash": "b636043f710ea0c876378e1b6b909a361524914b265f6235eb02f6de02672bd0", "class_name": "RelatedNodeInfo"}}, "hash": "788d0fa53567ea5ed05c41f7da99cecfeee6014e5d9945e21614e5ab1dee66a1", "text": "Esto es particularmente \u00fatil en combinaci\u00f3n con la funci\u00f3n integrada vars(), que devuelve un diccionario conteniendo\ntodas las variables locales.\nPara una completa descripci\u00f3n del formateo de cadenas con str.format(), mir\u00e1 en Tipos integrados.\nViejo formateo de cadenas\nEl operador % tambi\u00e9n puede usarse para formateo de cadenas. Interpreta el argumento de la izquierda con el estilo de\nformateo de sprintf() para ser aplicado al argumento de la derecha, y devuelve la cadena resultante de esta operaci\u00f3n\nde formateo. Por ejemplo:\n>>> import math\n>>> print('El valor de PI es aproximadamente %5.3f.' % math.pi)\nEl valor de PI es aproximadamente 3.142.\nPod\u00e9s encontrar m\u00e1s informaci\u00f3n en la secci\u00f3n Tipos integrados.\nLeyendo y escribiendo archivos\nLa funci\u00f3n open() devuelve un objeto archivo, y se usa normalmente con dos argumentos:\nopen(nombre_de_archivo, modo).\n>>> f = open('archivodetrabajo', 'w')\n>>> print(f)\n<_io.TextIOWrapper name='archivodetrabajo' mode='w' encoding='UTF-8'>\nEl primer argumento es una cadena conteniendo el nombre de archivo. El segundo argumento es otra cadena conteniendo\nunos pocos caracteres que describen la forma en que el archivo ser\u00e1 usado. El modo puede ser 'r' cuando el archivo ser\u00e1\nsolamente le\u00eddo, 'w' para s\u00f3lo escribirlo (un archivo existente con el mismo nombre ser\u00e1 borrado), y 'a' abre el archivo\npara agregarle informaci\u00f3n; cualquier dato escrito al archivo ser\u00e1 autom\u00e1ticamente agregado al final. 'r+' abre el archivo\ntanto para leerlo como para escribirlo. El argumento modo es opcional; si se omite se asume 'r'.\nNormalmente los archivos se abren en modo texto, lo que significa que pod\u00e9s leer y escribir cadenas del y al archivo, las\ncuales se codifican utilizando un c\u00f3digo espec\u00edfico. Si el c\u00f3digo no es especificado, el valor predeterminado depende de la\nplataforma.", "start_char_idx": 0, "end_char_idx": 1821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e13f422-6616-4b80-b8ef-de8638107f4b": {"__data__": {"id_": "4e13f422-6616-4b80-b8ef-de8638107f4b", "embedding": null, "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e450cbc9-1ab9-46a8-9f3f-74eed9269096", "node_type": "4", "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4462ebd01606dff742c6954aa99f9c1cba889a4c5ab655660a04ff956fc5e82e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b732ea8-45e1-477f-a703-ff6467687955", "node_type": "1", "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "788d0fa53567ea5ed05c41f7da99cecfeee6014e5d9945e21614e5ab1dee66a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61e6d39b-97fd-49f1-aa08-07e45af8d425", "node_type": "1", "metadata": {}, "hash": "102d8cc5f705a947321da528a91d58e58698c3d95f1477a039b4658734e30dc8", "class_name": "RelatedNodeInfo"}}, "hash": "b636043f710ea0c876378e1b6b909a361524914b265f6235eb02f6de02672bd0", "text": "Si se agrega b al modo el archivo se abre en modo binario: ahora los datos se leen y escriben en forma de\nobjetos bytes. Se deber\u00eda usar este modo para todos los archivos que no contengan texto.\nCuando se lee en modo texto, por defecto se convierten los fines de lineas que son espec\u00edficos a las plataformas (\\n en\nUnix, \\r\\n en Windows) a solamente \\n. Cuando se escribe en modo texto, por defecto se convierten los \\n a los finales\nde linea espec\u00edficos de la plataforma. Este cambio autom\u00e1tico est\u00e1 bien para archivos de texto, pero corromper\u00eda datos\nbinarios como los de archivos JPEG o EXE. Asegurate de usar modo binario cuando leas y escribas tales archivos.\nM\u00e9todos de los objetos Archivo\nEl resto de los ejemplos en esta secci\u00f3n asumir\u00e1n que ya se cre\u00f3 un objeto archivo llamado f.\nPara leer el contenido de una archivo llam\u00e1 a f.read(cantidad), el cual lee alguna cantidad de datos y los devuelve\ncomo una cadena de (en modo texto) o un objeto de bytes (en modo binario). cantidad es un argumento num\u00e9rico opcional.\nCuando se omite cantidad o es negativo, el contenido entero del archivo ser\u00e1 leido y devuelto; es tu problema si el archivo\nes el doble de grande que la memoria de tu m\u00e1quina. De otra manera, a lo sumo una cantidad de bytes son le\u00eddos y\ndevueltos. Si se alcanz\u00f3 el fin del archivo, f.read() devolver\u00e1 una cadena vac\u00eda (\"\").\n>>> f.read()\n'Este es el archivo entero.\\n'\n>>> f.read()\n''\n 49", "start_char_idx": 1822, "end_char_idx": 3234, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61e6d39b-97fd-49f1-aa08-07e45af8d425": {"__data__": {"id_": "61e6d39b-97fd-49f1-aa08-07e45af8d425", "embedding": null, "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57afa26f-0cce-44ec-b179-344931db99dd", "node_type": "4", "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff73a8a57c69e55307d96f11a5b860e928ba53e5d38f0b24097e35f98bb01f36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e13f422-6616-4b80-b8ef-de8638107f4b", "node_type": "1", "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b636043f710ea0c876378e1b6b909a361524914b265f6235eb02f6de02672bd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5fa6ed3-49ca-4a93-9e4e-98362e8e7fc4", "node_type": "1", "metadata": {}, "hash": "a3f83c6d800929b58c08b75c0133520e0b96fb08e5d2c26497d0fabc7d1cc996", "class_name": "RelatedNodeInfo"}}, "hash": "102d8cc5f705a947321da528a91d58e58698c3d95f1477a039b4658734e30dc8", "text": "f.readline() lee una sola linea del archivo; el caracter de fin de linea (\\n) se deja al final de la cadena, y s\u00f3lo se omite\nen la \u00faltima linea del archivo si el mismo no termina en un fin de linea. Esto hace que el valor de retorno no sea ambiguo; si\nf.readline() devuelve una cadena vac\u00eda, es que se alcanz\u00f3 el fin del archivo, mientras que una linea en blanco es\nrepresentada por '\\n', una cadena conteniendo s\u00f3lo un \u00fanico fin de linea.\n>>> f.readline()\n'Esta es la primer linea del archivo.\\n'\n>>> f.readline()\n'Segunda linea del archivo\\n'\n>>> f.readline()\n''\nPara leer l\u00edneas de un archivo, pod\u00e9s iterar sobre el objeto archivo. Esto es eficiente en memoria, r\u00e1pido, y conduce a un\nc\u00f3digo m\u00e1s simple:\n>>> for linea in f:\n...     print(linea, end='')\nEsta es la primer linea del archivo\nSegunda linea del archivo\nSi quer\u00e9s leer todas las l\u00edneas de un archivo en una lista tambi\u00e9n pod\u00e9s usar list(f) o f.readlines().\nf.write(cadena) escribe el contenido de la cadena al archivo, devolviendo la cantidad de caracteres escritos.\n>>> f.write('Esto es una prueba\\n')\n19\nOtros tipos de objetos necesitan serconvertidos -- tanto a una cadena (en modo texto) o a un objeto de bytes (en modo\nbinario) -- antes de escribirlos:\n>>> valor = ('la respuesta', 42)\n>>> s = str(valor)  # Convierte la tupla a string\n>>> f.write(s)\n18\nf.tell() devuelve un entero que indica la posici\u00f3n actual en el archivo representada como n\u00famero de bytes desde el\ncomienzo del archivo en modo binario y un n\u00famero opaco en modo texto.\nPara cambiar la posici\u00f3n del objeto archivo, us\u00e1 f.seek(desplazamiento, desde_donde). La posici\u00f3n es calculada\nagregando el desplazamiento a un punto de referencia; el punto de referencia se selecciona del argumento desde_donde.", "start_char_idx": 0, "end_char_idx": 1736, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5fa6ed3-49ca-4a93-9e4e-98362e8e7fc4": {"__data__": {"id_": "f5fa6ed3-49ca-4a93-9e4e-98362e8e7fc4", "embedding": null, "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57afa26f-0cce-44ec-b179-344931db99dd", "node_type": "4", "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff73a8a57c69e55307d96f11a5b860e928ba53e5d38f0b24097e35f98bb01f36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61e6d39b-97fd-49f1-aa08-07e45af8d425", "node_type": "1", "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "102d8cc5f705a947321da528a91d58e58698c3d95f1477a039b4658734e30dc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f69bf540-beaa-4244-9f09-6b4c5deb9ef6", "node_type": "1", "metadata": {}, "hash": "e17eb9ffacc34cbd463603a20c0c730face6da4f3c6cdd78c387543fe7b9b118", "class_name": "RelatedNodeInfo"}}, "hash": "a3f83c6d800929b58c08b75c0133520e0b96fb08e5d2c26497d0fabc7d1cc996", "text": "Un valor desde_donde de 0 mide desde el comienzo del archivo, 1 usa la posici\u00f3n actual del archivo, y 2 usa el fin del\narchivo como punto de referencia. desde_donde puede omitirse, el default es 0, usando el comienzo del archivo como punto\nde referencia.\n>>> f = open('archivodetrabajo', 'rb+')\n>>> f.write(b'0123456789abcdef')\n>>> f.seek(5)     # Va al sexto byte en el archivo\n5\n>>> f.read(1)\nb'5'\n>>> f.seek(-3, 2) # Va al tercer byte antes del final\n13\n>>> f.read(1)\nb'd'\nEn los archivos de texto (aquellos que se abrieron sin una b en el modo), se permiten solamente desplazamientos con\nseek relativos al comienzo (con la excepci\u00f3n de ir justo al final con seek(0, 2)) y los \u00fanicos valores de desplazamiento\nv\u00e1lidos son aquellos retornados por f.tell(), o cero. Cualquier otro valor de desplazamiento produce un comportamiento\nindefinido.\n 50", "start_char_idx": 1737, "end_char_idx": 2584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f69bf540-beaa-4244-9f09-6b4c5deb9ef6": {"__data__": {"id_": "f69bf540-beaa-4244-9f09-6b4c5deb9ef6", "embedding": null, "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a611b4e0-317a-4f4d-abff-b2034707e7eb", "node_type": "4", "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff8c488c9eebbcdd6e24a8cb7eba09f380cc7c728d4ab89146edd85bf1479268", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5fa6ed3-49ca-4a93-9e4e-98362e8e7fc4", "node_type": "1", "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a3f83c6d800929b58c08b75c0133520e0b96fb08e5d2c26497d0fabc7d1cc996", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "38cbd0d2-03ce-45df-aae3-da10efca8c2b", "node_type": "1", "metadata": {}, "hash": "cb2261575d490379cebc4f47c6e4e0d8712f4e33109fdd485772173536fb63ca", "class_name": "RelatedNodeInfo"}}, "hash": "e17eb9ffacc34cbd463603a20c0c730face6da4f3c6cdd78c387543fe7b9b118", "text": "Cuando hayas terminado con un archivo, llam\u00e1 a f.close() para cerrarlo y liberar cualquier recurso del sistema tomado\npor el archivo abierto. Luego de llamar f.close(), los intentos de usar el objeto archivo fallar\u00e1n autom\u00e1ticamente.\n>>> f.close()\n>>> f.read()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in ?\nValueError: I/O operation on closed file\nEs una buena pr\u00e1ctica usar la declaraci\u00f3n with cuando manejamos objetos archivo. Tiene la ventaja que el archivo es\ncerrado apropiadamente luego de que el bloque termina, incluso si se gener\u00f3 una excepci\u00f3n. Tambi\u00e9n es mucho m\u00e1s corto\nque escribir los equivalentes bloques try-finally\n>>> with open('archivodetrabajo', 'r') as f:\n...     read_data = f.read()\n>>> f.closed\nTrue\nLos objetos archivo tienen algunos m\u00e9todos m\u00e1s, como isatty() y truncate() que son usados menos\nfrecuentemente; consult\u00e1 la Referencia de la Biblioteca para una gu\u00eda completa sobre los objetos archivo.\nGuardar datos estructurados con \nLas cadenas pueden facilmente escribirse y leerse de un archivo. Los n\u00fameros toman algo m\u00e1s de esfuerzo, ya que el\nm\u00e9todo read() s\u00f3lo devuelve cadenas, que tendr\u00e1n que ser pasadas a una funci\u00f3n como int(), que toma una cadena\ncomo '123' y devuelve su valor num\u00e9rico 123. Sin embargo, cuando quer\u00e9s grabar tipos de datos m\u00e1s complejos como\nlistas, diccionarios, o instancias de clases, las cosas se ponen m\u00e1s complicadas.\nEn lugar de tener a los usuarios constantemente escribiendo y debugueando c\u00f3digo para grabar tipos de datos\ncomplicados, Python te permite usar formato intercambiable de datos popular llamado JSON (JavaScript Object Notation). El\nm\u00f3dulo estandar llamado json puede tomar datos de Python con una jerarqu\u00eda, y convertirlo a representaciones de\ncadena de caracteres; este proceso es llamado serializing. Reconstruir los datos desde la representaci\u00f3n de cadena de\ncaracteres es llamado deserializing.", "start_char_idx": 0, "end_char_idx": 1896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "38cbd0d2-03ce-45df-aae3-da10efca8c2b": {"__data__": {"id_": "38cbd0d2-03ce-45df-aae3-da10efca8c2b", "embedding": null, "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a611b4e0-317a-4f4d-abff-b2034707e7eb", "node_type": "4", "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff8c488c9eebbcdd6e24a8cb7eba09f380cc7c728d4ab89146edd85bf1479268", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f69bf540-beaa-4244-9f09-6b4c5deb9ef6", "node_type": "1", "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e17eb9ffacc34cbd463603a20c0c730face6da4f3c6cdd78c387543fe7b9b118", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "032bd563-a7aa-47d5-b0c8-f1390c847336", "node_type": "1", "metadata": {}, "hash": "15a954bb5c2c9ea3b5e6066c353611d3da87fa96542f1d4a1e99e2109ea139e9", "class_name": "RelatedNodeInfo"}}, "hash": "cb2261575d490379cebc4f47c6e4e0d8712f4e33109fdd485772173536fb63ca", "text": "Entre serializaci\u00f3n y deserializaci\u00f3n, la cadena de caracteres representando el objeto\nquiz\u00e1s haya sido guardado en un archivo o datos, o enviado a una m\u00e1quina distante por una conexi\u00f3n de red.\nNota\nEl formato JSON es comunmente usado por aplicaciones modernas para permitir intercambiar datos. Muchos\nprogramadores est\u00e1n familiarizados con este, lo que lo hace una buena elecci\u00f3n por su interoperatividad.\nSi tienes un objeto x, puedes ver su representaci\u00f3n JSON con una simple l\u00ednea de c\u00f3digo:\n>>> json.dumps([1, 'simple', 'lista'])\n'[1, \"simple\", \"lista\"]'\nOtra variante de la funci\u00f3n dumps(), llamada dump(), simplemente serializa el objeto a un archivo de texto. As\u00ed que, si f\nes un objeto archivo de texto abierto para escritura, podemos hacer:\njson.dump(x, f)\nPara decodificar un objeto nuevamente, si f es un objeto archivo de texto que fue abierto para lectura:\nx = json.load(x, f)\nLa simple t\u00e9cnica de serializaci\u00f3n puede manejar listas y diccionarios, pero serializar instancias de clases arbitrarias en\nJSON requiere un poco de esfuerzo extra. La referencia del m\u00f3dulo json contiene una explicaci\u00f3n de esto.\n 51", "start_char_idx": 1897, "end_char_idx": 3020, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "032bd563-a7aa-47d5-b0c8-f1390c847336": {"__data__": {"id_": "032bd563-a7aa-47d5-b0c8-f1390c847336", "embedding": null, "metadata": {"page_label": "60", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99939c1a-e1be-4c64-be9e-87f2a1374bba", "node_type": "4", "metadata": {"page_label": "60", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c5a83b85fdffaf63478d1029d6320e077f648f5878f4838e669c7d8dcfe3cab3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38cbd0d2-03ce-45df-aae3-da10efca8c2b", "node_type": "1", "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cb2261575d490379cebc4f47c6e4e0d8712f4e33109fdd485772173536fb63ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ce3aebc-f90b-4c95-9640-863e3444a1f5", "node_type": "1", "metadata": {}, "hash": "0bc6797cd8ee2a907eb613d32191cfa8a5621fdd5737987154bc77eb2aef321e", "class_name": "RelatedNodeInfo"}}, "hash": "15a954bb5c2c9ea3b5e6066c353611d3da87fa96542f1d4a1e99e2109ea139e9", "text": "Ver tambi\u00e9n\npickle - el m\u00f3dulo pickle\nContrariamente a JSON, pickle es un protocolo que permite la serializaci\u00f3n de arbitrariamente objetos complejos de\nPython. Por lo tanto, este es espec\u00edfico de Python y no puede ser usado para comunicarse con aplicaciones escritas en\notros lenguajes. Es inseguro por defecto: deserializar datos que fueron serializados con pickle desde fuentes inseguras\npuede ejecutar c\u00f3digo arbitrario, si los datos fueron interceptados por un atacante experto.\n 52", "start_char_idx": 0, "end_char_idx": 487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ce3aebc-f90b-4c95-9640-863e3444a1f5": {"__data__": {"id_": "6ce3aebc-f90b-4c95-9640-863e3444a1f5", "embedding": null, "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1a6e646-31d9-4729-9d9b-4506990eff89", "node_type": "4", "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4c1f86859605ed85af0f500f126c50a53a5f5181a82cbd9c7e759f5b3c391e57", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "032bd563-a7aa-47d5-b0c8-f1390c847336", "node_type": "1", "metadata": {"page_label": "60", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "15a954bb5c2c9ea3b5e6066c353611d3da87fa96542f1d4a1e99e2109ea139e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c896dbbf-1e7e-4f69-9271-96771cc098a4", "node_type": "1", "metadata": {}, "hash": "9f19a02cfc4b08ba508ac92cc249d962db1f2827ce516d4ca7670a04ae364df7", "class_name": "RelatedNodeInfo"}}, "hash": "0bc6797cd8ee2a907eb613d32191cfa8a5621fdd5737987154bc77eb2aef321e", "text": "Errores y excepcionesHasta ahora los mensajes de error no hab\u00edan sido m\u00e1s que mencionados, pero si probaste los ejemplos probablemente\nhayas visto algunos. Hay (al menos) dos tipos diferentes de errores: errores de sintaxis y excepciones.\nErrores de sintaxis\nLos errores de sintaxis, tambi\u00e9n conocidos como errores de interpretaci\u00f3n, son quiz\u00e1s el tipo de queja m\u00e1s com\u00fan que ten\u00e9s\ncuando todav\u00eda est\u00e1s aprendiendo Python:\n>>> while True print('Hola mundo')\n  File \"<stdin>\", line 1\n    while True print('Hola mundo')\n                   ^\nSyntaxError: invalid syntax\nEl int\u00e9rprete repite la l\u00ednea culpable y muestra una peque\u00f1a 'flecha' que apunta al primer lugar donde se detect\u00f3 el error.\nEste es causado por (o al menos detectado en) el s\u00edmbolo que precede a la flecha: en el ejemplo, el error se detecta en la\nfunci\u00f3n print(), ya que faltan dos puntos (':') antes del mismo. Se muestran el nombre del archivo y el n\u00famero de l\u00ednea\npara que sepas d\u00f3nde mirar en caso de que la entrada venga de un programa.\nExcepciones\nIncluso si la declaraci\u00f3n o expresi\u00f3n es sint\u00e1cticamente correcta, puede generar un error cuando se intenta ejecutarla. Los\nerrores detectados durante la ejecuci\u00f3n se llaman excepciones, y no son incondicionalmente fatales: pronto aprender\u00e1s\nc\u00f3mo manejarlos en los programas en Python.", "start_char_idx": 0, "end_char_idx": 1306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c896dbbf-1e7e-4f69-9271-96771cc098a4": {"__data__": {"id_": "c896dbbf-1e7e-4f69-9271-96771cc098a4", "embedding": null, "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1a6e646-31d9-4729-9d9b-4506990eff89", "node_type": "4", "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4c1f86859605ed85af0f500f126c50a53a5f5181a82cbd9c7e759f5b3c391e57", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ce3aebc-f90b-4c95-9640-863e3444a1f5", "node_type": "1", "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0bc6797cd8ee2a907eb613d32191cfa8a5621fdd5737987154bc77eb2aef321e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "850780c5-1b2a-4cd6-8c33-a62770c2c816", "node_type": "1", "metadata": {}, "hash": "09e746522c3e17dd293908c82f302ceda3f0bd84c0c9189796a6465cd6a0fbde", "class_name": "RelatedNodeInfo"}}, "hash": "9f19a02cfc4b08ba508ac92cc249d962db1f2827ce516d4ca7670a04ae364df7", "text": "Sin embargo, la mayor\u00eda de las excepciones no son manejadas por los\nprogramas, y resultan en mensajes de error como los mostrados aqu\u00ed:\n>>> 10 * (1/0)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nZeroDivisionError: division by zero\n>>> 4 + spam*3\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'spam' is not defined\n>>> '2' + 2\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: Can't convert 'int' object to str implicitly\nLa \u00faltima l\u00ednea de los mensajes de error indica qu\u00e9 sucedi\u00f3. Las excepciones vienen de distintos tipos, y el tipo se imprime\ncomo parte del mensaje: los tipos en el ejemplo son: ZeroDivisionError, NameError y TypeError. La cadena\nmostrada como tipo de la excepci\u00f3n es el nombre de la excepci\u00f3n predefinida que ocurri\u00f3. Esto es verdad para todas las\nexcepciones predefinidas del int\u00e9rprete, pero no necesita ser verdad para excepciones definidas por el usuario (aunque es\nuna convenci\u00f3n \u00fatil). Los nombres de las excepciones est\u00e1ndar son identificadores incorporados al int\u00e9rprete (no son\npalabras clave reservadas).\nEl resto de la l\u00ednea provee un detalle basado en el tipo de la excepci\u00f3n y qu\u00e9 la caus\u00f3.\n 53", "start_char_idx": 1307, "end_char_idx": 2542, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "850780c5-1b2a-4cd6-8c33-a62770c2c816": {"__data__": {"id_": "850780c5-1b2a-4cd6-8c33-a62770c2c816", "embedding": null, "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bba4c7a9-670a-4dcc-ad37-e61fd734d71c", "node_type": "4", "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e9fc9391c556a64e0d9d7e1d7d4e2805ad2a740196ddee021ee2a2c1fcb37d31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c896dbbf-1e7e-4f69-9271-96771cc098a4", "node_type": "1", "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9f19a02cfc4b08ba508ac92cc249d962db1f2827ce516d4ca7670a04ae364df7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4aa8806-c642-48d7-9aff-15db3edc0f87", "node_type": "1", "metadata": {}, "hash": "69e16d972d749810f663054035bd718d60b09585c74fc31daeeb0817d0dd800c", "class_name": "RelatedNodeInfo"}}, "hash": "09e746522c3e17dd293908c82f302ceda3f0bd84c0c9189796a6465cd6a0fbde", "text": "La parte anterior del mensaje de error muestra el contexto donde la excepci\u00f3n sucedi\u00f3, en la forma de un trazado del error\nlistando l\u00edneas fuente; sin embargo, no mostrar\u00e1 l\u00edneas le\u00eddas desde la entrada est\u00e1ndar.\nExcepciones integradas lista las excepciones predefinidas y sus significados.\nManejando excepciones\nEs posible escribir programas que manejen determinadas excepciones. Mir\u00e1 el siguiente ejemplo, que le pide al usuario una\nentrada hasta que ingrese un entero v\u00e1lido, pero permite al usuario interrumpir el programa (usando Control-C o lo que sea\nque el sistema operativo soporte); not\u00e1 que una interrupci\u00f3n generada por el usuario se se\u00f1aliza generando la excepci\u00f3n\nKeyboardInterrupt.\n>>> while True:\n...     try:\n...         x = int(input(\"Por favor ingrese un n\u00famero: \"))\n...         break\n...     except ValueError:\n...         print(\"Oops! No era v\u00e1lido. Intente nuevamente...\")\n...\nLa declaraci\u00f3n try funciona de la siguiente manera:\n\u007f\nPrimero, se ejecuta el bloque try (el c\u00f3digo entre las declaraci\u00f3n try y except).\n\u007f\nSi no ocurre ninguna excepci\u00f3n, el bloque except se saltea y termina la ejecuci\u00f3n de la declaraci\u00f3n try.\n\u007f\nSi ocurre una excepci\u00f3n durante la ejecuci\u00f3n del bloque try, el resto del bloque se saltea. Luego, si su tipo coincide\ncon la excepci\u00f3n nombrada luego de la palabra reservada except, se ejecuta el bloque except, y la ejecuci\u00f3n\ncontin\u00faa luego de la declaraci\u00f3n try.\n\u007f\nSi ocurre una excepci\u00f3n que no coincide con la excepci\u00f3n nombrada en el except, esta se pasa a declaraciones try\nde m\u00e1s afuera; si no se encuentra nada que la maneje, es una excepci\u00f3n no manejada, y la ejecuci\u00f3n se frena con un\nmensaje como los mostrados arriba.\nUna declaraci\u00f3n try puede tener m\u00e1s de un except, para especificar manejadores para distintas excepciones. A lo sumo\nun manejador ser\u00e1 ejecutado.", "start_char_idx": 0, "end_char_idx": 1819, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4aa8806-c642-48d7-9aff-15db3edc0f87": {"__data__": {"id_": "a4aa8806-c642-48d7-9aff-15db3edc0f87", "embedding": null, "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bba4c7a9-670a-4dcc-ad37-e61fd734d71c", "node_type": "4", "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e9fc9391c556a64e0d9d7e1d7d4e2805ad2a740196ddee021ee2a2c1fcb37d31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "850780c5-1b2a-4cd6-8c33-a62770c2c816", "node_type": "1", "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09e746522c3e17dd293908c82f302ceda3f0bd84c0c9189796a6465cd6a0fbde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89ac197c-f47b-4f83-a85d-30870a4734ad", "node_type": "1", "metadata": {}, "hash": "dcfde6362c28c9a1a5215e832fad3dabf5bfaaae892c87ccb6a2f27cb06e0c2c", "class_name": "RelatedNodeInfo"}}, "hash": "69e16d972d749810f663054035bd718d60b09585c74fc31daeeb0817d0dd800c", "text": "A lo sumo\nun manejador ser\u00e1 ejecutado. S\u00f3lo se manejan excepciones que ocurren en el correspondiente try, no en otros\nmanejadores del mismo try. Un except puede nombrar m\u00faltiples excepciones usando par\u00e9ntesis, por ejemplo:\n... except (RuntimeError, TypeError, NameError):\n...     pass\nUna clase en una clausula except es compatible con una excepci\u00f3n si la misma esta en la misma clase o una clase base\nde la misma (pero no de la otra manera --- una clausula except listando una clase derivada no es compatible con una clase\nbase). Por ejemplo, el siguiente c\u00f3digo imprimir\u00e1 B, C, D, en ese orden:\nclass B(Exception):\n    pass\nclass C(B):\n    pass\nclass D(C):\n    pass\nfor cls in [B, C, D]:\n    try:\n        raise cls()\n    except D:\n        print(\"D\")\n    except C:\n 54", "start_char_idx": 1781, "end_char_idx": 2550, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89ac197c-f47b-4f83-a85d-30870a4734ad": {"__data__": {"id_": "89ac197c-f47b-4f83-a85d-30870a4734ad", "embedding": null, "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b7bdb6f-5a8b-47a5-9734-29fa78473fff", "node_type": "4", "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e5d169f48ad2970635dc638b111673ca1ddaf344076edef673d59de6652b4932", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4aa8806-c642-48d7-9aff-15db3edc0f87", "node_type": "1", "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "69e16d972d749810f663054035bd718d60b09585c74fc31daeeb0817d0dd800c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2778c08-ae11-498e-b618-9f42219edc54", "node_type": "1", "metadata": {}, "hash": "6c7b1b4945366f406e8deacc8ecd403df7db3fb9e1a9d094c87f76ed5a6ad6ee", "class_name": "RelatedNodeInfo"}}, "hash": "dcfde6362c28c9a1a5215e832fad3dabf5bfaaae892c87ccb6a2f27cb06e0c2c", "text": "print(\"C\")\n    except B:\n        print(\"B\")\nNotese que si las clausulas de except estuvieran invertidas (con except B primero), habr\u00eda impreso B, B, B --- la primera\nclausula de except coincidente es usada.\nEl \u00faltimo except puede omitir nombrar qu\u00e9 excepci\u00f3n captura, para servir como comod\u00edn. Us\u00e1 esto con extremo cuidado,\nya que de esta manera es f\u00e1cil ocultar un error real de programaci\u00f3n. Tambi\u00e9n puede usarse para mostrar un mensaje de\nerror y luego re-generar la excepci\u00f3n (permiti\u00e9ndole al que llama, manejar tambi\u00e9n la excepci\u00f3n):\nimport sys\ntry:\n    f = open('miarchivo.txt')\n    s = f.readline()\n    i = int(s.strip())\nexcept OSError as err:\n    print(\"Error OS: {0}\".format(err))\nexcept ValueError:\n    print(\"No pude convertir el dato a un entero.\")\nexcept:\n    print(\"Error inesperado:\", sys.exc_info()[0])\n    raise\nLas declaraciones try ... except tienen un bloque else opcional, el cual, cuando est\u00e1 presente, debe seguir a los except.\nEs \u00fatil para aquel c\u00f3digo que debe ejecutarse si el bloque try no genera una excepci\u00f3n. Por ejemplo:\nfor arg in sys.argv[1:]:\n    try:\n        f = open(arg, 'r')\n    except OSError:\n        print('no pude abrir', arg)\n    else:\n        print(arg, 'tiene', len(f.readlines()), 'lineas')\n        f.close()\nEl uso de else es mejor que agregar c\u00f3digo adicional en el try porque evita capturar accidentalmente una excepci\u00f3n que\nno fue generada por el c\u00f3digo que est\u00e1 protegido por la declaraci\u00f3n try ... except.\nCuando ocurre una excepci\u00f3n, puede tener un valor asociado, tambi\u00e9n conocido como el argumento de la excepci\u00f3n. La\npresencia y el tipo de argumento depende del tipo de excepci\u00f3n.\nEl except puede especificar una variable luego del nombre de excepci\u00f3n. La variable se vincula a una instancia de\nexcepci\u00f3n con los argumentos almacenados en instance.args.", "start_char_idx": 8, "end_char_idx": 1819, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2778c08-ae11-498e-b618-9f42219edc54": {"__data__": {"id_": "f2778c08-ae11-498e-b618-9f42219edc54", "embedding": null, "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b7bdb6f-5a8b-47a5-9734-29fa78473fff", "node_type": "4", "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e5d169f48ad2970635dc638b111673ca1ddaf344076edef673d59de6652b4932", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89ac197c-f47b-4f83-a85d-30870a4734ad", "node_type": "1", "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dcfde6362c28c9a1a5215e832fad3dabf5bfaaae892c87ccb6a2f27cb06e0c2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3666d275-6ad3-4304-a6c1-d71be4ad9a10", "node_type": "1", "metadata": {}, "hash": "40d4bdaf085f136f0d2590dd9bf8198a1bd9d902d1aaf541f7c249978891afcf", "class_name": "RelatedNodeInfo"}}, "hash": "6c7b1b4945366f406e8deacc8ecd403df7db3fb9e1a9d094c87f76ed5a6ad6ee", "text": "Por conveniencia, la instancia de excepci\u00f3n define\n__str__() para que se pueda mostrar los argumentos directamente, sin necesidad de hacer referencia a .args. Tambi\u00e9n\nse puede instanciar la excepci\u00f3n primero, antes de generarla, y agregarle los atributos que se desee:\n>>> try:\n...    raise Exception('carne', 'huevos')\n... except Exception as inst:\n...    print(type(inst))    # la instancia de excepci\u00f3n\n...    print(inst.args)     # argumentos guardados en .args\n...    print(inst)          # __str__ permite imprimir args directamente,\n...                         # pero puede ser cambiado en subclases de la exc\n...    x, y = inst          # desempacar argumentos\n...    print('x =', x)\n...    print('y =', y)\n...\n<class 'Exception'>\n 55", "start_char_idx": 1820, "end_char_idx": 2562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3666d275-6ad3-4304-a6c1-d71be4ad9a10": {"__data__": {"id_": "3666d275-6ad3-4304-a6c1-d71be4ad9a10", "embedding": null, "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8df1c19-159f-4dc5-98ee-100676d68f93", "node_type": "4", "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6a48d42128b37226b57c9bf42f4ca7804388eac7559ca2766345fcaa3c032873", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2778c08-ae11-498e-b618-9f42219edc54", "node_type": "1", "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6c7b1b4945366f406e8deacc8ecd403df7db3fb9e1a9d094c87f76ed5a6ad6ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fdefbea-125e-436c-abe9-fee968faaffe", "node_type": "1", "metadata": {}, "hash": "92d053338d94ecea6a35bf44305481a6df5368bfc966bd443e263f7c71b9b136", "class_name": "RelatedNodeInfo"}}, "hash": "40d4bdaf085f136f0d2590dd9bf8198a1bd9d902d1aaf541f7c249978891afcf", "text": "('carne', 'huevos')\n('carne', 'huevos')\nx = carne\ny = huevos\nSi una excepci\u00f3n tiene argumentos, estos se imprimen como la \u00faltima parte (el 'detalle') del mensaje para las excepciones\nque no est\u00e1n manejadas.\nLos manejadores de excepciones no manejan solamente las excepciones que ocurren en el bloque try, tambi\u00e9n manejan las\nexcepciones que ocurren dentro de las funciones que se llaman (inclusive indirectamente) dentro del bloque try. Por\nejemplo:\n>>> def esto_falla():\n...     x = 1/0\n...\n>>> try:\n...     esto_falla()\n... except ZeroDivisionError as err:\n...     print('Manejando error en tiempo de ejecuci\u00f3n:', err)\n...\nManejando error en tiempo de ejecuci\u00f3n: division by zero\nLevantando excepciones\nLa declaraci\u00f3n raise permite al programador forzar a que ocurra una excepci\u00f3n espec\u00edfica. Por ejemplo:\n>>> raise NameError('Hola')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: Hola\nEl \u00fanico argumento a raise indica la excepci\u00f3n a generarse. Tiene que ser o una instancia de excepci\u00f3n, o una clase de\nexcepci\u00f3n (una clase que hereda de Exception). Si se pasa una clase de excepci\u00f3n, la misma sera instanciada\nimplicitamente llamandoa su constructor sin argumentos:\nraise ValueError  # atajo para 'raise ValueError()'\nSi necesit\u00e1s determinar cuando una excepci\u00f3n fue lanzada pero no quer\u00e9s manejarla, una forma simplificada de la\ninstrucci\u00f3n raise te permite relanzarla:\n>>> try:\n...     raise NameError('Hola')\n... except NameError:\n...     print('Vol\u00f3 una excepci\u00f3n!')\n...     raise\n...\nVol\u00f3 una excepci\u00f3n!\nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in <module>\nNameError: Hola\nExcepciones definidas por el usuario\nLos programas pueden nombrar sus propias excepciones creando una nueva clase excepci\u00f3n (mir\u00e1 Clases para m\u00e1s\ninformaci\u00f3n sobre las clases de Python).", "start_char_idx": 0, "end_char_idx": 1826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fdefbea-125e-436c-abe9-fee968faaffe": {"__data__": {"id_": "5fdefbea-125e-436c-abe9-fee968faaffe", "embedding": null, "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8df1c19-159f-4dc5-98ee-100676d68f93", "node_type": "4", "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6a48d42128b37226b57c9bf42f4ca7804388eac7559ca2766345fcaa3c032873", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3666d275-6ad3-4304-a6c1-d71be4ad9a10", "node_type": "1", "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "40d4bdaf085f136f0d2590dd9bf8198a1bd9d902d1aaf541f7c249978891afcf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27c44e4b-0853-4e84-b312-eebef4ec34e3", "node_type": "1", "metadata": {}, "hash": "174cc4206cc19035061a9b43f56545bab0c19bde71dcc982b7b9a9d8237315f4", "class_name": "RelatedNodeInfo"}}, "hash": "92d053338d94ecea6a35bf44305481a6df5368bfc966bd443e263f7c71b9b136", "text": "Las excepciones, t\u00edpicamente, deber\u00e1n derivar de la clase Exception, directa o\nindirectamente.\n 56", "start_char_idx": 1827, "end_char_idx": 1925, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27c44e4b-0853-4e84-b312-eebef4ec34e3": {"__data__": {"id_": "27c44e4b-0853-4e84-b312-eebef4ec34e3", "embedding": null, "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ea55305-becb-4267-b610-886a97c90dd8", "node_type": "4", "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "da12f3865c7598048d00e85cb74691be24f9b8def97642f388e0e2fe5439fb0d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fdefbea-125e-436c-abe9-fee968faaffe", "node_type": "1", "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "92d053338d94ecea6a35bf44305481a6df5368bfc966bd443e263f7c71b9b136", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdc04712-0eff-4129-b5f9-5d541b979f7e", "node_type": "1", "metadata": {}, "hash": "c77770f979baf7daea56c6d7c9ba54241cf59cc1b1c61c80438f97f3ae58c34f", "class_name": "RelatedNodeInfo"}}, "hash": "174cc4206cc19035061a9b43f56545bab0c19bde71dcc982b7b9a9d8237315f4", "text": "Las clases de Excepciones pueden ser definidas de la misma forma que cualquier otra clase, pero usualmente se mantienen\nsimples, a menudo solo ofreciendo un n\u00famero de atributos con informaci\u00f3n sobre el error que leer\u00e1n los manejadores de la\nexcepci\u00f3n. Al crear un m\u00f3dulo que puede lanzar varios errores distintos, una pr\u00e1ctica com\u00fan es crear una clase base para\nexcepciones definidas en ese m\u00f3dulo y extenderla para crear clases excepciones espec\u00edficas para distintas condiciones de\nerror:\nclass Error(Exception):\n    \"\"\"Clase base para excepciones en el m\u00f3dulo.\"\"\"\n    pass\nclass EntradaError(Error):\n    \"\"\"Excepci\u00f3n lanzada por errores en las entradas.\n    Atributos:\n        expresion -- expresi\u00f3n de entrada en la que ocurre el error\n        mensaje -- explicaci\u00f3n del error\n    \"\"\"\n    def __init__(self, expresion, mensaje):\n        self.expresion = expresion\n        self.mensaje = mensaje\nclass TransicionError(Error):\n    \"\"\"Lanzada cuando una operacion intenta una transicion de estado no\n    permitida.\n    Atributos:\n        previo -- estado al principio de la transici\u00f3n\n        siguiente -- nuevo estado intentado\n        mensaje -- explicaci\u00f3n de por qu\u00e9 la transici\u00f3n no est\u00e1 permitida\n    \"\"\"\n    def __init__(self, previo, siguiente, mensaje):\n        self.previo = previo\n        self.siguiente = siguiente\n        self.mensaje = mensaje\nLa mayor\u00eda de las excepciones son definidas con nombres que terminan en \"Error\", similares a los nombres de las\nexcepciones est\u00e1ndar.\nMuchos m\u00f3dulos est\u00e1ndar definen sus propias excepciones para reportar errores que pueden ocurrir en funciones propias.\nSe puede encontrar m\u00e1s informaci\u00f3n sobre clases en el cap\u00edtulo Clases.\nDefiniendo acciones de limpieza\nLa declaraci\u00f3n try tiene otra cl\u00e1usula opcional que intenta definir acciones de limpieza que deben ser ejecutadas bajo\nciertas circunstancias. Por ejemplo:\n>>> try:\n...     raise KeyboardInterrupt\n... finally:\n...     print('Chau, mundo!')\n...\nChau, mundo!", "start_char_idx": 0, "end_char_idx": 1970, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cdc04712-0eff-4129-b5f9-5d541b979f7e": {"__data__": {"id_": "cdc04712-0eff-4129-b5f9-5d541b979f7e", "embedding": null, "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ea55305-becb-4267-b610-886a97c90dd8", "node_type": "4", "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "da12f3865c7598048d00e85cb74691be24f9b8def97642f388e0e2fe5439fb0d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27c44e4b-0853-4e84-b312-eebef4ec34e3", "node_type": "1", "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "174cc4206cc19035061a9b43f56545bab0c19bde71dcc982b7b9a9d8237315f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "878c756b-77d4-4214-a581-0e3181dba4ae", "node_type": "1", "metadata": {}, "hash": "1b970feb160995fec40be71a6c1584d8b7d6a70fbe4f57758642f9d6860908b3", "class_name": "RelatedNodeInfo"}}, "hash": "c77770f979baf7daea56c6d7c9ba54241cf59cc1b1c61c80438f97f3ae58c34f", "text": "...\nChau, mundo!\nKeyboardInterrupt\nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in ?\nUna cl\u00e1usula finally siempre es ejecutada antes de salir de la declaraci\u00f3n try, ya sea que una excepci\u00f3n haya ocurrido o \nno. Cuando ocurre una excepci\u00f3n en la cl\u00e1usula try y no fue manejada por una cl\u00e1usula except (o ocurri\u00f3 en una\n 57", "start_char_idx": 1954, "end_char_idx": 2291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "878c756b-77d4-4214-a581-0e3181dba4ae": {"__data__": {"id_": "878c756b-77d4-4214-a581-0e3181dba4ae", "embedding": null, "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "314ecffd-b72d-4368-b290-f32f73c72c1b", "node_type": "4", "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "17f3b0e0d5916daa94842cbe40be64c89875a4c9a6ed9ae2e35a61e1abd0c4a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cdc04712-0eff-4129-b5f9-5d541b979f7e", "node_type": "1", "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c77770f979baf7daea56c6d7c9ba54241cf59cc1b1c61c80438f97f3ae58c34f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06143d6c-cee2-4c60-bcce-07c0ef34a04d", "node_type": "1", "metadata": {}, "hash": "713d1ffa57c27941d6b1758cc6f02ea66bc00add70020445c64ddc348883bcba", "class_name": "RelatedNodeInfo"}}, "hash": "1b970feb160995fec40be71a6c1584d8b7d6a70fbe4f57758642f9d6860908b3", "text": "cl\u00e1usula except o else), es relanzada luego de que se ejecuta la cl\u00e1usula finally. El finally es tambi\u00e9n ejecutado\n\"a la salida\" cuando cualquier otra cl\u00e1usula de la declaraci\u00f3n try es dejada via break, continue or return. Un ejemplo\nm\u00e1s complicado:\n>>> def dividir(x, y):\n...     try:\n...         result = x / y\n...     except ZeroDivisionError:\n...         print(\"\u00a1divisi\u00f3n por cero!\")\n...     else:\n...         print(\"el resultado es\", result)\n...     finally:\n...         print(\"ejecutando la clausula finally\")\n...\n>>> dividir(2, 1)\nel resultado es 2.0\nejecutando la clausula finally\n>>> dividir(2, 0)\n\u00a1divisi\u00f3n por cero!\nejecutando la clausula finally\n>>> divide(\"2\", \"1\")\nejecutando la clausula finally\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 3, in divide\nTypeError: unsupported operand type(s) for /: 'str' and 'str'\nComo pod\u00e9s ver, la cl\u00e1usula finally es ejecutada siempre. La excepci\u00f3n TypeError lanzada al dividir dos cadenas de\ntexto no es manejado por la cl\u00e1usula except y por lo tanto es relanzada luego de que se ejecuta la cl\u00e1usula finally.\nEn aplicaciones reales, la cl\u00e1usula finally es \u00fatil para liberar recursos externos (como archivos o conexiones de red), sin\nimportar si el uso del recurso fue exitoso.\nAcciones predefinidas de limpieza\nAlgunos objetos definen acciones de limpieza est\u00e1ndar que llevar a cabo cuando el objeto no es m\u00e1s necesitado,\nindependientemente de que las operaciones sobre el objeto hayan sido exitosas o no. Mir\u00e1 el siguiente ejemplo, que intenta\nabrir un archivo e imprimir su contenido en la pantalla.", "start_char_idx": 0, "end_char_idx": 1605, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06143d6c-cee2-4c60-bcce-07c0ef34a04d": {"__data__": {"id_": "06143d6c-cee2-4c60-bcce-07c0ef34a04d", "embedding": null, "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "314ecffd-b72d-4368-b290-f32f73c72c1b", "node_type": "4", "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "17f3b0e0d5916daa94842cbe40be64c89875a4c9a6ed9ae2e35a61e1abd0c4a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "878c756b-77d4-4214-a581-0e3181dba4ae", "node_type": "1", "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1b970feb160995fec40be71a6c1584d8b7d6a70fbe4f57758642f9d6860908b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b89f976d-61fb-4cad-9160-b718194fc4b2", "node_type": "1", "metadata": {}, "hash": "f923922215af07cfd2f64cc78c60fdad755ad4951f9660ace7ce5d06e1c5846f", "class_name": "RelatedNodeInfo"}}, "hash": "713d1ffa57c27941d6b1758cc6f02ea66bc00add70020445c64ddc348883bcba", "text": ":\nfor linea in open(\"miarchivo.txt\"):\n    print(linea, end=\"\")\nEl problema con este c\u00f3digo es que deja el archivo abierto por un periodo de tiempo indeterminado luego de que esta parte\ntermine de ejecutarse. Esto no es un problema en scripts simples, pero puede ser un problema en aplicaciones m\u00e1s\ngrandes. La declaraci\u00f3n with permite que objetos como archivos sean usados de una forma que asegure que siempre se\nlos libera r\u00e1pido y en forma correcta.:\nwith open(\"miarchivo.txt\") as f:\n    for linea in f:\n        print(linea, end=\"\")\nLuego de que la declaraci\u00f3n sea ejecutada, el archivo f siempre es cerrado, incluso si se encuentra un problema al procesar\nlas l\u00edneas. Objetos que, como los archivos, provean acciones de limpieza predefinidas lo indicar\u00e1n en su documentaci\u00f3n.\n 58", "start_char_idx": 1605, "end_char_idx": 2387, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b89f976d-61fb-4cad-9160-b718194fc4b2": {"__data__": {"id_": "b89f976d-61fb-4cad-9160-b718194fc4b2", "embedding": null, "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c26d48e6-6f86-4927-8462-ab4319f02d7d", "node_type": "4", "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "548926c3c7735ebaf2e7f3fc093b25be87420a375d1098e8af31da4db3296eb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06143d6c-cee2-4c60-bcce-07c0ef34a04d", "node_type": "1", "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "713d1ffa57c27941d6b1758cc6f02ea66bc00add70020445c64ddc348883bcba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c96de64-1efc-4d58-9a9d-c5895691d9fb", "node_type": "1", "metadata": {}, "hash": "c11f98e32096b4b4f5e3d5f2fb741455ac9d9cc682d078985f12cc2caf5e7f48", "class_name": "RelatedNodeInfo"}}, "hash": "f923922215af07cfd2f64cc78c60fdad755ad4951f9660ace7ce5d06e1c5846f", "text": "ClasesComparado con otros lenguajes de programaci\u00f3n, el mecanismo de clases de Python agrega clases con un m\u00ednimo de\nnuevas sintaxis y sem\u00e1nticas. Es una mezcla de los mecanismos de clases encontrados en C++ y Modula-3. Las clases de\nPython proveen todas las caracter\u00edsticas normales de la Programaci\u00f3n Orientada a Objetos: el mecanismo de la herencia de\nclases permite m\u00faltiples clases base, una clase derivada puede sobreescribir cualquier m\u00e9todo de su(s) clase(s) base, y un\nm\u00e9todo puede llamar al m\u00e9todo de la clase base con el mismo nombre. Los objetos pueden tener una cantidad arbitraria de\ndatos de cualquier tipo. Igual que con los m\u00f3dulos, las clases participan de la naturaleza din\u00e1mica de Python: se crean en\ntiempo de ejecuci\u00f3n, y pueden modificarse luego de la creaci\u00f3n.\nEn terminolog\u00eda de C++, normalmente los miembros de las clases (incluyendo los miembros de datos), son p\u00fablicos\n(excepto ver abajo Variables privadas), y todas las funciones miembro son virtuales. Como en Modula-3, no hay atajos para\nhacer referencia a los miembros del objeto desde sus m\u00e9todos: la funci\u00f3n m\u00e9todo se declara con un primer argumento\nexpl\u00edcito que representa al objeto, el cual se provee impl\u00edcitamente por la llamada. Como en Smalltalk, las clases mismas\nson objetos. Esto provee una sem\u00e1ntica para importar y renombrar. A diferencia de C++ y Modula-3, los tipos de datos\nintegrados pueden usarse como clases base para que el usuario los extienda. Tambi\u00e9n, como en C++ pero a diferencia de\nModula-3, la mayor\u00eda de los operadores integrados con sintaxis especial (operadores aritm\u00e9ticos, de sub\u00edndice, etc.) pueden\nser redefinidos por instancias de la clase.\n(Sin haber una terminolog\u00eda universalmente aceptada sobre clases, har\u00e9 uso ocasional de t\u00e9rminos de Smalltalk y C++.", "start_char_idx": 0, "end_char_idx": 1775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c96de64-1efc-4d58-9a9d-c5895691d9fb": {"__data__": {"id_": "7c96de64-1efc-4d58-9a9d-c5895691d9fb", "embedding": null, "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c26d48e6-6f86-4927-8462-ab4319f02d7d", "node_type": "4", "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "548926c3c7735ebaf2e7f3fc093b25be87420a375d1098e8af31da4db3296eb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b89f976d-61fb-4cad-9160-b718194fc4b2", "node_type": "1", "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f923922215af07cfd2f64cc78c60fdad755ad4951f9660ace7ce5d06e1c5846f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a29a959-d643-4f43-9cc1-d0ffc8df731b", "node_type": "1", "metadata": {}, "hash": "8023a31875ac6af00cde7a5a00d1c1316142bf24f8d4835e5ba2c49aaa115344", "class_name": "RelatedNodeInfo"}}, "hash": "c11f98e32096b4b4f5e3d5f2fb741455ac9d9cc682d078985f12cc2caf5e7f48", "text": "Usar\u00eda t\u00e9rminos de Modula-3, ya que su sem\u00e1ntica orientada a objetos es m\u00e1s cercana a Python que C++, pero no espero\nque muchos lectores hayan escuchado hablar de \u00e9l).\nUnas palabras sobre nombres y objetos\nLos objetos tienen individualidad, y m\u00faltiples nombres (en muchos \u00e1mbitos) pueden vincularse al mismo objeto. Esto se\nconoce como aliasing en otros lenguajes. Normalmente no se aprecia esto a primera vista en Python, y puede ignorarse sin\nproblemas cuando se maneja tipos b\u00e1sicos inmutables (n\u00fameros, cadenas, tuplas). Sin embargo, el aliasing, o renombrado,\ntiene un efecto posiblemente sorpresivo sobre la sem\u00e1ntica de c\u00f3digo Python que involucra objetos mutables como listas,\ndiccionarios, y la mayor\u00eda de otros tipos. Esto se usa normalmente para beneficio del programa, ya que los renombres\nfuncionan como punteros en algunos aspectos. Por ejemplo, pasar un objeto es barato ya que la implementaci\u00f3n solamente\npasa el puntero; y si una funci\u00f3n modifica el objeto que fue pasado, el que la llama ver\u00e1 el cambio; esto elimina la necesidad\nde tener dos formas diferentes de pasar argumentos, como en Pascal.\n\u00c1mbitos y espacios de nombres en Python\nAntes de ver clases, primero debo decirte algo acerca de las reglas de \u00e1mbito de Python. Las definiciones de clases hacen\nunos lindos trucos con los espacios de nombres, y necesit\u00e1s saber c\u00f3mo funcionan los alcances y espacios de nombres\npara entender por completo c\u00f3mo es la cosa. De paso, los conocimientos en este tema son \u00fatiles para cualquier\nprogramador Python avanzado.\nComencemos con unas definiciones.\nUn espacio de nombres es una relaci\u00f3n de nombres a objetos. Muchos espacios de nombres est\u00e1n implementados en este \nmomento como diccionarios de Python, pero eso no se nota para nada (excepto por el desempe\u00f1o), y puede cambiar en el \nfuturo.", "start_char_idx": 1776, "end_char_idx": 3584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0a29a959-d643-4f43-9cc1-d0ffc8df731b": {"__data__": {"id_": "0a29a959-d643-4f43-9cc1-d0ffc8df731b", "embedding": null, "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c26d48e6-6f86-4927-8462-ab4319f02d7d", "node_type": "4", "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "548926c3c7735ebaf2e7f3fc093b25be87420a375d1098e8af31da4db3296eb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c96de64-1efc-4d58-9a9d-c5895691d9fb", "node_type": "1", "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c11f98e32096b4b4f5e3d5f2fb741455ac9d9cc682d078985f12cc2caf5e7f48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80ab1a71-5b3b-40f0-85f6-e9cb580e852d", "node_type": "1", "metadata": {}, "hash": "e502018ae91a81c9eecae2ba5fa572eb2c8f35ec492da49e11e131b16f48f457", "class_name": "RelatedNodeInfo"}}, "hash": "8023a31875ac6af00cde7a5a00d1c1316142bf24f8d4835e5ba2c49aaa115344", "text": "Como ejemplos de espacios de nombres ten\u00e9s: el conjunto de nombres incluidos (conteniendo funciones como \nabs(), y los nombres de excepciones integradas); los nombres globales en un m\u00f3dulo; y los nombres locales en la \ninvocaci\u00f3n a una funci\u00f3n. Lo que es importante saber de los espacios de nombres es que no hay relaci\u00f3n en absoluto entre\n 59", "start_char_idx": 3585, "end_char_idx": 3928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80ab1a71-5b3b-40f0-85f6-e9cb580e852d": {"__data__": {"id_": "80ab1a71-5b3b-40f0-85f6-e9cb580e852d", "embedding": null, "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4", "node_type": "4", "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07df226eafb7b84eec25b8a3ff672b3aad707603d5112c32421cdd47302f6eae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a29a959-d643-4f43-9cc1-d0ffc8df731b", "node_type": "1", "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8023a31875ac6af00cde7a5a00d1c1316142bf24f8d4835e5ba2c49aaa115344", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f07546ac-e1d6-47e7-9498-d2ccb556829a", "node_type": "1", "metadata": {}, "hash": "21cea0fcfaf6494c1ae11a2eac4ee0979d9e51f1ae6dd4acfe5aff9d68fa2316", "class_name": "RelatedNodeInfo"}}, "hash": "e502018ae91a81c9eecae2ba5fa572eb2c8f35ec492da49e11e131b16f48f457", "text": "los nombres de espacios de nombres distintos; por ejemplo, dos m\u00f3dulos diferentes pueden tener definidos los dos una\nfunci\u00f3n maximizar sin confusi\u00f3n; los usuarios de los m\u00f3dulos deben usar el nombre del m\u00f3dulo como prefijo.\nPor cierto, yo uso la palabra atributo para cualquier cosa despu\u00e9s de un punto; por ejemplo, en la expresi\u00f3n z.real, real\nes un atributo del objeto z. Estrictamente hablando, las referencias a nombres en m\u00f3dulos son referencias a atributos: en la\nexpresi\u00f3n modulo.funcion, modulo es un objeto m\u00f3dulo y funcion es un atributo de \u00e9ste. En este caso hay una\nrelaci\u00f3n directa entre los atributos del m\u00f3dulo y los nombres globales definidos en el m\u00f3dulo: \u00a1est\u00e1n compartiendo el mismo\nespacio de nombres! 8\nLos atributos pueden ser de s\u00f3lo lectura, o de escritura. En el \u00faltimo caso es posible la asignaci\u00f3n a atributos. Los atributos\nde m\u00f3dulo pueden escribirse: modulo.la_respuesta = 42. Los atributos de escritura se pueden borrar tambi\u00e9n con la\ndeclaraci\u00f3n del. Por ejemplo, del modulo.la_respuesta va a eliminar el atributo la_respuesta del objeto con\nnombre modulo.\nLos espacios de nombres se crean en diferentes momentos y con diferentes tiempos de vida. El espacio de nombres que\ncontiene los nombres incluidos se crea cuando se inicia el int\u00e9rprete, y nunca se borra. El espacio de nombres global de un\nm\u00f3dulo se crea cuando se lee la definici\u00f3n de un m\u00f3dulo; normalmente, los espacios de nombres de m\u00f3dulos tambi\u00e9n duran\nhasta que el int\u00e9rprete finaliza. Las instrucciones ejecutadas en el nivel de llamadas superior del int\u00e9rprete, ya sea desde un\nscript o interactivamente, se consideran parte del m\u00f3dulo llamado __main__, por lo tanto tienen su propio espacio de\nnombres global. (Los nombres incluidos en realidad tambi\u00e9n viven en un m\u00f3dulo; este se llama builtins.)", "start_char_idx": 0, "end_char_idx": 1797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f07546ac-e1d6-47e7-9498-d2ccb556829a": {"__data__": {"id_": "f07546ac-e1d6-47e7-9498-d2ccb556829a", "embedding": null, "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4", "node_type": "4", "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07df226eafb7b84eec25b8a3ff672b3aad707603d5112c32421cdd47302f6eae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80ab1a71-5b3b-40f0-85f6-e9cb580e852d", "node_type": "1", "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e502018ae91a81c9eecae2ba5fa572eb2c8f35ec492da49e11e131b16f48f457", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2089b36-2428-4057-9599-754d00b90e88", "node_type": "1", "metadata": {}, "hash": "0b3816ca5aef4b1c63e2c819022c46ac90b14f304cc8121a4474f2e6ca18d312", "class_name": "RelatedNodeInfo"}}, "hash": "21cea0fcfaf6494c1ae11a2eac4ee0979d9e51f1ae6dd4acfe5aff9d68fa2316", "text": "El espacio de nombres local a una funci\u00f3n se crea cuando la funci\u00f3n es llamada, y se elimina cuando la funci\u00f3n retorna o\nlanza una excepci\u00f3n que no se maneje dentro de la funci\u00f3n. (Podr\u00edamos decir que lo que pasa en realidad es que ese\nespacio de nombres se \"olvida\".) Por supuesto, las llamadas recursivas tienen cada una su propio espacio de nombres local.\nUn \u00e1mbito es una regi\u00f3n textual de un programa en Python donde un espacio de nombres es accesible directamente.\n\"Accesible directamente\" significa que una referencia sin calificar a un nombre intenta encontrar dicho nombre dentro del\nespacio de nombres.\nAunque los alcances se determinan est\u00e1ticamente, se usan din\u00e1micamente. En cualquier momento durante la ejecuci\u00f3n hay\npor lo menos cuatro alcances anidados cuyos espacios de nombres son directamente accesibles:\n\u007f\nel \u00e1mbito interno, donde se busca primero, contiene los nombres locales\n\u007f\nlos espacios de nombres de las funciones anexas, en las cuales se busca empezando por el \u00e1mbito adjunto m\u00e1s\ncercano, contiene los nombres no locales pero tambi\u00e9n los no globales\n\u007f\nel \u00e1mbito ante\u00faltimo contiene los nombres globales del m\u00f3dulo actual\n\u007f\nel \u00e1mbito exterior (donde se busca al final) es el espacio de nombres que contiene los nombres incluidos\nSi un nombre se declara como global, entonces todas las referencias y asignaciones al mismo van directo al \u00e1mbito\nintermedio que contiene los nombres globales del m\u00f3dulo. Para reasignar nombres encontrados afuera del \u00e1mbito m\u00e1s\ninterno, se puede usar la declaraci\u00f3n nonlocal; si no se declara nonlocal, esas variables ser\u00e1n de s\u00f3lo lectura (un intento\nde escribir a esas variables simplemente crea una nueva variable local en el \u00e1mbito interno, dejando intacta la variable\nexterna del mismo nombre).\nHabitualmente, el \u00e1mbito local referencia los nombres locales de la funci\u00f3n actual.", "start_char_idx": 1798, "end_char_idx": 3637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2089b36-2428-4057-9599-754d00b90e88": {"__data__": {"id_": "e2089b36-2428-4057-9599-754d00b90e88", "embedding": null, "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4", "node_type": "4", "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07df226eafb7b84eec25b8a3ff672b3aad707603d5112c32421cdd47302f6eae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f07546ac-e1d6-47e7-9498-d2ccb556829a", "node_type": "1", "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "21cea0fcfaf6494c1ae11a2eac4ee0979d9e51f1ae6dd4acfe5aff9d68fa2316", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa36a3bf-b56c-4354-b56c-bdb83b6d0ce6", "node_type": "1", "metadata": {}, "hash": "9cd954405f741d745b430edda8ec496163222c86547a13c9a6c2232d268bbb37", "class_name": "RelatedNodeInfo"}}, "hash": "0b3816ca5aef4b1c63e2c819022c46ac90b14f304cc8121a4474f2e6ca18d312", "text": "Habitualmente, el \u00e1mbito local referencia los nombres locales de la funci\u00f3n actual. Fuera de una funci\u00f3n, el \u00e1mbito local\nreferencia al mismo espacio de nombres que el \u00e1mbito global: el espacio de nombres del m\u00f3dulo. Las definiciones de clases\ncrean un espacio de nombres m\u00e1s en el \u00e1mbito local.\nEs importante notar que los alcances se determinan textualmente: el \u00e1mbito global de una funci\u00f3n definida en un m\u00f3dulo es\nel espacio de nombres de ese m\u00f3dulo, no importa desde d\u00f3nde o con qu\u00e9 alias se llame a la funci\u00f3n. Por otro lado, la\nb\u00fasqueda de nombres se hace din\u00e1micamente, en tiempo de ejecuci\u00f3n; sin embargo, la definici\u00f3n del lenguaje est\u00e1\nevolucionando a hacer resoluci\u00f3n de nombres est\u00e1ticamente, en tiempo de \"compilaci\u00f3n\", \u00a1as\u00ed que no te conf\u00edes de la\nresoluci\u00f3n de nombres din\u00e1mica! (De hecho, las variables locales ya se determinan est\u00e1ticamente.)\nUna peculiaridad especial de Python es que, si no hay una declaraci\u00f3n global o nonlocal en efecto, las asignaciones a \nnombres siempre van al \u00e1mbito interno. Las asignaciones no copian datos, solamente asocian nombres a objetos. Lo mismo\n 60", "start_char_idx": 3554, "end_char_idx": 4656, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa36a3bf-b56c-4354-b56c-bdb83b6d0ce6": {"__data__": {"id_": "aa36a3bf-b56c-4354-b56c-bdb83b6d0ce6", "embedding": null, "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ebd062fa-3516-4c56-aaf6-5b96479879bb", "node_type": "4", "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "18bf400ec94504223ac740a8a0bce89ed3c43e710117381a0116c79bd3613489", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2089b36-2428-4057-9599-754d00b90e88", "node_type": "1", "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0b3816ca5aef4b1c63e2c819022c46ac90b14f304cc8121a4474f2e6ca18d312", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbd6c930-e3f0-47da-9951-73573c320aac", "node_type": "1", "metadata": {}, "hash": "af1a2970ffffe675a2aed2e9ee5d8363cac1f993bafd94398765c37467f69051", "class_name": "RelatedNodeInfo"}}, "hash": "9cd954405f741d745b430edda8ec496163222c86547a13c9a6c2232d268bbb37", "text": "cuando se borra: la declaraci\u00f3n del x quita la asociaci\u00f3n de x del espacio de nombres referenciado por el \u00e1mbito local.\nDe hecho, todas las operaciones que introducen nuevos nombres usan el \u00e1mbito local: en particular, las instrucciones\nimport y las definiciones de funciones asocian el m\u00f3dulo o nombre de la funci\u00f3n al espacio de nombres en el \u00e1mbito local.\nLa declaraci\u00f3n global puede usarse para indicar que ciertas variables viven en el \u00e1mbito global y deber\u00edan reasignarse\nall\u00ed; la declaraci\u00f3n nonlocal indica que ciertas variables viven en un \u00e1mbito encerrado y deber\u00edan reasignarse all\u00ed.\nEj\u00e9mplo de \u00e1mbitos y espacios de nombre\nEste es un ejemplo que muestra como hacer referencia a distintos \u00e1mbitos y espacios de nombres, y c\u00f3mo las\ndeclaraciones global y nonlocal afectan la asignaci\u00f3n de variables:\ndef prueba_ambitos():\n    def hacer_local():\n        algo = \"algo local\"\n    def hacer_nonlocal():\n        nonlocal algo\n        algo = \"algo no local\"\n    def hacer_global():\n        global algo\n        algo = \"algo global\"\n    algo = \"algo de prueba\"\n    hacer_local()\n    print(\"Luego de la asignaci\u00f3n local:\", algo)\n    hacer_nonlocal()\n    print(\"Luego de la asignaci\u00f3n no local:\", algo)\n    hacer_global()\n    print(\"Luego de la asignaci\u00f3n global:\", algo)\nprueba_ambitos()\nprint(\"In global scope:\", algo)\nEl resultado del c\u00f3digo ejemplo es:\nLuego de la asignaci\u00f3n local: algo de prueba\nLuego de la asignaci\u00f3n no local: algo no local\nLuego de la asignaci\u00f3n global: algo no local\nEn el \u00e1mbito global: algo global\nNot\u00e1 como la asignaci\u00f3n local (que es el comportamiento normal) no cambi\u00f3 la vinculaci\u00f3n de algo de prueba_ambitos. La\nasignaci\u00f3n nonlocal cambi\u00f3 la vinculaci\u00f3n de algo de prueba_ambitos, y la asignaci\u00f3n global cambi\u00f3 la vinculaci\u00f3n a\nnivel de m\u00f3dulo.\nTambi\u00e9n pod\u00e9s ver que no hab\u00eda vinculaci\u00f3n para algo antes de la asignaci\u00f3n global.", "start_char_idx": 0, "end_char_idx": 1862, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbd6c930-e3f0-47da-9951-73573c320aac": {"__data__": {"id_": "cbd6c930-e3f0-47da-9951-73573c320aac", "embedding": null, "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ebd062fa-3516-4c56-aaf6-5b96479879bb", "node_type": "4", "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "18bf400ec94504223ac740a8a0bce89ed3c43e710117381a0116c79bd3613489", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa36a3bf-b56c-4354-b56c-bdb83b6d0ce6", "node_type": "1", "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9cd954405f741d745b430edda8ec496163222c86547a13c9a6c2232d268bbb37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8944ebd3-b764-417f-a556-8d9b7af459b6", "node_type": "1", "metadata": {}, "hash": "fc7807d649c7604fec5d6690ec16ef22525c2903332df07cbf4991e8aafbe839", "class_name": "RelatedNodeInfo"}}, "hash": "af1a2970ffffe675a2aed2e9ee5d8363cac1f993bafd94398765c37467f69051", "text": "Un primer vistazo a las clases\nLas clases introducen un poquito de sintaxis nueva, tres nuevos tipos de objetos y algo de sem\u00e1ntica nueva.\nSintaxis de definici\u00f3n de clases\nLa forma m\u00e1s sencilla de definici\u00f3n de una clase se ve as\u00ed:\nclass Clase:\n    <declaraci\u00f3n-1>\n    .\n    .\n    .\n    <declaraci\u00f3n-N>\n 61", "start_char_idx": 1863, "end_char_idx": 2169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8944ebd3-b764-417f-a556-8d9b7af459b6": {"__data__": {"id_": "8944ebd3-b764-417f-a556-8d9b7af459b6", "embedding": null, "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1998c9f7-e924-4785-91ee-1b75003ae3fd", "node_type": "4", "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8eb1d141d1413132c1f885f2775e66ec7882f484b682920c1d68efe62665bffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbd6c930-e3f0-47da-9951-73573c320aac", "node_type": "1", "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "af1a2970ffffe675a2aed2e9ee5d8363cac1f993bafd94398765c37467f69051", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8114b580-7f6e-49bd-bace-133de333c3ac", "node_type": "1", "metadata": {}, "hash": "0da458192bcc3ee5a18452d39a5a57e6ca29f2f12b5d92810758560d246943de", "class_name": "RelatedNodeInfo"}}, "hash": "fc7807d649c7604fec5d6690ec16ef22525c2903332df07cbf4991e8aafbe839", "text": "Las definiciones de clases, al igual que las definiciones de funciones (instrucciones def) deben ejecutarse antes de que\ntengan efecto alguno. (Es concebible poner una definici\u00f3n de clase dentro de una rama de un if, o dentro de una funci\u00f3n.)\nEn la pr\u00e1ctica, las declaraciones dentro de una clase son definiciones de funciones, pero otras declaraciones son permitidas,\ny a veces resultan \u00fatiles; veremos esto m\u00e1s adelante. Las definiciones de funciones dentro de una clase normalmente\ntienen una lista de argumentos peculiar, dictada por las convenciones de invocaci\u00f3n de m\u00e9todos; a esto tambi\u00e9n lo veremos\nm\u00e1s adelante.\nCuando se ingresa una definici\u00f3n de clase, se crea un nuevo espacio de nombres, el cual se usa como \u00e1mbito local; por lo\ntanto, todas las asignaciones a variables locales van a este nuevo espacio de nombres. En particular, las definiciones de\nfunciones asocian el nombre de las funciones nuevas all\u00ed.\nCuando una definici\u00f3n de clase se finaliza normalmente se crea un objeto clase. B\u00e1sicamente, este objeto envuelve los\ncontenidos del espacio de nombres creado por la definici\u00f3n de la clase; aprenderemos m\u00e1s acerca de los objetos clase en la\nsecci\u00f3n siguiente. El \u00e1mbito local original (el que ten\u00eda efecto justo antes de que ingrese la definici\u00f3n de la clase) es\nrestablecido, y el objeto clase se asocia all\u00ed al nombre que se le puso a la clase en el encabezado de su definici\u00f3n (Clase\nen el ejemplo).\nObjetos clase\nLos objetos clase soportan dos tipos de operaciones: hacer referencia a atributos e instanciaci\u00f3n.\nPara hacer referencia a atributos se usa la sintaxis est\u00e1ndar de todas las referencias a atributos en Python:\nobjeto.nombre. Los nombres de atributo v\u00e1lidos son todos los nombres que estaban en el espacio de nombres de la\nclase cuando \u00e9sta se cre\u00f3.", "start_char_idx": 0, "end_char_idx": 1786, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8114b580-7f6e-49bd-bace-133de333c3ac": {"__data__": {"id_": "8114b580-7f6e-49bd-bace-133de333c3ac", "embedding": null, "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1998c9f7-e924-4785-91ee-1b75003ae3fd", "node_type": "4", "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8eb1d141d1413132c1f885f2775e66ec7882f484b682920c1d68efe62665bffd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8944ebd3-b764-417f-a556-8d9b7af459b6", "node_type": "1", "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fc7807d649c7604fec5d6690ec16ef22525c2903332df07cbf4991e8aafbe839", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e32b78c-8386-4134-8a65-8621174694c3", "node_type": "1", "metadata": {}, "hash": "5fc3c6ed8066e2e990843e384b2846882f331d90f73fbef4482be25d606d55b3", "class_name": "RelatedNodeInfo"}}, "hash": "0da458192bcc3ee5a18452d39a5a57e6ca29f2f12b5d92810758560d246943de", "text": "Por lo tanto, si la definici\u00f3n de la clase es as\u00ed:\nclass MiClase:\n    \"\"\"Simple clase de ejemplo\"\"\"\n    i = 12345\n    def f(self):\n        return 'hola mundo'\n...entonces MiClase.i y MiClase.f son referencias de atributos v\u00e1lidas, que devuelven un entero y un objeto funci\u00f3n\nrespectivamente. Los atributos de clase tambi\u00e9n pueden ser asignados, o sea que pod\u00e9s cambiar el valor de MiClase.i\nmediante asignaci\u00f3n. __doc__ tambi\u00e9n es un atributo v\u00e1lido, que devuelve la documentaci\u00f3n asociada a la clase:\n\"Simple clase de ejemplo\".\nLa instanciaci\u00f3n de clases usa la notaci\u00f3n de funciones. Hac\u00e9 de cuenta que el objeto de clase es una funci\u00f3n sin\npar\u00e1metros que devuelve una nueva instancia de la clase. Por ejemplo (para la clase de m\u00e1s arriba):\nx = MiClase()\n...crea una nueva instancia de la clase y asigna este objeto a la variable local x.\nLa operaci\u00f3n de instanciaci\u00f3n (\"llamar\" a un objeto clase) crea un objeto vac\u00edo. Muchas clases necesitan crear objetos con\ninstancias en un estado inicial particular. Por lo tanto una clase puede definir un m\u00e9todo especial llamado __init__(), de\nesta forma:\ndef __init__(self):\n    self.datos = []\nCuando una clase define un m\u00e9todo __init__(), la instanciaci\u00f3n de la clase autom\u00e1ticamente invoca a __init__()\npara la instancia reci\u00e9n creada. Entonces, en este ejemplo, una instancia nueva e inicializada se puede obtener haciendo:\nx = MiClase()\nPor supuesto, el m\u00e9todo __init__() puede tener argumentos para mayor flexibilidad. En ese caso, los argumentos que\nse pasen al operador de instanciaci\u00f3n de la clase van a parar al m\u00e9todo __init__(). Por ejemplo,\n 62", "start_char_idx": 1787, "end_char_idx": 3388, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e32b78c-8386-4134-8a65-8621174694c3": {"__data__": {"id_": "4e32b78c-8386-4134-8a65-8621174694c3", "embedding": null, "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b90ffc8-a70c-4e0e-83e1-e1be8d48adac", "node_type": "4", "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "70bcd9b6e11e9b6644787d1d42c1221c91da9d657512a6625d4948025c73ff6e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8114b580-7f6e-49bd-bace-133de333c3ac", "node_type": "1", "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0da458192bcc3ee5a18452d39a5a57e6ca29f2f12b5d92810758560d246943de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0725c4e-4c66-49d0-9ff8-003443989b1b", "node_type": "1", "metadata": {}, "hash": "f97bb1798073c4240c4abde6153821e17d5002a5152b147feca9e48bdf69befa", "class_name": "RelatedNodeInfo"}}, "hash": "5fc3c6ed8066e2e990843e384b2846882f331d90f73fbef4482be25d606d55b3", "text": ">>> class Complejo:\n...     def __init__(self, partereal, parteimaginaria):\n...         self.r = partereal\n...         self.i = parteimaginaria\n...\n>>> x = Complejo(3.0, -4.5)\n>>> x.r, x.i\n(3.0, -4.5)\nObjetos instancia\nAhora, \u00bfQu\u00e9 podemos hacer con los objetos instancia? La \u00fanica operaci\u00f3n que es entendida por los objetos instancia es la\nreferencia de atributos. Hay dos tipos de nombres de atributos v\u00e1lidos, atributos de datos y m\u00e9todos.\nLos atributos de datos se corresponden con las \"variables de instancia\" en Smalltalk, y con las \"variables miembro\" en C++.\nLos atributos de datos no necesitan ser declarados; tal como las variables locales son creados la primera vez que se les\nasigna algo. Por ejemplo, si x es la instancia de MiClase creada m\u00e1s arriba, el siguiente pedazo de c\u00f3digo va a imprimir\nel valor 16, sin dejar ning\u00fan rastro:\nx.contador = 1\nwhile x.contador < 10:\n    x.contador = x.contador * 2\nprint(x.contador)\ndel x.contador\nEl otro tipo de atributo de instancia es el m\u00e9todo. Un m\u00e9todo es una funci\u00f3n que \"pertenece a\" un objeto. En Python, el\nt\u00e9rmino m\u00e9todo no est\u00e1 limitado a instancias de clase: otros tipos de objetos pueden tener m\u00e9todos tambi\u00e9n. Por ejemplo,\nlos objetos lista tienen m\u00e9todos llamados append, insert, remove, sort, y as\u00ed sucesivamente. Pero, en la siguiente\nexplicaci\u00f3n, usaremos el t\u00e9rmino m\u00e9todo para referirnos exclusivamente a m\u00e9todos de objetos instancia de clase, a menos\nque se especifique expl\u00edcitamente lo contrario.\nLos nombres v\u00e1lidos de m\u00e9todos de un objeto instancia dependen de su clase. Por definici\u00f3n, todos los atributos de clase\nque son objetos funciones definen m\u00e9todos correspondientes de sus instancias.", "start_char_idx": 0, "end_char_idx": 1671, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0725c4e-4c66-49d0-9ff8-003443989b1b": {"__data__": {"id_": "b0725c4e-4c66-49d0-9ff8-003443989b1b", "embedding": null, "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b90ffc8-a70c-4e0e-83e1-e1be8d48adac", "node_type": "4", "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "70bcd9b6e11e9b6644787d1d42c1221c91da9d657512a6625d4948025c73ff6e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e32b78c-8386-4134-8a65-8621174694c3", "node_type": "1", "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5fc3c6ed8066e2e990843e384b2846882f331d90f73fbef4482be25d606d55b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "858045f3-b3e1-4a16-acc3-10f0abfa86e8", "node_type": "1", "metadata": {}, "hash": "44d42ba05069d3d52269bccd2829c57bbe397158efab7e94f0e83ae03bfff5e3", "class_name": "RelatedNodeInfo"}}, "hash": "f97bb1798073c4240c4abde6153821e17d5002a5152b147feca9e48bdf69befa", "text": "Entonces, en nuestro ejemplo, x.f es una\nreferencia a un m\u00e9todo v\u00e1lido, dado que MiClase.f es una funci\u00f3n, pero x.i no lo es, dado que MiClase.i no lo es.\nPero x.f no es la misma cosa que MiClase.f; es un objeto m\u00e9todo, no un objeto funci\u00f3n.\nObjetos m\u00e9todo\nGeneralmente, un m\u00e9todo es llamado luego de ser vinculado:\nx.f()\nEn el ejemplo MiClase, esto devuelve la cadena 'hola mundo'. Pero no es necesario llamar al m\u00e9todo justo en ese\nmomento: x.f es un objeto m\u00e9todo, y puede ser guardado y llamado m\u00e1s tarde. Por ejemplo:\nxf = x.f\nwhile True:\n    print(xf())\n...continuar\u00e1 imprimiendo hola mundo hasta el fin de los d\u00edas.\n\u00bfQu\u00e9 sucede exactamente cuando un m\u00e9todo es llamado? Deb\u00e9s haber notado que x.f() fue llamado m\u00e1s arriba sin\nning\u00fan argumento, a pesar de que la definici\u00f3n de funci\u00f3n de f() especificaba un argumento. \u00bfQu\u00e9 pas\u00f3 con ese\nargumento? Seguramente Python levanta una excepci\u00f3n cuando una funci\u00f3n que requiere un argumento es llamada sin\nninguno, a\u00fan si el argumento no es utilizado...\nDe hecho, tal vez hayas adivinado la respuesta: lo que tienen de especial los m\u00e9todos es que el objeto es pasado como el \nprimer argumento de la funci\u00f3n. En nuestro ejemplo, la llamada x.f() es exactamente equivalente a MiClase.f(x). En\n 63", "start_char_idx": 1672, "end_char_idx": 2914, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "858045f3-b3e1-4a16-acc3-10f0abfa86e8": {"__data__": {"id_": "858045f3-b3e1-4a16-acc3-10f0abfa86e8", "embedding": null, "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c62e3698-3ac2-41aa-a3b9-f5bc38ba38c5", "node_type": "4", "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9ead6110673034c2a5b627e5808c3f5baeb4cc78b31fbef792bc71a576619f7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0725c4e-4c66-49d0-9ff8-003443989b1b", "node_type": "1", "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f97bb1798073c4240c4abde6153821e17d5002a5152b147feca9e48bdf69befa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "673e5630-c4de-44db-856d-4ae494f2aa67", "node_type": "1", "metadata": {}, "hash": "392653ef645039aecf7fcd0e3fdb6a9a8f3c63682419d263124a63e342bce21f", "class_name": "RelatedNodeInfo"}}, "hash": "44d42ba05069d3d52269bccd2829c57bbe397158efab7e94f0e83ae03bfff5e3", "text": "general, llamar a un m\u00e9todo con una lista de n argumentos es equivalente a llamar a la funci\u00f3n correspondiente con una\nlista de argumentos que es creada insertando el objeto del m\u00e9todo antes del primer argumento.\nSi a\u00fan no comprend\u00e9s como funcionan los m\u00e9todos, un vistazo a la implementaci\u00f3n puede ayudar a clarificar este tema.\nCuando se hace referencia un atributo de instancia y no es un atributo de datos, se busca dentro de su clase. Si el nombre\ndenota un atributo de clase v\u00e1lido que es un objeto funci\u00f3n, se crea un objeto m\u00e9todo juntando (punteros a) el objeto\ninstancia y el objeto funci\u00f3n que ha sido encontrado. Este objeto abstracto creado de esta uni\u00f3n es el objeto m\u00e9todo.\nCuando el objeto m\u00e9todo es llamado con una lista de argumentos, una lista de argumentos nueva es construida a partir del\nobjeto instancia y la lista de argumentos original, y el objeto funci\u00f3n es llamado con esta nueva lista de argumentos.\nVariables de clase y de instancia\nEn general, las variables de instancia son para datos \u00fanicos de cada instancia y las variables de clase son para atributos y\nm\u00e9todos compartidos por todas las instancias de la clase:\nclass Perro:\n    tipo = 'canino'                 # variable de clase compartida por todas las instancias\n    def __init__(self, nombre):\n        self.nombre = nombre        # variable de instancia \u00fanica para la instancia\n  >>> d = Perro('Fido')\n  >>> e = Perro('Buddy')\n  >>> d.tipo                    # compartido por todos los perros\n  'canino'\n  >>> e.tipo                    # compartido por todos los perros\n  'canino'\n  >>> d.nombre                  # \u00fanico para d\n  'Fido'\n  >>> e.nombre                  # \u00fanico para e\n  'Buddy'\nComo se vi\u00f3 en Unas palabras sobre nombres y objetos, los datos compartidos pueden tener efectos inesperados que\ninvolucren objetos mutables como ser listas y diccionarios.", "start_char_idx": 0, "end_char_idx": 1855, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "673e5630-c4de-44db-856d-4ae494f2aa67": {"__data__": {"id_": "673e5630-c4de-44db-856d-4ae494f2aa67", "embedding": null, "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c62e3698-3ac2-41aa-a3b9-f5bc38ba38c5", "node_type": "4", "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9ead6110673034c2a5b627e5808c3f5baeb4cc78b31fbef792bc71a576619f7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "858045f3-b3e1-4a16-acc3-10f0abfa86e8", "node_type": "1", "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44d42ba05069d3d52269bccd2829c57bbe397158efab7e94f0e83ae03bfff5e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3b6f0be-cbe7-41b9-b460-144e4f86d104", "node_type": "1", "metadata": {}, "hash": "132d918a0e3be6eaaadef8006de7abf31d9b55e59b3a1ec175aeeadaa0ce5daf", "class_name": "RelatedNodeInfo"}}, "hash": "392653ef645039aecf7fcd0e3fdb6a9a8f3c63682419d263124a63e342bce21f", "text": "Por ejemplo, la lista trucos en el siguiente c\u00f3digo no deber\u00eda ser\nusada como variable de clase porque una sola lista ser\u00eda compartida por todos las instancias de Perro:\nclass Perro:\n    trucos = []        # uso incorrecto de una variable de clase\n    def __init__(self, nombre):\n        self.nombre = nombre\n    def agregar_truco(self, truco):\n        self.trucos.append(truco)\n  >>> d = Perro('Fido')\n  >>> e = Perro('Buddy')\n  >>> d.agregar_truco('girar')\n  >>> e.agregar_truco('hacerse el muerto')\n  >>> d.trucos                # compartidos por todos los perros inesperadamente\n  ['girar', 'hacerse el muerto']\nEl dise\u00f1o correcto de esta clase ser\u00eda usando una variable de instancia:\nclass Perro:\n    def __init__(self, nombre):\n 64", "start_char_idx": 1856, "end_char_idx": 2593, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3b6f0be-cbe7-41b9-b460-144e4f86d104": {"__data__": {"id_": "c3b6f0be-cbe7-41b9-b460-144e4f86d104", "embedding": null, "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "50e1b02c-e715-4183-90cf-8152355a4e93", "node_type": "4", "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4ecc33bf8dadb01705f5a573ce8e2098d538e7f19dfdf1153598e595a4b156fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "673e5630-c4de-44db-856d-4ae494f2aa67", "node_type": "1", "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "392653ef645039aecf7fcd0e3fdb6a9a8f3c63682419d263124a63e342bce21f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c293de1-3a7f-4a9d-b054-ab75f91c5142", "node_type": "1", "metadata": {}, "hash": "1a8c43c994543604c180466bcbf32dbe3c7fa6e93fb7f6187c7e66b98de6420e", "class_name": "RelatedNodeInfo"}}, "hash": "132d918a0e3be6eaaadef8006de7abf31d9b55e59b3a1ec175aeeadaa0ce5daf", "text": "self.nombre = nombre\n        self.trucos = []    # crea una nueva lista vac\u00eda para cada perro\n    def agregar_truco(self, truco):\n        self.trucos.append(truco)\n>>> d = Perro('Fido')\n>>> e = Perro('Buddy')\n>>> d.agregar_truco('girar')\n>>> e.agregar_truco('hacerse el muerto')\n>>> d.trucos\n['girar']\n>>> e.trucos\n['hacerse el muerto']\nAlgunas observaciones\nLos atributos de datos tienen preferencia sobre los m\u00e9todos con el mismo nombre; para evitar conflictos de nombre\naccidentales, que pueden causar errores dif\u00edciles de encontrar en programas grandes, es prudente usar alg\u00fan tipo de\nconvenci\u00f3n que minimice las posibilidades de dichos conflictos. Algunas convenciones pueden ser poner los nombres de\nm\u00e9todos con may\u00fasculas, prefijar los nombres de atributos de datos con una peque\u00f1a cadena \u00fanica (a lo mejor s\u00f3lo un\ngui\u00f3n bajo), o usar verbos para los m\u00e9todos y sustantivos para los atributos.\nA los atributos de datos los pueden hacer referencia tanto los m\u00e9todos como los usuarios (\"clientes\") ordinarios de un\nobjeto. En otras palabras, las clases no se usan para implementar tipos de datos abstractos puros. De hecho, en Python no\nhay nada que haga cumplir el ocultar datos; todo se basa en convenci\u00f3n. (Por otro lado, la implementaci\u00f3n de Python,\nescrita en C, puede ocultar por completo detalles de implementaci\u00f3n y el control de acceso a un objeto si es necesario; esto\nse puede usar en extensiones a Python escritas en C.)\nLos clientes deben usar los atributos de datos con cuidado; \u00e9stos pueden romper invariantes que mantienen los m\u00e9todos si\npisan los atributos de datos. Observ\u00e1 que los clientes pueden a\u00f1adir sus propios atributos de datos a una instancia sin\nafectar la validez de sus m\u00e9todos, siempre y cuando se eviten conflictos de nombres; de nuevo, una convenci\u00f3n de\nnombres puede ahorrar un mont\u00f3n de dolores de cabeza.", "start_char_idx": 8, "end_char_idx": 1852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c293de1-3a7f-4a9d-b054-ab75f91c5142": {"__data__": {"id_": "2c293de1-3a7f-4a9d-b054-ab75f91c5142", "embedding": null, "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "50e1b02c-e715-4183-90cf-8152355a4e93", "node_type": "4", "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4ecc33bf8dadb01705f5a573ce8e2098d538e7f19dfdf1153598e595a4b156fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3b6f0be-cbe7-41b9-b460-144e4f86d104", "node_type": "1", "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "132d918a0e3be6eaaadef8006de7abf31d9b55e59b3a1ec175aeeadaa0ce5daf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96b361f0-a79e-40ee-986d-da3fc5e40b13", "node_type": "1", "metadata": {}, "hash": "6ddb7e1321b61932563042dba9d065130ef7e7fc01a9f7d2ddd207ec0e51a1ab", "class_name": "RelatedNodeInfo"}}, "hash": "1a8c43c994543604c180466bcbf32dbe3c7fa6e93fb7f6187c7e66b98de6420e", "text": "No hay un atajo para hacer referencia a atributos de datos (\u00a1u otros m\u00e9todos!) desde dentro de un m\u00e9todo. A mi parecer,\nesto en realidad aumenta la legibilidad de los m\u00e9todos: no existe posibilidad alguna de confundir variables locales con\nvariables de instancia cuando repasamos un m\u00e9todo.\nA menudo, el primer argumento de un m\u00e9todo se llama self (uno mismo). Esto no es nada m\u00e1s que una convenci\u00f3n: el\nnombre self no significa nada en especial para Python. Observ\u00e1 que, sin embargo, si no segu\u00eds la convenci\u00f3n tu c\u00f3digo\npuede resultar menos legible a otros programadores de Python, y puede llegar a pasar que un programa navegador de\nclases pueda escribirse de una manera que dependa de dicha convenci\u00f3n.\nCualquier objeto funci\u00f3n que es un atributo de clase define un m\u00e9todo para instancias de esa clase. No es necesario que el\nla definici\u00f3n de la funci\u00f3n est\u00e9 textualmente dentro de la definici\u00f3n de la clase: asignando un objeto funci\u00f3n a una variable\nlocal en la clase tambi\u00e9n est\u00e1 bien. Por ejemplo:\n# Funci\u00f3n definida fuera de la clase\ndef f1(self, x, y):\n    return min(x, x+y)\nclass C:\n    f = f1\n    def g(self):\n        return 'hola mundo'\n    h = g\n 65", "start_char_idx": 1853, "end_char_idx": 3017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96b361f0-a79e-40ee-986d-da3fc5e40b13": {"__data__": {"id_": "96b361f0-a79e-40ee-986d-da3fc5e40b13", "embedding": null, "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "525616b6-cbc2-44a9-80fc-bb9b9dc1ae59", "node_type": "4", "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13e710ad0b47406b53862a4fb5bb9128a323ca2bfd73775a35236d7715d013f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c293de1-3a7f-4a9d-b054-ab75f91c5142", "node_type": "1", "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1a8c43c994543604c180466bcbf32dbe3c7fa6e93fb7f6187c7e66b98de6420e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de3e955d-a1c5-46c4-8915-c70791f720f9", "node_type": "1", "metadata": {}, "hash": "e66362bedc12dd3ea2fb9f4ee4eba545974bad90cc261213e1d4e51b5ef0d9af", "class_name": "RelatedNodeInfo"}}, "hash": "6ddb7e1321b61932563042dba9d065130ef7e7fc01a9f7d2ddd207ec0e51a1ab", "text": "Ahora f, g y h son todos atributos de la clase C que hacen referencia a objetos funci\u00f3n, y consecuentemente son todos\nm\u00e9todos de las instancias de C; h siendo exactamente equivalente a g. Fijate que esta pr\u00e1ctica normalmente s\u00f3lo sirve\npara confundir al que lea un programa.\nLos m\u00e9todos pueden llamar a otros m\u00e9todos de la instancia usando el argumento self:\nclass Bolsa:\n    def __init__(self):\n        self.datos = []\n    def agregar(self, x):\n        self.datos.append(x)\n    def dobleagregar(self, x):\n        self.agregar(x)\n        self.agregar(x)\nLos m\u00e9todos pueden hacer referencia a nombres globales de la misma manera que lo hacen las funciones comunes. El\n\u00e1mbito global asociado a un m\u00e9todo es el m\u00f3dulo que contiene su definici\u00f3n. (Una clase nunca se usa como un \u00e1mbito\nglobal.) Si bien es raro encontrar una buena raz\u00f3n para usar datos globales en un m\u00e9todo, hay muchos usos leg\u00edtimos del\n\u00e1mbito global: por lo menos, las funciones y m\u00f3dulos importados en el \u00e1mbito global pueden usarse por los m\u00e9todos, al\nigual que las funciones y clases definidas en \u00e9l. Habitualmente, la clase que contiene el m\u00e9todo est\u00e1 definida en este \u00e1mbito\nglobal, y en la siguiente secci\u00f3n veremos algunas buenas razones por las que un m\u00e9todo querr\u00eda hacer referencia a su\npropia clase.\nTodo valor es un objeto, y por lo tanto tiene una clase (tambi\u00e9n llamado su tipo). \u00c9sta se almacena como\nobjeto.__class__.\nHerencia\nPor supuesto, una caracter\u00edstica del lenguaje no ser\u00eda digna del nombre \"clase\" si no soportara herencia. La sintaxis para\nuna definici\u00f3n de clase derivada se ve as\u00ed:\nclass ClaseDerivada(ClaseBase):\n    <declaraci\u00f3n-1>\n    .\n    .\n    .\n    <declaraci\u00f3n-N>\nEl nombre ClaseBase debe estar definido en un \u00e1mbito que contenga a la definici\u00f3n de la clase derivada.", "start_char_idx": 0, "end_char_idx": 1769, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de3e955d-a1c5-46c4-8915-c70791f720f9": {"__data__": {"id_": "de3e955d-a1c5-46c4-8915-c70791f720f9", "embedding": null, "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "525616b6-cbc2-44a9-80fc-bb9b9dc1ae59", "node_type": "4", "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13e710ad0b47406b53862a4fb5bb9128a323ca2bfd73775a35236d7715d013f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96b361f0-a79e-40ee-986d-da3fc5e40b13", "node_type": "1", "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6ddb7e1321b61932563042dba9d065130ef7e7fc01a9f7d2ddd207ec0e51a1ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "557a9a0f-5681-4a2c-9b46-c0b2fd5685d1", "node_type": "1", "metadata": {}, "hash": "22f18e5e01494499d35ae37da2840b1c5b5413a09e40d51791abe090ecd4710c", "class_name": "RelatedNodeInfo"}}, "hash": "e66362bedc12dd3ea2fb9f4ee4eba545974bad90cc261213e1d4e51b5ef0d9af", "text": "En el lugar del\nnombre de la clase base se permiten otras expresiones arbitrarias. Esto puede ser \u00fatil, por ejemplo, cuando la clase base\nest\u00e1 definida en otro m\u00f3dulo:\nclass ClaseDerivada(modulo.ClaseBase):\nLa ejecuci\u00f3n de una definici\u00f3n de clase derivada procede de la misma forma que una clase base. Cuando el objeto clase se\nconstruye, se tiene en cuenta a la clase base. Esto se usa para resolver referencias a atributos: si un atributo solicitado no\nse encuentra en la clase, la b\u00fasqueda contin\u00faa por la clase base. Esta regla se aplica recursivamente si la clase base\nmisma deriva de alguna otra clase.\nNo hay nada en especial en la instanciaci\u00f3n de clases derivadas: ClaseDerivada() crea una nueva instancia de la clase.\nLas referencias a m\u00e9todos se resuelven de la siguiente manera: se busca el atributo de clase correspondiente,\ndescendiendo por la cadena de clases base si es necesario, y la referencia al m\u00e9todo es v\u00e1lida si se entrega un objeto\nfunci\u00f3n.\nLas clases derivadas pueden redefinir m\u00e9todos de su clase base. Como los m\u00e9todos no tienen privilegios especiales cuando\nllaman a otros m\u00e9todos del mismo objeto, un m\u00e9todo de la clase base que llame a otro m\u00e9todo definido en la misma clase\nbase puede terminar llamando a un m\u00e9todo de la clase derivada que lo haya redefinido. (Para los programadores de C++:\nen Python todos los m\u00e9todos son en efecto virtuales.)\n 66", "start_char_idx": 1770, "end_char_idx": 3151, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "557a9a0f-5681-4a2c-9b46-c0b2fd5685d1": {"__data__": {"id_": "557a9a0f-5681-4a2c-9b46-c0b2fd5685d1", "embedding": null, "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0dbb2922-87f8-4e18-8797-bfad97717ee6", "node_type": "4", "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb73e6de77644efd9bccd136f9c84ad3bb62d4ddb37402ba56f5fab71da022aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de3e955d-a1c5-46c4-8915-c70791f720f9", "node_type": "1", "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e66362bedc12dd3ea2fb9f4ee4eba545974bad90cc261213e1d4e51b5ef0d9af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1e36ff7-fa18-454a-9c6d-409b7a82b1d7", "node_type": "1", "metadata": {}, "hash": "76e558d3ac0b874c0a928708c9aad3fb44722a37dd775d65b3f1565a03eb8910", "class_name": "RelatedNodeInfo"}}, "hash": "22f18e5e01494499d35ae37da2840b1c5b5413a09e40d51791abe090ecd4710c", "text": "Un m\u00e9todo redefinido en una clase derivada puede de hecho querer extender en vez de simplemente reemplazar al m\u00e9todo\nde la clase base con el mismo nombre. Hay una manera simple de llamar al m\u00e9todo de la clase base directamente:\nsimplemente llam\u00e1s a ClaseBase.metodo(self, argumentos). En ocasiones esto es \u00fatil para los clientes tambi\u00e9n.\n(Observ\u00e1 que esto s\u00f3lo funciona si la clase base es accesible como CalseBase en el \u00e1mbito global.)\nPython tiene dos funciones integradas que funcionan con herencia:\n\u007f\nUs\u00e1 isinstance() para verificar el tipo de una instancia: isinstance(obj, int) devuelve True solo si\nobj.__class__ es int o alguna clase derivada de int.\n\u007f\nUs\u00e1 issubclass() para comprobar herencia de clase: issubclass(bool, int) da True ya que bool es una\nsubclase de int. Sin embargo, issubclass(float, int) devuelve False porque float no es una subclase\nde int.\nHerencia m\u00faltiple\nPython tambi\u00e9n soporta una forma de herencia m\u00faltiple. Una definici\u00f3n de clase con m\u00faltiples clases base se ve as\u00ed:\nclass ClaseDerivada(Base1, Base2, Base3):\n    <declaraci\u00f3n-1>\n    .\n    .\n    .\n    <declaraci\u00f3n-N>\nPara la mayor\u00eda de los prop\u00f3sitos, en los casos m\u00e1s simples, pod\u00e9s pensar en la b\u00fasqueda de los atributos heredados de\nclases padres como primero en profundidad, de izquierda a derecha, sin repetir la misma clase cuando est\u00e1 dos veces en la\njerarqu\u00eda. Por lo tanto, si un atributo no se encuentra en ClaseDerivada, se busca en Base1, luego (recursivamente) en\nlas clases base de Base1, y s\u00f3lo si no se encuentra all\u00ed se lo busca en Base2, y as\u00ed sucesivamente.\nEn realidad es un poco m\u00e1s complejo que eso; el orden de resoluci\u00f3n de m\u00e9todos cambia din\u00e1micamente para soportar las\nllamadas cooperativas a super().", "start_char_idx": 0, "end_char_idx": 1713, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1e36ff7-fa18-454a-9c6d-409b7a82b1d7": {"__data__": {"id_": "d1e36ff7-fa18-454a-9c6d-409b7a82b1d7", "embedding": null, "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0dbb2922-87f8-4e18-8797-bfad97717ee6", "node_type": "4", "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb73e6de77644efd9bccd136f9c84ad3bb62d4ddb37402ba56f5fab71da022aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "557a9a0f-5681-4a2c-9b46-c0b2fd5685d1", "node_type": "1", "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "22f18e5e01494499d35ae37da2840b1c5b5413a09e40d51791abe090ecd4710c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b330a97c-97c2-4e52-912a-6b15f025a54b", "node_type": "1", "metadata": {}, "hash": "9765738547c000b24cd258f2e01bcf6209bbf72355d2fe471a6fe89fe80e3fad", "class_name": "RelatedNodeInfo"}}, "hash": "76e558d3ac0b874c0a928708c9aad3fb44722a37dd775d65b3f1565a03eb8910", "text": "Este enfoque es conocido en otros lenguajes con herencia m\u00faltiple como \"ll\u00e1mese al\nsiguiente m\u00e9todo\" y es m\u00e1s poderoso que la llamada al superior que se encuentra en lenguajes con s\u00f3lo herencia simple.\nEl ordenamiento din\u00e1mico es necesario porque todos los casos de herencia m\u00faltiple exhiben una o m\u00e1s relaciones en\ndiamante (cuando se puede llegar al menos a una de las clases base por distintos caminos desde la clase de m\u00e1s abajo).\nPor ejemplo, todas las clases heredan de object, por lo tanto cualquier caso de herencia m\u00faltiple provee m\u00e1s de un\ncamino para llegar a object. Para que las clases base no sean accedidas m\u00e1s de una vez, el algoritmo din\u00e1mico hace\nlineal el orden de b\u00fasqueda de manera que se preserve el orden de izquierda a derecha especificado en cada clase, que se\nllame a cada clase base s\u00f3lo una vez, y que sea mon\u00f3tona (lo cual significa que una clase puede tener clases derivadas sin\nafectar el orden de precedencia de sus clases bases). En conjunto, estas propiedades hacen posible dise\u00f1ar clases\nconfiables y extensibles con herencia m\u00faltiple. Para m\u00e1s detalles mir\u00e1 https://www.python.org/download/releases/2.3/mro/.\nVariables privadas\nLas variables \"privadas\" de instancia, que no pueden accederse excepto desde dentro de un objeto, no existen en Python.\nSin embargo, hay una convenci\u00f3n que se sigue en la mayor\u00eda del c\u00f3digo Python: un nombre prefijado con un gui\u00f3n bajo (por\nejemplo, _spam) deber\u00eda tratarse como una parte no p\u00fablica de la API (m\u00e1s all\u00e1 de que sea una funci\u00f3n, un m\u00e9todo, o un\ndato). Deber\u00eda considerarse un detalle de implementaci\u00f3n y que est\u00e1 sujeto a cambios sin aviso.\nYa que hay un caso de uso v\u00e1lido para los identificadores privados de clase (a saber: colisi\u00f3n de nombres con nombres\ndefinidos en las subclases), hay un soporte limitado para este mecanismo.", "start_char_idx": 1714, "end_char_idx": 3525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b330a97c-97c2-4e52-912a-6b15f025a54b": {"__data__": {"id_": "b330a97c-97c2-4e52-912a-6b15f025a54b", "embedding": null, "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0dbb2922-87f8-4e18-8797-bfad97717ee6", "node_type": "4", "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb73e6de77644efd9bccd136f9c84ad3bb62d4ddb37402ba56f5fab71da022aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1e36ff7-fa18-454a-9c6d-409b7a82b1d7", "node_type": "1", "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76e558d3ac0b874c0a928708c9aad3fb44722a37dd775d65b3f1565a03eb8910", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da706f7a-604f-416b-82d4-eaca018057e1", "node_type": "1", "metadata": {}, "hash": "e290bb13c6885819bce6ff7222b7613fc60f4eb68547348f2577573daa999aa9", "class_name": "RelatedNodeInfo"}}, "hash": "9765738547c000b24cd258f2e01bcf6209bbf72355d2fe471a6fe89fe80e3fad", "text": "Cualquier identificador con la forma __spam (al\nmenos dos guiones bajos al principio, como mucho un gui\u00f3n bajo al final) es textualmente reemplazado por\n_nombredeclase__spam, donde nombredeclase es el nombre de clase actual al que se le sacan guiones bajos del\ncomienzo (si los tuviera). Se modifica el nombre del identificador sin importar su posici\u00f3n sint\u00e1ctica, siempre y cuando ocurra\ndentro de la definici\u00f3n de una clase.\n 67", "start_char_idx": 3526, "end_char_idx": 3956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da706f7a-604f-416b-82d4-eaca018057e1": {"__data__": {"id_": "da706f7a-604f-416b-82d4-eaca018057e1", "embedding": null, "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4a7cfdb-f50d-41c1-ba3d-068260656679", "node_type": "4", "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "010f67d0dffae9104f4f4db35a39da7c54b63279d4675edefc8379c402b5b80d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b330a97c-97c2-4e52-912a-6b15f025a54b", "node_type": "1", "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9765738547c000b24cd258f2e01bcf6209bbf72355d2fe471a6fe89fe80e3fad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d86d941a-6d24-47c1-bd89-d15bffebaaea", "node_type": "1", "metadata": {}, "hash": "273084d7de358556d5ab846fcd8e075b1a776c6fd3a18b3e50e27649bb6b421c", "class_name": "RelatedNodeInfo"}}, "hash": "e290bb13c6885819bce6ff7222b7613fc60f4eb68547348f2577573daa999aa9", "text": "La modificaci\u00f3n de nombres es \u00fatil para dejar que las subclases sobreescriban los m\u00e9todos sin romper las llamadas a los\nm\u00e9todos desde la misma clase. Por ejemplo:\nclass Mapeo:\n    def __init__(self, iterable):\n        self.lista_de_items = []\n        self.__actualizar(iterable)\n    def actualizar(self, iterable):\n        for item in iterable:\n            self.lista_de_items.append(item)\n    __actualizar = actualizar   # copia privada del actualizar() original\nclass SubClaseMapeo(Mapeo):\n    def actualizar(self, keys, values):\n        # provee una nueva signatura para actualizar()\n        # pero no rompe __init__()\n        for item in zip(keys, values):\n            self.lista_de_items.append(item)\nHay que aclarar que las reglas de modificaci\u00f3n de nombres est\u00e1n dise\u00f1adas principalmente para evitar accidentes; es\nposible acceder o modificar una variable que es considerada como privada. Esto hasta puede resultar \u00fatil en circunstancias\nespeciales, tales como en el depurador.\nNotar que el c\u00f3digo pasado a exec o eval() no considera que el nombre de clase de la clase que invoca sea la clase\nactual; esto es similar al efecto de la sentencia global, efecto que es de similar manera restringido a c\u00f3digo que es\ncompilado en conjunto. La misma restricci\u00f3n aplica a getattr(), setattr() y delattr(), as\u00ed como cuando se\nreferencia a __dict__ directamente.\nCambalache\nA veces es \u00fatil tener un tipo de datos similar al \"registro\" de Pascal o la \"estructura\" de C, que sirva para juntar algunos\npocos \u00edtems con nombre.", "start_char_idx": 0, "end_char_idx": 1519, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d86d941a-6d24-47c1-bd89-d15bffebaaea": {"__data__": {"id_": "d86d941a-6d24-47c1-bd89-d15bffebaaea", "embedding": null, "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4a7cfdb-f50d-41c1-ba3d-068260656679", "node_type": "4", "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "010f67d0dffae9104f4f4db35a39da7c54b63279d4675edefc8379c402b5b80d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da706f7a-604f-416b-82d4-eaca018057e1", "node_type": "1", "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e290bb13c6885819bce6ff7222b7613fc60f4eb68547348f2577573daa999aa9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6db57725-df2c-45fe-bc89-81ba049e7e56", "node_type": "1", "metadata": {}, "hash": "6666daeff86a750db3c3675db905de35c8d7b6db526bdb324fcff2d85307820b", "class_name": "RelatedNodeInfo"}}, "hash": "273084d7de358556d5ab846fcd8e075b1a776c6fd3a18b3e50e27649bb6b421c", "text": "Una definici\u00f3n de clase vac\u00eda funcionar\u00e1 perfecto:\nclass Empleado:\n    pass\njuan = Empleado()  # Crear un registro de empleado vac\u00edo\n# Llenar los campos del registro\njuan.nombre = 'Juan Pistola'\njuan.depto = 'laboratorio de computaci\u00f3n'\njuan.salario = 1000\nAlg\u00fan c\u00f3digo Python que espera un tipo abstracto de datos en particular puede frecuentemente recibir en cambio una clase\nque emula los m\u00e9todos de aquel tipo de datos. Por ejemplo, si ten\u00e9s una funci\u00f3n que formatea algunos datos a partir de un\nobjeto archivo, pod\u00e9s definir una clase con m\u00e9todos read() y readline() que obtengan los datos de alguna cadena en\nmemoria intermedia, y pasarlo como argumento.\nLos objetos m\u00e9todo de instancia tienen atributos tambi\u00e9n: m.__self__ es el objeto instancia con el m\u00e9todo m(), y\nm.__func__ es el objeto funci\u00f3n correspondiente al m\u00e9todo.\nIteradores\nEs probable que hayas notado que la mayor\u00eda de los objetos contenedores pueden ser recorridos usando una sentencia\nfor:\n 68", "start_char_idx": 1520, "end_char_idx": 2487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6db57725-df2c-45fe-bc89-81ba049e7e56": {"__data__": {"id_": "6db57725-df2c-45fe-bc89-81ba049e7e56", "embedding": null, "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a0fac2c-7a09-4a1e-8f37-be8de3181a98", "node_type": "4", "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b3ee0d82b80e8f72b923268736703a7f0d3450d10c55bc0e539b7bc3efe0d30b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d86d941a-6d24-47c1-bd89-d15bffebaaea", "node_type": "1", "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "273084d7de358556d5ab846fcd8e075b1a776c6fd3a18b3e50e27649bb6b421c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b3089a8-6754-45fe-82b4-f07a9664b4f3", "node_type": "1", "metadata": {}, "hash": "d72cbea6448dccfb01653c7a9a5d3ea9a6485d27ea856a32e99c2b14dbea9ec8", "class_name": "RelatedNodeInfo"}}, "hash": "6666daeff86a750db3c3675db905de35c8d7b6db526bdb324fcff2d85307820b", "text": "for elemento in [1, 2, 3]:\n    print(elemento)\nfor elemento in (1, 2, 3):\n    print(elemento)\nfor clave in {'uno':1, 'dos':2}:\n    print(clave)\nfor caracter in \"123\":\n    print(caracter)\nfor linea in open(\"miarchivo.txt\"):\n    print(linea, end='')\nEste estilo de acceso es limpio, conciso y conveniente. El uso de iteradores est\u00e1 impregnado y unifica a Python. En\nbambalinas, la sentencia for llama a iter() en el objeto contenedor. La funci\u00f3n devuelve un objeto iterador que define el\nm\u00e9todo __next__() que accede elementos en el contenedor de a uno por vez. Cuando no hay m\u00e1s elementos,\n__next__() levanta una excepci\u00f3n StopIteration que le avisa al bucle del for que hay que terminar. Pod\u00e9s llamar al\nm\u00e9todo __next__() usando la funci\u00f3n integrada __next__(); este ejemplo muestra como funciona todo esto:\n>>> s = 'abc'\n>>> it = iter(s)\n>>> it\n<iterator object at 0x00A1DB50>\n>>> next(it)\n'a'\n>>> next(it)\n'b'\n>>> next(it)\n'c'\n>>> next(it)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in ?\n    next(it)\nStopIteration\nHabiendo visto la mec\u00e1nica del protocolo de iteraci\u00f3n, es f\u00e1cil agregar comportamiento de iterador a tus clases. Defin\u00ed un\nm\u00e9todo __iter__() que devuelva un objeto con un m\u00e9todo __next__(). Si la clase define __next__(), entonces\nalcanza con que __iter__() devuelva self:\n>>> class Reversa:\n...     \"\"\"Iterador para recorrer una secuencia marcha atr\u00e1s.\"\"\"", "start_char_idx": 0, "end_char_idx": 1390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b3089a8-6754-45fe-82b4-f07a9664b4f3": {"__data__": {"id_": "3b3089a8-6754-45fe-82b4-f07a9664b4f3", "embedding": null, "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a0fac2c-7a09-4a1e-8f37-be8de3181a98", "node_type": "4", "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b3ee0d82b80e8f72b923268736703a7f0d3450d10c55bc0e539b7bc3efe0d30b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6db57725-df2c-45fe-bc89-81ba049e7e56", "node_type": "1", "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6666daeff86a750db3c3675db905de35c8d7b6db526bdb324fcff2d85307820b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52e0d7db-1cd8-4af7-b6ff-342240db9b1a", "node_type": "1", "metadata": {}, "hash": "b4d2cb27295aeecd451b6c32de7388c7abe94144929f74c256c07c69fc352420", "class_name": "RelatedNodeInfo"}}, "hash": "d72cbea6448dccfb01653c7a9a5d3ea9a6485d27ea856a32e99c2b14dbea9ec8", "text": "...     def __init__(self, datos):\n...         self.datos = datos\n...         self.indice = len(datos)\n...     def __iter__(self):\n...         return self\n...     def __next__(self):\n...         if self.indice == 0:\n...             raise StopIteration\n...         self.indice = self.indice - 1\n...         return self.datos[self.indice]\n...\n>>> rev = Reversa('spam')\n>>> iter(rev)\n<__main__.Reversa object at 0x00A1DB50>\n>>> for char in rev:\n...     print(char)\n...\nm\na\n 69", "start_char_idx": 1391, "end_char_idx": 1864, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52e0d7db-1cd8-4af7-b6ff-342240db9b1a": {"__data__": {"id_": "52e0d7db-1cd8-4af7-b6ff-342240db9b1a", "embedding": null, "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67754d78-2d8a-42e0-9819-933966d70cfa", "node_type": "4", "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0354bde3ba58709728b832e9777f8fcdc1b143504fd3a574ee6d900e167795c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b3089a8-6754-45fe-82b4-f07a9664b4f3", "node_type": "1", "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d72cbea6448dccfb01653c7a9a5d3ea9a6485d27ea856a32e99c2b14dbea9ec8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0faeb552-eaff-45d7-9246-ede75c9571fe", "node_type": "1", "metadata": {}, "hash": "4e6ead093113d3c33d52cee18e7d27e5fe75fe3cfb86a49783d5549f736fa842", "class_name": "RelatedNodeInfo"}}, "hash": "b4d2cb27295aeecd451b6c32de7388c7abe94144929f74c256c07c69fc352420", "text": "p\ns\nGeneradores\nLos generadores son una simple y poderosa herramienta para crear iteradores. Se escriben como funciones regulares pero\nusan la sentencia yield cuando quieren devolver datos. Cada vez que se llama next() sobre \u00e9l, el generador contin\u00faa\ndesde donde dej\u00f3 (y recuerda todos los valores de datos y cual sentencia fue ejecutada \u00faltima). Un ejemplo muestra que los\ngeneradores pueden ser muy f\u00e1ciles de crear:\n>>> def reversa(datos):\n...     for indice in range(len(datos)-1, -1, -1):\n...         yield datos[indice]\n...\n>>> for letra in reversa('golf'):\n...     print(letra)\n...\nf\nl\no\ng\nTodo lo que puede ser hecho con generadores tambi\u00e9n puede ser hecho con iteradores basados en clases, como se\ndescribe en la secci\u00f3n anterior. Lo que hace que los generadores sean tan compactos es que los m\u00e9todos __iter__() y\n__next__() son creados autom\u00e1ticamente.\nOtra caracter\u00edstica clave es que las variables locales y el estado de la ejecuci\u00f3n son guardados autom\u00e1ticamente entre\nllamadas. Esto hace que la funci\u00f3n sea m\u00e1s f\u00e1cil de escribir y quede mucho m\u00e1s claro que hacerlo usando variables de\ninstancia tales como self.indice y self.datos.\nAdem\u00e1s de la creaci\u00f3n autom\u00e1tica de m\u00e9todos y el guardar el estado del programa, cuando los generadores terminan\nautom\u00e1ticamente levantan StopIteration. Combinadas, estas caracter\u00edsticas facilitan la creaci\u00f3n de iteradores, y hacen\nque no sea m\u00e1s esfuerzo que escribir una funci\u00f3n regular.\nExpresiones generadoras\nAlgunos generadores simples pueden ser codificados concisamente como expresiones usando una sintaxis similar a las\nlistas por comprensi\u00f3n pero con par\u00e9ntesis en vez de corchetes. Estas expresiones se utilizan en situaciones donde el\ngenerador es usado inmediatamente por una funci\u00f3n que lo contiene. Las expresiones generadoras son m\u00e1s compactas\npero menos vers\u00e1tiles que definiciones completas de generadores, y tienden a utilizar menos memoria que las listas por\ncomprensi\u00f3n equivalentes.", "start_char_idx": 0, "end_char_idx": 1950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0faeb552-eaff-45d7-9246-ede75c9571fe": {"__data__": {"id_": "0faeb552-eaff-45d7-9246-ede75c9571fe", "embedding": null, "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67754d78-2d8a-42e0-9819-933966d70cfa", "node_type": "4", "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0354bde3ba58709728b832e9777f8fcdc1b143504fd3a574ee6d900e167795c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52e0d7db-1cd8-4af7-b6ff-342240db9b1a", "node_type": "1", "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b4d2cb27295aeecd451b6c32de7388c7abe94144929f74c256c07c69fc352420", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d34b9ad7-1163-45be-b1f1-1f91a856aa09", "node_type": "1", "metadata": {}, "hash": "e1e4a3059ed2c096c4c3ab0b7239d2429838e2829d004aace8555712f162c464", "class_name": "RelatedNodeInfo"}}, "hash": "4e6ead093113d3c33d52cee18e7d27e5fe75fe3cfb86a49783d5549f736fa842", "text": "Ejemplos:\n>>> sum(i*i for i in range(10))                 # suma de cuadrados\n285\n>>> xvec = [10, 20, 30]\n>>> yvec = [7, 5, 3]\n>>> sum(x*y for x,y in zip(xvec, yvec))         # producto escalar\n260\n>>> from math import pi, sin\n>>> tabla_de_senos = {x: sin(x*pi/180) for x in range(0, 91)}\n>>> palabras_unicas = set(word  for line in page  for word in line.split())\n 70", "start_char_idx": 1951, "end_char_idx": 2319, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d34b9ad7-1163-45be-b1f1-1f91a856aa09": {"__data__": {"id_": "d34b9ad7-1163-45be-b1f1-1f91a856aa09", "embedding": null, "metadata": {"page_label": "79", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e40b1e16-cbe1-46e8-baae-5fe32152ece1", "node_type": "4", "metadata": {"page_label": "79", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "27a4ef0af181272a9d27d2f8333d7f4b082b577fcca0ec1bcb1511c98fd93313", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0faeb552-eaff-45d7-9246-ede75c9571fe", "node_type": "1", "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4e6ead093113d3c33d52cee18e7d27e5fe75fe3cfb86a49783d5549f736fa842", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26bdf170-4fdb-4581-97a7-7c67d8c98d31", "node_type": "1", "metadata": {}, "hash": "faa34e1845d40d64cfdfcdaf4158a8be7ad1a8dfb139a5e4e204fa2678a2aa0d", "class_name": "RelatedNodeInfo"}}, "hash": "e1e4a3059ed2c096c4c3ab0b7239d2429838e2829d004aace8555712f162c464", "text": ">>> mejor_promedio = max((alumno.promedio, alumno.nombre) for alumno in graduados)\n>>> data = 'golf'\n>>> list(data[i] for i in range(len(data) - 1, -1, -1))\n['f', 'l', 'o', 'g']\n8\nExcepto por un detalle. Los objetos m\u00f3dulo tienen un atributo secreto de solo lectura llamado __dict__ que\ndevuelve el diccionario usado para implementar el espacio de nombres del m\u00f3dulo; el nombre __dict__ es un\natributo, pero no es un nombre global. Obviamente, esto viola la abstracci\u00f3n de la implementaci\u00f3n de espacios de\nnombres, y debe ser restringido a cosas tales como depuradores post-mortem.\n 71", "start_char_idx": 0, "end_char_idx": 585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26bdf170-4fdb-4581-97a7-7c67d8c98d31": {"__data__": {"id_": "26bdf170-4fdb-4581-97a7-7c67d8c98d31", "embedding": null, "metadata": {"page_label": "80", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "df266c90-4474-49f7-b4df-58557c430490", "node_type": "4", "metadata": {"page_label": "80", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4e91fa3042d6765784e4089fe5e0ee082b2027f8f15c700db5fb27357fceede", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d34b9ad7-1163-45be-b1f1-1f91a856aa09", "node_type": "1", "metadata": {"page_label": "79", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e1e4a3059ed2c096c4c3ab0b7239d2429838e2829d004aace8555712f162c464", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da020c15-acfe-4a9c-81a6-da3e68d878f9", "node_type": "1", "metadata": {}, "hash": "5a9a35d74752c216aa32e17898819b68f08ebd913a98dc4aae5e8d4975efb989", "class_name": "RelatedNodeInfo"}}, "hash": "faa34e1845d40d64cfdfcdaf4158a8be7ad1a8dfb139a5e4e204fa2678a2aa0d", "text": "Peque\u00f1o paseo por la Biblioteca \nEst\u00e1ndar\nInterfaz al sistema operativoEl m\u00f3dulo os provee docenas de funciones para interactuar con el sistema operativo:\n>>> import os\n>>> os.getcwd()      # devuelve el directorio de trabajo actual\n'C:\\\\Python36'\n>>> os.chdir('/server/accesslogs')   # cambia el directorio de trabajo\n>>> os.system('mkdir today')   # ejecuta el comando 'mkdir' en el sistema\n0\nAsegurate de usar el estilo import os en lugar de from os import *. Esto evitar\u00e1 que os.open() oculte a la funci\u00f3n\nintegrada open(), que trabaja bastante diferente.\nLas funciones integradas dir() y help() son \u00fatiles como ayudas interactivas para trabajar con m\u00f3dulos grandes como\nos:\n>>> import os\n>>> dir(os)\n<devuelve una lista de todas las funciones del m\u00f3dulo>\n>>> help(os)\n<devuelve un manual creado a partir de las documentaciones del m\u00f3dulo>\nPara tareas diarias de administraci\u00f3n de archivos y directorios, el m\u00f3dulo shutil provee una interfaz de m\u00e1s alto nivel que\nes m\u00e1s f\u00e1cil de usar:\n>>> import shutil\n>>> shutil.copyfile('datos.db', 'archivo.db')\n'archivo.db'\n>>> shutil.move('/build/executables', 'dir_instalac')\n'dir_instalac'\nComodines de archivos\nEl m\u00f3dulo glob provee una funci\u00f3n para hacer listas de archivos a partir de b\u00fasquedas con comodines en directorios:\n>>> import glob\n>>> glob.glob('*.py')\n['primes.py', 'random.py', 'quote.py']\nArgumentos de linea de \u00f3rdenes\nLos programas frecuentemente necesitan procesar argumentos de linea de \u00f3rdenes. Estos argumentos se almacenan en el\natributo argv del m\u00f3dulo sys como una lista. Por ejemplo, la siguiente salida resulta de ejecutar\npython demo.py uno dos tres en la l\u00ednea de \u00f3rdenes:\n>>> import sys\n>>> print(sys.argv)\n['demo.py', 'uno', 'dos', 'tres']\n 72", "start_char_idx": 0, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da020c15-acfe-4a9c-81a6-da3e68d878f9": {"__data__": {"id_": "da020c15-acfe-4a9c-81a6-da3e68d878f9", "embedding": null, "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d20308c-b41a-442a-96a4-10a4c7c2ec60", "node_type": "4", "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0ad662dc7043cffaa5521354c763e7cbf76ec2f74c36bbeca5c930b40871c437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26bdf170-4fdb-4581-97a7-7c67d8c98d31", "node_type": "1", "metadata": {"page_label": "80", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "faa34e1845d40d64cfdfcdaf4158a8be7ad1a8dfb139a5e4e204fa2678a2aa0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec626228-e5be-4a77-a73f-08ea0c16c994", "node_type": "1", "metadata": {}, "hash": "0e6688ce913dce63cfdad2acbf5a35f902c98360c06dac3f8a9bfe1c0b3b8c49", "class_name": "RelatedNodeInfo"}}, "hash": "5a9a35d74752c216aa32e17898819b68f08ebd913a98dc4aae5e8d4975efb989", "text": "El m\u00f3dulo getopt procesa sys.argv usando las convenciones de la funci\u00f3n de Unix getopt(). El m\u00f3dulo argparse\nprovee un procesamiento m\u00e1s flexible de la linea de \u00f3rdenes.\nRedirecci\u00f3n de la salida de error y finalizaci\u00f3n del programa\nEl m\u00f3dulo sys tambi\u00e9n tiene atributos para stdin, stdout, y stderr. Este \u00faltimo es \u00fatil para emitir mensajes de alerta y error\npara que se vean incluso cuando se haya redireccionado stdout:\n>>> sys.stderr.write('Alerta, archivo de log no encontrado\\n')\nAlerta, archivo de log no encontrado\nLa forma m\u00e1s directa de terminar un programa es usar sys.exit().\nCoincidencia en patrones de cadenas\nEl m\u00f3dulo re provee herramientas de expresiones regulares para un procesamiento avanzado de cadenas. Para\nmanipulaci\u00f3n y coincidencias complejas, las expresiones regulares ofrecen soluciones concisas y optimizadas:\n>>> import re\n>>> re.findall(r'\\bt[a-z]*', 'tres felices tigres comen trigo')\n['tres', 'tigres', 'trigo']\n>>> re.sub(r'(\\b[a-z]+) \\1', r'\\1', 'gato en el el sombrero')\n'gato en el sombrero'\nCuando se necesita algo m\u00e1s sencillo solamente, se prefieren los m\u00e9todos de las cadenas porque son m\u00e1s f\u00e1ciles de leer y\ndepurar.", "start_char_idx": 0, "end_char_idx": 1157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec626228-e5be-4a77-a73f-08ea0c16c994": {"__data__": {"id_": "ec626228-e5be-4a77-a73f-08ea0c16c994", "embedding": null, "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d20308c-b41a-442a-96a4-10a4c7c2ec60", "node_type": "4", "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0ad662dc7043cffaa5521354c763e7cbf76ec2f74c36bbeca5c930b40871c437", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da020c15-acfe-4a9c-81a6-da3e68d878f9", "node_type": "1", "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5a9a35d74752c216aa32e17898819b68f08ebd913a98dc4aae5e8d4975efb989", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "126bcd9b-e88f-4820-9ef0-bb214b0bda5e", "node_type": "1", "metadata": {}, "hash": "5d5aa0ddc922b5a7f702a9a28b1fc9b940b0435bf3d6daf4122749226742df10", "class_name": "RelatedNodeInfo"}}, "hash": "0e6688ce913dce63cfdad2acbf5a35f902c98360c06dac3f8a9bfe1c0b3b8c49", "text": ">>> 'te para tos'.replace('tos', 'dos')\n'te para dos'\nMatem\u00e1tica\nEl m\u00f3dulo math permite el acceso a las funciones de la biblioteca C subyacente para la matem\u00e1tica de punto flotante:\n>>> import math\n>>> math.cos(math.pi / 4)\n0.70710678118654757\n>>> math.log(1024, 2)\n10.0\nEl m\u00f3dulo random provee herramientas para realizar selecciones al azar:\n>>> import random\n>>> random.choice(['manzana', 'pera', 'banana'])\n'manzana'\n>>> random.sample(range(100), 10)   # elecci\u00f3n sin reemplazo\n[30, 83, 16, 4, 8, 81, 41, 50, 18, 33]\n>>> random.random()    # un float al azar\n0.17970987693706186\n>>> random.randrange(6)    # un entero al azar tomado de range(6)\n4\nEl m\u00f3dulo statistics calcula propiedades de estad\u00edstica b\u00e1sica (la media, mediana, varianza, etc) de datos n\u00famericos:\n>>> import statistics\n>>> datos = [2.75, 1.75, 1.25, 0.25, 0.5, 1.25, 3.5]\n>>> statistics.mean(datos)\n1.6071428571428572\n>>> statistics.median(datos)\n 73", "start_char_idx": 1158, "end_char_idx": 2079, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "126bcd9b-e88f-4820-9ef0-bb214b0bda5e": {"__data__": {"id_": "126bcd9b-e88f-4820-9ef0-bb214b0bda5e", "embedding": null, "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c4a8659-26db-44d2-b748-e769c564b6df", "node_type": "4", "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "507355f6559ac1a422d00984a13f9f535ec4f4b4bd3f3d966d578ac4b0fb3e31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec626228-e5be-4a77-a73f-08ea0c16c994", "node_type": "1", "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0e6688ce913dce63cfdad2acbf5a35f902c98360c06dac3f8a9bfe1c0b3b8c49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83ccaca9-1edb-4232-aa88-fe92d5f59a5c", "node_type": "1", "metadata": {}, "hash": "c1a1df7c6f10f33e319a51701c1d59bf5340e102c343bde7dec9eb8aac54604c", "class_name": "RelatedNodeInfo"}}, "hash": "5d5aa0ddc922b5a7f702a9a28b1fc9b940b0435bf3d6daf4122749226742df10", "text": "1.25\n>>> statistics.variance(datos)\n1.3720238095238095\nEl proyecto SciPy <https://scipy.org> tiene muchos otros m\u00f3dulos para c\u00e1lculos num\u00e9ricos.\nAcceso a Internet\nHay varios m\u00f3dulos para acceder a internet y procesar sus protocolos. Dos de los m\u00e1s simples son urllib.request para\ntraer data de URLs y smtplib para mandar correos:\n>>> with urlopen('http://tycho.usno.navy.mil/cgi-bin/timer.pl') as response:\n...     for line in response:\n...         line = line.decode('utf-8')  # Decoding the binary data to text.\n...         if 'EST' in line or 'EDT' in line:  # look for Eastern Time\n...             print(line)\n<BR>Nov. 25, 09:43:32 PM EST\n>>> import smtplib\n>>> server = smtplib.SMTP('localhost')\n>>> server.sendmail('soothsayer@ejemplo.org', 'jcaesar@ejemplo.org',\n... \"\"\"To: jcaesar@ejemplo.org\n... From: soothsayer@ejemplo.org\n...\n... Ojo al piojo.\n... \"\"\")\n>>> server.quit()\n(Not\u00e1 que el segundo ejemplo necesita un servidor de correo corriendo en la m\u00e1quina local)\nFechas y tiempos\nEl m\u00f3dulo datetime ofrece clases para manejar fechas y tiempos tanto de manera simple como compleja. Aunque soporta\naritm\u00e9tica sobre fechas y tiempos, el foco de la implementaci\u00f3n es en la extracci\u00f3n eficiente de partes para manejarlas o\nformatear la salida. El m\u00f3dulo tambi\u00e9n soporta objetos que son conscientes de la zona horaria.\n>>> # las fechas son f\u00e1cilmente construidas y formateadas\n>>> from datetime import date\n>>> hoy = date.today()\n>>> hoy\ndatetime.date(2009, 7, 19)\n>>> # nos aseguramos de tener la info de localizaci\u00f3n correcta\n>>> import locale\n>>> locale.setlocale(locale.LC_ALL, locale.getdefaultlocale())\n'es_ES.UTF8'\n>>> hoy.strftime(\"%m-%d-%y.", "start_char_idx": 0, "end_char_idx": 1654, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83ccaca9-1edb-4232-aa88-fe92d5f59a5c": {"__data__": {"id_": "83ccaca9-1edb-4232-aa88-fe92d5f59a5c", "embedding": null, "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c4a8659-26db-44d2-b748-e769c564b6df", "node_type": "4", "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "507355f6559ac1a422d00984a13f9f535ec4f4b4bd3f3d966d578ac4b0fb3e31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "126bcd9b-e88f-4820-9ef0-bb214b0bda5e", "node_type": "1", "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5d5aa0ddc922b5a7f702a9a28b1fc9b940b0435bf3d6daf4122749226742df10", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "adb1a284-d42a-4018-a3ac-4baf4913cdf1", "node_type": "1", "metadata": {}, "hash": "9016157ff8edb3eb348a1f2ba484e9c2f77c9380acdfd6a327090e0b542f2b3e", "class_name": "RelatedNodeInfo"}}, "hash": "c1a1df7c6f10f33e319a51701c1d59bf5340e102c343bde7dec9eb8aac54604c", "text": "%d %b %Y es %A. hoy es %d de %B.\")\n'07-19-09. 19 jul 2009 es domingo. hoy es 19 de julio.'\n>>> # las fechas soportan aritm\u00e9tica de calendario\n>>> nacimiento = date(1964, 7, 31)\n>>> edad = hoy - nacimiento\n>>> edad.days\n14368\n 74", "start_char_idx": 1655, "end_char_idx": 1883, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "adb1a284-d42a-4018-a3ac-4baf4913cdf1": {"__data__": {"id_": "adb1a284-d42a-4018-a3ac-4baf4913cdf1", "embedding": null, "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4acf6c7a-4a2b-4d52-80cb-f6ca8d82d631", "node_type": "4", "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aa05c63ea4b4644d5e6073159b2e846948ca421e5f88f650443245deec4fec5b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83ccaca9-1edb-4232-aa88-fe92d5f59a5c", "node_type": "1", "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1a1df7c6f10f33e319a51701c1d59bf5340e102c343bde7dec9eb8aac54604c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "456ca80c-6906-49e1-a56c-38392d599891", "node_type": "1", "metadata": {}, "hash": "a37b3cdd50898c4897e67c44c23eb2001eb7f68a1c3f61bb700992bde9e43f59", "class_name": "RelatedNodeInfo"}}, "hash": "9016157ff8edb3eb348a1f2ba484e9c2f77c9380acdfd6a327090e0b542f2b3e", "text": "Compresi\u00f3n de datosLos formatos para archivar y comprimir datos se soportan directamente con los m\u00f3dulos: zlib, gzip, bz2, lzma,\nzipfile y tarfile.\n>>> import zlib\n>>> s = b'witch which has which witches wrist watch'\n>>> len(s)\n41\n>>> t = zlib.compress(s)\n>>> len(t)\n37\n>>> zlib.decompress(t)\nb'witch which has which witches wrist watch'\n>>> zlib.crc32(s)\n226805979\nMedici\u00f3n de rendimiento\nAlgunos usuarios de Python desarrollan un profundo inter\u00e9s en saber el rendimiento relativo de las diferentes soluciones al\nmismo problema. Python provee una herramienta de medici\u00f3n que responde esas preguntas inmediatamente.\nPor ejemplo, puede ser tentador usar la caracter\u00edstica de empaquetamiento y desempaquetamiento de las tuplas en lugar de\nla soluci\u00f3n tradicional para intercambiar argumentos. El m\u00f3dulo timeit muestra rapidamente una modesta ventaja de\nrendimiento:\n>>> from timeit import Timer\n>>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit()\n0.57535828626024577\n>>> Timer('a,b = b,a', 'a=1; b=2').timeit()\n0.54962537085770791\nEn contraste con el fino nivel de granularidad del m\u00f3dulo timeit, los m\u00f3dulos profile y pstats proveen herramientas\npara identificar secciones cr\u00edticas de tiempo en bloques de c\u00f3digo m\u00e1s grandes.\nControl de calidad\nUna forma para desarrollar software de alta calidad es escribir pruebas para cada funci\u00f3n mientras se la desarrolla, y correr\nesas pruebas frecuentemente durante el proceso de desarrollo.\nEl m\u00f3dulo doctest provee una herramienta para revisar un m\u00f3dulo y validar las pruebas integradas en las cadenas de\ndocumentaci\u00f3n (o docstring) del programa. La construcci\u00f3n de las pruebas es tan sencillo como cortar y pegar una\nejecuci\u00f3n t\u00edpica junto con sus resultados en los docstrings.", "start_char_idx": 0, "end_char_idx": 1716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "456ca80c-6906-49e1-a56c-38392d599891": {"__data__": {"id_": "456ca80c-6906-49e1-a56c-38392d599891", "embedding": null, "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4acf6c7a-4a2b-4d52-80cb-f6ca8d82d631", "node_type": "4", "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aa05c63ea4b4644d5e6073159b2e846948ca421e5f88f650443245deec4fec5b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "adb1a284-d42a-4018-a3ac-4baf4913cdf1", "node_type": "1", "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9016157ff8edb3eb348a1f2ba484e9c2f77c9380acdfd6a327090e0b542f2b3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61df13f1-6782-4c13-8d57-e3275f219f1a", "node_type": "1", "metadata": {}, "hash": "59b3a65b6c561f7149174be4c687ccffde1439d1f414f6e52c7500fa657d0cab", "class_name": "RelatedNodeInfo"}}, "hash": "a37b3cdd50898c4897e67c44c23eb2001eb7f68a1c3f61bb700992bde9e43f59", "text": "Esto mejora la documentaci\u00f3n al proveer al usuario un ejemplo y\npermite que el m\u00f3dulo doctest se asegure que el c\u00f3digo permanece fiel a la documentaci\u00f3n:\ndef promedio(valores):\n    \"\"\"Calcula la media aritm\u00e9tica de una lista de n\u00fameros.\n    >>> print(promedio([20, 30, 70]))\n    40.0\n    \"\"\"\n    return sum(valores) / len(valores)\nimport doctest\ndoctest.testmod()   # valida autom\u00e1ticamente las pruebas integradas\nEl m\u00f3dulo unittest necesita m\u00e1s esfuerzo que el m\u00f3dulo doctest, pero permite que se mantenga en un archivo\nseparado un conjunto m\u00e1s comprensivo de pruebas:\n 75", "start_char_idx": 1717, "end_char_idx": 2290, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61df13f1-6782-4c13-8d57-e3275f219f1a": {"__data__": {"id_": "61df13f1-6782-4c13-8d57-e3275f219f1a", "embedding": null, "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48eb1f04-6d81-4122-a53d-daf0ac6e6ce4", "node_type": "4", "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a47a7c5a3ab99278aef8cc0545b9c06de0508af12c93254051e41353d7655c9f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "456ca80c-6906-49e1-a56c-38392d599891", "node_type": "1", "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a37b3cdd50898c4897e67c44c23eb2001eb7f68a1c3f61bb700992bde9e43f59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "910b9f11-10e8-4b08-849b-0bdf621369cb", "node_type": "1", "metadata": {}, "hash": "6dfa639bf57246b532bc67da5c1acd0ab70bbc11dfe2f2c64a0dd22cc99e1c51", "class_name": "RelatedNodeInfo"}}, "hash": "59b3a65b6c561f7149174be4c687ccffde1439d1f414f6e52c7500fa657d0cab", "text": "import unittest\nclass TestFuncionesEstadisticas(unittest.TestCase):\n    def test_promedio(self):\n        self.assertEqual(promedio([20, 30, 70]), 40.0)\n        self.assertEqual(round(promedio([1, 5, 7]), 1), 4.3)\n        with self.assertRaises(ZeroDivisionError):\n           promedio([])\n        with self.assertRaises(TypeError):\n           promedio(20, 30, 70)\nunittest.main()  # llamarlo de la linea de comandos ejecuta todas las pruebas\nLas pilas incluidas\nPython tiene una filosof\u00eda de \"pilas incluidas\". Esto se ve mejor en las capacidades robustas y sofisticadas de sus paquetes\nm\u00e1s grandes. Por ejemplo:\n\u007f\nLos m\u00f3dulos xmlrpc.client y xmlrpc.server hacen que implementar llamadas a procedimientos remotos sea\nuna tarea trivial. A pesar de los nombres de los m\u00f3dulos, no se necesita conocimiento directo o manejo de XML.\n\u007f\nEl paquete email es una biblioteca para manejar mensajes de mail, incluyendo MIME y otros mensajes basados en\nRFC 2822. Al contrario de smtplib y poplib que en realidad env\u00edan y reciben mensajes, el paquete email tiene\nun conjunto de herramientas completo para construir y decodificar estructuras complejas de mensajes (incluyendo\nadjuntos) y para implementar protocolos de cabecera y codificaci\u00f3n de Internet.\n\u007f\nEl paquete json provee soporte robusto para parsear este popular formato de intercambio de datos. El m\u00f3dulo csv\nsoporta una lectura y escritura directa de archivos de valores separados por coma, comunmente soportados por bases\nde datos y hojas de c\u00e1lculos. Procesar XML es soportado por los paquetes xml.etree.ElementTree, xml.dom y\nxml.sax. Juntos, estos tres m\u00f3dulos y paquetes simplifican ampliamente el intercambio de datos entre aplicaciones\nPython y otras herramientas.", "start_char_idx": 0, "end_char_idx": 1717, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "910b9f11-10e8-4b08-849b-0bdf621369cb": {"__data__": {"id_": "910b9f11-10e8-4b08-849b-0bdf621369cb", "embedding": null, "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48eb1f04-6d81-4122-a53d-daf0ac6e6ce4", "node_type": "4", "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a47a7c5a3ab99278aef8cc0545b9c06de0508af12c93254051e41353d7655c9f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61df13f1-6782-4c13-8d57-e3275f219f1a", "node_type": "1", "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59b3a65b6c561f7149174be4c687ccffde1439d1f414f6e52c7500fa657d0cab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1169d4b8-5f9c-4b15-ac38-24e8ab17ceb0", "node_type": "1", "metadata": {}, "hash": "7264e183d48d2c9b9a0a276419bfcec1f64f603bef64b66b2f777c5880ac759a", "class_name": "RelatedNodeInfo"}}, "hash": "6dfa639bf57246b532bc67da5c1acd0ab70bbc11dfe2f2c64a0dd22cc99e1c51", "text": "\u007f\nEl m\u00f3dulo sqlite3 es un wrapper para la librer\u00eda de base de datos SQLite, proveyendo una base de datos\npersistente que puede ser actualizada y accedida utilizando sintaxis SQL ligeramente no est\u00e1ndar.\n\u007f\nSe soporta la internacionalizaci\u00f3n a trav\u00e9s de varios m\u00f3dulos, incluyendo gettext, locale, y el paquete codecs.\n 76", "start_char_idx": 1718, "end_char_idx": 2038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1169d4b8-5f9c-4b15-ac38-24e8ab17ceb0": {"__data__": {"id_": "1169d4b8-5f9c-4b15-ac38-24e8ab17ceb0", "embedding": null, "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bda73d1c-5385-4628-b78a-a4961819d273", "node_type": "4", "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5266251c3919e0e20542d5bedac6a454bdea6521682aa3edf27dc85d4437e764", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "910b9f11-10e8-4b08-849b-0bdf621369cb", "node_type": "1", "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6dfa639bf57246b532bc67da5c1acd0ab70bbc11dfe2f2c64a0dd22cc99e1c51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76196820-1392-4b79-80f0-5e50ab26688b", "node_type": "1", "metadata": {}, "hash": "b24fb381b8d3111d4c811532ae301a1680f3ec80482d27f41a00182269eefc38", "class_name": "RelatedNodeInfo"}}, "hash": "7264e183d48d2c9b9a0a276419bfcec1f64f603bef64b66b2f777c5880ac759a", "text": "Peque\u00f1o paseo por la Biblioteca \nEst\u00e1ndar - Parte IIEste segundo paseo cubre m\u00f3dulos m\u00e1s avanzados que facilitan necesidades de programaci\u00f3n complejas. Estos m\u00f3dulos\nraramente se usan en scripts cortos.\nFormato de salida\nEl m\u00f3dulo reprlib provee una versi\u00f3n de repr() ajustada para mostrar contenedores grandes o profundamente\nanidados, en forma abreviada:\n>>> import reprlib\n>>> reprlib.repr(set('supercalifragilisticoespialidoso'))\n\"{'a', 'c', 'd', 'e', 'f', 'g', ...}\"\nEl m\u00f3dulo pprint ofrece un control m\u00e1s sofisticado de la forma en que se imprimen tanto los objetos predefinidos como\nlos objetos definidos por el usuario, de manera que sean legibles por el int\u00e9rprete. Cuando el resultado ocupa m\u00e1s de una\nl\u00ednea, el generador de \"impresiones lindas\" agrega saltos de l\u00ednea y sangr\u00edas para mostrar la estructura de los datos m\u00e1s\nclaramente:\n>>> import pprint\n>>> t = [[[['negro', 'turquesa'], 'blanco', ['verde', 'rojo']], [['magenta',\n...     'amarillo'], 'azul']]]\n...\n>>> pprint.pprint(t, width=30)\n[[[['negro', 'turquesa'],\n   'blanco',\n   ['verde', 'rojo']],\n  [['magenta', 'amarillo'],\n   'azul']]]\nEl m\u00f3dulo textwrap formatea p\u00e1rrafos de texto para que quepan dentro de cierto ancho de pantalla:\n>>> import textwrap\n>>> doc = \"\"\"El m\u00e9todo wrap() es como fill(), excepto que devuelve\n... una lista de strings en lugar de una gran string con saltos de\n... l\u00ednea como separadores.\"\"\"\n>>> print(textwrap.fill(doc, width=40))\nEl m\u00e9todo wrap() es como fill(), excepto\nque devuelve una lista de strings en\nlugar de una gran string con saltos de\nl\u00ednea como separadores.\nEl m\u00f3dulo locale accede a una base de datos de formatos espec\u00edficos a una cultura.", "start_char_idx": 0, "end_char_idx": 1656, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76196820-1392-4b79-80f0-5e50ab26688b": {"__data__": {"id_": "76196820-1392-4b79-80f0-5e50ab26688b", "embedding": null, "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bda73d1c-5385-4628-b78a-a4961819d273", "node_type": "4", "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5266251c3919e0e20542d5bedac6a454bdea6521682aa3edf27dc85d4437e764", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1169d4b8-5f9c-4b15-ac38-24e8ab17ceb0", "node_type": "1", "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7264e183d48d2c9b9a0a276419bfcec1f64f603bef64b66b2f777c5880ac759a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bce4e170-8b29-424a-99ce-135278624385", "node_type": "1", "metadata": {}, "hash": "dea3ad360d9264b0b953ef6595a25bde9c0c4451fa4d0b08ee48b7b3827d1437", "class_name": "RelatedNodeInfo"}}, "hash": "b24fb381b8d3111d4c811532ae301a1680f3ec80482d27f41a00182269eefc38", "text": "El atributo grouping de la funci\u00f3n\nformat() permite una forma directa de formatear n\u00fameros con separadores de grupo:\n>>> import locale\n>>> locale.setlocale(locale.LC_ALL, '')\n'Spanish_Argentina.1252'\n>>> conv = locale.localeconv()      # obtener un mapeo de convenciones\n>>> x = 1234567.8\n>>> locale.format(\"%d\", x, grouping=True)\n'1.234.567'\n 77", "start_char_idx": 1657, "end_char_idx": 2003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bce4e170-8b29-424a-99ce-135278624385": {"__data__": {"id_": "bce4e170-8b29-424a-99ce-135278624385", "embedding": null, "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89400fa6-7b38-439f-a897-42d17a327ad6", "node_type": "4", "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4bfc28d490da49b73c0424b67a3b0b6cd8ac0ea53ba7e4760069e4c07c999f51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76196820-1392-4b79-80f0-5e50ab26688b", "node_type": "1", "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b24fb381b8d3111d4c811532ae301a1680f3ec80482d27f41a00182269eefc38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "404df95b-a676-4c2f-9b95-72e48856a36a", "node_type": "1", "metadata": {}, "hash": "2338772cd8adfb92fdb9f04642707cdc0ea4193a13944ceb6b3d508d4015ca0f", "class_name": "RelatedNodeInfo"}}, "hash": "dea3ad360d9264b0b953ef6595a25bde9c0c4451fa4d0b08ee48b7b3827d1437", "text": ">>> locale.format_string(\"%s%.*f\", (conv['currency_symbol'],\n...                      conv['frac_digits'], x), grouping=True)\n'$1.234.567,80'\nPlantillas\nEl m\u00f3dulo string incluye una clase vers\u00e1til Template (plantilla) con una sintaxis simplificada apta para ser editada por\nusuarios finales. Esto permite que los usuarios personalicen sus aplicaciones sin necesidad de modificar la aplicaci\u00f3n en s\u00ed.\nEl formato usa marcadores cuyos nombres se forman con $ seguido de identificadores Python v\u00e1lidos (caracteres\nalfanum\u00e9ricos y gui\u00f3n de subrayado). Si se los encierra entre llaves, pueden seguir m\u00e1s caracteres alfanum\u00e9ricos sin\nnecesidad de dejar espacios en blanco. $$ genera un $:\n>>> from string import Template\n>>> t = Template('${village}folk send $$10 to $cause.')\n>>> t.substitute(village='Nottingham', cause='the ditch fund')\n'Nottinghamfolk send $10 to the ditch fund.'\nEl m\u00e9todo substitute() lanza KeyError cuando no se suministra ning\u00fan valor para un marcador mediante un\ndiccionario o argumento por nombre. Para algunas aplicaciones los datos suministrados por el usuario puede ser\nincompletos, y el m\u00e9todo safe_substitute() puede ser m\u00e1s apropiado: deja los marcadores inalterados cuando hay\ndatos faltantes:\n>>> t = Template('Return the $item to $owner.')\n>>> d = dict(item='unladen swallow')\n>>> t.substitute(d)\nTraceback (most recent call last):\n  ...\nKeyError: 'owner'\n>>> t.safe_substitute(d)\n'Return the unladen swallow to $owner.'\nLas subclases de Template pueden especificar un delimitador propio.", "start_char_idx": 0, "end_char_idx": 1517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "404df95b-a676-4c2f-9b95-72e48856a36a": {"__data__": {"id_": "404df95b-a676-4c2f-9b95-72e48856a36a", "embedding": null, "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89400fa6-7b38-439f-a897-42d17a327ad6", "node_type": "4", "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4bfc28d490da49b73c0424b67a3b0b6cd8ac0ea53ba7e4760069e4c07c999f51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bce4e170-8b29-424a-99ce-135278624385", "node_type": "1", "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dea3ad360d9264b0b953ef6595a25bde9c0c4451fa4d0b08ee48b7b3827d1437", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c6f9b93-5974-48f4-8310-e4882c381aca", "node_type": "1", "metadata": {}, "hash": "2ad63651a46d1555a509f07323a78b77f54ce1ceae6d585dc0b8d53ca0b4cd7d", "class_name": "RelatedNodeInfo"}}, "hash": "2338772cd8adfb92fdb9f04642707cdc0ea4193a13944ceb6b3d508d4015ca0f", "text": "Las subclases de Template pueden especificar un delimitador propio. Por ejemplo, una utilidad de renombrado por lotes\npara un visualizador de fotos puede escoger usar signos de porcentaje para los marcadores tales como la fecha actual, el\nn\u00famero de secuencia de la imagen, o el formato de archivo:\n>>> import time, os.path\n>>> photofiles = ['img_1074.jpg', 'img_1076.jpg', 'img_1077.jpg']\n>>> class BatchRename(Template):\n...     delimiter = '%'\n...\n>>> fmt = input('Enter rename style (%d-date %n-seqnum %f-format):  ')\nEnter rename style (%d-date %n-seqnum %f-format):  Ashley_%n%f\n>>> t = BatchRename(fmt)\n>>> date = time.strftime('%d%b%y')\n>>> for i, filename in enumerate(photofiles):\n...     base, ext = os.path.splitext(filename)\n...     newname = t.substitute(d=date, n=i, f=ext)\n...     print('{0} --> {1}'.format(filename, newname))\n...\nimg_1074.jpg --> Ashley_0.jpg\nimg_1076.jpg --> Ashley_1.jpg\nimg_1077.jpg --> Ashley_2.jpg\nLas plantillas tambi\u00e9n pueden ser usadas para separar la l\u00f3gica del programa de los detalles de m\u00faltiples formatos de\nsalida. Esto permite sustituir plantillas espec\u00edficas para archivos XML, reportes en texto plano, y reportes web en HTML.\n 78", "start_char_idx": 1450, "end_char_idx": 2630, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c6f9b93-5974-48f4-8310-e4882c381aca": {"__data__": {"id_": "4c6f9b93-5974-48f4-8310-e4882c381aca", "embedding": null, "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "baa57928-ca97-4615-859b-53f152d0e45a", "node_type": "4", "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9b5221c7db5a9064a9b0357479863ee96a7ec1d0527b52d83fa231dbff71d78d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "404df95b-a676-4c2f-9b95-72e48856a36a", "node_type": "1", "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2338772cd8adfb92fdb9f04642707cdc0ea4193a13944ceb6b3d508d4015ca0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7720ceee-41aa-4115-bee5-e7c93c32c19d", "node_type": "1", "metadata": {}, "hash": "7e00470b9e9331e5e695627ebf06d4a7ac2ec7b2ee5cf83767247047c991ffa7", "class_name": "RelatedNodeInfo"}}, "hash": "2ad63651a46d1555a509f07323a78b77f54ce1ceae6d585dc0b8d53ca0b4cd7d", "text": "Trabajar con registros estructurados conteniendo datos binariosEl m\u00f3dulo struct provee las funciones pack() y unpack() para trabajar con formatos de registros binarios de longitud\nvariable. El siguiente ejemplo muestra c\u00f3mo recorrer la informaci\u00f3n de encabezado en un archivo ZIP sin usar el m\u00f3dulo\nzipfile. Los c\u00f3digos \"H\" e \"I\" representan n\u00fameros sin signo de dos y cuatro bytes respectivamente. El \"<\" indica\nque son de tama\u00f1o est\u00e1ndar y los bytes tienen ordenamiento little-endian:\nimport struct\nwith open('miarchivo.zip', 'rb') as f:\n    datos = f.read()\ninicio = 0\nfor i in range(3):                     # mostrar los 3 primeros encabezados\n    inicio += 14\n    campos = struct.unpack('<IIIHH', datos[inicio:inicio+16])\n    crc32, tam_comp, tam_descomp, tam_nomarch, tam_extra = fields\n    inicio += 16\n    nomarch = datos[inicio:inicio+tam_nomarch]\n    inicio += tam_nomarch\n    extra = datos[inicio:inicio+tam_extra]\n    print(nomarch, hex(crc32), tam_comp, tam_descomp)\n    inicio += tam_extra + tam_comp     # saltear hasta el pr\u00f3ximo encabezado\nMulti-hilos\nLa t\u00e9cnica de multi-hilos (o multi-threading) permite desacoplar tareas que no tienen dependencia secuencial. Los hilos se\npueden usar para mejorar el grado de reacci\u00f3n de las aplicaciones que aceptan entradas del usuario mientras otras tareas\nse ejecutan en segundo plano. Un caso de uso relacionado es ejecutar E/S en paralelo con c\u00e1lculos en otro hilo.", "start_char_idx": 0, "end_char_idx": 1424, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7720ceee-41aa-4115-bee5-e7c93c32c19d": {"__data__": {"id_": "7720ceee-41aa-4115-bee5-e7c93c32c19d", "embedding": null, "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "baa57928-ca97-4615-859b-53f152d0e45a", "node_type": "4", "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9b5221c7db5a9064a9b0357479863ee96a7ec1d0527b52d83fa231dbff71d78d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c6f9b93-5974-48f4-8310-e4882c381aca", "node_type": "1", "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2ad63651a46d1555a509f07323a78b77f54ce1ceae6d585dc0b8d53ca0b4cd7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb398af0-a39c-4ea6-803d-c7eeb9e6d6a7", "node_type": "1", "metadata": {}, "hash": "6a770ce7970c097f2891e60627ccfe5287fc9506ccf868f22f2d78acce14278a", "class_name": "RelatedNodeInfo"}}, "hash": "7e00470b9e9331e5e695627ebf06d4a7ac2ec7b2ee5cf83767247047c991ffa7", "text": "El c\u00f3digo siguiente muestra c\u00f3mo el m\u00f3dulo de alto nivel threading puede ejecutar tareas en segundo plano mientras el\nprograma principal contin\u00faa su ejecuci\u00f3n:\nimport threading, zipfile\nclass AsyncZip(threading.Thread):\n    def __init__(self, arch_ent, arch_sal):\n        threading.Thread.__init__(self)\n        self.arch_ent = arch_ent\n        self.arch_sal = arch_sal\n    def run(self):\n        f = zipfile.ZipFile(self.arch_sal, 'w', zipfile.ZIP_DEFLATED)\n        f.write(self.arch_ent)\n        f.close()\n        print('Termin\u00f3 zip en segundo plano de: ', self.arch_ent)\nseg_plano = AsyncZip('misdatos.txt', 'miarchivo.zip')\nseg_plano.start()\nprint('El programa principal contin\u00faa la ejecuci\u00f3n en primer plano.')\nseg_plano.join()    # esperar que termine la tarea en segundo plano\nprint('El programa principal esper\u00f3 hasta que el segundo plano terminara.')\nEl desaf\u00edo principal de las aplicaciones multi-hilo es la coordinaci\u00f3n entre los hilos que comparten datos u otros recursos. A\nese fin, el m\u00f3dulo threading provee una serie de primitivas de sincronizaci\u00f3n que incluyen locks, eventos, variables de\ncondici\u00f3n, y sem\u00e1foros.\n 79", "start_char_idx": 1425, "end_char_idx": 2559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb398af0-a39c-4ea6-803d-c7eeb9e6d6a7": {"__data__": {"id_": "cb398af0-a39c-4ea6-803d-c7eeb9e6d6a7", "embedding": null, "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5df4c805-5dfd-4b3e-a1ed-012e27876352", "node_type": "4", "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ef91c24dc09180fe02d281476878db0d89e96f8931a696ad873a1afbd4a710a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7720ceee-41aa-4115-bee5-e7c93c32c19d", "node_type": "1", "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7e00470b9e9331e5e695627ebf06d4a7ac2ec7b2ee5cf83767247047c991ffa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c962f74e-c72a-4bf1-8a78-7fdb66d9559f", "node_type": "1", "metadata": {}, "hash": "9a31b795c47a9e8a0bff06b6702ac96ec1ebf76276cc5fba568b1dc614686cd5", "class_name": "RelatedNodeInfo"}}, "hash": "6a770ce7970c097f2891e60627ccfe5287fc9506ccf868f22f2d78acce14278a", "text": "A\u00fan cuando esas herramientas son poderosas, peque\u00f1os errores de dise\u00f1o pueden resultar en problemas dif\u00edciles de\nreproducir. La forma preferida de coordinar tareas es concentrar todos los accesos a un recurso en un \u00fanico hilo y despu\u00e9s\nusar el m\u00f3dulo queue para alimentar dicho hilo con pedidos desde otros hilos. Las aplicaciones que usan objetos Queue\npara comunicaci\u00f3n y coordinaci\u00f3n entre hilos son m\u00e1s f\u00e1ciles de dise\u00f1ar, m\u00e1s legibles, y m\u00e1s confiables.\nRegistrando\nEl m\u00f3dulo logging ofrece un sistema de registros (logs) completo y flexible. En su forma m\u00e1s simple, los mensajes de\nregistro se env\u00edan a un archivo o a sys.stderr:\nimport logging\nlogging.debug('Informaci\u00f3n de depuraci\u00f3n')\nlogging.info('Mensaje informativo')\nlogging.warning('Atenci\u00f3n: archivo de configuraci\u00f3n %s no se encuentra',\n                'server.conf')\nlogging.error('Ocurri\u00f3 un error')\nlogging.critical('Error cr\u00edtico -- cerrando')\n\u00c9sta es la salida obtenida:\n.. code-block:: none\nWARNING:root:Atenci\u00f3n: archivo de configuraci\u00f3n server.conf no se encuentra ERROR:root:Ocurri\u00f3 un error\nCRITICAL:root:Error cr\u00edtico -- cerrando\nDe forma predeterminada, los mensajes de depuraci\u00f3n e informativos se suprimen, y la salida se env\u00eda al error est\u00e1ndar.\nOtras opciones de salida incluyen mensajes de ruteo a trav\u00e9s de correo electr\u00f3nico, datagramas, sockets, o un servidor\nHTTP. Nuevos filtros pueden seleccionar diferentes rutas basadas en la prioridad del mensaje: DEBUG, INFO, WARNING,\nERROR, and CRITICAL (Depuraci\u00f3n, Informativo, Atenci\u00f3n, Error y Cr\u00edtico respectivamente)\nEl sistema de registro puede configurarse directamente desde Python o puede cargarse la configuraci\u00f3n desde un archivo\neditable por el usuario para personalizar el registro sin alterar la aplicaci\u00f3n.\nReferencias d\u00e9biles\nPython realiza administraci\u00f3n de memoria autom\u00e1tica (cuenta de referencias para la mayor\u00eda de los objetos, y garbage\ncollection (recolecci\u00f3n de basura) para eliminar ciclos).", "start_char_idx": 0, "end_char_idx": 1945, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c962f74e-c72a-4bf1-8a78-7fdb66d9559f": {"__data__": {"id_": "c962f74e-c72a-4bf1-8a78-7fdb66d9559f", "embedding": null, "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5df4c805-5dfd-4b3e-a1ed-012e27876352", "node_type": "4", "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ef91c24dc09180fe02d281476878db0d89e96f8931a696ad873a1afbd4a710a3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb398af0-a39c-4ea6-803d-c7eeb9e6d6a7", "node_type": "1", "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6a770ce7970c097f2891e60627ccfe5287fc9506ccf868f22f2d78acce14278a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a24ad9f9-28ae-4824-9a78-5067a21edce3", "node_type": "1", "metadata": {}, "hash": "7649a6e3103846b7ced672c66b1338c45f6f6903998ea6ee3ad82835cbf0f279", "class_name": "RelatedNodeInfo"}}, "hash": "9a31b795c47a9e8a0bff06b6702ac96ec1ebf76276cc5fba568b1dc614686cd5", "text": "La memoria se libera poco despu\u00e9s de que la \u00faltima referencia a la\nmisma haya sido eliminada.\nEsta estrategia funciona bien para la mayor\u00eda de las aplicaciones, pero ocasionalmente aparece la necesidad de hacer un\nseguimiento de objetos s\u00f3lo mientras est\u00e1n siendo usados por alguien m\u00e1s. Desafortunadamente, el s\u00f3lo hecho de\nseguirlos crea una referencia que los hace permanentes.\nEl m\u00f3dulo weakref provee herramientas para seguimiento de objetos que no crean una referencia. Cuando el objeto no se\nnecesita m\u00e1s, es eliminado autom\u00e1ticamente de una tabla de referencias d\u00e9biles y se dispara una retrollamada (callback).\nCom\u00fanmente se usa para mantener una cache de objetos que son caros de crear:\n>>> import weakref, gc\n>>> class A:\n...     def __init__(self, valor):\n...         self.valor = valor\n...     def __repr__(self):\n...         return str(self.valor)\n...\n>>> a = A(10)                   # crear una referencia\n>>> d = weakref.WeakValueDictionary()\n>>> d['primaria'] = a            # no crea una referencia\n>>> d['primaria']                # traer el objeto si a\u00fan est\u00e1 vivo\n 80", "start_char_idx": 1946, "end_char_idx": 3034, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a24ad9f9-28ae-4824-9a78-5067a21edce3": {"__data__": {"id_": "a24ad9f9-28ae-4824-9a78-5067a21edce3", "embedding": null, "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9995bc76-b787-4461-be89-ddcb7a42e47e", "node_type": "4", "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ad2f83694910e2ff0b0d9204ba7ae041dd0462620ef81b137c08e8537a19dadd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c962f74e-c72a-4bf1-8a78-7fdb66d9559f", "node_type": "1", "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a31b795c47a9e8a0bff06b6702ac96ec1ebf76276cc5fba568b1dc614686cd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41dd1496-09eb-4423-b0c3-9d0852d296ce", "node_type": "1", "metadata": {}, "hash": "68be9d1c9e8628488e1e6e23a8958849d7af163351d7babd65501b843d83fd5b", "class_name": "RelatedNodeInfo"}}, "hash": "7649a6e3103846b7ced672c66b1338c45f6f6903998ea6ee3ad82835cbf0f279", "text": "10\n>>> del a                       # eliminar la \u00fanica referencia\n>>> gc.collect()                # recolecci\u00f3n de basura justo ahora\n0\n>>> d['primaria']                # la entrada fue autom\u00e1ticamente eliminada\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n    d['primaria']                # la entrada fue autom\u00e1ticamente eliminada\n  File \"C:/python36/lib/weakref.py\", line 46, in __getitem__\n    o = self.data[key]()\nKeyError: 'primaria'\nHerramientas para trabajar con listas\nMuchas necesidades de estructuras de datos pueden ser satisfechas con el tipo integrado lista. Sin embargo, a veces se\nhacen necesarias implementaciones alternativas con rendimientos distintos.\nEl m\u00f3dulo array provee un objeto array() (vector) que es como una lista que almacena s\u00f3lo datos homog\u00e9neos y de\nuna manera m\u00e1s compacta. Los ejemplos a continuaci\u00f3n muestran un vector de n\u00fameros guardados como dos n\u00fameros\nbinarios sin signo de dos bytes (c\u00f3digo de tipo \"H\") en lugar de los 16 bytes por elemento habituales en listas de objetos int\nde Python:\n>>> from array import array\n>>> a = array('H', [4000, 10, 700, 22222])\n>>> sum(a)\n26932\n>>> a[1:3]\narray('H', [10, 700])\nEl m\u00f3dulo collections provee un objeto deque() que es como una lista m\u00e1s r\u00e1pida para agregar y quitar elementos\npor el lado izquierdo pero con b\u00fasquedas m\u00e1s lentas por el medio.", "start_char_idx": 0, "end_char_idx": 1358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41dd1496-09eb-4423-b0c3-9d0852d296ce": {"__data__": {"id_": "41dd1496-09eb-4423-b0c3-9d0852d296ce", "embedding": null, "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9995bc76-b787-4461-be89-ddcb7a42e47e", "node_type": "4", "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ad2f83694910e2ff0b0d9204ba7ae041dd0462620ef81b137c08e8537a19dadd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a24ad9f9-28ae-4824-9a78-5067a21edce3", "node_type": "1", "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7649a6e3103846b7ced672c66b1338c45f6f6903998ea6ee3ad82835cbf0f279", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17a51524-c654-4d90-bb3b-d1ca43588e62", "node_type": "1", "metadata": {}, "hash": "1bfdced4dae189e1f5bbff1f9040f76388409c01c081b7021ef78cf188bfe067", "class_name": "RelatedNodeInfo"}}, "hash": "68be9d1c9e8628488e1e6e23a8958849d7af163351d7babd65501b843d83fd5b", "text": "Estos objetos son adecuados para implementar colas y\n\u00e1rboles de b\u00fasqueda a lo ancho:\n>>> from collections import deque\n>>> d = deque([\"tarea1\", \"tarea2\", \"tarea3\"])\n>>> d.append(\"tarea4\")\n>>> print(\"Realizando\", d.popleft())\nRealizando tarea1\nno_visitado = deque([nodo_inicial])\ndef busqueda_a_lo_ancho(no_visitado):\n    nodo = no_visitado.popleft()\n    for m in gen_moves(nodo):\n        if is_goal(m):\n            return m\n        no_visitado.append(m)\nAdem\u00e1s de las implementaciones alternativas de listas, la biblioteca ofrece otras herramientas como el m\u00f3dulo bisect con\nfunciones para manipular listas ordenadas:\n>>> import bisect\n>>> puntajes = [(100, 'perl'), (200, 'tcl'), (400, 'lua'), (500, 'python')]\n>>> bisect.insort(puntajes, (300, 'ruby'))\n>>> puntajes\n[(100, 'perl'), (200, 'tcl'), (300, 'ruby'), (400, 'lua'), (500, 'python')]\n 81", "start_char_idx": 1359, "end_char_idx": 2206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17a51524-c654-4d90-bb3b-d1ca43588e62": {"__data__": {"id_": "17a51524-c654-4d90-bb3b-d1ca43588e62", "embedding": null, "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69121cba-fdd9-4aa4-b771-09d96935105d", "node_type": "4", "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "85b4e11bd45eb0784fcf33362931dc2825ae9ad3a5c8f3ef11743b1f42613c2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41dd1496-09eb-4423-b0c3-9d0852d296ce", "node_type": "1", "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "68be9d1c9e8628488e1e6e23a8958849d7af163351d7babd65501b843d83fd5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a700555-0f66-4bd5-9a07-84c044834092", "node_type": "1", "metadata": {}, "hash": "219514e29c25ade6b24f504a2c2952465ce79941206d4f3d01f7881a0778c652", "class_name": "RelatedNodeInfo"}}, "hash": "1bfdced4dae189e1f5bbff1f9040f76388409c01c081b7021ef78cf188bfe067", "text": "El m\u00f3dulo heapq provee funciones para implementar heaps basados en listas comunes. El menor valor ingresado se\nmantiene en la posici\u00f3n cero. Esto es \u00fatil para aplicaciones que acceden a menudo al elemento m\u00e1s chico pero no quieren\nhacer un orden completo de la lista:\n>>> from heapq import heapify, heappop, heappush\n>>> datos = [1, 3, 5, 7, 9, 2, 4, 6, 8, 0]\n>>> heapify(datos)                     # acomodamos la lista a orden de heap\n>>> heappush(datos, -5)                # agregamos un elemento\n>>> [heappop(datos) for i in range(3)] # traemos los tres elementos menores\n[-5, 0, 1]\nAritm\u00e9tica de punto flotante decimal\nEl m\u00f3dulo decimal provee un tipo de dato Decimal para soportar aritm\u00e9tica de punto flotante decimal. Comparado con\nfloat, la implementaci\u00f3n de punto flotante binario incluida, la clase es muy \u00fatil especialmente para:\n\u007f\naplicaciones financieras y para cualquier uso que requiera una representaci\u00f3n decimal exacta,\n\u007f\ncontrol de la precisi\u00f3n,\n\u007f\ncontrol del redondeo para satisfacer requerimientos legales o reglamentarios,\n\u007f\nseguimiento de cifras significativas,\n\u007f\no para aplicaciones donde el usuario espera que los resultados coincidan con c\u00e1lculos hechos a mano.\nPor ejemplo, calcular un impuesto del 5% de una tarifa telef\u00f3nica de 70 centavos da resultados distintos con punto flotante\ndecimal y punto flotante binario. La diferencia se vuelve significativa si los resultados se redondean al centavo m\u00e1s pr\u00f3ximo:\n>>> from decimal import *\n>>> round(Decimal('0.70') * Decimal('1.05'), 2)\nDecimal('0.74')\n>>> round(0.70 * 1.05, 2)\n0.73\nEl resultado con Decimal conserva un cero al final, calculando autom\u00e1ticamente cuatro cifras significativas a partir de los\nmultiplicandos con dos cifras significativas.", "start_char_idx": 0, "end_char_idx": 1728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a700555-0f66-4bd5-9a07-84c044834092": {"__data__": {"id_": "1a700555-0f66-4bd5-9a07-84c044834092", "embedding": null, "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69121cba-fdd9-4aa4-b771-09d96935105d", "node_type": "4", "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "85b4e11bd45eb0784fcf33362931dc2825ae9ad3a5c8f3ef11743b1f42613c2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17a51524-c654-4d90-bb3b-d1ca43588e62", "node_type": "1", "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1bfdced4dae189e1f5bbff1f9040f76388409c01c081b7021ef78cf188bfe067", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4577e05c-3c8e-4a32-8ae7-dd50a1ad99ce", "node_type": "1", "metadata": {}, "hash": "842678d721cbe375f41e3d0a62cd6227db68996676697dd497e84c873a3bca87", "class_name": "RelatedNodeInfo"}}, "hash": "219514e29c25ade6b24f504a2c2952465ce79941206d4f3d01f7881a0778c652", "text": "Decimal reproduce la matem\u00e1tica como se la hace a mano, y evita problemas\nque pueden surgir cuando el punto flotante binario no puede representar exactamente cantidades decimales.\nLa representaci\u00f3n exacta permite a la clase Decimal hacer c\u00e1lculos de modulo y pruebas de igualdad que son\ninadecuadas para punto flotante binario:\n>>> Decimal('1.00') % Decimal('.10')\nDecimal('0.00')\n>>> 1.00 % 0.10\n0.09999999999999995\n>>> sum([Decimal('0.1')]*10) == Decimal('1.0')\nTrue\n>>> sum([0.1]*10) == 1.0\nFalse\nEl m\u00f3dulo decimal provee aritm\u00e9tica con tanta precisi\u00f3n como haga falta:\n>>> getcontext().prec = 36\n>>> Decimal(1) / Decimal(7)\nDecimal('0.142857142857142857142857142857142857')\n 82", "start_char_idx": 1729, "end_char_idx": 2410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4577e05c-3c8e-4a32-8ae7-dd50a1ad99ce": {"__data__": {"id_": "4577e05c-3c8e-4a32-8ae7-dd50a1ad99ce", "embedding": null, "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85f9dfa3-4ade-454b-a540-c274d4d641e6", "node_type": "4", "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8509abdff8d04590ed534eb2919d6924db676646f56e4b63e235bbe1aef1b5ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a700555-0f66-4bd5-9a07-84c044834092", "node_type": "1", "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "219514e29c25ade6b24f504a2c2952465ce79941206d4f3d01f7881a0778c652", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd9c4f22-07db-4cc9-a897-a53ee76c40a1", "node_type": "1", "metadata": {}, "hash": "bf1d523f3104af71d931988a8e07036316ecc9199f43b97d48c8480fe51fa2b9", "class_name": "RelatedNodeInfo"}}, "hash": "842678d721cbe375f41e3d0a62cd6227db68996676697dd497e84c873a3bca87", "text": "Entornos Virtuales y Paquetes\nIntroducci\u00f3nLas aplicaciones en Python usualmente hacen uso de paquetes y m\u00f3dulos que no forman parte de la librer\u00eda est\u00e1ndar. Las\naplicaciones a veces necesitan una versi\u00f3n espec\u00edfica de una librer\u00eda, debido a que dicha aplicaci\u00f3n requiere que un bug\nparticular haya sido solucionado o bien la aplicaci\u00f3n ha sido escrita usando una versi\u00f3n obsoleta de la interface de la\nlibrer\u00eda.\nEsto significa que tal vez no sea posible para una instalaci\u00f3n de Python cumplir los requerimientos de todas las\naplicaciones. Si la aplicaci\u00f3n A necesita la versi\u00f3n 1.0 de un m\u00f3dulo particular y la aplicaci\u00f3n B necesita la versi\u00f3n 2.0,\nentonces los requerimientos entran en conflicto e instalar la versi\u00f3n 1.0 o 2.0 dejar\u00e1 una de las aplicaciones sin funcionar.\nLa soluci\u00f3n a este problema es crear un entorno virtual, un directorio que contiene una instalaci\u00f3n de Python de una versi\u00f3n\nen particular, adem\u00e1s de unos cuantos paquetes adicionales.\nDiferentes aplicaciones pueden entonces usar entornos virtuales diferentes. Para resolver el ejemplo de requerimientos en\nconflicto citado anteriormente, la aplicaci\u00f3n A puede tener su propio entorno virtual con la versi\u00f3n 1.0 instalada mientras que\nla aplicaci\u00f3n B tiene otro entorno virtual con la versi\u00f3n 2.0. Si la aplicaci\u00f3n B requiere que actualizar la librer\u00eda a la versi\u00f3n\n3.0, \u00e9sto no afectar\u00e1 el entorno virtual de la aplicaci\u00f3n A.\nCreando Entornos Virtuales\nEl script usado para crear y manejar entornos virtuales es pyvenv. pyvenv normalmente instalar\u00e1 la versi\u00f3n mas reciente\nde Python que tengas disponible; el script tambi\u00e9n es instalado con un n\u00famero de versi\u00f3n, con lo que si tienes m\u00faltiples\nversiones de Python en tu sistema puedes seleccionar una versi\u00f3n de Python espec\u00edfica ejecutando python3 o la versi\u00f3n\nque desees.", "start_char_idx": 0, "end_char_idx": 1799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd9c4f22-07db-4cc9-a897-a53ee76c40a1": {"__data__": {"id_": "bd9c4f22-07db-4cc9-a897-a53ee76c40a1", "embedding": null, "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85f9dfa3-4ade-454b-a540-c274d4d641e6", "node_type": "4", "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8509abdff8d04590ed534eb2919d6924db676646f56e4b63e235bbe1aef1b5ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4577e05c-3c8e-4a32-8ae7-dd50a1ad99ce", "node_type": "1", "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "842678d721cbe375f41e3d0a62cd6227db68996676697dd497e84c873a3bca87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a59b5e34-df5f-44e4-83cd-c4165de9c549", "node_type": "1", "metadata": {}, "hash": "5c9c7ce0207ef6e670b279f53e25080a44baaf095a66bacbb4fc2c4f7683ad7d", "class_name": "RelatedNodeInfo"}}, "hash": "bf1d523f3104af71d931988a8e07036316ecc9199f43b97d48c8480fe51fa2b9", "text": "To create a virtual environment, decide upon a directory where you want to place it,\nPara crear un virtualenv, decide en que carpeta quieres crearlo y ejecuta el m\u00f3dulo venv como script con la ruta a la\ncarpeta:\npython3 -m venv tutorial-env\nEsto crear\u00e1 la carpeta tutorial-env si no existe, y tambi\u00e9n crear\u00e1 las subcarpetas conteniendo la copia del int\u00e9rprete\nPython, la librer\u00eda est\u00e1ndar y los archivos de soporte.\nUna vez creado el entorno virtual, podr\u00e1s activarlo.\nEn Windows, ejecuta:\ntutorial-env\\Scripts\\activate.bat\nEn Unix o MacOS, ejecuta:\nsource tutorial-env/bin/activate\n(Este script est\u00e1 escrito para la consola bash. Si usas las consolas csh or fish, hay scripts alternativos activate.csh y\nactivate.fish que deber\u00e1 usar en su lugar).\n 83", "start_char_idx": 1800, "end_char_idx": 2552, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a59b5e34-df5f-44e4-83cd-c4165de9c549": {"__data__": {"id_": "a59b5e34-df5f-44e4-83cd-c4165de9c549", "embedding": null, "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "005cac5f-63f1-4329-bd14-bf4c1d14bac8", "node_type": "4", "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1f8aa92394959f273aab4aa3d489aa0fdddc1ef6daaa175c863b97e9dd664646", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd9c4f22-07db-4cc9-a897-a53ee76c40a1", "node_type": "1", "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf1d523f3104af71d931988a8e07036316ecc9199f43b97d48c8480fe51fa2b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bedcf12-b7d8-4938-aaa3-d2f446635af3", "node_type": "1", "metadata": {}, "hash": "65c6046c71a5e2d3f6d3f541d232d886e94f0bbe089f1416a4b74e6936082e4a", "class_name": "RelatedNodeInfo"}}, "hash": "5c9c7ce0207ef6e670b279f53e25080a44baaf095a66bacbb4fc2c4f7683ad7d", "text": "Activar el entorno virtual cambiar\u00e1 el prompt de tu consola para mostrar que entorno virtual est\u00e1 usando, y modificar\u00e1 el\nentorno para que al ejecutar python sea con esa versi\u00f3n e instalaci\u00f3n en particular. Por ejemplo:\n$ source ~/envs/tutorial-env/bin/activate\n(tutorial-env) $ python\nPython 3.5.1 (default, May  6 2016, 10:59:36)\n  ...\n>>> import sys\n>>> sys.path\n['', '/usr/local/lib/python35.zip', ...,\n'~/envs/tutorial-env/lib/python3.5/site-packages']\n>>>\nManejando paquetes con pip\nEs posible instalar, actualizar y quitar paquetes usando un programa llamado pip. Por defecto pip instalar\u00e1 paquetes\ndesde Python Package Index (Indice de Paquetes Python), <https://pypi.python.org/pypi> . Se puede navegar el Python\nPackage Index ingresando con su navegador de internet, o se puede usar la b\u00fasqueda limitada de pip's:\n(tutorial-env) $ pip search astronomy\nskyfield               - Elegant astronomy for Python\ngary                   - Galactic astronomy and gravitational dynamics.\nnovas                  - The United States Naval Observatory NOVAS astronomy library\nastroobs               - Provides astronomy ephemeris to plan telescope observations\nPyAstronomy            - A collection of astronomy related tools for Python.\n...\npip tiene varios subcomandos: \"search\", \"install\", \"uninstall\", \"freeze\", etc. (consulta la gu\u00eda Instalando m\u00f3dulos de Python\npara la documentaci\u00f3n completa de pip.)", "start_char_idx": 0, "end_char_idx": 1404, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bedcf12-b7d8-4938-aaa3-d2f446635af3": {"__data__": {"id_": "3bedcf12-b7d8-4938-aaa3-d2f446635af3", "embedding": null, "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "005cac5f-63f1-4329-bd14-bf4c1d14bac8", "node_type": "4", "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1f8aa92394959f273aab4aa3d489aa0fdddc1ef6daaa175c863b97e9dd664646", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a59b5e34-df5f-44e4-83cd-c4165de9c549", "node_type": "1", "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5c9c7ce0207ef6e670b279f53e25080a44baaf095a66bacbb4fc2c4f7683ad7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "726e0c49-0b59-40ad-9c96-0b3c57174dc6", "node_type": "1", "metadata": {}, "hash": "6bfaf0a9fca0660ba34b134f11180d9f2e9bea1e8bed1a6603ab3a1f94774346", "class_name": "RelatedNodeInfo"}}, "hash": "65c6046c71a5e2d3f6d3f541d232d886e94f0bbe089f1416a4b74e6936082e4a", "text": "Se puede instalar la \u00faltima versi\u00f3n de un paquete especificando el nombre del paquete:\n(tutorial-env) $ pip install novas\nCollecting novas\n  Downloading novas-3.1.1.3.tar.gz (136kB)\nInstalling collected packages: novas\n  Running setup.py install for novas\nSuccessfully installed novas-3.1.1.3\nTambi\u00e9n se puede instalar una veris\u00f3n espec\u00edfica de un paquete ingresando el nombre del paquete seguido de == y el\nn\u00famero de versi\u00f3n:\n(tutorial-env) $ pip install requests==2.6.0\nCollecting requests==2.6.0\n  Using cached requests-2.6.0-py2.py3-none-any.whl\nInstalling collected packages: requests\nSuccessfully installed requests-2.6.0\nSi se re-ejecuta el comando, pip detectar\u00e1 que la versi\u00f3n ya est\u00e1 instalada y no har\u00e1 nada. Se puede ingresar un n\u00famero\nde versi\u00f3n diferente para instalarlo, o se puede ejecutar pip install --upgrade para actualizar el paquete a la \u00faltima\nversi\u00f3n:\n(tutorial-env) $ pip install --upgrade requests\nCollecting requests\nInstalling collected packages: requests\n  Found existing installation: requests 2.6.0\n    Uninstalling requests-2.6.0:\n      Successfully uninstalled requests-2.6.0\nSuccessfully installed requests-2.7.0\n 84", "start_char_idx": 1405, "end_char_idx": 2555, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "726e0c49-0b59-40ad-9c96-0b3c57174dc6": {"__data__": {"id_": "726e0c49-0b59-40ad-9c96-0b3c57174dc6", "embedding": null, "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ecf0bf46-365a-4d32-940b-8b98806f0b9f", "node_type": "4", "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c172d932bd6ca3d24ee1db477087bd099af08c89456db74675b3e16f9c76309c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bedcf12-b7d8-4938-aaa3-d2f446635af3", "node_type": "1", "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "65c6046c71a5e2d3f6d3f541d232d886e94f0bbe089f1416a4b74e6936082e4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "311a55a8-3cbb-4871-bf3f-23300dfe6d47", "node_type": "1", "metadata": {}, "hash": "55cf6f1436da2b24526b736690255d07a2af5563dd7d1314bb9e2c1b44ad49d9", "class_name": "RelatedNodeInfo"}}, "hash": "6bfaf0a9fca0660ba34b134f11180d9f2e9bea1e8bed1a6603ab3a1f94774346", "text": "pip uninstall seguido de uno o varios nombres de paquetes desinstalar\u00e1 los paquetes del entorno virtual.\npip show mostrar\u00e1 informaci\u00f3n de un paquete en particular:\n(tutorial-env) $ pip show requests\n---\nMetadata-Version: 2.0\nName: requests\nVersion: 2.7.0\nSummary: Python HTTP for Humans.\nHome-page: http://python-requests.org\nAuthor: Kenneth Reitz\nAuthor-email: me@kennethreitz.com\nLicense: Apache 2.0\nLocation: /Users/akuchling/envs/tutorial-env/lib/python3.4/site-packages\nRequires:\npip list mostrar\u00e1 todos los paquetes instalados en el entorno virtual:\n(tutorial-env) $ pip list\nnovas (3.1.1.3)\nnumpy (1.9.2)\npip (7.0.3)\nrequests (2.7.0)\nsetuptools (16.0)\npip freeze devuelve una lista de paquetes instalados similar, pero el formato de salida es el requerido por pip install.\nUna convenci\u00f3n com\u00fan es poner esta lista en un archivo requirements.txt:\n(tutorial-env) $ pip freeze > requirements.txt\n(tutorial-env) $ cat requirements.txt\nnovas==3.1.1.3\nnumpy==1.9.2\nrequests==2.7.0\nEl archivo requirements.txt entonces puede ser agregado a nuestro control de versiones y distribu\u00eddo como parte de la\naplicaci\u00f3n. Los usuarios pueden entonces instalar todos los paquetes necesarios con install -r:\n(tutorial-env) $ pip install -r requirements.txt\nCollecting novas==3.1.1.3 (from -r requirements.txt (line 1))\n  ...\nCollecting numpy==1.9.2 (from -r requirements.txt (line 2))\n  ...\nCollecting requests==2.7.0 (from -r requirements.txt (line 3))\n  ...\nInstalling collected packages: novas, numpy, requests\n  Running setup.py install for novas\nSuccessfully installed novas-3.1.1.3 numpy-1.9.2 requests-2.7.0\npip tiene muchas opciones m\u00e1s.", "start_char_idx": 0, "end_char_idx": 1633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "311a55a8-3cbb-4871-bf3f-23300dfe6d47": {"__data__": {"id_": "311a55a8-3cbb-4871-bf3f-23300dfe6d47", "embedding": null, "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ecf0bf46-365a-4d32-940b-8b98806f0b9f", "node_type": "4", "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c172d932bd6ca3d24ee1db477087bd099af08c89456db74675b3e16f9c76309c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "726e0c49-0b59-40ad-9c96-0b3c57174dc6", "node_type": "1", "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6bfaf0a9fca0660ba34b134f11180d9f2e9bea1e8bed1a6603ab3a1f94774346", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "022f9364-f283-4a7f-b167-be9813578e9d", "node_type": "1", "metadata": {}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}}, "hash": "55cf6f1436da2b24526b736690255d07a2af5563dd7d1314bb9e2c1b44ad49d9", "text": "Consulta la gu\u00eda Instalando m\u00f3dulos de Python para la documentaci\u00f3n de pip. Cuando\nhayas escrito un paquete y desees dejarlo disponible en Python Package Index, consulte la gu\u00eda Glosario.\n 85", "start_char_idx": 1634, "end_char_idx": 1825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "022f9364-f283-4a7f-b167-be9813578e9d": {"__data__": {"id_": "022f9364-f283-4a7f-b167-be9813578e9d", "embedding": null, "metadata": {"page_label": "94", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38e7d198-eba4-4489-8ebb-dae71ccc6730", "node_type": "4", "metadata": {"page_label": "94", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "de94f942997438b290009f948cfab6d9cffb780bc1fa90bffe6496811839e8da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "311a55a8-3cbb-4871-bf3f-23300dfe6d47", "node_type": "1", "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "55cf6f1436da2b24526b736690255d07a2af5563dd7d1314bb9e2c1b44ad49d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "da5122f3-eea0-4b8f-820a-c939b06b4e3c", "node_type": "1", "metadata": {}, "hash": "efe98b8982616d00a195346f56367cbb07926fd6809fcc5fa3264acc87e7188f", "class_name": "RelatedNodeInfo"}}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da5122f3-eea0-4b8f-820a-c939b06b4e3c": {"__data__": {"id_": "da5122f3-eea0-4b8f-820a-c939b06b4e3c", "embedding": null, "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db76c7e8-cd2d-4130-8288-4f9c54a6ee34", "node_type": "4", "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a4ee77ad612537e078ae23a55950b65f264c843a7b8e1a8b9186bee6e17be239", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "022f9364-f283-4a7f-b167-be9813578e9d", "node_type": "1", "metadata": {"page_label": "94", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7355604c-0e5a-43f4-b0b2-9eb508684127", "node_type": "1", "metadata": {}, "hash": "c34a99d698ab7ab1316896bc4eb93c41cf7fa693b89a4a5f35a016931d1103b6", "class_name": "RelatedNodeInfo"}}, "hash": "efe98b8982616d00a195346f56367cbb07926fd6809fcc5fa3264acc87e7188f", "text": "\u00bfY ahora qu\u00e9?Leer este tutorial probablemente reforz\u00f3 tu inter\u00e9s por usar Python, deber\u00edas estar ansioso por aplicar Python a la resoluci\u00f3n\nde tus problemas reales. \u00bfA d\u00f3nde deber\u00edas ir para aprender m\u00e1s?\nEste tutorial forma parte del juego de documentaci\u00f3n de Python. Algunos otros documentos que encontrar\u00e1s en este juego\nson:\n\u007f\nLa referencia de la biblioteca:\nDeber\u00edas hojear este manual, que tiene material de referencia completo (si bien breve) sobre tipos, funciones y\nm\u00f3dulos de la biblioteca est\u00e1ndar. La distribuci\u00f3n de Python est\u00e1ndar incluye un mont\u00f3n de c\u00f3digo adicional. Hay\nm\u00f3dulos para leer archivos de correo de Unix, obtener documentos v\u00eda HTTP, generar n\u00fameros aleatorios, interpretar\nopciones de l\u00ednea de comandos, escribir programas CGI, comprimir datos, y muchas otras tareas. Un vistazo por la\nReferencia de Biblioteca te dar\u00e1 una idea de lo que hay disponible.\n\u007f\nInstalando m\u00f3dulos de Python explica c\u00f3mo instalar m\u00f3dulos externos escritos por otros usuarios de Python.\n\u007f\nLa referencia del lenguaje: Una descripci\u00f3n en detalle de la sintaxis y sem\u00e1ntica de Python. Es una lectura pesada,\npero \u00fatil como gu\u00eda completa al lenguaje en si.\nM\u00e1s recursos sobre Python:\n\u007f\nhttps://www.python.org: El sitio web principal sobre Python. Contiene c\u00f3digo, documentaci\u00f3n, y referencias a p\u00e1ginas\nrelacionadas con Python en la Web. Este sitio web tiene copias espejo en varios lugares del mundo c\u00f3mo Europa,\nJap\u00f3n y Australia; una copia espejo puede funcionar m\u00e1s r\u00e1pido que el sitio principal, dependiendo de tu ubicaci\u00f3n\ngeogr\u00e1fica.\n\u007f\nhttps://docs.python.org: Acceso r\u00e1pido a la documentaci\u00f3n de Python.\n\u007f\nhttps://pypi.python.org: El \u00cdndice de Paquetes de Python, antes tambi\u00e9n apodado \"El Negocio de Quesos\", es un\nlistado de m\u00f3dulos de Python disponibles para descargar hechos por otros usuarios.", "start_char_idx": 0, "end_char_idx": 1808, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7355604c-0e5a-43f4-b0b2-9eb508684127": {"__data__": {"id_": "7355604c-0e5a-43f4-b0b2-9eb508684127", "embedding": null, "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db76c7e8-cd2d-4130-8288-4f9c54a6ee34", "node_type": "4", "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a4ee77ad612537e078ae23a55950b65f264c843a7b8e1a8b9186bee6e17be239", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "da5122f3-eea0-4b8f-820a-c939b06b4e3c", "node_type": "1", "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "efe98b8982616d00a195346f56367cbb07926fd6809fcc5fa3264acc87e7188f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e887a8ad-7691-41a1-8dca-94b722e7aa09", "node_type": "1", "metadata": {}, "hash": "64a8b6588394715433b229671874f72e5e0fd29b15a9ed2a152fd628ed38b57f", "class_name": "RelatedNodeInfo"}}, "hash": "c34a99d698ab7ab1316896bc4eb93c41cf7fa693b89a4a5f35a016931d1103b6", "text": "Cu\u00e1ndo comiences a publicar\nc\u00f3digo, puedes registrarlo aqu\u00ed as\u00ed los dem\u00e1s pueden encontrarlo.\n\u007f\nhttps://code.activestate.com/recipes/langs/python/: El Recetario de Python es una colecci\u00f3n de tama\u00f1o considerable\nde ejemplos de c\u00f3digo, m\u00f3dulos m\u00e1s grandes, y programas \u00fatiles. Las contribuciones particularmente notorias est\u00e1n\nrecolectadas en un libro tambi\u00e9n titulado Recetario de Python (O'Reilly & Associates, ISBN 0-596-00797-3.)\n\u007f\nhttp://www.pyvideo.org recolecta links de videos relacionados con Python de conferencias y reuniones de grupos de\nusuarios.\n\u007f\nhttps://scipy.org: El proyecto \"Python Cient\u00edfico\" incluye m\u00f3dulos para manipulaci\u00f3n y c\u00e1lculo r\u00e1pido de arreglos\nadem\u00e1s de incluir paquetes para cosas como \u00e1lgebra lineal, transformaciones de Fourier, soluciones no lineales,\ndistribuciones de n\u00fameros al azar, an\u00e1lisis estad\u00edsticos, y similares.\nPara preguntas relacionadas con Python y reportes de problemas puedes escribir al grupo de noticias comp.lang.python, o\nenviarlas a la lista de correo que hay en python-list@python.org. El grupo de noticias y la lista de correo est\u00e1n\ninterconectadas, por lo que los mensajes enviados a uno ser\u00e1n retransmitidos al otro. Hay alrededor de cientos de mensajes\ndiarios (con picos de hasta varios cientos), haciendo (y respondiendo) preguntas, sugiriendo nuevas caracter\u00edsticas, y\nanunciando nuevos m\u00f3dulos. Antes de escribir, aseg\u00farate de haber revisado la lista de Preguntas Frecuentes (tambi\u00e9n\nllamado el FAQ). Muchas veces responde las preguntas que se hacen una y otra vez, y quiz\u00e1z contega la soluci\u00f3n a tu\nproblema.\n 87", "start_char_idx": 1809, "end_char_idx": 3387, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e887a8ad-7691-41a1-8dca-94b722e7aa09": {"__data__": {"id_": "e887a8ad-7691-41a1-8dca-94b722e7aa09", "embedding": null, "metadata": {"page_label": "96", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "577041ff-457e-4c28-bd16-e74c3aee7f3c", "node_type": "4", "metadata": {"page_label": "96", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8680ba3d23e221e67fbdcfaed905575dfc7ee41fae2f44ea69513ed533a38818", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7355604c-0e5a-43f4-b0b2-9eb508684127", "node_type": "1", "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c34a99d698ab7ab1316896bc4eb93c41cf7fa693b89a4a5f35a016931d1103b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e621e4d3-d309-41ed-ab3f-ee4d4f9955cb", "node_type": "1", "metadata": {}, "hash": "21194ba60b63db7113295a8a89129efd9d3c783c1244914b50cabd5d98a14704", "class_name": "RelatedNodeInfo"}}, "hash": "64a8b6588394715433b229671874f72e5e0fd29b15a9ed2a152fd628ed38b57f", "text": "Hay archivos de la lista de correo disponibles en https://mail.python.org/pipermail/. El FAQ responde a muchas de las\npreguntas que aparecen una y otra vez, y puede que ya contenga la soluci\u00f3n a tu problema.\n 88", "start_char_idx": 0, "end_char_idx": 211, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e621e4d3-d309-41ed-ab3f-ee4d4f9955cb": {"__data__": {"id_": "e621e4d3-d309-41ed-ab3f-ee4d4f9955cb", "embedding": null, "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5e0ce9f-cd04-46b4-bb0a-b93bf280ebb4", "node_type": "4", "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d76880531f8634ce3872418a391affb0ea8e98e9a8c8cf9eb1ac855b62d244fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e887a8ad-7691-41a1-8dca-94b722e7aa09", "node_type": "1", "metadata": {"page_label": "96", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64a8b6588394715433b229671874f72e5e0fd29b15a9ed2a152fd628ed38b57f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88fdf0f2-a725-4783-9110-3e40c3669795", "node_type": "1", "metadata": {}, "hash": "493a1af8bf5b3ff071bb5df9d894991b3556a79380954d8a84a772be492c0c23", "class_name": "RelatedNodeInfo"}}, "hash": "21194ba60b63db7113295a8a89129efd9d3c783c1244914b50cabd5d98a14704", "text": "Edici\u00f3n de entrada interactiva y \nsustituci\u00f3n de historialAlgunas versiones del int\u00e9rprete de Python permiten editar la l\u00ednea de entrada actual, y sustituir en base al historial, de\nforma similar a las capacidades del int\u00e9rprete de comandos Korn y el GNU bash. Esto se implementa con la biblioteca GNU\nReadline, que soporta varios estilos de edici\u00f3n. Esta biblioteca tiene su propia documentaci\u00f3n la cu\u00e1l no vamos a duplicar\naqu\u00ed.\nAutocompletado con tab e historial de edici\u00f3n\nEl autocompletado de variables y nombres de m\u00f3dulos es activado autom\u00e1ticamente al iniciar el int\u00e9rprete, por lo\ntanto la tecla Tab invoca la funci\u00f3n de autocompletado; \u00e9sta mira en los nombres de sentencia, las variables locales y los\nnombres de m\u00f3dulos disponibles. Para expresiones con puntos como string.a, va a evaluar la expresi\u00f3n hasta el '.'\nfinal y entonces sugerir autocompletado para los atributos del objeto resultante. Nota que esto quiz\u00e1s ejecute c\u00f3digo de\naplicaciones definidas si un objeto con un m\u00e9todo __getattr__() es parte de la expresi\u00f3n. La configuraci\u00f3n por omisi\u00f3n\ntambi\u00e9n guarda tu historial en un archivo llamado .python_history en tu directorio de usuario. El historial estar\u00e1 disponible\ndurante la pr\u00f3xima sesi\u00f3n interactiva del int\u00e9rprete.\nAlternativas al int\u00e9rprete interactivo\nEsta funcionalidad es un paso enorme hacia adelante comparado con versiones anteriores del interprete; de todos modos,\nquedan pendientes algunos deseos: ser\u00eda bueno que el sangrado correcto se sugiriera en las lineas de continuaci\u00f3n (el\nparser sabe si se requiere un sangrado a continuaci\u00f3n). El mecanismo de completado podr\u00eda usar la tabla de s\u00edmbolos del\nint\u00e9rprete. Un comando para verificar (o incluso sugerir) coincidencia de par\u00e9ntesis, comillas, etc. tambi\u00e9n ser\u00eda \u00fatil.", "start_char_idx": 0, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88fdf0f2-a725-4783-9110-3e40c3669795": {"__data__": {"id_": "88fdf0f2-a725-4783-9110-3e40c3669795", "embedding": null, "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5e0ce9f-cd04-46b4-bb0a-b93bf280ebb4", "node_type": "4", "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d76880531f8634ce3872418a391affb0ea8e98e9a8c8cf9eb1ac855b62d244fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e621e4d3-d309-41ed-ab3f-ee4d4f9955cb", "node_type": "1", "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "21194ba60b63db7113295a8a89129efd9d3c783c1244914b50cabd5d98a14704", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ee80e67-aef8-4fc6-ae1c-a7b40fc112cf", "node_type": "1", "metadata": {}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}}, "hash": "493a1af8bf5b3ff071bb5df9d894991b3556a79380954d8a84a772be492c0c23", "text": "tambi\u00e9n ser\u00eda \u00fatil.\nUn int\u00e9rprete interactivo mejorado alternativo que est\u00e1 dando vueltas desde hace rato es IPython, que ofrece completado\npor tab, exploraci\u00f3n de objetos, y administraci\u00f3n avanzada del historial. Tambi\u00e9n puede ser configurado en profundidad, e\nintegrarse en otras aplicaciones. Otro entorno interactivo mejorado similar es bpython.\n 89", "start_char_idx": 1744, "end_char_idx": 2097, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ee80e67-aef8-4fc6-ae1c-a7b40fc112cf": {"__data__": {"id_": "9ee80e67-aef8-4fc6-ae1c-a7b40fc112cf", "embedding": null, "metadata": {"page_label": "98", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdd30fcd-23f3-468e-8d2f-103e7af8075b", "node_type": "4", "metadata": {"page_label": "98", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ecac127a5bd604d240007a005647120d6f1c7b8ecb67196cdca1e2538c374ca3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88fdf0f2-a725-4783-9110-3e40c3669795", "node_type": "1", "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "493a1af8bf5b3ff071bb5df9d894991b3556a79380954d8a84a772be492c0c23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dbb2f0c-66ed-4bae-85f8-a5e932ccbf89", "node_type": "1", "metadata": {}, "hash": "aa38e8d5a250a3bcfae8ec108ecfc8935d66d5ecfb6b2e1a20d1a7b286baca17", "class_name": "RelatedNodeInfo"}}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9dbb2f0c-66ed-4bae-85f8-a5e932ccbf89": {"__data__": {"id_": "9dbb2f0c-66ed-4bae-85f8-a5e932ccbf89", "embedding": null, "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eeee4bdc-55da-4130-9662-30faac3aa84b", "node_type": "4", "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3ecda9d0ca40b23e57fa1d60ae1f65265b5ac6767ef73c3d25f3138d46adcbb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ee80e67-aef8-4fc6-ae1c-a7b40fc112cf", "node_type": "1", "metadata": {"page_label": "98", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "756ba431-2558-4d80-88c6-7a5ea24eac4b", "node_type": "1", "metadata": {}, "hash": "848f21e3eb32d371f59854f18655852a21378e2d198669c4575e5585ca5f23c1", "class_name": "RelatedNodeInfo"}}, "hash": "aa38e8d5a250a3bcfae8ec108ecfc8935d66d5ecfb6b2e1a20d1a7b286baca17", "text": "Aritm\u00e9tica de Punto Flotante: \nProblemas y LimitacionesLos n\u00fameros de punto flotante se representan en el hardware de la computadora en fracciones en base 2 (binario). Por\nejemplo, la fracci\u00f3n decimal\n0.125\n...tiene el valor 1/10 + 2/100 + 5/1000, y de la misma manera la fracci\u00f3n binaria\n0.001\n...tiene el valor 0/2 + 0/4 + 1/8. Estas dos fracciones tienen valores id\u00e9nticos, la \u00fanica diferencia real es que la primera est\u00e1\nescrita en notaci\u00f3n fraccional en base 10 y la segunda en base 2.\nDesafortunadamente, la mayor\u00eda de las fracciones decimales no pueden representarse exactamente como fracciones\nbinarias. Como consecuencia, en general los n\u00fameros de punto flotante decimal que ingres\u00e1s en la computadora son s\u00f3lo\naproximados por los n\u00fameros de punto flotante binario que realmente se guardan en la m\u00e1quina.\nEl problema es m\u00e1s f\u00e1cil de entender primero en base 10. Consider\u00e1 la fracci\u00f3n 1/3. Pod\u00e9s aproximarla como una fracci\u00f3n\nde base 10\n0.3\n...o, mejor,\n0.33\n...o, mejor,\n0.333\n...y as\u00ed. No importa cuantos d\u00edgitos desees escribir, el resultado nunca ser\u00e1 exactamente 1/3, pero ser\u00e1 una aproximaci\u00f3n\ncada vez mejor de 1/3.\nDe la misma manera, no importa cuantos d\u00edgitos en base 2 quieras usar, el valor decimal 0.1 no puede representarse\nexactamente como una fracci\u00f3n en base 2. En base 2, 1/10 es la siguiente fracci\u00f3n que se repite infinitamente:\n0.0001100110011001100110011001100110011001100110011...\nFren\u00e1 en cualquier n\u00famero finito de bits, y tendr\u00e1s una aproximaci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "756ba431-2558-4d80-88c6-7a5ea24eac4b": {"__data__": {"id_": "756ba431-2558-4d80-88c6-7a5ea24eac4b", "embedding": null, "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eeee4bdc-55da-4130-9662-30faac3aa84b", "node_type": "4", "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3ecda9d0ca40b23e57fa1d60ae1f65265b5ac6767ef73c3d25f3138d46adcbb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dbb2f0c-66ed-4bae-85f8-a5e932ccbf89", "node_type": "1", "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aa38e8d5a250a3bcfae8ec108ecfc8935d66d5ecfb6b2e1a20d1a7b286baca17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3096652c-876d-4cdf-94b1-529906da4fd2", "node_type": "1", "metadata": {}, "hash": "30b27a8e1bd6cac7117aedaac5187b350730569c3ed481a6bfea76783919ddf6", "class_name": "RelatedNodeInfo"}}, "hash": "848f21e3eb32d371f59854f18655852a21378e2d198669c4575e5585ca5f23c1", "text": "En la mayor\u00eda de las m\u00e1quinas hoy en d\u00eda, los float se\naproximan usando una fracci\u00f3n binaria con el numerador usando los primeros 53 bits con el bit m\u00e1s significativos y el\ndenominador como una potencia de dos. En el caso de 1/10, la fracci\u00f3n binaria es 3602879701896397 / 2 ** 55 que\nest\u00e1 cerca pero no es exactamente el valor verdadero de 1/10.\nLa mayor\u00eda de los usuarios no son conscientes de esta aproximaci\u00f3n por la forma en que se muestran los valores. Python\nsolamente muestra una aproximaci\u00f3n decimal al valor verdadero decimal de la aproximaci\u00f3n binaria almacenada por la\nm\u00e1quina. En la mayor\u00eda de las m\u00e1quinas, si Python fuera a imprimir el verdadero valor decimal de la aproximaci\u00f3n binaria\nalmacenada para 0.1, deber\u00eda mostrar\n>>> 0.1\n0.1000000000000000055511151231257827021181583404541015625\nEsos son m\u00e1s d\u00edgitos que lo que la mayor\u00eda de la gente encuentra \u00fatil, por lo que Python mantiene manejable la cantidad de\nd\u00edgitos al mostrar en su lugar un valor redondeado\n 91", "start_char_idx": 1482, "end_char_idx": 2464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3096652c-876d-4cdf-94b1-529906da4fd2": {"__data__": {"id_": "3096652c-876d-4cdf-94b1-529906da4fd2", "embedding": null, "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdb80dcb-8d36-4e81-b913-034b09a305a1", "node_type": "4", "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a9aec65bec19ac3c7aaaad3ea62e6cd992dc995daa0ec51f7069e7f832328ae1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "756ba431-2558-4d80-88c6-7a5ea24eac4b", "node_type": "1", "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "848f21e3eb32d371f59854f18655852a21378e2d198669c4575e5585ca5f23c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0fe874d-bab4-4996-883a-9af00870ca4f", "node_type": "1", "metadata": {}, "hash": "f8c18326a0edcbe41a57968f40a800a75883e1577aa68e8b889bb3ba11b0f339", "class_name": "RelatedNodeInfo"}}, "hash": "30b27a8e1bd6cac7117aedaac5187b350730569c3ed481a6bfea76783919ddf6", "text": ">>> 1 / 10\n0.1\nS\u00f3lo record\u00e1 que, a pesar de que el valor mostrado resulta ser exactamente 1/10, el valor almacenado realmente es la\nfracci\u00f3n binaria m\u00e1s cercana posible.\nInteresantemente, hay varios n\u00fameros decimales que comparten la misma fracci\u00f3n binaria m\u00e1s aproximada. Por ejemplo,\nlos n\u00fameros 0.1, 0.10000000000000001 y\n0.1000000000000000055511151231257827021181583404541015625 son todos aproximados por\n3602879701896397 / 2 ** 55. Ya que todos estos valores decimales comparten la misma aproximaci\u00f3n, se podr\u00eda\nmostrar cualquiera de ellos para preservar el invariante eval(repr(x)) == x.\nHist\u00f3ricamente, el prompt de Python y la funci\u00f3n integrada repr() eligieron el valor con los 17 d\u00edgitos,\n0.10000000000000001. Desde Python 3.1, en la mayor\u00eda de los sistemas Python ahora es capaz de elegir la forma m\u00e1s\ncorta de ellos y mostrar 0.1.\nNot\u00e1 que esta es la verdadera naturaleza del punto flotante binario: no es un error de Python, y tampoco es un error en tu\nc\u00f3digo. Ver\u00e1s lo mismo en todos los lenguajes que soportan la aritm\u00e9tica de punto flotante de tu hardware (a pesar de que\nen algunos lenguajes por omisi\u00f3n no muestren la diferencia, o no lo hagan en todos los modos de salida).", "start_char_idx": 0, "end_char_idx": 1192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0fe874d-bab4-4996-883a-9af00870ca4f": {"__data__": {"id_": "b0fe874d-bab4-4996-883a-9af00870ca4f", "embedding": null, "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdb80dcb-8d36-4e81-b913-034b09a305a1", "node_type": "4", "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a9aec65bec19ac3c7aaaad3ea62e6cd992dc995daa0ec51f7069e7f832328ae1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3096652c-876d-4cdf-94b1-529906da4fd2", "node_type": "1", "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "30b27a8e1bd6cac7117aedaac5187b350730569c3ed481a6bfea76783919ddf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed467b30-910b-4258-b80d-d13ee540ad2f", "node_type": "1", "metadata": {}, "hash": "c18831115be443ffd8a69bc1652824123830eeeed5e89494050bc962feb5b367", "class_name": "RelatedNodeInfo"}}, "hash": "f8c18326a0edcbe41a57968f40a800a75883e1577aa68e8b889bb3ba11b0f339", "text": "Para una salida m\u00e1s elegante, quiz\u00e1s quieras usar el formateo de cadenas de texto para generar un n\u00famero limitado de\nd\u00edgitos significativos:\n>>> format(math.pi, '.12g')  # da 12 d\u00edgitos significativos\n'3.14159265359'\n>>> format(math.pi, '.2f')   # da 2 d\u00edgitos luego del punto\n'3.14'\n>>> repr(math.pi)\n'3.141592653589793'\nEs importante darse cuenta que esto es, realmente, una ilusi\u00f3n: est\u00e1s simplemente redondeando al mostrar el valor\nverdadero de la m\u00e1quina.\nUna ilusi\u00f3n puede generar otra. Por ejemplo, ya que 0.1 no es exactamente 1/10, sumar tres veces 0.1 podr\u00eda tambi\u00e9n no\ngenerar exactamente 0.3:\n>>> .1 + .1 + .1 == .3\nFalse\nTambi\u00e9n, ya que 0.1 no puede acercarse m\u00e1s al valor exacto de 1/10 y 0.3 no puede acercarse m\u00e1s al valor exacto de 3/10,\nredondear primero con la funci\u00f3n round() no puede ayudar:\n>>> round(.1, 1) + round(.1, 1) + round(.1, 1) == round(.3, 1)\nFalse\nA pesar que los n\u00fameros no pueden acercarse a los valores exactos que pretendemos, la funci\u00f3n round() puede ser \u00fatil\npara redondear a posteriori, para que los resultados con valores inexactos se puedan comparar entre s\u00ed:\n>>> round(.1 + .1 + .1, 10) == round(.3, 10)\nTrue\nLa aritm\u00e9tica de punto flotante binaria tiene varias sorpresas como esta. El problema con \"0.1\" es explicado con detalle\nabajo, en la secci\u00f3n \"Error de Representaci\u00f3n\". Mir\u00e1 los Peligros del Punto Flotante (en ingl\u00e9s, The Perils of Floating Point)\npara una m\u00e1s completa recopilaci\u00f3n de otras sorpresas normales.\nComo dice cerca del final, \"no hay respuestas f\u00e1ciles\".", "start_char_idx": 1193, "end_char_idx": 2713, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed467b30-910b-4258-b80d-d13ee540ad2f": {"__data__": {"id_": "ed467b30-910b-4258-b80d-d13ee540ad2f", "embedding": null, "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdb80dcb-8d36-4e81-b913-034b09a305a1", "node_type": "4", "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a9aec65bec19ac3c7aaaad3ea62e6cd992dc995daa0ec51f7069e7f832328ae1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0fe874d-bab4-4996-883a-9af00870ca4f", "node_type": "1", "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f8c18326a0edcbe41a57968f40a800a75883e1577aa68e8b889bb3ba11b0f339", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ee01ece-0013-4660-aa39-4ee207054ab3", "node_type": "1", "metadata": {}, "hash": "ae1193fd6a670f1d461562d29a5cd439bc955694c95ffa0af89d8f1d35ed1c52", "class_name": "RelatedNodeInfo"}}, "hash": "c18831115be443ffd8a69bc1652824123830eeeed5e89494050bc962feb5b367", "text": "Como dice cerca del final, \"no hay respuestas f\u00e1ciles\". A pesar de eso, \u00a1no le tengas mucho miedo al punto flotante! Los\nerrores en las operaciones flotantes de Python se heredan del hardware de punto flotante, y en la mayor\u00eda de las m\u00e1quinas\n 92", "start_char_idx": 2658, "end_char_idx": 2904, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ee01ece-0013-4660-aa39-4ee207054ab3": {"__data__": {"id_": "8ee01ece-0013-4660-aa39-4ee207054ab3", "embedding": null, "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f8d873f-c784-4bd2-b80c-2e6f3698671a", "node_type": "4", "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "be7c4213ff86e67ac1ab99bce201ce6cb69d144e7daf44dd0f76c8a7c5a2a6c2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed467b30-910b-4258-b80d-d13ee540ad2f", "node_type": "1", "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c18831115be443ffd8a69bc1652824123830eeeed5e89494050bc962feb5b367", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d20e16e7-4776-490b-bfff-b979d2efba56", "node_type": "1", "metadata": {}, "hash": "00ef332d3356992aab2522d4a01814d6bd52843f87689e78f21da6634e33daf8", "class_name": "RelatedNodeInfo"}}, "hash": "ae1193fd6a670f1d461562d29a5cd439bc955694c95ffa0af89d8f1d35ed1c52", "text": "est\u00e1n en el orden de no m\u00e1s de una 1 parte en 2**53 por operaci\u00f3n. Eso es m\u00e1s que adecuado para la mayor\u00eda de las\ntareas, pero necesit\u00e1s tener en cuenta que no es aritm\u00e9tica decimal, y que cada operaci\u00f3n de punto flotante sufre un nuevo\nerror de redondeo.\nA pesar de que existen casos patol\u00f3gicos, para la mayor\u00eda de usos casuales de la aritm\u00e9tica de punto flotante al final ver\u00e1s\nel resultado que esper\u00e1s si simplemente redonde\u00e1s lo que mostr\u00e1s de tus resultados finales al n\u00famero de d\u00edgitos decimales\nque esper\u00e1s. str() es normalmente suficiente, y para un control m\u00e1s fino mir\u00e1 los par\u00e1metros del m\u00e9todo de formateo\nstr.format() en Tipos integrados.\nPara los casos de uso que necesitan una representaci\u00f3n decimal exacta, prob\u00e1 el m\u00f3dulo decimal, que implementa\naritm\u00e9tica decimal \u00fatil para aplicaciones de contabilidad y de alta precisi\u00f3n.\nEl m\u00f3dulo fractions soporta otra forma de aritm\u00e9tica exacta, ya que implementa aritm\u00e9tica basada en n\u00fameros\nracionales (por lo que n\u00fameros como 1/3 pueden ser representados exactamente).\nSi sos un usuario frecuente de las operaciones de punto flotante deber\u00edas pegarle una mirada al paquete Numerical Python\ny otros paquetes para operaciones matem\u00e1ticas y estad\u00edsticas provistos por el proyecto SciPy. Mir\u00e1 <https://scipy.org>.\nPython provee herramientas que pueden ayudar en esas raras ocasiones cuando realmente quer\u00e9s saber el valor exacto de\nun float.", "start_char_idx": 0, "end_char_idx": 1398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d20e16e7-4776-490b-bfff-b979d2efba56": {"__data__": {"id_": "d20e16e7-4776-490b-bfff-b979d2efba56", "embedding": null, "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f8d873f-c784-4bd2-b80c-2e6f3698671a", "node_type": "4", "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "be7c4213ff86e67ac1ab99bce201ce6cb69d144e7daf44dd0f76c8a7c5a2a6c2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ee01ece-0013-4660-aa39-4ee207054ab3", "node_type": "1", "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae1193fd6a670f1d461562d29a5cd439bc955694c95ffa0af89d8f1d35ed1c52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e09e108-2cb1-4797-a4f9-85be41de69fd", "node_type": "1", "metadata": {}, "hash": "6b98615d2f37ac9669617303469e5af71372746a4dc39c5a156830597a1c5e1f", "class_name": "RelatedNodeInfo"}}, "hash": "00ef332d3356992aab2522d4a01814d6bd52843f87689e78f21da6634e33daf8", "text": "El m\u00e9todo float.as_integer_ratio() expresa el valor del float como una fracci\u00f3n:\n>>> x = 3.14159\n>>> x.as_integer_ratio()\n(3537115888337719, 1125899906842624)\nYa que la fracci\u00f3n es exacta, se puede usar para recrear sin p\u00e9rdidas el valor original:\n>>> x == 3537115888337719 / 1125899906842624\nTrue\nEl m\u00e9todo float.hex() expresa un float en hexadecimal (base 16), nuevamente devolviendo el valor exacto almacenado\npor tu computadora:\n>>> x.hex()\n'0x1.921f9f01b866ep+1'\nEsta representaci\u00f3n hexadecimal precisa se puede usar para reconstruir el valor exacto del float:\n>>> x == float.fromhex('0x1.921f9f01b866ep+1')\nTrue\nYa que la representaci\u00f3n es exacta, es \u00fatil para portar valores a trav\u00e9s de diferentes versiones de Python de manera\nconfiable (independencia de plataformas) e intercambiar datos con otros lenguajes que soportan el mismo formato (como\nJava y C99).\nOtra herramienta \u00fatil es la funci\u00f3n math.fsum() que ayuda a mitigar la p\u00e9rdida de precisi\u00f3n durante la suma. Esta funci\u00f3n\nlleva la cuenta de \"d\u00edgitos perdidos\" mientras se suman los valores en un total. Eso puede hacer una diferencia en la\nexactitud de lo que se va sumando para que los errores no se acumulen al punto en que afecten el total final:\n>>> sum([0.1] * 10) == 1.0\nFalse\n>>> math.fsum([0.1] * 10) == 1.0\nTrue\nError de Representaci\u00f3n\nEsta secci\u00f3n explica el ejemplo \"0.1\" en detalle, y muestra como en la mayor\u00eda de los casos vos mismo pod\u00e9s realizar un\nan\u00e1lisis exacto como este. Se asume un conocimiento b\u00e1sico de la representaci\u00f3n de punto flotante binario.\n 93", "start_char_idx": 1399, "end_char_idx": 2940, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e09e108-2cb1-4797-a4f9-85be41de69fd": {"__data__": {"id_": "8e09e108-2cb1-4797-a4f9-85be41de69fd", "embedding": null, "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ff126f6-ca37-41c6-a8e0-23a154c686f0", "node_type": "4", "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "192028ae64d56c39477b3b59e5754e38daabca842c5194df692782ddfbfd2714", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d20e16e7-4776-490b-bfff-b979d2efba56", "node_type": "1", "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "00ef332d3356992aab2522d4a01814d6bd52843f87689e78f21da6634e33daf8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "505aee45-6d7c-43f4-a8f8-0591ab41db42", "node_type": "1", "metadata": {}, "hash": "f718529d05e857938466378e452d8c53e70894fe3be4044791b31c1be116eefa", "class_name": "RelatedNodeInfo"}}, "hash": "6b98615d2f37ac9669617303469e5af71372746a4dc39c5a156830597a1c5e1f", "text": "Error de representaci\u00f3n se refiere al hecho de que algunas (la mayor\u00eda) de las fracciones decimales no pueden\nrepresentarse exactamente como fracciones binarias (en base 2). Esta es la raz\u00f3n principal de por qu\u00e9 Python (o Perl, C,\nC++, Java, Fortran, y tantos otros) frecuentemente no mostrar\u00e1n el n\u00famero decimal exacto que esper\u00e1s.\n\u00bfPor qu\u00e9 es eso? 1/10 no es representable exactamente como una fracci\u00f3n binaria. Casi todas las m\u00e1quinas de hoy en d\u00eda\n(Noviembre del 2000) usan aritm\u00e9tica de punto flotante IEEE-754, y casi todas las plataformas mapean los flotantes de\nPython al \"doble precisi\u00f3n\" de IEEE-754. Estos \"dobles\" tienen 53 bits de precisi\u00f3n, por lo tanto en la entrada la\ncomputadora intenta convertir 0.1 a la fracci\u00f3n m\u00e1s cercana que puede de la forma J/2***N* donde J es un entero que\ncontiene exactamente 53 bits. Reescribiendo\n1 / 10 ~= J / (2**N)\n...como\nJ ~= 2**N / 10\n...y recordando que J tiene exactamente 53 bits (es >= 2**52 pero < 2**53), el mejor valor para N es 56:\n>>> 2**52 <=  2**56 // 10  < 2**53\nTrue\nO sea, 56 es el \u00fanico valor para N que deja J con exactamente 53 bits.", "start_char_idx": 0, "end_char_idx": 1104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "505aee45-6d7c-43f4-a8f8-0591ab41db42": {"__data__": {"id_": "505aee45-6d7c-43f4-a8f8-0591ab41db42", "embedding": null, "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9ff126f6-ca37-41c6-a8e0-23a154c686f0", "node_type": "4", "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "192028ae64d56c39477b3b59e5754e38daabca842c5194df692782ddfbfd2714", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e09e108-2cb1-4797-a4f9-85be41de69fd", "node_type": "1", "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6b98615d2f37ac9669617303469e5af71372746a4dc39c5a156830597a1c5e1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71f69050-730e-4585-b7ec-91b631cc6013", "node_type": "1", "metadata": {}, "hash": "54d627e0e69792253a0ba286cfbea0282fc3142596fde185d770516d3af2ab37", "class_name": "RelatedNodeInfo"}}, "hash": "f718529d05e857938466378e452d8c53e70894fe3be4044791b31c1be116eefa", "text": "El mejor valor posible para J es entonces el cociente\nredondeado:\n>>> q, r = divmod(2**56, 10)\n>>> r\n6\nYa que el resto es m\u00e1s que la mitad de 10, la mejor aproximaci\u00f3n se obtiene redonde\u00e1ndolo:\n>>> q+1\n7205759403792794\nPor lo tanto la mejor aproximaci\u00f3n a 1/10 en doble precisi\u00f3n 754 es:\n7205759403792794 / 2 ** 56\nEl dividir tanto el numerador como el denominador reduce la fracci\u00f3n a:\n3602879701896397 / 2 ** 55\nNot\u00e1 que como lo redondeamos, esto es un poquito m\u00e1s grande que 1/10; si no lo hubi\u00e9ramos redondeado, el cociente\nhubiese sido un poquito menor que 1/10. \u00a1Pero no hay caso en que sea exactamente 1/10!\nEntonces la computadora nunca \"ve\" 1/10: lo que ve es la fracci\u00f3n exacta de arriba, la mejor aproximaci\u00f3n al flotante doble\nde 754 que puede obtener:\n>>> 0.1 * 2 ** 55\n3602879701896397.0\nSi multiplicamos esa fracci\u00f3n por 10**55, podemos ver el valor hasta los 55 d\u00edgitos decimales:\n>>> 3602879701896397 * 10 ** 55 // 2 ** 55\n1000000000000000055511151231257827021181583404541015625\n...lo que significa que el valor exacto almacenado en la computadora es igual al valor decimal\n0.1000000000000000055511151231257827021181583404541015625. En lugar de mostrar el valor decimal completo,\nmuchos lenguajes (incluyendo versiones m\u00e1s viejas de Python), redondean el resultado a 17 d\u00edgitos significativos:\n>>> format(0.1, '.17f')\n'0.10000000000000001'\n 94", "start_char_idx": 1105, "end_char_idx": 2465, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71f69050-730e-4585-b7ec-91b631cc6013": {"__data__": {"id_": "71f69050-730e-4585-b7ec-91b631cc6013", "embedding": null, "metadata": {"page_label": "103", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3021c611-ccba-41e4-ac04-8cc4afe5852b", "node_type": "4", "metadata": {"page_label": "103", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2d7523a794b3084105d362ee26acc0cc11e48ef4bedb03937403ba44e8930d53", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "505aee45-6d7c-43f4-a8f8-0591ab41db42", "node_type": "1", "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f718529d05e857938466378e452d8c53e70894fe3be4044791b31c1be116eefa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b51d4c9-3562-4141-9364-938b08871f43", "node_type": "1", "metadata": {}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}}, "hash": "54d627e0e69792253a0ba286cfbea0282fc3142596fde185d770516d3af2ab37", "text": "Los m\u00f3dulos fractions y decimal hacen f\u00e1cil estos c\u00e1lculos:\n>>> from decimal import Decimal\n>>> from fractions import Fraction\n>>> Fraction.from_float(0.1)\nFraction(3602879701896397, 36028797018963968)\n>>> (0.1).as_integer_ratio()\n(3602879701896397, 36028797018963968)\n>>> Decimal.from_float(0.1)\nDecimal('0.1000000000000000055511151231257827021181583404541015625')\n>>> format(Decimal.from_float(0.1), '.17')\n'0.10000000000000001'\n 95", "start_char_idx": 0, "end_char_idx": 434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b51d4c9-3562-4141-9364-938b08871f43": {"__data__": {"id_": "2b51d4c9-3562-4141-9364-938b08871f43", "embedding": null, "metadata": {"page_label": "104", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba42d0d6-ee0a-45e9-be76-6fb2a50e1217", "node_type": "4", "metadata": {"page_label": "104", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2e0099d60e7c275267f49fabaf09cb299d46434ea8f51433a5d3c957d5f8579d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71f69050-730e-4585-b7ec-91b631cc6013", "node_type": "1", "metadata": {"page_label": "103", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "54d627e0e69792253a0ba286cfbea0282fc3142596fde185d770516d3af2ab37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b6aa8b5-3d04-4c74-bea1-8ea87d0df106", "node_type": "1", "metadata": {}, "hash": "8c2b3330037c7a61f074cab26b419b5adb1bd30c21832a74a281c61f40e3986d", "class_name": "RelatedNodeInfo"}}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b6aa8b5-3d04-4c74-bea1-8ea87d0df106": {"__data__": {"id_": "9b6aa8b5-3d04-4c74-bea1-8ea87d0df106", "embedding": null, "metadata": {"page_label": "105", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1edffb2-ab7b-44e0-baec-cb6dcf469e7e", "node_type": "4", "metadata": {"page_label": "105", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "246334a6138c7aa47b133c314d6fe72cedc1564d5ffae52b0e9cc80e5f131df1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b51d4c9-3562-4141-9364-938b08871f43", "node_type": "1", "metadata": {"page_label": "104", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f6761b3-1396-4f87-967a-86fe5a800831", "node_type": "1", "metadata": {}, "hash": "386064bf99e1c4c934d28c68828d8dc536ecda11ea143d5c3171966d8fe4102a", "class_name": "RelatedNodeInfo"}}, "hash": "8c2b3330037c7a61f074cab26b419b5adb1bd30c21832a74a281c61f40e3986d", "text": "Links a la documentaci\u00f3n de PythonLo siguiente es una serie de enlaces que apuntan a la documentaci\u00f3n de Python que no est\u00e1 traducida.\nSe incluye aqu\u00ed s\u00f3lo a modo de referencia, y para hacer poder llegar f\u00e1cil a la documentaci\u00f3n de cada \u00edtem cuando se\napunta al mismo en el tutorial.\nExtendiendo e Integrando el Int\u00e9rprete de Python\n\u007f\n\u00cdndice\nReferencia de la API Python/C\n\u007f\n\u00cdndice\nLa referencia de la biblioteca\n\u007f\n\u00cdndice\nTipos integrados\n\u007f\nTipos de cadena\n\u007f\nM\u00e9todos de las cadenas\n\u007f\nFormateo de cadenas\n\u007f\nAntiguo formateo de cadenas\n\u007f\nTipos de mapeo\n\u007f\nTipos de secuencia\n\u007f\nTipos de n\u00fameros complejos\nExcepciones integradas\n\u007f\nExcepciones integradas\nLa referencia del lenguaje\n\u007f\n\u00cdndice\nExpresiones\n\u007f\nlambda\n\u007f\nin\n 97", "start_char_idx": 0, "end_char_idx": 713, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f6761b3-1396-4f87-967a-86fe5a800831": {"__data__": {"id_": "1f6761b3-1396-4f87-967a-86fe5a800831", "embedding": null, "metadata": {"page_label": "106", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4629816-5cd7-450c-b8d3-7c1470af2147", "node_type": "4", "metadata": {"page_label": "106", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "625d6c9b7b23ef87c71c177be85739b562134a6a439d80e8324ef750e0dce625", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b6aa8b5-3d04-4c74-bea1-8ea87d0df106", "node_type": "1", "metadata": {"page_label": "105", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8c2b3330037c7a61f074cab26b419b5adb1bd30c21832a74a281c61f40e3986d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c664fe3b-366d-4a33-baad-199dd9564ce9", "node_type": "1", "metadata": {}, "hash": "0754d21b7cb44bb3cdd3a24bef83dfe955fae0a50c5b022987a247ac5dd56a27", "class_name": "RelatedNodeInfo"}}, "hash": "386064bf99e1c4c934d28c68828d8dc536ecda11ea143d5c3171966d8fe4102a", "text": "Declaraciones simples\u007f\nassert\n\u007f\nbreak\n\u007f\ncontinue\n\u007f\ndel\n\u007f\nglobal\n\u007f\nimport\n\u007f\nnonlocal\n\u007f\npass\n\u007f\nraise\n\u007f\nreturn\n\u007f\nyield\nDeclaraciones compuestas\n\u007f\nfor\n\u007f\nif, elif, else\n\u007f\ntry, except, finally\n\u007f\nwhile\n\u007f\nwith\n\u007f\ndef\nInstalando m\u00f3dulos de Python\n\u007f\n\u00cdndice\nGlosario\nmutables\nhttps://docs.python.org/3/glossary.html#term-mutable\narchivo de texto\nhttps://docs.python.org/3/glossary.html#term-text-file\nentorno virtual\nhttps://docs.python.org/3/glossary.html#term-virtual-environment\nDistribuyendo m\u00f3dulos de Python\n\u007f\n\u00cdndice\nL\u00ednea de comandos y entorno\n 98", "start_char_idx": 0, "end_char_idx": 542, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c664fe3b-366d-4a33-baad-199dd9564ce9": {"__data__": {"id_": "c664fe3b-366d-4a33-baad-199dd9564ce9", "embedding": null, "metadata": {"page_label": "107", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0306128e-efeb-4c64-80bf-6cbf40e6bc9a", "node_type": "4", "metadata": {"page_label": "107", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7b62800fe599e0413d8cddadfe23aa5b14fa9b7b64b55fd679231f8d82f70d6a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f6761b3-1396-4f87-967a-86fe5a800831", "node_type": "1", "metadata": {"page_label": "106", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "386064bf99e1c4c934d28c68828d8dc536ecda11ea143d5c3171966d8fe4102a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ead88ef-04fd-4932-8304-e950663a689a", "node_type": "1", "metadata": {}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}}, "hash": "0754d21b7cb44bb3cdd3a24bef83dfe955fae0a50c5b022987a247ac5dd56a27", "text": "\u007f\nL\u00ednea de comandos y entorno\n 99", "start_char_idx": 0, "end_char_idx": 33, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ead88ef-04fd-4932-8304-e950663a689a": {"__data__": {"id_": "0ead88ef-04fd-4932-8304-e950663a689a", "embedding": null, "metadata": {"page_label": "108", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1a99632b-e21d-4473-9ae8-d74f9f4190b0", "node_type": "4", "metadata": {"page_label": "108", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "137088599a93fc51a135c837414581f38b6d8a7d002103133070df43c7d9fb13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c664fe3b-366d-4a33-baad-199dd9564ce9", "node_type": "1", "metadata": {"page_label": "107", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0754d21b7cb44bb3cdd3a24bef83dfe955fae0a50c5b022987a247ac5dd56a27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac7d6163-98cb-4ebf-a6cb-a84df519bc2d", "node_type": "1", "metadata": {}, "hash": "188816f8c4b004245e761af08fed37a9a7c5ef081b0b9989a6993900ad4a989c", "class_name": "RelatedNodeInfo"}}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "text": "", "start_char_idx": 0, "end_char_idx": 0, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac7d6163-98cb-4ebf-a6cb-a84df519bc2d": {"__data__": {"id_": "ac7d6163-98cb-4ebf-a6cb-a84df519bc2d", "embedding": null, "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7629df1e-27fe-4bd3-89b6-f358a730121a", "node_type": "4", "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cf317fa4a2d6c227e7ccefa411b331685c32c5ae20805ddaf1e15eeab7255283", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ead88ef-04fd-4932-8304-e950663a689a", "node_type": "1", "metadata": {"page_label": "108", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "538f9528-7a59-493e-b2e2-6da54aad693f", "node_type": "1", "metadata": {}, "hash": "3624b3cef718bbe0e88b094d59eb1071fdd2dbec55b20ce9e617325c68cfb5a3", "class_name": "RelatedNodeInfo"}}, "hash": "188816f8c4b004245e761af08fed37a9a7c5ef081b0b9989a6993900ad4a989c", "text": "Ap\u00e9ndice\nModo interactivo\nManejo de erroresCuando ocurre un error, el int\u00e9rprete imprime un mensaje de error y la traza del error. En el modo interactivo, luego retorna\nal prompt primario; cuando la entrada viene de un archivo, el programa termina con c\u00f3digo de salida distinto a cero luego de\nimprimir la traza del error. (Las excepciones manejadas por una clausula except en una sentencia try no son errores en\neste contexto). Algunos errores son incondicionalmente fatales y causan una terminaci\u00f3n con c\u00f3digo de salida distinto de\ncero; esto se debe a inconsistencias internas o a que el int\u00e9rprete se queda sin memoria. Todos los mensajes de error se\nescriben en el flujo de errores est\u00e1ndar; las salidas normales de comandos ejecutados se escriben en la salida est\u00e1ndar.\nAl ingresar el caracter de interrupci\u00f3n (por lo general Control-C o Supr) en el prompt primario o secundario, se cancela la\nentrada y retorna al prompt primario. 9 Tipear una interrupci\u00f3n mientras un comando se est\u00e1n ejecutando lanza la excepci\u00f3n\nKeyboardInterrupt, que puede ser manejada con una sentencia try.\nProgramas ejecutables de Python\nEn los sistemas Unix y tipo BSD, los programas Python pueden convertirse directamente en ejecutables, como programas\ndel int\u00e9rprete de comandos, poniendo la linea:\n#! /usr/bin/env python3.5\n...al principio del script y d\u00e1ndole al archivo permisos de ejecuci\u00f3n (asumiendo que el int\u00e9rprete est\u00e1n en la variable de\nentorno PATH del usuario). #! deben ser los primeros dos caracteres del archivo. En algunas plataformas, la primera l\u00ednea\ndebe terminar al estilo Unix ('\\n'), no como en Windows ('\\r\\n'). Not\u00e1 que el caracter numeral '#' se usa en Python\npara comenzar un comentario.", "start_char_idx": 0, "end_char_idx": 1699, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "538f9528-7a59-493e-b2e2-6da54aad693f": {"__data__": {"id_": "538f9528-7a59-493e-b2e2-6da54aad693f", "embedding": null, "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7629df1e-27fe-4bd3-89b6-f358a730121a", "node_type": "4", "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cf317fa4a2d6c227e7ccefa411b331685c32c5ae20805ddaf1e15eeab7255283", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac7d6163-98cb-4ebf-a6cb-a84df519bc2d", "node_type": "1", "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "188816f8c4b004245e761af08fed37a9a7c5ef081b0b9989a6993900ad4a989c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3b4b9a3-772b-4ea9-a711-417901f5d6be", "node_type": "1", "metadata": {}, "hash": "19d70c981bf6463f98203677b1c9ea8f62732b1c64829d9373c92928d0570698", "class_name": "RelatedNodeInfo"}}, "hash": "3624b3cef718bbe0e88b094d59eb1071fdd2dbec55b20ce9e617325c68cfb5a3", "text": "Not\u00e1 que el caracter numeral '#' se usa en Python\npara comenzar un comentario.\nSe le puede dar permisos de ejecuci\u00f3n al script usando el comando chmod:\n.. code-block:: bash\n$ chmod +x myscript.py\nEn sistemas Windows, no existe la noci\u00f3n de \"modo ejecutable\". El instalador de Python asocia autom\u00e1ticamente la\nextensi\u00f3n .py con python.exe para que al hacerle doble click a un archivo Python se corra el script. La extensi\u00f3n\ntambi\u00e9n puede ser .pyw, en este caso se omite la ventana con la consola que normalmente aparece.\nEl archivo de inicio interactivo\nCuando us\u00e1s Python en forma interactiva, suele ser \u00fatil que algunos comandos est\u00e1ndar se ejecuten cada vez que el\nint\u00e9rprete se inicia. Pod\u00e9s hacer esto configurando la variable de entorno PYTHONSTARTUP con el nombre de un archivo\nque contenga tus comandos de inicio. Esto es similar al archivo .profile en los int\u00e9rpretes de comandos de Unix.\nEste archivo es solo le\u00eddo en las sesiones interactivas del int\u00e9rprete, no cuando Python lee comandos de un script ni cuando\n/dev/tty se explicita como una fuente de comandos (que de otro modo se comporta como una sesi\u00f3n interactiva). Se ejecuta\nen el mismo espacio de nombres en el que los comandos interactivos se ejecutan, entonces los objetos que define o importa\npueden ser usados sin cualificaciones en la sesi\u00f3n interactiva. En este archivo tambi\u00e9n pod\u00e9s cambiar los prompts\nsys.ps1 y sys.ps2.\n 101", "start_char_idx": 1621, "end_char_idx": 3023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3b4b9a3-772b-4ea9-a711-417901f5d6be": {"__data__": {"id_": "f3b4b9a3-772b-4ea9-a711-417901f5d6be", "embedding": null, "metadata": {"page_label": "110", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b9e89939-c2c4-4d6e-b29d-28b46f51cb12", "node_type": "4", "metadata": {"page_label": "110", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1466527b7f32225038f2ce2609d1d77331970dfb1411c9a41a103bd071239e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "538f9528-7a59-493e-b2e2-6da54aad693f", "node_type": "1", "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3624b3cef718bbe0e88b094d59eb1071fdd2dbec55b20ce9e617325c68cfb5a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e41e407-3c87-4b0a-92d7-e0737c441714", "node_type": "1", "metadata": {}, "hash": "861593f8b5d8c99063ca06ec903895ac1c8b30772d51b2e5c8f7e57407b3915a", "class_name": "RelatedNodeInfo"}}, "hash": "19d70c981bf6463f98203677b1c9ea8f62732b1c64829d9373c92928d0570698", "text": "Si quer\u00e9s leer un archivo de inicio adicional desde el directorio actual, pod\u00e9s programarlo en el archivo de inicio global\nusando algo como if os.path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read()). Si quer\u00e9s\nusar el archivo de inicio en un script, ten\u00e9s que hacer lo siguiente de forma expl\u00edcita en el script:\nimport os\nnombrearchivo = os.environ.get('PYTHONSTARTUP')\nif nombrearchivo and os.path.isfile(nombrearchivo):\n    with open(nombrearchivo) as fobj:\n        archivo_inicio = fobj.read()\n    exec(archivo_inicio)\nLos m\u00f3dulos de customizaci\u00f3n\nPython provee dos formas para customizarlo: sitecustomize y usercustomize. Para ver como funciona, necesit\u00e1s\nprimero encontrar d\u00f3nde est\u00e1 tu directorio para tu usuario de paquetes del sistema. Arranc\u00e1 Python y ejecut\u00e1 el siguiente\nc\u00f3digo:\n>>> import site\n>>> site.getusersitepackages()\n'/home/user/.local/lib/python3.5/site-packages'\nAhora pod\u00e9s crear un archivo llamado usercustomize.py en ese directorio y poner lo que quieras en \u00e9l. Eso afectar\u00e1 cada\nejecuci\u00f3n de Python, a menos que se arranque con la opci\u00f3n -s para deshabilitar esta importaci\u00f3n autom\u00e1tica.\nsitecustomize funciona de la misma manera, pero normalmente lo crea el administrador de la computadora en el\ndirectorio global de paquetes para el sistema, y se importa antes que usercustomize. Para m\u00e1s detalles, mir\u00e1 la\ndocumentaci\u00f3n del m\u00f3dulo site.\n9\nA problem with the GNU Readline package may prevent this.\n 102", "start_char_idx": 0, "end_char_idx": 1440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e41e407-3c87-4b0a-92d7-e0737c441714": {"__data__": {"id_": "2e41e407-3c87-4b0a-92d7-e0737c441714", "embedding": null, "metadata": {"page_label": "111", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4be576b2-5a3d-4353-bb0b-b47b4214b883", "node_type": "4", "metadata": {"page_label": "111", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d874e0d3b4ef384c46ece390ce80d38c607f93a47e7a2a8f00c9c0c2cadc36c2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3b4b9a3-772b-4ea9-a711-417901f5d6be", "node_type": "1", "metadata": {"page_label": "110", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "19d70c981bf6463f98203677b1c9ea8f62732b1c64829d9373c92928d0570698", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d96c0d0c-2053-4a92-95b1-f44b7c665ea4", "node_type": "1", "metadata": {}, "hash": "fd67616c56a079b898381b4bb09aeeed53e63540469c52bb29e25c1652a80962", "class_name": "RelatedNodeInfo"}}, "hash": "861593f8b5d8c99063ca06ec903895ac1c8b30772d51b2e5c8f7e57407b3915a", "text": "103", "start_char_idx": 0, "end_char_idx": 3, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d96c0d0c-2053-4a92-95b1-f44b7c665ea4": {"__data__": {"id_": "d96c0d0c-2053-4a92-95b1-f44b7c665ea4", "embedding": null, "metadata": {"page_label": "1", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f54c988-2e34-453a-b05f-ca0774425df8", "node_type": "4", "metadata": {"page_label": "1", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3ab4545b316964948f68396c9aa5b4c8ccf4f1575e4e26ee42afd956ddc1bea2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e41e407-3c87-4b0a-92d7-e0737c441714", "node_type": "1", "metadata": {"page_label": "111", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "861593f8b5d8c99063ca06ec903895ac1c8b30772d51b2e5c8f7e57407b3915a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56a31cc3-1edd-4203-8fbb-5acf354fffff", "node_type": "1", "metadata": {}, "hash": "4a46b3b544fe629d97ff18660591c920639df23d2a9fe449cfb598065b63c6fc", "class_name": "RelatedNodeInfo"}}, "hash": "fd67616c56a079b898381b4bb09aeeed53e63540469c52bb29e25c1652a80962", "text": "1 \n \n \nEscuela Superior Polit\u00e9cnica del Litoral  \n \n \n          Python  \n    Programaci\u00f3n \n \n \n \n                                    \n  \n \n \n \nLibro  digita l \nVersi\u00f3n 2 .5 \u2013 2016 \nLuis Rodr\u00edguez Ojeda  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 223, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56a31cc3-1edd-4203-8fbb-5acf354fffff": {"__data__": {"id_": "56a31cc3-1edd-4203-8fbb-5acf354fffff", "embedding": null, "metadata": {"page_label": "2", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed7a2859-0821-4472-81d2-26f82000540b", "node_type": "4", "metadata": {"page_label": "2", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "72f3ae1a4a1fa99b9a3aaae2dd7f1a0598702c260060493448aaafde5ec5ac47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d96c0d0c-2053-4a92-95b1-f44b7c665ea4", "node_type": "1", "metadata": {"page_label": "1", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fd67616c56a079b898381b4bb09aeeed53e63540469c52bb29e25c1652a80962", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a069426a-acf2-4aab-94bf-c58286c8e22d", "node_type": "1", "metadata": {}, "hash": "07e213b4a2742b1886f34d2eb46fee3f5ee080605b7ca73efea411b339f5b5a9", "class_name": "RelatedNodeInfo"}}, "hash": "4a46b3b544fe629d97ff18660591c920639df23d2a9fe449cfb598065b63c6fc", "text": "2 \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 24, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a069426a-acf2-4aab-94bf-c58286c8e22d": {"__data__": {"id_": "a069426a-acf2-4aab-94bf-c58286c8e22d", "embedding": null, "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4dc33ac4-9a39-435e-b665-2eb7ea8889df", "node_type": "4", "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cbf4f474a51a7a4a19ed5785ab2fead12e6a1ec82e03fdbfdc2b64f5c897545c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56a31cc3-1edd-4203-8fbb-5acf354fffff", "node_type": "1", "metadata": {"page_label": "2", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4a46b3b544fe629d97ff18660591c920639df23d2a9fe449cfb598065b63c6fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aec30e33-f53b-4ecb-8e77-90e32e8ba2a6", "node_type": "1", "metadata": {}, "hash": "61f56d235a48c80a471ba5eb64c7550526e1de505cfbedf6fc64459ad51f3037", "class_name": "RelatedNodeInfo"}}, "hash": "07e213b4a2742b1886f34d2eb46fee3f5ee080605b7ca73efea411b339f5b5a9", "text": "3 \n \nPython  Programaci\u00f3n   \n \nPrefacio  \n \nEste documento es una contribuci\u00f3n bibliogr\u00e1fica para los estudiantes que toman un \nprimer curso de Programaci\u00f3n de Computadoras a nivel universitario. El estudio del \nmaterial incl uido en los primeros doce cap\u00edtulos no tiene pre -requistos, solamente el \ninter\u00e9s en conocer un lenguaje actual que posteriormente pueda ser usado como el \nsoporte para resolver computacionalmente problemas de diferente nivel de complejidad en \ningenier\u00eda, matem\u00e1ticas y otras \u00e1reas. Sin embargo, es deseable que los interesados \ntengan algun conocimiento b\u00e1sico de la l\u00f3gica matem\u00e1tica.  \n \nEl enfoque did\u00e1ctico utilizado en este documento es el aprendizaje mediante ejemplos y \ndesarrollo de ejercicios propuestos. El material incluye muchos  ejemplos para describir los \nconceptos algor\u00edtmicos en forma pr\u00e1ctica y el uso del  lenguaje computacional Python.  \n Python es un interpretador de instrucciones muy eficiente y de acceso libre y p\u00fablico \ndisponible para su instalaci\u00f3n desde la red internet. El lenguaje Python es f\u00e1cil de aprender \ny aplicar, vers\u00e1til y muy conveniente para iniciar el aprendizaje de lenguajes de \nprogramaci\u00f3n de manera progresiva y creativa usando diferentes metodolog\u00edas de \nprogramaci\u00f3n .  \n \nEl soporte de est e documento es la experiencia desarrollada por el autor impartiendo \ncursos de ense\u00f1anza de lenguajes de programaci\u00f3n para estudiantes de ingenier\u00eda y el \nhaber desarroll ado otros documentos  digitales  de apoyo bibliogr\u00e1fico.  \n Este documento es de uso p\u00fablico y distribuci\u00f3n libre y se adhiere a la corriente de \ndesarroll ar textos digitales que puedan  ser actualiza dos y mejor ados continuamente y \ndisponibles para su uso en l\u00ednea, reduciendo el consumo de papel y tinta, contribuyendo \nas\u00ed con el cuidado del medio ambiente.   \n El documento ha sido compilado en un formato que facilita  el uso de la informaci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1895, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aec30e33-f53b-4ecb-8e77-90e32e8ba2a6": {"__data__": {"id_": "aec30e33-f53b-4ecb-8e77-90e32e8ba2a6", "embedding": null, "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4dc33ac4-9a39-435e-b665-2eb7ea8889df", "node_type": "4", "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cbf4f474a51a7a4a19ed5785ab2fead12e6a1ec82e03fdbfdc2b64f5c897545c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a069426a-acf2-4aab-94bf-c58286c8e22d", "node_type": "1", "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07e213b4a2742b1886f34d2eb46fee3f5ee080605b7ca73efea411b339f5b5a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3f6117e-1944-411c-a2e8-217c78e81a76", "node_type": "1", "metadata": {}, "hash": "669b60a3c5e51ac6205d2aaf7e82b9060ecb4d10312b6a939fb5b44c5d7a6aaa", "class_name": "RelatedNodeInfo"}}, "hash": "61f56d235a48c80a471ba5eb64c7550526e1de505cfbedf6fc64459ad51f3037", "text": "El documento ha sido compilado en un formato que facilita  el uso de la informaci\u00f3n. Se \npuede controlar el tama\u00f1o del texto en pantalla, agregar un \u00edndice electr\u00f3nico para facilitar \nb\u00fasqueda de temas, resaltar digitalmente texto, insertar comentarios, notas, enlaces, \nrevisiones, etc.  y que  no ser\u00eda posible en un texto impreso.  \n \n \n \n \n \n \n  \n \nEscuela Superior Poli t\u00e9cnica del Litoral  \nLuis Rodr\u00edguez Ojeda, M.Sc.  \nProfesor  \n2014  \n                                                lrodrig@espol.edu.ec  \nPython Programaci\u00f3n", "start_char_idx": 1811, "end_char_idx": 2346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3f6117e-1944-411c-a2e8-217c78e81a76": {"__data__": {"id_": "a3f6117e-1944-411c-a2e8-217c78e81a76", "embedding": null, "metadata": {"page_label": "4", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b37beb03-cf3b-413f-b7e0-76ee61fe6bea", "node_type": "4", "metadata": {"page_label": "4", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8b43b89482a2c73ac79a09597fb4afc859d4b55a4e08c8b14478ab57da6f8234", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aec30e33-f53b-4ecb-8e77-90e32e8ba2a6", "node_type": "1", "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "61f56d235a48c80a471ba5eb64c7550526e1de505cfbedf6fc64459ad51f3037", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34bdbcc4-97dc-42c0-9d6d-717a510adfb8", "node_type": "1", "metadata": {}, "hash": "ce9e0e5f6413312c175b6d88ff21930b8cc81343374d5ac7e1cb638f501c0c0d", "class_name": "RelatedNodeInfo"}}, "hash": "669b60a3c5e51ac6205d2aaf7e82b9060ecb4d10312b6a939fb5b44c5d7a6aaa", "text": "4 \n \nOrganizaci\u00f3n del material  \n \nEl cap\u00edtulo 1 establece un modelo general para la resoluci\u00f3n de problemas con el \ncomputador. Los usuarios pudiera n darle unos pocos minutos a su lectura.  \n \nLos cap\u00edtulos 2 y 3 son o pcionales. Pueden ser de inter\u00e9s para los usuarios que quieran \nentender los conceptos abstractos de algoritmos y la construcci\u00f3n de algoritmos \ncomputacionales independientemente de un lenguaje de programaci\u00f3n espec\u00edfico . \n El cap\u00edtulo 4 tiene informaci\u00f3n general acer ca de lenguajes de programaci\u00f3n y \nmetodolog\u00edas de programaci\u00f3n. Su lectura tomar\u00e1 pocos minutos  \n \nLos cap\u00edtulos 5, 6, 7, 8 y 9 contienen el material b\u00e1sico para conocer y practicar el lenguaje \nde programaci\u00f3n Python . Su estudio cubrir\u00eda el tiempo de un semestre acad\u00e9mico para \nestudiantes de carreras de ingenier\u00eda.  \n \nEn esta edici\u00f3n se ha agregado el cap\u00ectulo 9  el cual  contiene soluciones propuestas para \nlos problemas incluidos en ex\u00e1menes receptados recientemente en el curso \u201cFundamentos \nde Programaci\u00f3n\u201d de la Facul tad de Ingenier\u00eda El\u00e9ctrica y Computaci\u00f3n (FIEC) de la \nEscuela Superior Pol it\u00e9cnica del Litoral (ESPOL).  Estos problemas representan la l\u00ednea \nactual de conocimientos  requeridos del lenguaje Python . Se sugiere estudiar y probar l as \nsoluciones propuestas . \n \nLos cap\u00edtulos  10, 1 1  y  12  son una introducci\u00f3n a temas que normalmente son de inter\u00e9s \npara estudiantes que siguen una carrera orientada a \u00e1reas computacionales . \n \nLos cap\u00edtulos 13 y 14 pueden ser de inter\u00e9s para usuarios que tienen un mayor nivel de \nconocimientos matem\u00e1ticos  y requieren resolver problemas mas especializados con el \nsoporte de librer\u00edas especializadas de Python . \n \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1711, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34bdbcc4-97dc-42c0-9d6d-717a510adfb8": {"__data__": {"id_": "34bdbcc4-97dc-42c0-9d6d-717a510adfb8", "embedding": null, "metadata": {"page_label": "5", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a91034b0-9840-4f89-b6c1-48ce44b3fc5d", "node_type": "4", "metadata": {"page_label": "5", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3b921f6723fbde7f24dcb2250ce34dce9443e63c59f8370414fea056b2cf2720", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3f6117e-1944-411c-a2e8-217c78e81a76", "node_type": "1", "metadata": {"page_label": "4", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "669b60a3c5e51ac6205d2aaf7e82b9060ecb4d10312b6a939fb5b44c5d7a6aaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8622ec58-b503-4e90-9a84-d975df92864a", "node_type": "1", "metadata": {}, "hash": "605669602403de9fb4c2510f0ce440c6e7d1fd79b583d347d1a3647edfa7e62a", "class_name": "RelatedNodeInfo"}}, "hash": "ce9e0e5f6413312c175b6d88ff21930b8cc81343374d5ac7e1cb638f501c0c0d", "text": "5 \n \nContenido  \n \n1   Introducci\u00f3n          10 \n1.1 Objetivo y requisitos        10 \n1.2 Metodolog\u00eda         10 \n1.3 Un modelo para resol ver problemas con el computador   10 \n \n2       Algoritmos          12 \n2.1  Estructura de un algoritmo       12 \n2.2  Lenguajes para d escribir algoritmos     13 \n2.3 Definiciones         13 \n2.4 Introducci\u00f3n a la construcci\u00f3n de algoritmos    13 \n2.5 Ejercicios de creaci\u00f3n de algoritmos     16 \n \n3  Construcci\u00f3n de algoritmos computacionales    19 \n3.1 Instrucciones y operaciones elementales     19 \n3.2 Diagramas de flujo        21 \n3.3 Seudo lenguaje        23 \n3.3.1 Algunas instrucciones t\u00edpicas de asignaci\u00f3n en   24 \nnotaci\u00f3n algor\u00edtmica  \n3.3.2 Ejercicios con la notaci\u00f3n algor\u00edtmica: Algoritmos  25 \nsecuenciales  \n3.4 Estructuras de control de flujo de un algoritmo    26 \n3.4.1 Estructuras de decisi\u00f3n      26 \n3.4.2 Ejercicios con la notaci\u00f3n algor\u00edtmica: Algoritmos  32 \ncon decisiones \n3.4.3 Estructuras de repetici\u00f3n o ciclos     33 \n3.4.4 Ejercicios con la notaci\u00f3n algor\u00edtmica: Algoritmos  41 \ncon ciclos \n 3.5 Reestructuraci\u00f3n de algoritmos     42 \n  3.5.1 Ejercicios de reestructuraci \u00f3n de algoritmos   47 \n 4  Lenguajes de Programaci\u00f3n de Computadoras     49 \n4.1 Metodolog\u00edas de programaci\u00f3n      50 \n4.2 Factores para elegir un lenguaje de programaci\u00f3n   50 \n4.3  Lenguajes compilados y lenguajes interpretados   51 \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8622ec58-b503-4e90-9a84-d975df92864a": {"__data__": {"id_": "8622ec58-b503-4e90-9a84-d975df92864a", "embedding": null, "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da2b88ce-56ac-444f-99b5-522e7f5653e9", "node_type": "4", "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a14420ad15014a59993c2d3474c66fcb25fa0e2a9495e7c8b0a69546b9c3e869", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34bdbcc4-97dc-42c0-9d6d-717a510adfb8", "node_type": "1", "metadata": {"page_label": "5", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ce9e0e5f6413312c175b6d88ff21930b8cc81343374d5ac7e1cb638f501c0c0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d2c9222-398e-4bdd-817f-378d3b2c0770", "node_type": "1", "metadata": {}, "hash": "3760b27aa5349e53c9d41d88317bda3dbf638b366e64732002ceb6d6c2f46010", "class_name": "RelatedNodeInfo"}}, "hash": "605669602403de9fb4c2510f0ce440c6e7d1fd79b583d347d1a3647edfa7e62a", "text": "6 \n \n5  El lenguaje Python        52 \n5.1 Origen del lenguaje Python      52 \n5.2  Caracteristicas del lenguaje computacional Python   53 \n5.3 Carga e instalaci\u00f3n        55 \n5.4 Extensiones al lenguaje       57 \n5.5     Desarrollo de programas en el lenguaje Python   58 \n5.6 Algunos elementos b\u00e1sicos para escribir programas   58 \n5.6.1 Tipos de datos b\u00e1sicos      58 \n5.6.2 Variables o identificadores      59 \n5.6.3 Operadores       59 \n5.6.4 Conversi\u00f3n entre tipos de datos     62 \n5.6.5 Tipos num\u00e9ricos en otras bases    63 \n5.6.6 Uso de m\u00f3dulos especiales     64 \n5.6.7  El sistema de ayuda      65 \n5.6.8 Documentaci\u00f3n en linea     66 \n5.6.9 Depuraci\u00f3n de programas      66 \n5.6.10 Funciones del m\u00f3dulo math      67 \n5.6.11 Traducci\u00f3n de expresiones     68 \n5.6.12 Ejercicios de traducci\u00f3n de expresiones   68 \n5.6.13  Un ejemplo introductorio desarrollado en    69 \nmodo interactivo       \n5.6.14  Pr\u00e1ctica com putacional en la ventana interactiva   70 \n5.6.15  Ejercicios de resoluci\u00f3n de problemas en la ventana  71 \ninteractiva \n5.7   Instrucciones b\u00e1sicas para programar con Python   72 \n5.7.1 Instrucci\u00f3n de asignaci\u00f3n     72 \n5.7.2 Asignaciones especiales      72 \n5.7.3 Instrucci\u00f3n para ingreso de datos     74 \n5.7.4 Instrucci\u00f3n para salida de resultados   75 \n5.7.5  Documentaci\u00f3n de los programas     76 \n5.7.6 Encolumnamiento de instrucciones    76 \n5.7.", "start_char_idx": 0, "end_char_idx": 1373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d2c9222-398e-4bdd-817f-378d3b2c0770": {"__data__": {"id_": "1d2c9222-398e-4bdd-817f-378d3b2c0770", "embedding": null, "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da2b88ce-56ac-444f-99b5-522e7f5653e9", "node_type": "4", "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a14420ad15014a59993c2d3474c66fcb25fa0e2a9495e7c8b0a69546b9c3e869", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8622ec58-b503-4e90-9a84-d975df92864a", "node_type": "1", "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "605669602403de9fb4c2510f0ce440c6e7d1fd79b583d347d1a3647edfa7e62a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7c34272-708f-4014-bad2-a97f260a1fe2", "node_type": "1", "metadata": {}, "hash": "5958defc4a44a5d41b8fc5a5c06f3529d09464a49dcf60c2dd8d7955870c68a5", "class_name": "RelatedNodeInfo"}}, "hash": "3760b27aa5349e53c9d41d88317bda3dbf638b366e64732002ceb6d6c2f46010", "text": "7.6 Encolumnamiento de instrucciones    76 \n5.7.7 El primer ejemplo desarrollado en modo de   77 \nprograma maci\u00f3n        \n5.7.8 Ejercicios de programaci\u00f3n con las instrucciones  80 \nb\u00e1sicas  \n5.7.9 Operadores para aritm\u00e9tica entera     81 \n5.7.10 Ejercicios de programaci\u00f3n con los operadores para 82 \n aritm\u00e9tica entera  \nPython Programaci\u00f3n", "start_char_idx": 1325, "end_char_idx": 1667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7c34272-708f-4014-bad2-a97f260a1fe2": {"__data__": {"id_": "b7c34272-708f-4014-bad2-a97f260a1fe2", "embedding": null, "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1a1c962-e3a0-4de3-9d33-2a640b06643f", "node_type": "4", "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6edddd368fd3322224f6f6704abaeecae605019ed80e0e882986ea994a3922ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d2c9222-398e-4bdd-817f-378d3b2c0770", "node_type": "1", "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3760b27aa5349e53c9d41d88317bda3dbf638b366e64732002ceb6d6c2f46010", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23b2ca84-bd68-4ef5-988c-81ea1d261771", "node_type": "1", "metadata": {}, "hash": "9286903a0225446f1c956f01e5e1dbbc77669923f167c88b819259fa5333690a", "class_name": "RelatedNodeInfo"}}, "hash": "5958defc4a44a5d41b8fc5a5c06f3529d09464a49dcf60c2dd8d7955870c68a5", "text": "7 \n \n5.8 Estructuras de decisi\u00f3n  en Python     83 \n5.8.1 Ejecuci\u00f3n condicionada de un bloque de instrucciones  83 \n5.8.2 Ejecuci\u00f3n selectiva entre dos bloques de instrucciones  86 \n5.8.3 Decisiones anidadas      88 \n5.8.4 Decisiones consecutivas     91 \n5.8.5 Ejercicios de programaci\u00f3n con decisiones  94 \n5.9 N\u00fameros aleatorios        98 \n5.10   Estructuras de repetici\u00f3n o ciclos en Python              100 \n5.10.1 Ejecuci\u00f3n repetida de un bloque mediante   100 \nuna condici\u00f3n al inicio  \n5.10.2 Ejecuci\u00f3n repetida de un bloque mediante   105 \nuna secuencia  \n5.10.3   Ciclos anidados       122 \n5.10.4 La instrucci\u00f3n  break      132 \n5.10.5 La instrucci\u00f3n  continue      135 \n5.10.6 La instrucci\u00f3n  exit       136 \n5.10.7 La instrucci\u00f3n  pass      136 \n5.10.8 El objeto  None       136 \n5.10.9 Ejecuci\u00f3n repetida de un bloque mediante  una   137 \ncondici\u00f3n al final  \n5.11  Introducci\u00f3n a validaci\u00f3n de datos  y control de errores de  139 \n ejecuci \u00f3n \n5.11.1 Control de errores de ejecuci \u00f3n    1 40 \n5.12 Ejercicios de programaci\u00f3n con ciclos     1 45 \n5.13 Programas que interact\u00faan con un men\u00fa     1 49 \n5.13.1 Ejercicios de programaci\u00f3n con m en\u00fa   1 53 \n \n6 Creaci\u00f3n de f unciones        1 54 \n6.1 Declaraci\u00f3n de una funci\u00f3n       1 54 \n6.2 Par\u00e1metros empaquetados      159 \n6.3 Par\u00e1metros por omisi\u00f3n       159 \n6.4 Par\u00e1metros por valor y par\u00e1metros por referencia   162 \n6.", "start_char_idx": 0, "end_char_idx": 1386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23b2ca84-bd68-4ef5-988c-81ea1d261771": {"__data__": {"id_": "23b2ca84-bd68-4ef5-988c-81ea1d261771", "embedding": null, "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1a1c962-e3a0-4de3-9d33-2a640b06643f", "node_type": "4", "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6edddd368fd3322224f6f6704abaeecae605019ed80e0e882986ea994a3922ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7c34272-708f-4014-bad2-a97f260a1fe2", "node_type": "1", "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5958defc4a44a5d41b8fc5a5c06f3529d09464a49dcf60c2dd8d7955870c68a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7bb8c8b-70dc-463d-96a5-9cdfefdae095", "node_type": "1", "metadata": {}, "hash": "8724aa5c4d2b48d3cb2c741c78c8a52454d0a607ffaeb0bfa464f587b79fdfc8", "class_name": "RelatedNodeInfo"}}, "hash": "9286903a0225446f1c956f01e5e1dbbc77669923f167c88b819259fa5333690a", "text": "4 Par\u00e1metros por valor y par\u00e1metros por referencia   162 \n6.5 Espacio de las variables de programas y funciones  163 \n6.6 Declaraci\u00f3n de variables globales      164 \n6.7 Func iones sin par\u00e1metros       166 \n6.8 Expresiones lambda       166 \n6.9 Funciones recursivas        167 \n \nPython Programaci\u00f3n", "start_char_idx": 1326, "end_char_idx": 1625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7bb8c8b-70dc-463d-96a5-9cdfefdae095": {"__data__": {"id_": "f7bb8c8b-70dc-463d-96a5-9cdfefdae095", "embedding": null, "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f4a9738-5576-41e6-ab88-32f902f9e9ee", "node_type": "4", "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4ea97860cddbf745aebdae8b93da4e171515189d3106a093cb4cccda74d5f43a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23b2ca84-bd68-4ef5-988c-81ea1d261771", "node_type": "1", "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9286903a0225446f1c956f01e5e1dbbc77669923f167c88b819259fa5333690a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0309751e-e8db-405d-8c01-22641380493b", "node_type": "1", "metadata": {}, "hash": "0b8c5e517652ecc99781bb76af61a6b6c467c2fcd0b11283b0ebaca8f1a298dc", "class_name": "RelatedNodeInfo"}}, "hash": "8724aa5c4d2b48d3cb2c741c78c8a52454d0a607ffaeb0bfa464f587b79fdfc8", "text": "8 \n \n6.10 Funciones generadoras       170 \n6.10.1 Generadores infinitos      172 \n6.10.2 Interrupci\u00f3n de un ciclo dobl e    176 \n6.11 Funciones con par\u00e1metros de tipo funci\u00f3n   177 \n6.12 Sugerencias generales para programar con funciones  178 \n6.13 Ejercicios de programaci \u00f3n con funciones     179 \n \n7 Tipos de datos estructurados       182 \n7.1 Listas         182 \n 7.1.1 Programaci\u00f3n de iteraci ones con tipos de datos   196 \n  estructurados  \n 7.1.8 Trasmisi\u00f3n de par\u00e1metros de tipo estructurado   198 \n7.2 Arreglos  unidimensionales (vectores)     199 \n  7.2.1 Resoluci\u00f3n de problemas con arreglos    212 \nunidimensionales (vectores)  \n  7.2.2 Ejercicios de programaci \u00f3n con arreglos    227 \nunidimensionales  (vectores)   \n 7.3 Cadenas de caracteres (strings)      232 \n  7.3.1 Resoluci\u00f3n de problemas con cadenas de caracteres 240 \n  7.3.2 Ejercicios de programaci \u00f3n con cadenas de caracteres  247 \n 7.4 Arreglos bidimension ales (matrices)     250 \n  7.4.1 Resoluci\u00f3n de problemas con arreglos bidimensionales  274 \n   (matrices)   \n  7.4.2 Listas y a rreglos multidimensionales    289 \n  7.4.3 Ejercicios de programaci \u00f3n con arreglos     294 \nbidimensionales (matrices)   \n7.5 Tuplas          301 \n7.6 Conjuntos         306 \n7.7 Diccionarios         310 \n7.8 Ejercicios de programaci \u00f3n con colecciones y funciones 322 \n \n8 Registros y archivos         324 \n 8.1 Desarrollo de aplicaci ones  con registros en memoria   325 \n8.", "start_char_idx": 0, "end_char_idx": 1439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0309751e-e8db-405d-8c01-22641380493b": {"__data__": {"id_": "0309751e-e8db-405d-8c01-22641380493b", "embedding": null, "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f4a9738-5576-41e6-ab88-32f902f9e9ee", "node_type": "4", "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4ea97860cddbf745aebdae8b93da4e171515189d3106a093cb4cccda74d5f43a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7bb8c8b-70dc-463d-96a5-9cdfefdae095", "node_type": "1", "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8724aa5c4d2b48d3cb2c741c78c8a52454d0a607ffaeb0bfa464f587b79fdfc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d5602a8-3e70-4eac-9a44-9569edd02431", "node_type": "1", "metadata": {}, "hash": "62a935cc847ba9e900393d478621fa929d948cd5977c5ccd6eeb439a8bf58efb", "class_name": "RelatedNodeInfo"}}, "hash": "0b8c5e517652ecc99781bb76af61a6b6c467c2fcd0b11283b0ebaca8f1a298dc", "text": "1 Desarrollo de aplicaci ones  con registros en memoria   325 \n8.2 Funciones para manejo de archivos secuenciales de tipo texto  332 \nen disco  \n 8.3 Programas para al macenamiento y recuperaci\u00f3n de registros  346 \n   en archivo s de texto en disco  \n 8.6 Ejercicios de programaci \u00f3n con registros y archivos  363 \nPython Programaci\u00f3n", "start_char_idx": 1374, "end_char_idx": 1708, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d5602a8-3e70-4eac-9a44-9569edd02431": {"__data__": {"id_": "2d5602a8-3e70-4eac-9a44-9569edd02431", "embedding": null, "metadata": {"page_label": "9", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "953da057-f7db-4d8b-a8da-fdfae391a330", "node_type": "4", "metadata": {"page_label": "9", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7b0cc7525967bf4390d1e279faa426922c1aeabaabc6fd32ab4cbc4117e9dd50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0309751e-e8db-405d-8c01-22641380493b", "node_type": "1", "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0b8c5e517652ecc99781bb76af61a6b6c467c2fcd0b11283b0ebaca8f1a298dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88431954-6101-4392-b6c8-1479e2c77c98", "node_type": "1", "metadata": {}, "hash": "acc778ad44192b75855e2d0f0d9772cf2be6829d9f1365cdc486324f13561f41", "class_name": "RelatedNodeInfo"}}, "hash": "62a935cc847ba9e900393d478621fa929d948cd5977c5ccd6eeb439a8bf58efb", "text": "9 \n \n9 Soluciones propuestas para p roblemas de ex\u00e1menes de   367 \nprogramaci\u00f3n  de computadoras con el l enguaje Python \n \n10 Programaci\u00f3n Orientada a Objetos       398 \n10.1 Dise\u00f1o de clases para representar estructuras de datos   400 \nespeciales  \n10.1.1  Estructura de datos Pila      400 \n10.1.2  Estructura de datos Cola      405 \n 10.2 Ejercicios de p rogramaci\u00f3n orientada a objetos    409  \n \n11 Dise\u00f1o de Interfaz de Usuario       410 \n 11.1 Dise\u00f1o de interfaz de usuario con p rogramaci\u00f3n orientada  411 \na objetos  \n \n12 Eficiencia de algoritmos y programas     415 \n12.1 La notaci\u00f3n  O( )        417 \n \n13 Librer\u00edas especializadas       419 \n 13.1 Librer\u00eda Pandas       419 \n13.2 Librer\u00eda gr\u00e1ficas:  Pylab , Matplotlib      441 \n13.3 Librer\u00eda para manejo matem\u00e1tico simb\u00f3lico: SymPy  445 \n \n14 M\u00e9todos Num\u00e9ricos         449 \n14.1 Problemas de aplicaci\u00f3n de los m\u00e9todos num\u00e9ricos   459 \n \n15 Bibliograf \u00eda         460 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88431954-6101-4392-b6c8-1479e2c77c98": {"__data__": {"id_": "88431954-6101-4392-b6c8-1479e2c77c98", "embedding": null, "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19ef0b8a-7986-4a84-b3a7-76ab9055012e", "node_type": "4", "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6b276ecbec350294bf1abead44c13b68be815ecf3a89a2f2cf9348229f6a999", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d5602a8-3e70-4eac-9a44-9569edd02431", "node_type": "1", "metadata": {"page_label": "9", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "62a935cc847ba9e900393d478621fa929d948cd5977c5ccd6eeb439a8bf58efb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "128b0061-9a19-4f0f-8456-2abdbd67e723", "node_type": "1", "metadata": {}, "hash": "1f2a9ee7d16d5a0c2f8f6431662051843591a5b86d84a1430ffcd9a3a1caae5a", "class_name": "RelatedNodeInfo"}}, "hash": "acc778ad44192b75855e2d0f0d9772cf2be6829d9f1365cdc486324f13561f41", "text": "10 \n \nPython  Programaci\u00f3n  \n \n1   Introducci\u00f3n  \n \n1.1 Objetivo  y requisitos  \nEsta obra es una contribuci\u00f3n para el desarrollo de una metodolog\u00eda computacional para \nresolver problemas basada en los principios de la construcci\u00f3n de algoritmos  estructura dos.  \n \nEl soporte computacional es  el lenguaje  Python  con el que se explora y se adquiere la pr\u00e1ctica y \nel conocimiento suficiente para la  programaci\u00f3n de computadoras aplicada a la resoluci\u00f3n de \nproblemas matem\u00e1ticos , de ingenier\u00eda y otras ciencias . Es deseable que los interesados tengan \nalgun  conocimiento b\u00e1sico de la l\u00f3gica matem\u00e1tica.  \n \n1.2 Metodolog\u00eda  \nMediante explicaciones basadas en ejemplos , el usuario p uede adquirir en forma progresiva los \nconocimientos necesarios  para resolver problemas y su progra maci\u00f3n en Python. El desarrollo \nde variados  ejercicios proporcionar\u00e1  la base para extenderlos y aplicarlos a la resoluci\u00f3n de \nproblemas m\u00e1s complejos.  Al mismo tiempo, el usuario podr\u00e1 desarrollar su propio estilo de \nprogramaci\u00f3n.  \n \n1.3 Un modelo para resolver problemas con el computador  \n \nEl an\u00e1lisis y dise\u00f1o de soluciones computacionales  es una ciencia que facilita el uso \neficiente del poder de las computadoras para resolver problemas . \n  \nPara facilitar  el desarrollo de estas soluciones, es adecuado usar un lenguaje \ncomputacional simple , general  y eficiente  como el que ofrece Python.  \n  \nEl siguiente gr\u00e1fico describe los pasos en la soluci\u00f3n computacional de un problema  \n  \n \n     \nProblema                An\u00e1lisis                        Dise\u00f1o                  Instrumentaci\u00f3n          Resultados  \n \n \n \n    Revisi\u00f3n  \n \n \n \nPrimero, es necesario asegurarnos  que el problema que intentamos resolver est\u00e1 en \nnuestro \u00e1mbito de conocimiento. No es recomendable intentar resolver problemas si no \ntenemos el conocimi ento y la pr\u00e1ctica para enfrentar su soluci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1887, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "128b0061-9a19-4f0f-8456-2abdbd67e723": {"__data__": {"id_": "128b0061-9a19-4f0f-8456-2abdbd67e723", "embedding": null, "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19ef0b8a-7986-4a84-b3a7-76ab9055012e", "node_type": "4", "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6b276ecbec350294bf1abead44c13b68be815ecf3a89a2f2cf9348229f6a999", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88431954-6101-4392-b6c8-1479e2c77c98", "node_type": "1", "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "acc778ad44192b75855e2d0f0d9772cf2be6829d9f1365cdc486324f13561f41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1ada6aa-a0c1-4055-afdc-7c064d0c964f", "node_type": "1", "metadata": {}, "hash": "409b1ce970dbe93d3b587ab0a9439345eea7d00a9b440945b7eb97ae8c2ff5cb", "class_name": "RelatedNodeInfo"}}, "hash": "1f2a9ee7d16d5a0c2f8f6431662051843591a5b86d84a1430ffcd9a3a1caae5a", "text": "En la etapa de An\u00e1lisis  se estudia el problema en forma detallada: sus caracter\u00edsticas, las \nvariables y los procesos que intervienen. Asimismo, se deben definir los datos que se \nrequieren  y cual es el objetiv o esperado. El resultado de esta etapa son las \nespecificaciones detalladas de los requerimientos que en algunos casos se puede n \nexpresar en forma matem\u00e1tica.  \nPython Programaci\u00f3n", "start_char_idx": 1892, "end_char_idx": 2287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1ada6aa-a0c1-4055-afdc-7c064d0c964f": {"__data__": {"id_": "c1ada6aa-a0c1-4055-afdc-7c064d0c964f", "embedding": null, "metadata": {"page_label": "11", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "955d2651-5599-46fa-acc3-98b49a170a77", "node_type": "4", "metadata": {"page_label": "11", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "997400666d6b2b6ca36f28672aa8bcf3bb91a6b0ae54dc3da93bf25c4d0c5bbc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "128b0061-9a19-4f0f-8456-2abdbd67e723", "node_type": "1", "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1f2a9ee7d16d5a0c2f8f6431662051843591a5b86d84a1430ffcd9a3a1caae5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54277562-ccc3-4917-8e95-5649e276af66", "node_type": "1", "metadata": {}, "hash": "d457728932c9c0e0a3a5144de280c8fd660752b8ba0a8a005d604bcf0c2776e8", "class_name": "RelatedNodeInfo"}}, "hash": "409b1ce970dbe93d3b587ab0a9439345eea7d00a9b440945b7eb97ae8c2ff5cb", "text": "11 \n \nEn la etapa de Dise\u00f1o  se procede a elaborar los procedimientos necesarios para cumplir \ncon los req uerimientos especificados en el an\u00e1lisis, incluyendo f\u00f3rmulas, tablas, etc. El \nobjeto resultante se denomina algoritmo.  \n \nEn la etapa de Instrumentaci\u00f3n , si el problema es simple, se puede obtener la soluci\u00f3n \ninteractuando directamente mediante instrumentos disponibles en el entorno computacional. Si el problema es m\u00e1s complejo, deben  constru irse programas  y definir el \ningreso  y la organizaci\u00f3n de los datos necesarios.  \n Al concluir la etapa de la instrumentaci\u00f3n, se usan datos para realizar  pruebas  de los \nprogramas . Es necesario que se realice una revisi\u00f3n en cada etapa de este proceso y que \nse validen los resultados obtenidos antes de aceptarlos  y continuar . \n \nPosteriormente se efect\u00faa l a instalaci\u00f3n y operaci\u00f3n. Debe preverse la necesidad de \nmantenimiento y cambios en los programas para ajustarlos al entorno en el que se usar\u00e1n . \n \nEste proceso necesita ser planifica do y sistematizado para que s u desarrollo  sea eficiente \nsiendo imprescindible seguir normas, utilizar metodolog\u00edas de programaci\u00f3n y mantener \nuna documentaci\u00f3n adecuada.  \n Los instrumentos computacionales modernos tales como Python disponen de facilidades \npara probar i nteractiva mente  instrucciones y programas a medida que son desarrollados , \nmejorando as\u00ed la productividad. Tambi\u00e9n ofrece librer\u00edas qu e facilitan el desarrollo de los \nproyectos de programaci\u00f3n . \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54277562-ccc3-4917-8e95-5649e276af66": {"__data__": {"id_": "54277562-ccc3-4917-8e95-5649e276af66", "embedding": null, "metadata": {"page_label": "12", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e17e0713-eec8-40c6-a8a8-86c50f7ed961", "node_type": "4", "metadata": {"page_label": "12", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aeb2dd34a004b7de638c3906991dd8d9cdb5b8d828de05b45c3609b78191a085", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1ada6aa-a0c1-4055-afdc-7c064d0c964f", "node_type": "1", "metadata": {"page_label": "11", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "409b1ce970dbe93d3b587ab0a9439345eea7d00a9b440945b7eb97ae8c2ff5cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f6e554d-f47e-4a6a-84b8-b9cc3e30921d", "node_type": "1", "metadata": {}, "hash": "1be79c4046844475b233261110cea74c45b141a3160d6fa976533c455225f4f4", "class_name": "RelatedNodeInfo"}}, "hash": "d457728932c9c0e0a3a5144de280c8fd660752b8ba0a8a005d604bcf0c2776e8", "text": "12 \n \n2      Algoritmos   \n \nUn algoritmo es una descripci\u00f3n ordenada de las instrucciones que deben realizarse para \nresolver un problema en un tiempo finito.  \n \nPara crear un algoritmo es necesario conocer en forma detallada el problema, las \nvariables, los datos que se necesitan, los procesos involucrados, las restricciones, y los \nresultados esperados  o por lo menos los criterios para considerarlos correctos . \n Un algoritmo se contruye para describir ordenadamente las actividades necesarias para \nresol ver un problema. Posteriormente,  si el problema es simple, puede omitirse esta \ndescripci\u00f3n y codificarlo directamente en alg\u00fan  lenguaje computacional siempre que este \nofrezca una sintaxis f\u00e1cil de usar y entende r. \n Es muy importante desarrollar el pensamiento algor\u00edtmico progresivamente con la ayuda \nde ejemplos y con la pr\u00e1ctica. El objetivo final es descubrir  una metodolog\u00eda para facilitar la \nresoluci\u00f3n de problemas .  \n \n \n \n2.1  Estructura de un algoritmo  \n \nUn algor itmo es un objeto que debe comunicarse con el entorno. Por lo tanto debe incluir \nfacilidades para el ingreso de datos y la salida de resultados.   \n \nDentro de un algoritmo se describe el  procedimiento, mediante instrucciones, que  realizar \u00e1 \nla transformaci\u00f3n de los datos y producir\u00e1 los resultados esperados.  \n \n \n     Algoritmo  \n \n  \n              Entrada            Instrucciones      Salida  \n \n \n                    \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f6e554d-f47e-4a6a-84b8-b9cc3e30921d": {"__data__": {"id_": "6f6e554d-f47e-4a6a-84b8-b9cc3e30921d", "embedding": null, "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c8555a0-32e3-4dd2-a344-1606f8aaae88", "node_type": "4", "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "767b7a93a3908f8d7c94f7932b8b8f9a9e1c19cf08d23623c13b8efb3083df56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54277562-ccc3-4917-8e95-5649e276af66", "node_type": "1", "metadata": {"page_label": "12", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d457728932c9c0e0a3a5144de280c8fd660752b8ba0a8a005d604bcf0c2776e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dea8d6d-0794-4480-b0e8-92ce783d2694", "node_type": "1", "metadata": {}, "hash": "31464dc98581ccfeaf5d19b891a4bf3040b85b5e004a77ab185d2ae914951301", "class_name": "RelatedNodeInfo"}}, "hash": "1be79c4046844475b233261110cea74c45b141a3160d6fa976533c455225f4f4", "text": "13 \n \n2.2  Lenguajes para d escribir  algoritmos  \n \nPara describir algoritmos se pueden usar diferentes  notaci ones: lenguaje natural, \nlenguajes gr\u00e1fic os, lenguajes simb\u00f3licos, etc.   \n \nPara que una notaci\u00f3n sea \u00fatil debe poseer algunas caracter\u00edsticas que permitan producir  \nalgoritmos f\u00e1ciles de construir, entender y aplicar:  \n \n1) Las instrucciones deben ser simples par a facilitar su uso . \n 2) Las instrucciones deben ser claras y precisas para evitar ambig\u00fcedades . \n 3) Debe incluir suficientes instrucciones para describir la soluci\u00f3n de problemas . \n 4) Preferentemente, las instrucciones deben tener orientaci\u00f3n computacional . \n \nLos algoritmos deben ser reproducibles, es decir que al ejecutarse deben entregar los \nmismos resultados si se utilizan los mismos datos.  \n \n2.3 Definiciones  \n \na) Proceso  \n \nConjunto de acciones realizadas al ejecutar las instrucciones descritas en un algorit mo. \n \nb) Estado  \n \nSituaci\u00f3n de un proceso en cada etapa de su realizaci\u00f3n, desde su inicio hasta su \nfinalizaci\u00f3n. En cada etapa, las variables pueden modificarse.  \n \nc) Variables \n \nS\u00edmbolos con los que se representan los valores que se producen en el proceso.  \n \nComponentes de una variable:  \n \n Nombre:  Identificaci\u00f3n de cada variable  \n Tipo:   Conjunto de valores o dominio asociado a la  variable  \n Contenido:  Valor asignado a una variable  \n Celda:   Dispositivo que almacena el valor asignado a una variable   \n \n2.4 Introducci\u00f3n a la construcci\u00f3n de algoritmos  \n \nEl desarrollo de algoritmos debe basarse en una metodolog\u00eda que permita resolver \nproblemas en forma organizada.  \n \nPrimero debe definirse el objetivo al que se desea llegar, luego deben identificarse los \ncomponentes o variables y finalmente, escribir las instrucciones que permitan llegar  al \nobjetivo propuesto.", "start_char_idx": 0, "end_char_idx": 1813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3dea8d6d-0794-4480-b0e8-92ce783d2694": {"__data__": {"id_": "3dea8d6d-0794-4480-b0e8-92ce783d2694", "embedding": null, "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c8555a0-32e3-4dd2-a344-1606f8aaae88", "node_type": "4", "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "767b7a93a3908f8d7c94f7932b8b8f9a9e1c19cf08d23623c13b8efb3083df56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f6e554d-f47e-4a6a-84b8-b9cc3e30921d", "node_type": "1", "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1be79c4046844475b233261110cea74c45b141a3160d6fa976533c455225f4f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "039ffc37-3908-47d8-bd4b-ee249b683b67", "node_type": "1", "metadata": {}, "hash": "bd52cd5b00a90eae0543fb37e1f69d852d759f64c36bd61ca89da38cb74ac281", "class_name": "RelatedNodeInfo"}}, "hash": "31464dc98581ccfeaf5d19b891a4bf3040b85b5e004a77ab185d2ae914951301", "text": "Para validar el algoritmo debe realizarse alguna prueba con la cual se puede verificar que el resultado es correcto.  \n \nA continuaci\u00f3n se propone un problema y se describe un procedimiento algor\u00edtmico para \nllegar a la soluci\u00f3n.  \nPython Programaci\u00f3n", "start_char_idx": 1814, "end_char_idx": 2065, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "039ffc37-3908-47d8-bd4b-ee249b683b67": {"__data__": {"id_": "039ffc37-3908-47d8-bd4b-ee249b683b67", "embedding": null, "metadata": {"page_label": "14", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73ed8557-e315-418b-8628-cce872a1a2f0", "node_type": "4", "metadata": {"page_label": "14", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "65cbe25aa6993f71d979a719e41a76bef291835d36fbb231a202da86bed40f3d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dea8d6d-0794-4480-b0e8-92ce783d2694", "node_type": "1", "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31464dc98581ccfeaf5d19b891a4bf3040b85b5e004a77ab185d2ae914951301", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63512fa8-7740-44b0-a242-605919796397", "node_type": "1", "metadata": {}, "hash": "305ba8c10f65a80b53e70ea85ec38314735b0a51e3f10aade55cffdcdde47300", "class_name": "RelatedNodeInfo"}}, "hash": "bd52cd5b00a90eae0543fb37e1f69d852d759f64c36bd61ca89da38cb74ac281", "text": "14 \n \nEjemplo.   En el gr\u00e1fico siguiente se muestra un recipiente grande con alg\u00fan refresco y se \npropone el problema de obtener  exactamente 4 cc.  usando solamente los instrumentos \nmostrados  los cuales tienen indicada su capacidad.  Se supondr\u00e1 que el recipiente grande \ncontiene suficiente cantidad de refresco. Es posible trasladar el contenido entre recipientes \npero no se dispone de ning\u00fan dispositivo  adicional para medici\u00f3n.  \n Describir  un algoritmo para llegar a la soluci\u00f3n .  \n \n \n \n \n \n                     \n  \n \n Objetivo p ropuesto: Que el recipiente de 5 cc.  contenga 4 cc.  del refresco \n       \n \n \nVariables  \nSean  A: Representaci\u00f3n del  recipiente cuya capacidad es  5 cc.  \n B: Representaci\u00f3n de l recipiente cuya capacidad es  3 cc.  \n C: Representaci\u00f3n de l recipiente grande con cantidad suficiente de refresco.  \n \nAlgoritmo  \n 1.   Llene A con el refresco de C \n2.   Vierta  A en B hasta llenarlo  \n3.   Vierta todo el contenido de B  en C   \n4.   Vierta el resto del contenido de A en B \n5.   Llene A con el refresco de C \n6.   Vierta el contenido de A en B hasta llenarlo  \n7.   El recipiente A contendr\u00e1 4 cc.  \n \nPrueba  \n Recorrer el algoritmo anotando los valores que toman las variables A  y B \n \nInstrucci\u00f3n  Contenido de A  Contenido de B  \nInicio  0 0 \n1 5 0 \n2 2 3 \n3 2 0 \n4 0 2 \n5 5 2 \n6 4 3 \n \nResultado  \nSe verifica  que e n el recipiente A  quedar\u00e1n 4 cc.  \n 5 cc.   3 cc.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1443, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63512fa8-7740-44b0-a242-605919796397": {"__data__": {"id_": "63512fa8-7740-44b0-a242-605919796397", "embedding": null, "metadata": {"page_label": "15", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa26c4cd-dad6-4c67-b57b-bc16a431398d", "node_type": "4", "metadata": {"page_label": "15", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "67a98cd1d9f2403b10054a824d0f71a6776badc191bb16adb61fbbf2bdc3b0e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "039ffc37-3908-47d8-bd4b-ee249b683b67", "node_type": "1", "metadata": {"page_label": "14", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bd52cd5b00a90eae0543fb37e1f69d852d759f64c36bd61ca89da38cb74ac281", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaccb071-ef67-48b9-b2b2-44a42d6f4f40", "node_type": "1", "metadata": {}, "hash": "ded3c1816315053dd2448d45fe16fbce9a2c01c1422b0e888f6097597b752a06", "class_name": "RelatedNodeInfo"}}, "hash": "305ba8c10f65a80b53e70ea85ec38314735b0a51e3f10aade55cffdcdde47300", "text": "15 \n \nObserve los componentes que intervienen en la construcci\u00f3n del algoritmo:  \n \na) Propuesta del objetivo \nb) Defin ici\u00f3n de variables  \nc) Lista de instruc ciones  \nd) Prueba del algoritmo  \ne) Verificaci\u00f3n del resultado obtenido  \n \n \nEjemplo.  Describir  un algoritmo para revisar un veh\u00edculo antes de un viaje.  \n \nAlgoritmo  \n \n1 Si el nivel de agua del radiador est\u00e1 bajo  \n     C omplete el nivel  de agua del radiador  \n2 Si el nivel de  gasolina es bajo  \n     Acuda a la estaci\u00f3n de gasolina y llene el tanque  \n3 Si el nivel de aceite del motor es bajo  \n     Acuda a la estaci\u00f3n de servicio para chequear el veh\u00edculo  \n4 Para cada llanta  repita la siguiente instrucci \u00f3n  \n     Compruebe  la presi\u00f3n del  aire \n5 Si alguna llanta registr\u00f3  presi\u00f3n baja  \n     Acuda a la estaci\u00f3n de servicio para revisi\u00f3n de llantas  \n \n \nEsta descripci\u00f3n pretende ser un algoritmo para la revisi\u00f3n del veh\u00edculo. Contiene \nacciones condicionadas  y tambi\u00e9n una instrucci\u00f3n para repetir un a acci\u00f3n  varias veces. \nSin embargo, el uso de l lenguaje com\u00fan  no permite que la descripci\u00f3n sea suficientemente \nprecis a para facilitar el seguimiento de las instrucciones.  Tampoco se puede constatar  que \nse cumple el objetivo propuesto como en el ejemplo an terior.  Por lo tanto, se lo puede \nconsiderar simplement e como un instructivo de ayuda.  \n \nLos lenguajes algor\u00edtmicos deben ser permitir crear descripciones claras , de tal manera \nque no haya posibilidad de interpretar las instrucciones de m\u00e1s de una manera.  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1544, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aaccb071-ef67-48b9-b2b2-44a42d6f4f40": {"__data__": {"id_": "aaccb071-ef67-48b9-b2b2-44a42d6f4f40", "embedding": null, "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b274780-4c2b-40e1-9222-866fed636dde", "node_type": "4", "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "92011f36c2c22375600bb45925df4a889af9bcf316c87c61ea98b01c3e205085", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63512fa8-7740-44b0-a242-605919796397", "node_type": "1", "metadata": {"page_label": "15", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "305ba8c10f65a80b53e70ea85ec38314735b0a51e3f10aade55cffdcdde47300", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dba0616-5af6-46f2-97a1-e16b0b2f128b", "node_type": "1", "metadata": {}, "hash": "49f828a9cd12bd634db11f48b9c6f5227468858b01da0d1f4e35b938ff9ca48d", "class_name": "RelatedNodeInfo"}}, "hash": "ded3c1816315053dd2448d45fe16fbce9a2c01c1422b0e888f6097597b752a06", "text": "16 \n \n2.5 Ejercicio s de creaci\u00f3n de algoritmos  \n \nPara cada ejercicio  proponga un algoritmo para obtener la soluci\u00f3n.  \n \n1. Se tienen 3 recipientes cil\u00edndricos , opacos y sin marcas , de 12, 7, y 5 galones de \ncapacidad. El recipiente de 12 galones est\u00e1 lleno de combustible. El objetivo es repartir el \ncombustible en dos partes iguales usando \u00fanicamente los tres recipientes. Considere que \npuede trasladar el combustible entre recipientes  pero no se dispone de alg\u00fan instrumento \nde medici\u00f3n.  \n  \n \n \n        \n                  12 gal.             7 gal.           5 gal.  \n \na) Describa gr\u00e1ficamente el resultado esperado  \nb) Asigne s\u00edmbolos a las variables ( Representan la cantidad de combustible)  \nc) Construya un algoritmo para obtener la soluci\u00f3n . Numere  las instrucciones  \nd) Ejecute  las instrucciones y  registre los cambios del contenido de las variables  \ne) Verifique que el algoritmo produce la soluci\u00f3n esperada.  \n \nPara probar su algoritmo puede completar una tabla como la siguiente. S uponga  que A, B, \nC representan a  los recipientes con la capacidad y en el orden dados en el  gr\u00e1fico anterior.  \n  \n \n  \n \n \n \nNota: Existe una soluci\u00f3n en 12 pasos (en cada paso se traslada de un recipiente a otro).  \n \n2. Describa un algoritmo para resolv er el siguiente conocido problema. Defina las \nvariables, escriba y numere las instrucciones y luego efect\u00fae una prueba para verificar que \nfunciona : \n \nTres misioneros y tres can\u00edbales deben atravesar un r\u00edo en un bote en el que s\u00f3lo caben \ndos personas. Puede n hacer los viajes que quieran, pero en en las orillas y en el  bote  el \nn\u00famero de can\u00edbales no debe ser mayor al de los misioneros porque ya podemos suponer \nlo que ocurri r\u00eda.", "start_char_idx": 0, "end_char_idx": 1719, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6dba0616-5af6-46f2-97a1-e16b0b2f128b": {"__data__": {"id_": "6dba0616-5af6-46f2-97a1-e16b0b2f128b", "embedding": null, "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b274780-4c2b-40e1-9222-866fed636dde", "node_type": "4", "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "92011f36c2c22375600bb45925df4a889af9bcf316c87c61ea98b01c3e205085", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaccb071-ef67-48b9-b2b2-44a42d6f4f40", "node_type": "1", "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ded3c1816315053dd2448d45fe16fbce9a2c01c1422b0e888f6097597b752a06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7820d590-e5b1-469d-9f06-ad875e17de5c", "node_type": "1", "metadata": {}, "hash": "777cc8c76ba209fbb2c4a31706c99c3640ee081b80eab0432a9035de99280ae2", "class_name": "RelatedNodeInfo"}}, "hash": "49f828a9cd12bd634db11f48b9c6f5227468858b01da0d1f4e35b938ff9ca48d", "text": "El bote no puede cruzar el r\u00edo si no hay al menos una persona dentro para \nque lo dirija.  \n \nSugerencia: Defina los misioneros como M1, M2, M3  y los can\u00edbales como C1, C2, C3.  Las \nvariables R1, R2  son las orillas del r\u00edo y B  el bote. El contenido de estas  variables \ncambiar\u00e1 mediante las instrucciones del algoritmo. Despu\u00e9s de construir el  algoritmo \npuede completar  una tabla como la siguiente para verificar el resultado : \n \n Instrucci\u00f3n  A B C \nInicio  12 0 0 \n1    \n2    \n. . .    \n    \nPython Programaci\u00f3n", "start_char_idx": 1720, "end_char_idx": 2242, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7820d590-e5b1-469d-9f06-ad875e17de5c": {"__data__": {"id_": "7820d590-e5b1-469d-9f06-ad875e17de5c", "embedding": null, "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7daa73ed-1725-4285-bc12-3783ed7be7e0", "node_type": "4", "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "40eea49b17f4b6aa4e9d5cf415f84bf1a83a35a6d6098991afd8b775b06bddd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dba0616-5af6-46f2-97a1-e16b0b2f128b", "node_type": "1", "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "49f828a9cd12bd634db11f48b9c6f5227468858b01da0d1f4e35b938ff9ca48d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96c2e0e0-7abf-4bdf-aa95-ad93599c03a6", "node_type": "1", "metadata": {}, "hash": "9957a6f9a52cc51739101f31803957937fc41f795b50c153f6e56d7416a4ee2e", "class_name": "RelatedNodeInfo"}}, "hash": "777cc8c76ba209fbb2c4a31706c99c3640ee081b80eab0432a9035de99280ae2", "text": "17 \n \nInstrucci\u00f3n  R1 B R2 \nInicio  M1,M2,M3,C1,C2,C3    \n1    \n2    \n. . .    \nFinal    M1,M2,M3,C1,C2,C3  \n \n \n3. Describa un algoritmo  para resolver el siguiente problema, tambi\u00e9n muy conocido. \nDefina las variables, escriba y numere las instrucciones y luego efect\u00fae una prueba para \nverificar que funciona : \n \nHab\u00eda un pastor que cuidaba a un lobo, un a oveja y una ca nasta  de lechugas . El pastor \nten\u00eda que cruzar un r\u00edo, para lo cual  dispon\u00eda de un peque\u00f1 o bote en el que solamente \ncab\u00edan \u00e9l y un animal, o \u00e9l y la canasta de lechugas . El problema es  conseguir que pasen \ntodos al otro lado del r\u00edo sanos y salvos, sin que nadie se coma a nadie.  Al lobo no le \ngustan las lechugas, pero c omo se puede suponer , el lobo no puede quedarse a solas con \nla oveja y tampoco la oveja puede quedarse sola con las lechugas . El pastor debe guiar al \nbote en cada viaje.  \n \nSugerencia: Defina s\u00edmbolos para los datos  P: pastor, L: lobo, O: oveja, C: canasta.  Las \nvariables R1, R2  son las orillas del r\u00edo y B  el bote. El contenido de estas variables \ncambiar\u00e1 mediante las instrucciones del algoritmo. Despu\u00e9s de construir el algoritmo \npuede completar una tabla como la siguiente para verificar el resultado:  \n \nInstrucci\u00f3n  R1 B R2 \nInicio  P, L, O, C    \n1    \n2    \n. . .    \nFinal    P, L, O, C  \n \n4. Describa un algoritmo para resolver el siguiente problema.", "start_char_idx": 0, "end_char_idx": 1381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96c2e0e0-7abf-4bdf-aa95-ad93599c03a6": {"__data__": {"id_": "96c2e0e0-7abf-4bdf-aa95-ad93599c03a6", "embedding": null, "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7daa73ed-1725-4285-bc12-3783ed7be7e0", "node_type": "4", "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "40eea49b17f4b6aa4e9d5cf415f84bf1a83a35a6d6098991afd8b775b06bddd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7820d590-e5b1-469d-9f06-ad875e17de5c", "node_type": "1", "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "777cc8c76ba209fbb2c4a31706c99c3640ee081b80eab0432a9035de99280ae2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc8f26b9-4cf0-47ce-b4ff-f6fa18184bf2", "node_type": "1", "metadata": {}, "hash": "0bf8cbe38488475d149131192fc31e5349b4365d1b09025b51848913c5678540", "class_name": "RelatedNodeInfo"}}, "hash": "9957a6f9a52cc51739101f31803957937fc41f795b50c153f6e56d7416a4ee2e", "text": "Describa un algoritmo para resolver el siguiente problema. Defina las variables, escriba \ny numere las instrucciones y luego efect\u00fae una prueba para verificar que funciona:  \nSe tiene una caja con  nueve bolas , semejantes  en apariencia, entre las cuales hay una \nm\u00e1s pesada que las otras ocho . No se sabe cu\u00e1l es y se trata de hallarla efectuando \nsolamente dos pesadas en una balanza de dos platillos  en equilibrio.    \n \n \nDespu\u00e9s de constru ir el algoritmo puede completar  una tabla como la siguie nte para \nverificar el resultado, en donde a, b, c, d, e, f, g, h, i  representan a las nueve bolas.  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 1323, "end_char_idx": 1959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc8f26b9-4cf0-47ce-b4ff-f6fa18184bf2": {"__data__": {"id_": "dc8f26b9-4cf0-47ce-b4ff-f6fa18184bf2", "embedding": null, "metadata": {"page_label": "18", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "427af184-71ad-40cc-8649-0ba87b243ee3", "node_type": "4", "metadata": {"page_label": "18", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a091eb2817c193b57d1dde150a209b92788684a3bba55d053b1ec48d98d7c6dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96c2e0e0-7abf-4bdf-aa95-ad93599c03a6", "node_type": "1", "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9957a6f9a52cc51739101f31803957937fc41f795b50c153f6e56d7416a4ee2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bfb0be2-da7e-4946-9082-db1fe4c58c18", "node_type": "1", "metadata": {}, "hash": "c3c72a61e85003e601eb6d243a0771a1c7f4d296c96ca400afd365f7e940cb1c", "class_name": "RelatedNodeInfo"}}, "hash": "0bf8cbe38488475d149131192fc31e5349b4365d1b09025b51848913c5678540", "text": "18 \n \nInstrucci\u00f3n  Caja  Platillo izquierdo  Platillo derecho  \nInicio  a, b, c, d, e, f, g, h, i    \n1    \n2    \n. . .    \nFinal     \n \n \n5. Describa en forma precisa las instrucciones necesarias para preparar una fiesta \nsorpresa para su amiga o su amigo. En las instrucciones debe incluir los d\u00edas y horas en \nlos que ser\u00e1n desarrolladas las actividades . Haga  referencia a la fecha y hora cero en la \nque ocurrir\u00e1 el evento. Verifique su algoritmo mediante un cuadro con fechas y horas. En \neste cuadro anote el desarrollo de las actividades siguiendo las instrucciones de su \nalgoritmo.  Note que este tipo de algoritmos no s e puede verificar que cumplen el objetivo \npropuesto como en los ejercicios anteriores. Pueden considerarse \u00fanicamente como \ninstructivos para organizar el desarrollo de actividades.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bfb0be2-da7e-4946-9082-db1fe4c58c18": {"__data__": {"id_": "3bfb0be2-da7e-4946-9082-db1fe4c58c18", "embedding": null, "metadata": {"page_label": "19", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7714bb8c-1074-4e21-b7cb-515d58ec67a1", "node_type": "4", "metadata": {"page_label": "19", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3ae3c6cea10c0f4033bd20f5304aa0b7f9e1ea1566efee90f55fb75ae8806b4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc8f26b9-4cf0-47ce-b4ff-f6fa18184bf2", "node_type": "1", "metadata": {"page_label": "18", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0bf8cbe38488475d149131192fc31e5349b4365d1b09025b51848913c5678540", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aeed91a4-c919-46ba-bc33-39fd5a095e17", "node_type": "1", "metadata": {}, "hash": "a489314f717a83b6c3bab6730488f74793fb9ff26e33e794162511b498e58b03", "class_name": "RelatedNodeInfo"}}, "hash": "c3c72a61e85003e601eb6d243a0771a1c7f4d296c96ca400afd365f7e940cb1c", "text": "19 \n \n3  Construcci\u00f3n de  algoritmos computacionales \n \nEn esta secci\u00f3n se describi r\u00e1 una notaci\u00f3n para construir  algoritmos computacionales. La \nnotaci\u00f3n es  suficientemente simple y clara  para ser usada en problemas  b\u00e1sicos \nfacilita ndo la construcci\u00f3n de  su soluci\u00f3n , contribuye ndo adem\u00e1s al  desarrollo  del \npensamiento algor\u00edtmico y la l\u00f3g ica de programaci\u00f3n de computadoras.  Esta notaci\u00f3n es \n\u00fatil especialmente en la etapa inicial de aprendizaje de la programaci\u00f3n. Posteriormente se \npuede prescindir de ella.  \n \nUn algoritmo es la descripci \u00f3n ordenada de la idea que se propone para resolver un \nproblema. Esta idea debe desarrollarse identificando los componentes  que permitir\u00e1n \nllegar a la soluci\u00f3n . Cada componente puede incluir una instrucci\u00f3n simple o un conjunto \nde instrucciones.   \nPara desarrollar una metodolog\u00eda representar emos  cada component e gr\u00e1ficamente  \nmediante un bloque:  \n \n \n    Bloque para representar  componente s del algoritmo  \n \n \nUn algoritmo puede contener varios componentes que son ejecutados en forma \nsecuencial. Este orden se lo puede indicar expl\u00edcitamente mediante l\u00edneas de flujo que \nunen los bloques : \n \n \n    Bloque con el primer componente   \n  \n \n    Bloque con el s egundo componente  \n \n \n \n3.1 Instrucciones y operaciones elementales  \n Los componentes de un algoritmo con tienen  instrucciones u operaciones con las que se \nespecifican  c\u00e1lculos  y otros procesos . Si el algoritmo debe comunicarse con el entorno \nentonces debe incluir instrucciones  para la entrada de datos y la salida de los resultados.  \n \n \n                       D atos \n                                                                        Resultados  \n \n \nLas flechas que entran o salen del bloque representan la interacci\u00f3n del algoritmo con el \nexterior . \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aeed91a4-c919-46ba-bc33-39fd5a095e17": {"__data__": {"id_": "aeed91a4-c919-46ba-bc33-39fd5a095e17", "embedding": null, "metadata": {"page_label": "20", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04b9fd5f-1400-4c71-943d-945a9fc354a1", "node_type": "4", "metadata": {"page_label": "20", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "beab32900f7070439bf13708afae20a4ed2efb12a3578a779ddb7eeaaccadea7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bfb0be2-da7e-4946-9082-db1fe4c58c18", "node_type": "1", "metadata": {"page_label": "19", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c3c72a61e85003e601eb6d243a0771a1c7f4d296c96ca400afd365f7e940cb1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b97d644-5b3f-4ca8-9394-d57a40fcbe82", "node_type": "1", "metadata": {}, "hash": "19d68899e5d1d264257f3b32f8fd2a005442c5259064f85309b933c29a982c6b", "class_name": "RelatedNodeInfo"}}, "hash": "a489314f717a83b6c3bab6730488f74793fb9ff26e33e794162511b498e58b03", "text": "20 \n \nSimbolog\u00eda  \n \nSean  v  una variable y   r    alg\u00fan valor que se desea usar  en el algoritmo.  \n a) Instrucci\u00f3n de asignaci\u00f3n  \n   \n  v        r          A signa dentro del bloque el valor  r   a la variable  v \n \n \nb) Instrucci\u00f3n de entrada   \n \n       v               Ingresa  un valor desde afuera del bloque par a la variable  v  \n \n \nc) Instrucci\u00f3n de salida            \n        v               Muestra  fuera del bloque el valor que contiene  la variable  v \n \n \nEs una buena pr\u00e1ctica documentar la construcci\u00f3n del algoritmo. El algoritmo y cada \nvariable utilizada deber\u00edan tener alguna descripci\u00f3n.   \n \nEs preferible que los datos para las variables sean ingresados al algoritmo desde fuera del bloque. De esta manera el algoritmo se independiza de los datos y no hay que cambiar  las \ninstrucciones dentro  del bloque para realizar pruebas con nuevos datos.  \n \n \nEjemplo.  Describir  un algoritmo para calcular el \u00e1rea de un tri\u00e1ngulo conocidos  sus tres  \n                lados . \n \nAlgoritmo: \u00c1rea de un tri\u00e1ngulo  \n \nVariables  \n a, b, c:  Lados del tri\u00e1ngulo  (Datos desconocidos)  \n s:  \u00c1rea del tri\u00e1ngulo  (Es el resultado esperado)  \n t: semiper\u00edmetro  (Valor usado para la f\u00f3rmula del \u00e1rea ) \n \ns t(t a)(t b)(t c)=\u2212\u2212\u2212 ,   (F\u00f3rmula del \u00e1rea del tri\u00e1ngulo)  \nsiendo  t = (a + b + c)/2  \n \n      \n                        a, b, c      Bloque de entrada de datos  \n               \n \n  t \u2190 (a + b + c)/2    Bloque de c\u00e1lculos  \n  s \u2190t(t a)(t b)(t c)\u2212\u2212\u2212    \n   \n                                       s    Bloque de salida de resultados  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b97d644-5b3f-4ca8-9394-d57a40fcbe82": {"__data__": {"id_": "1b97d644-5b3f-4ca8-9394-d57a40fcbe82", "embedding": null, "metadata": {"page_label": "21", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "14a9fabb-6cee-4223-a8c9-ac06eaaa63c6", "node_type": "4", "metadata": {"page_label": "21", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "118da7ea13a894fb750d98407ac6869a4a075d7171dea147bb8ea79ad8f0a72d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aeed91a4-c919-46ba-bc33-39fd5a095e17", "node_type": "1", "metadata": {"page_label": "20", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a489314f717a83b6c3bab6730488f74793fb9ff26e33e794162511b498e58b03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a42f7f01-ce19-4e6e-b90a-7a0fe6051288", "node_type": "1", "metadata": {}, "hash": "dd2442d8667724f38b305d0119c6da0e3dcc9737869fd3f18e459c8e981f9c7a", "class_name": "RelatedNodeInfo"}}, "hash": "19d68899e5d1d264257f3b32f8fd2a005442c5259064f85309b933c29a982c6b", "text": "21 \n \nRealice algunas pruebas del algoritmo anterior . En cada prueba ingrese  los datos \nnecesarios desde fuera del algoritmo : \n \nPrueba  a b c t s \n1 5 6 8 9.5 14.9812  \n2 4  7  6 8.5 11.9765  \n3 8 6 9 11.5 23.5252  \n \nEl algoritmo produce los resultados esperados para los datos dados en cada prueba.  \n \n \n3.2 Diagramas de flujo  \n Los diagramas de flujo consituyen un instrumento gr\u00e1fico comunmente usado para \ndescribir algoritmos con orientac i\u00f3n computacional. Esta no taci\u00f3n ser\u00e1 usada en varios  \nejemplos de este documento.  \n  \nS\u00edmbolos de dagramas de flujo  \n \nSean  v  una variable y   r    alg\u00fan valor que se desea usar en el algoritmo.  \n \na) Instrucci\u00f3n de asignaci\u00f3n  \n \n   \n               v  \u2190 r        Asigna el valor  r   a la variable  v  \n \n \nb) Instrucci\u00f3n de entrada  \n \n      \n                   v         Entrada manual de datos (por teclado)  para la variable  v \n               \n \nc) Instrucci\u00f3n de salida            \n  \n         v                    Muestra en pantalla el valor que contiene la variable  v  \n \n \nd) L\u00edneas de flujo             Establecen el orden de ejecuci\u00f3n de las instrucciones   \n \n \n \n  \ne) Inicio y final del diagrama de flujo  \n \n       \n \n \n \nExisten s\u00edmbolos adicionales para describir otras operaciones co mputacionales  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1299, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a42f7f01-ce19-4e6e-b90a-7a0fe6051288": {"__data__": {"id_": "a42f7f01-ce19-4e6e-b90a-7a0fe6051288", "embedding": null, "metadata": {"page_label": "22", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ebdfde79-ee74-4b68-8238-c6fd67a3a85a", "node_type": "4", "metadata": {"page_label": "22", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb582f57aaf40040fb2f841c8c3472dac364cd1a23b175b79eb1436923c61fc8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b97d644-5b3f-4ca8-9394-d57a40fcbe82", "node_type": "1", "metadata": {"page_label": "21", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "19d68899e5d1d264257f3b32f8fd2a005442c5259064f85309b933c29a982c6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7c805db-96ae-4490-8400-87b1c16cef85", "node_type": "1", "metadata": {}, "hash": "ca10fed9f79f4c0ce044fb3da6d51cdc0f2e270df9c58ee75e883130452cb950", "class_name": "RelatedNodeInfo"}}, "hash": "dd2442d8667724f38b305d0119c6da0e3dcc9737869fd3f18e459c8e981f9c7a", "text": "22 \n \nEjemplo.  Describir  medi ante un diagrama de flujo la soluci\u00f3n para el ejemplo del tri\u00e1ngulo  \n \nDiagrama de flujo  \n \n      Inicio del algoritmo  \n \n      \n                                  a, b, c     Entrada manual de datos (por teclado)  \n               \n \n  t \u2190 (a + b + c)/2   Instrucciones de c\u00e1lculos  y asignaci\u00f3n \n  s \u2190t(t a)(t b)(t c)\u2212\u2212\u2212   \n   \n \n                         s    Salida de resultados  (por pantalla)  \n                                             \n \nFinal del algoritmo  \n \n \nRealice algunas pruebas del algoritmo anterior. En cada prueba ingrese los datos \nnecesarios desde fuera del algoritmo : \n \nPrueba  a b c t s \n1 5 6 8 9.5 14.9812  \n2 4  7  6 8.5 11.9765  \n3 8 6 9 11.5 23.5252  \n \nEl algoritmo produce los resultados esperados para los datos dados en cada prueba.  \n \n \nLos bloques y las l\u00edneas de flujo de los diagramas ayudan a la comprensi\u00f3n de la l\u00f3gica de \nlos algoritmos, especialmente cuando se deben incluir instrucciones cuya ejecuci\u00f3n est\u00e1 \ncondicionada o cuando se necesita describir la ejecuci\u00f3 n repetida de bloques de \ninstrucciones . Esta notaci\u00f3n gr\u00e1fica se usar\u00e1 para describir las instrucciones b\u00e1sicas del \nlenguaje computacional y en algunos ejemplos iniciales.  \n \nCon la pr\u00e1ctica y cuando se familiariza con  la l\u00f3gica algor\u00edtmica, se podr\u00e1 prescin dir del \ndibujo de bloques y l\u00edneas de flujo y escribir el algoritmo mediante alg\u00fan seudo l enguaje  y \nposteriormente directamente con un lenguaje de programaci\u00f3n.   \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1501, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7c805db-96ae-4490-8400-87b1c16cef85": {"__data__": {"id_": "e7c805db-96ae-4490-8400-87b1c16cef85", "embedding": null, "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4773755-1f7c-4dc0-8af9-608bd8ad16a2", "node_type": "4", "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "41115ec4984fe3d37a4311ce68f3ee712ec1a5b6caa1f90693c5a1b947e9a1c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a42f7f01-ce19-4e6e-b90a-7a0fe6051288", "node_type": "1", "metadata": {"page_label": "22", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dd2442d8667724f38b305d0119c6da0e3dcc9737869fd3f18e459c8e981f9c7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0eaf5948-cbb7-4eb8-a851-3a7b758c3c66", "node_type": "1", "metadata": {}, "hash": "d392ffbff7dd2c6c4cd9e0da7b1a1ce120694b81ec939b2d6961b3b7e239e601", "class_name": "RelatedNodeInfo"}}, "hash": "ca10fed9f79f4c0ce044fb3da6d51cdc0f2e270df9c58ee75e883130452cb950", "text": "23 \n \n3.3 Seudo lenguaje  \n \nLos seudo lenguajes no tienen reglas fijas para escribir instrucciones pero deber\u00edan tener \nla claridad suficiente para e xpresar  el algoritmo en forma precisa y estructurada  \nusualmente orient ada a su futura instrumentaci\u00f3n computacion al.  \n \nSimbolog\u00eda  \n \nSean  v  una variable y   r    alg\u00fan valor que se desea usar en el algoritmo.  \n a) Instrucci\u00f3n de asignaci\u00f3n  \n \n  v       r          Asigna el valor  r   a la variable  v  \n \nb) Instrucci\u00f3n de entrada  \n \n  Leer   v       Ingresa un valor para la variable  v  desde afuera del algoritmo  \n \nc) Instrucci\u00f3n de salida            \n \n  Mostrar  v       Muestra fuera del algoritmo  el valor que contiene la variable  v  \n \nEl color es solamente para resaltar la acci\u00f3n que se desea realizar  con el algoritmo  \n \n \nEjemplo.   Describir  en seudo lenguaje la soluci\u00f3n para el ejemplo del tri\u00e1ngulo  \n         Leer   a, b, c       \n             t \n\u2190 (a + b + c)/2  \n  s \u2190t(t a)(t b)(t c)\u2212\u2212\u2212    \n   Mostrar  s  \n \nRealice algunas pruebas del algoritmo anterior. En cada prueba ingrese los datos \nnecesarios desde fuera del algoritmo : \n \nPrueba  a b c t s \n1 5 6 8 9.5 14.9812  \n2 4  7  6 8.5 11.9765  \n3 8 6 9 11.5 23.5252  \n \nEl algoritmo produce los resultados esperados para los datos dados en cada prueba.  \n \n \n \nEn el dise\u00f1o y construcci\u00f3n de un algoritmo, l o m\u00e1s importante es el conocimiento del \nproblema y la concepci\u00f3n de la idea para resol verlo.", "start_char_idx": 0, "end_char_idx": 1447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0eaf5948-cbb7-4eb8-a851-3a7b758c3c66": {"__data__": {"id_": "0eaf5948-cbb7-4eb8-a851-3a7b758c3c66", "embedding": null, "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4773755-1f7c-4dc0-8af9-608bd8ad16a2", "node_type": "4", "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "41115ec4984fe3d37a4311ce68f3ee712ec1a5b6caa1f90693c5a1b947e9a1c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7c805db-96ae-4490-8400-87b1c16cef85", "node_type": "1", "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ca10fed9f79f4c0ce044fb3da6d51cdc0f2e270df9c58ee75e883130452cb950", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1c3c7cf-e75f-4e99-a3b8-53f2f2652a05", "node_type": "1", "metadata": {}, "hash": "20ab94840f439ed9112eed21742c37e0077b26715b881fd99c6195cfce9f51c6", "class_name": "RelatedNodeInfo"}}, "hash": "d392ffbff7dd2c6c4cd9e0da7b1a1ce120694b81ec939b2d6961b3b7e239e601", "text": "La notaci\u00f3n algor\u00edmica es solamente un instrumento para expresar  de manera \nestructurada la idea propuesta con la que se espera llegar a la soluci\u00f3n del problema.  \nPython Programaci\u00f3n", "start_char_idx": 1451, "end_char_idx": 1636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1c3c7cf-e75f-4e99-a3b8-53f2f2652a05": {"__data__": {"id_": "c1c3c7cf-e75f-4e99-a3b8-53f2f2652a05", "embedding": null, "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bf77934-734b-4967-84dd-fb3ce0fafc2c", "node_type": "4", "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f4d4925d0a94e3f19aa6ec2179e51a5a754f8736d428b14d48b9a1263de0fd51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0eaf5948-cbb7-4eb8-a851-3a7b758c3c66", "node_type": "1", "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d392ffbff7dd2c6c4cd9e0da7b1a1ce120694b81ec939b2d6961b3b7e239e601", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "879a7338-f96d-41fa-95d7-5228fc4f149f", "node_type": "1", "metadata": {}, "hash": "f186e4130e5b97e3eed0a87512d736c87beb74c6d1e86b6dd209c4a9ee5c5ba3", "class_name": "RelatedNodeInfo"}}, "hash": "20ab94840f439ed9112eed21742c37e0077b26715b881fd99c6195cfce9f51c6", "text": "24 \n \n3.3.1 Algunas instrucciones t\u00edpicas de asignaci\u00f3n en notaci\u00f3n algor\u00edtmica \n \nLos sigui entes ejemplos se proponen para explicar la notaci\u00f3n y algunos aspectos del  uso \nde las instrucci ones  de asignaci\u00f3n  en los algoritmos . \n a) Asigne a la variable  n   la raiz cuadrada de 5 . \nn \u2190 5 \n \nb) Asigne a  la variable  s  el valor  0. \n s \u2190 0 \n \nNormalmente se inician variables con cero para luego agregar valores. Es costumbre \ndenominar a estas variables con el nombre de  ''acumulador''  o  ''sumador'' .   \n \nAlgunas variables tambi\u00e9n se inician con cero para luego incrementarlas  con un va lor \nunitario. Estas variables se usan para conteos y se las distingue con el nombre de \"contador'' . \n \nc) Modifique el valor actual de la variable  s  increment\u00e1ndolo con el  valor de u .  \n s \u2190 s + u  \n \nSi las variables  u  o  s  no tuviese n asignad as alg\u00fan valor previo, ser\u00e1 un error.  \nEn esta instrucci \u00f3n la misma variable s  aparece a la izquierda y a la derecha.   \nLa asignaci\u00f3n modifica el valor de esta variable.  \nEs importante distinguir la  asignaci\u00f3n algor\u00ed tmica de la igualdad que se usa  \nen el lenguaje matem\u00e1tico  en el cual ser\u00eda incorrecto escribir:  s = s + u  \n \nd) Modifique el valor actual de la variable  k  increment\u00e1ndolo e n 1.  \n k \u2190 k + 1  \n \nSi  k  no ha sido asignada previamente,  ser\u00e1 un error.", "start_char_idx": 0, "end_char_idx": 1337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "879a7338-f96d-41fa-95d7-5228fc4f149f": {"__data__": {"id_": "879a7338-f96d-41fa-95d7-5228fc4f149f", "embedding": null, "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bf77934-734b-4967-84dd-fb3ce0fafc2c", "node_type": "4", "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f4d4925d0a94e3f19aa6ec2179e51a5a754f8736d428b14d48b9a1263de0fd51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1c3c7cf-e75f-4e99-a3b8-53f2f2652a05", "node_type": "1", "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "20ab94840f439ed9112eed21742c37e0077b26715b881fd99c6195cfce9f51c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31a9cc09-dbe6-4a85-b843-b545918c3bd3", "node_type": "1", "metadata": {}, "hash": "0aedfb4c85884ceac2ea77f65dd0fabfda04ebda5a1a6c5cdd888b7caf4a7f82", "class_name": "RelatedNodeInfo"}}, "hash": "f186e4130e5b97e3eed0a87512d736c87beb74c6d1e86b6dd209c4a9ee5c5ba3", "text": "e) Modifique el valor de la variable  r  reduciendo su valor actual en 2  \n r \u2190 r \u2013 2 \n \nf) Modifique el valor de la variable  n  duplicando su valor actual  \n n \u2190 2n \n \ng) Modifique el valor de la variable  x  increment ando su valor actual en  20% \n x \u2190 1.2 x \n \nh) Modifique el valor de la variable  t  reduciendo su valor act ual en 5%  \nt \u2190 0.95 t \n \nj) Intercambie el contenido de las variabl es  a  y  b \n v  \u2190 a \n a \u2190 b \n b \u2190 v \nSe requiere usar una variable adicional para no perder uno de los valores .  \n \nEs un error realizar la asignaci\u00f3n de la siguiente manera:  \n a \u2190 b \n b \u2190 a \n     Se  perder\u00eda el valor que conten\u00eda la variable  a \n \nPython Programaci\u00f3n", "start_char_idx": 1342, "end_char_idx": 2013, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31a9cc09-dbe6-4a85-b843-b545918c3bd3": {"__data__": {"id_": "31a9cc09-dbe6-4a85-b843-b545918c3bd3", "embedding": null, "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8aca8ad-cbc5-4d10-bbae-317a5b7e56fe", "node_type": "4", "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a55413096e143b3a2ca7bba81285431727a07aa55ad8be1861c0a79daf29a9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "879a7338-f96d-41fa-95d7-5228fc4f149f", "node_type": "1", "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f186e4130e5b97e3eed0a87512d736c87beb74c6d1e86b6dd209c4a9ee5c5ba3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "856e9e5b-8301-4098-82d7-f5b8ab74a990", "node_type": "1", "metadata": {}, "hash": "a0f977fc39f710a431c04cd5c9a313e3b05c57c28831bef8529836c9370ae39c", "class_name": "RelatedNodeInfo"}}, "hash": "0aedfb4c85884ceac2ea77f65dd0fabfda04ebda5a1a6c5cdd888b7caf4a7f82", "text": "25 \n \nCada variable puede contener un solo valor en cualquier momento de la ejecuci\u00f3n del \nalgoritmo. E ste valor es el que ha sido asignado m\u00e1s recientemente.  \n \nAlgunos  ejemplos contienen la misma variable a la izquierda y a la derecha. La variable a \nla derecha contiene el valor  actual. Con este valor se realiza alguna operaci\u00f3n y el \nresultado es asignado a la variable que tambi\u00e9n aparece a la izquierda. Este \u00faltimo valor \nes el que conserva la variable al continuar  el algoritmo.  \n \nEste tipo de asignaci\u00f3n es usado frecuentemente en los algoritmos pues permite cambiar \nel contenido de las  variable s durante la ejecuci\u00f3n . \n \n \n \n3.3.2 Ejercicios con la notaci\u00f3n algor\u00edtmica: Algoritmos secuenciales \n \nPara cada ejercicio escriba una soluci\u00f3n en notaci\u00f3n algor\u00edtmica (diagrama de flujo o \nseudo lenguaje) y realice una prueba  \n \n1.  Dados el radio y altura de un cilindro calcule el \u00e1rea total y el volumen \n \n2.  Se tiene un recipiente cil\u00edndrico con capacidad en  litros. Su altura es  un dat o en metros.     \nDetermine el di\u00e1metro de la base  \n \n3.  Dadas las tres dimensiones de un bloque rectangular  calcule y muestre su \u00e1rea total y \nsu volumen \n \n4. La siguiente f\u00f3rmula proporciona el en\u00e9simo t\u00e9rmino u de una progresi\u00f3n aritm\u00e9tica:   \n     u = a + (n \u2212 1) r     \nen donde  a  es el primer t\u00e9rmino, n  es el la cantidad de t\u00e9rminos y  r  es la raz\u00f3n entre dos  \nt\u00e9rminos consecutivos.  Calcular el valor de  r  dados u, a, n  \n \n5.  El examen de una materia es el 70% de la nota total. Las lecciones constituyen el 20%  \ny las tareas el 10% de la nota total.", "start_char_idx": 0, "end_char_idx": 1587, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "856e9e5b-8301-4098-82d7-f5b8ab74a990": {"__data__": {"id_": "856e9e5b-8301-4098-82d7-f5b8ab74a990", "embedding": null, "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8aca8ad-cbc5-4d10-bbae-317a5b7e56fe", "node_type": "4", "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a55413096e143b3a2ca7bba81285431727a07aa55ad8be1861c0a79daf29a9d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31a9cc09-dbe6-4a85-b843-b545918c3bd3", "node_type": "1", "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0aedfb4c85884ceac2ea77f65dd0fabfda04ebda5a1a6c5cdd888b7caf4a7f82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e231298-9a83-4fd4-a5fe-6a3a8ac912b5", "node_type": "1", "metadata": {}, "hash": "a850224a99e4a1c71d23736f3b12ba8a0e8f55c2cc58c685e2ae7b4cb3211f0f", "class_name": "RelatedNodeInfo"}}, "hash": "a0f977fc39f710a431c04cd5c9a313e3b05c57c28831bef8529836c9370ae39c", "text": "Ingrese como datos la nota del examen calificado \nsobre 100 puntos, la nota de una lecci\u00f3n calificada sobre 10 puntos, y las notas de tres  \ntareas calificadas cada una sobre 10 puntos. Calcule la calificaci\u00f3n total sobre 100 puntos.  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1588, "end_char_idx": 1847, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e231298-9a83-4fd4-a5fe-6a3a8ac912b5": {"__data__": {"id_": "3e231298-9a83-4fd4-a5fe-6a3a8ac912b5", "embedding": null, "metadata": {"page_label": "26", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40dcc54e-286a-4a0c-9bc5-7d72f2ec130b", "node_type": "4", "metadata": {"page_label": "26", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b894d63d92e5fa63eebebac62966fb76a28913d2ab699693c750c76616e10f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "856e9e5b-8301-4098-82d7-f5b8ab74a990", "node_type": "1", "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a0f977fc39f710a431c04cd5c9a313e3b05c57c28831bef8529836c9370ae39c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72a02bf0-d968-4319-8272-41059a0a3509", "node_type": "1", "metadata": {}, "hash": "89f045f6d50289d53d81dea8dcce8a07adde7c8e125be8d7bcd0586ea7889318", "class_name": "RelatedNodeInfo"}}, "hash": "a850224a99e4a1c71d23736f3b12ba8a0e8f55c2cc58c685e2ae7b4cb3211f0f", "text": "26 \n \n3.4 Estructuras de control de flujo de  un algoritmo  \n \nLa ejecuci\u00f3n de los bloques de un algoritmo es secuencial de arriba hacia abajo, pero este \norden puede alterarse mediante estructuras de control de flujo que permiten establecer un \norden especial en la ejecuci\u00f3n. Para describirlas se u sar\u00e1 una representaci\u00f3n gr\u00e1fica y su \nversi\u00f3n en seudo lenguaje. El uso adecuado de estas formas es el fundamento de una metodolog\u00eda de programaci\u00f3n de computadoras denominada programaci\u00f3n estructurada.  \n  \n3.4.1 Estructura s de Decisi\u00f3n  \n Describen la ejecuci\u00f3n selectiva de bloques usando como criterio el resultado de una \ncondici\u00f3n .  \n \na) Ejecuci\u00f3n condicionada  de un bloque  \n \nRepresentaci\u00f3n gr\u00e1fica \n \n    \n                                                    F  \n                                                      Condici\u00f3n  \n           V \n  \n                                                              \n     P \n \n \n \n \n \n \nAl entrar a esta estructura, se eval\u00faa la condici\u00f3n. Si el resultado es verdadero ( V) se \nejecuta r\u00e1n las instrucciones en el bloque P  caso contrario, si el resultado es falso ( F) el \nbloque no ser\u00e1 ejecutarlo. E n ambos casos el  algoritmo continua debajo del bloque.  \n \nLa condici\u00f3n es cualquier expresi\u00f3n cuyo resultado puede ser \u00fanicamente verdadero ( V) o \nfalso ( F). Puede incluir operadores para comparar el contenido de variables y tambi\u00e9n se \npueden usar los conectores de la l\u00f3gica matem\u00e1tica.  \n \nSeudo lenguaje  \n \n Si   condici\u00f3n  \n \n  P \n \n Fin \n \nEjemplo.  Expresiones que pudieran ser usadas como una condici\u00f3n \n \n n > 0  \na \u2264 5 \nx \u2260 4 \n a < 3 \u2228 x > 1  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72a02bf0-d968-4319-8272-41059a0a3509": {"__data__": {"id_": "72a02bf0-d968-4319-8272-41059a0a3509", "embedding": null, "metadata": {"page_label": "27", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcf9d7ba-b366-48f0-be1b-8a5d3c4155e4", "node_type": "4", "metadata": {"page_label": "27", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2397b5c06498f0ae952e95bfe14efd1741b4426bbbab2d9e981f1c61e5d79883", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e231298-9a83-4fd4-a5fe-6a3a8ac912b5", "node_type": "1", "metadata": {"page_label": "26", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a850224a99e4a1c71d23736f3b12ba8a0e8f55c2cc58c685e2ae7b4cb3211f0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d68edcc9-9a8b-4410-ad1e-f64dd472e84a", "node_type": "1", "metadata": {}, "hash": "4fa8e989aef9e2194a6016b36fb0a253f78ba9f191a0afbb7beedca771ff0863", "class_name": "RelatedNodeInfo"}}, "hash": "89f045f6d50289d53d81dea8dcce8a07adde7c8e125be8d7bcd0586ea7889318", "text": "27 \n \nPara que una expresi\u00f3n pueda evaluarse y ser usada como una condici\u00f3n, las variables \nincluidas en la expresi\u00f3n deben tener asignado alg\u00fan valor, caso contrario ser\u00e1 un error \npues la condici\u00f3n no podr\u00eda evaluarse.  \n \n \n \nEjemplo. Describir en notaci\u00f3n algor\u00edtmica la acci\u00f3n de  reducir en 10% el valor que \ncontiene la variable  p ,  en caso de que su valor actual sea mayor a  40. Despues obtenga \nel resultado de la multiplicaci\u00f3n de  n   por el valor de  p   (con su valor inicial o con su valor  \ncorregido).   \n \n    \n                                                    \n           F                                                            \n                                                           p > 40  \n \n                                          V \n  \n                                                        p \u2190 0.9 p  \n  \n \n \n \n                                                         t \u2190 n p \n \n \n \n \n \nAntes del bloque,   la variable  p   debe haber sido asignada con alg\u00fan valor, caso contrario \nser\u00eda un err or. \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d68edcc9-9a8b-4410-ad1e-f64dd472e84a": {"__data__": {"id_": "d68edcc9-9a8b-4410-ad1e-f64dd472e84a", "embedding": null, "metadata": {"page_label": "28", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b97e3d4a-2a72-437f-900e-bb76549e6f95", "node_type": "4", "metadata": {"page_label": "28", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "df0c83575ffa3488f38be21142dc5edc6b022eb980ad589db67297608630abf7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72a02bf0-d968-4319-8272-41059a0a3509", "node_type": "1", "metadata": {"page_label": "27", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "89f045f6d50289d53d81dea8dcce8a07adde7c8e125be8d7bcd0586ea7889318", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f89d7ef1-bad6-40c9-994c-ce42fd89b793", "node_type": "1", "metadata": {}, "hash": "1a68a4f053e087dde154c515e68df97947f3a6a5a40d7d17f59a8a04b0aa4746", "class_name": "RelatedNodeInfo"}}, "hash": "4fa8e989aef9e2194a6016b36fb0a253f78ba9f191a0afbb7beedca771ff0863", "text": "28 \n \nEjemplo.  Describir  en notaci\u00f3n algor\u00edtmica una soluci\u00f3n al siguiente problema.  \n \nCalcular el valor total que una persona debe pagar por la compra de llantas en un almac\u00e9n \nque tiene la siguiente promoci\u00f3n: Si la cantidad de llantas comprada es mayor a 4, el \nprecio unitario tiene un descuento de 10%.   El algoritmo debe ingresar como datos la \ncatidad de llantas y el precio inicial de cada llanta. Mediante una comparaci\u00f3n el algoritmo deber\u00e1 aplicar el descuento.  \n \nAlgoritmo:  Compra de llantas con descuento  \n Variables  \n     n:  Cantidad de llantas  \n     p:  Precio inicial de cada llanta  \n    t:   Valor a pagar  \n \nDiagrama de flijo  \n                 \n                            \n       n, p    Ingreso de datos  por teclado   \n  \n       F \n                                             n > 4     Verificar el contenido de n \n        \n                                                                                                                                                \n                                                  V  \n        Si compra m\u00e1s de 4 llantas  \n            \n                                        p \u2190 0.9 p       el precio se reduce en 10%  \n         \n  \n \n \n \n     t \u2190  n p    C\u00e1lculo del v alor a pagar  \n  \n \n              t     Salida del resultado a pantalla   \n  \n \nPrueba . Realice algunas pruebas del algoritmo anterior. En cada prueba ingrese los datos \nnecesarios desde fuera del bloque:  \n \n \nPruebas  n p t Salida  \n1 2 70 140 140 \n2 6 80 432 432 \n3 5 120 540 540 \n El algoritmo produce los resultados esperados con los datos de cada prueba  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1627, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f89d7ef1-bad6-40c9-994c-ce42fd89b793": {"__data__": {"id_": "f89d7ef1-bad6-40c9-994c-ce42fd89b793", "embedding": null, "metadata": {"page_label": "29", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a31114dc-5953-408e-bc0d-1de11078072c", "node_type": "4", "metadata": {"page_label": "29", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b569a628b36ecb84ca44b3cacee07089542b628b8e9181d89ce0a6519779e275", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d68edcc9-9a8b-4410-ad1e-f64dd472e84a", "node_type": "1", "metadata": {"page_label": "28", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4fa8e989aef9e2194a6016b36fb0a253f78ba9f191a0afbb7beedca771ff0863", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ac7930b-5f7f-429a-b256-b274b25a9345", "node_type": "1", "metadata": {}, "hash": "d3a04a5eb9c0147ed5dceedfd4bf365a9122b75022a7179980e7f3030eac7ccd", "class_name": "RelatedNodeInfo"}}, "hash": "1a68a4f053e087dde154c515e68df97947f3a6a5a40d7d17f59a8a04b0aa4746", "text": "29 \n \nDescribir  el algoritmo del ejemplo anterior en seudo lenguaje  \n \n Leer  n,p \n Si n>4 \n     p \u2190 0.9 p  \n Fin \n t \u2190 np \n Mostrar  t \n \n \nEl color es solamente para resaltar la acci\u00f3n que se desea realizar en el algoritmo  \n \n \n \nb)  Estructura de selecci\u00f3n  entre dos bloques  \n \n \nRepresentaci\u00f3n gr\u00e1fica \n \n \n    \n                                                    F  \n                                                       Condici\u00f3n  \n           V \n  \n \n     P         Q  \n  \n \n \n \n \n \nAl entrar a esta estructura, se eval\u00faa la condici\u00f3n. Si el resultado es verdadero ( V) se \nejecuta r\u00e1 el bloque P asociado al valor verdadero,  caso contrario, si el resultado es falso \n(F) se ejecuta r\u00e1 el bloque Q .   El algoritmo  continua abajo, despues de ejecutar alg uno de \nlos dos bloques.  \n \n \nSeudo lenguaje  \n \n Si   condici\u00f3n  \n \n  P \n \n Sin\u00f3 \n  Q \n \nFin \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ac7930b-5f7f-429a-b256-b274b25a9345": {"__data__": {"id_": "2ac7930b-5f7f-429a-b256-b274b25a9345", "embedding": null, "metadata": {"page_label": "30", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "230895c4-2806-425d-a555-4bec9500a075", "node_type": "4", "metadata": {"page_label": "30", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1c6c3b8f512fe26251a23e707957924be190925bad92c165cd0e1f622ca944f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f89d7ef1-bad6-40c9-994c-ce42fd89b793", "node_type": "1", "metadata": {"page_label": "29", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1a68a4f053e087dde154c515e68df97947f3a6a5a40d7d17f59a8a04b0aa4746", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b693fdc8-aaa3-4075-86c6-0a8f16106883", "node_type": "1", "metadata": {}, "hash": "27009828d110e3dbf37f1d30a455bd39ee7e9069053464da176ca1f9d4cf7511", "class_name": "RelatedNodeInfo"}}, "hash": "d3a04a5eb9c0147ed5dceedfd4bf365a9122b75022a7179980e7f3030eac7ccd", "text": "30 \n \nEjemplo. Describir  en notaci\u00f3n algor\u00edtmica como asignar a la variable  m  el mayor entre \ndos valores almacenados respectivamente en las variables  a  y  b \n \n    \n                                                     \n                                                                                 F                                                              \n                                                           a \u2265 b \n \n          V \n  \n                                                          m \u2190 a                      m \u2190 b \n  \n \n \n \n \nAntes del bloque, las variables a y b deben  haber sido asignadas alg\u00fan valor, caso \ncontrario ser\u00eda un error.  \n \n \n \n \nEjemplo. Describir  en notaci\u00f3n algor\u00edtmica una soluci\u00f3n al si guiente problema.  \n Para el pago semanal a un obrero se consideran los siguientes datos: horas trabajadas, \ntarifa por hora y descuentos. Si la cantidad de horas trabajadas en la semana es mayor a \n40, se le debe pagar las horas en exceso con una bonificaci\u00f3 n de 50% adicional a la tarifa  \nnormal.  \n \nAlgoritmo:  Pago semanal a un obrero  \n \nVariables  \n     c:  Cantidad de horas trabajadas en la semana  \n     t:   Tarifa por hora \n    d:  Descuentos  que se aplican al pago semanal  \n    p:  Pago que recibe el obrero \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1288, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b693fdc8-aaa3-4075-86c6-0a8f16106883": {"__data__": {"id_": "b693fdc8-aaa3-4075-86c6-0a8f16106883", "embedding": null, "metadata": {"page_label": "31", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b8d4d5a8-4071-49af-a172-af727dbb7b9e", "node_type": "4", "metadata": {"page_label": "31", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "df13bf6afd39a89ceb007335487f99561fa00ac9edbccace8ec279d9ff8bfda8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ac7930b-5f7f-429a-b256-b274b25a9345", "node_type": "1", "metadata": {"page_label": "30", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d3a04a5eb9c0147ed5dceedfd4bf365a9122b75022a7179980e7f3030eac7ccd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2417f347-513e-4391-9e25-5f77d62fde97", "node_type": "1", "metadata": {}, "hash": "61934ac0caf5a1b54852b28ab904b5a1105e3ee9b4a8311868fad93e021e4f4f", "class_name": "RelatedNodeInfo"}}, "hash": "27009828d110e3dbf37f1d30a455bd39ee7e9069053464da176ca1f9d4cf7511", "text": "31 \n \nDiag rama de fl ujo \n \n                            \n      c, t, d                Ingreso de datos  \n \n \n          F \n                                            c \u2264 40  \n        \n                                                                                                                                                \n                                                     V  \n \n     Pago sin           Pago con  \n     horas extras              p \u2190 ct - d    p \u2190 40t + 1.5  t (c - 40) - d  horas extras   \n \n \n \n \n \n \n          p \n \n \n \nPrueba . Realice algunas pruebas del algoritmo anterior. En cada una  ingrese los datos \nnecesarios desde fuera del bloque.  \n \n \nPruebas  c t d p Salida  \n1 40 5 20 180 180 \n2 35 4 25 115 115 \n3 42 5 30 185 185 \n El algoritmo produce los resultados esperados con los datos de cada prueba  \n  \nDescribir  el algoritmo del ejemplo anterior en seudo lenguaje  \n \n Leer  c,t,d \n Si c \u2264 40 \n     p \n\u2190 ct - d \n Sin\u00f3  \n     p \u2190 40t + 1.5 t (c - 40) - d \n Fin \n Mostrar  p \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1033, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2417f347-513e-4391-9e25-5f77d62fde97": {"__data__": {"id_": "2417f347-513e-4391-9e25-5f77d62fde97", "embedding": null, "metadata": {"page_label": "32", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "36bfd91e-65f9-46ce-92ca-a0397739a689", "node_type": "4", "metadata": {"page_label": "32", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8702ab40fed7bd32a59a540a8c221caf8270ed5c43835d5ebe1c6dbab84e06e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b693fdc8-aaa3-4075-86c6-0a8f16106883", "node_type": "1", "metadata": {"page_label": "31", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "27009828d110e3dbf37f1d30a455bd39ee7e9069053464da176ca1f9d4cf7511", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43d180d3-66bf-45a7-a7c6-0a6c95aa9270", "node_type": "1", "metadata": {}, "hash": "f20c942e25bc9da99d931b47ff3f02028004ac688449c00041f5117ca7e0d838", "class_name": "RelatedNodeInfo"}}, "hash": "61934ac0caf5a1b54852b28ab904b5a1105e3ee9b4a8311868fad93e021e4f4f", "text": "32 \n \n3.4.2 Ejercicios con la notaci\u00f3n algor\u00edtmica: Algoritmos con decisiones  \n \nPara cada ejercicio desarrolle una soluci\u00f3n en notaci\u00f3n algor\u00edtmica y realice una prueba \n \n1. Dados el rad io y altura de un cilindro, si la altura es mayor al radio calcule y muestre el \nvalor del volumen del cilindro, caso contrario muestre el valor del \u00e1rea del cilindro.  \n \n2.  Lea la cantidad de Kw que ha consumido una familia y el precio por Kw. Si la cantidad \nes mayor a 700, incremente el precio en 5% para el exceso de Kw sobre 700. Muestre el \nvalor total a pagar.  \n \n3.  Lea un valor de temperatura t  y un c\u00f3digo p  que puede ser 1   o  2.  Si el c\u00f3digo es 1  \nconvierta la temperatura t de grados f  a grados c con la  f\u00f3rmula c=5/9(t -32). Si el c\u00f3digo \nes 2 convierta la temperatura t  de grados c  a f con la f\u00f3rmula: f=32+9t/5. Muestre el \nresultado.  \n \n4. Dadas las dimensiones de un bloque rectangular, calcule las diagonales de las tres \ncaras diferentes. Muestre el valor de la mayor diagonal.  \n \n5. Dadas las tres calificaciones de un estudiante, encuentre y muestre la calificaci\u00f3n mas \nalta. \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43d180d3-66bf-45a7-a7c6-0a6c95aa9270": {"__data__": {"id_": "43d180d3-66bf-45a7-a7c6-0a6c95aa9270", "embedding": null, "metadata": {"page_label": "33", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86494091-718b-4367-a1be-21b30e258915", "node_type": "4", "metadata": {"page_label": "33", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c21e3d69c6a4a97edb3fb6715ca5515e0b4a5762e16d745a66a301bb9429d74f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2417f347-513e-4391-9e25-5f77d62fde97", "node_type": "1", "metadata": {"page_label": "32", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "61934ac0caf5a1b54852b28ab904b5a1105e3ee9b4a8311868fad93e021e4f4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e622ff48-27fb-45c7-8cd4-9e8b6b77fff5", "node_type": "1", "metadata": {}, "hash": "e17bb7965c32ffc092aa24a818f0cabc690c0def2a056dc2bdc50e2f206dbbd2", "class_name": "RelatedNodeInfo"}}, "hash": "f20c942e25bc9da99d931b47ff3f02028004ac688449c00041f5117ca7e0d838", "text": "33 \n \n3.4.3 Estructuras de repetici\u00f3n o ciclos  \n \nEstas estructuras de control se usan para describir la ejecuci\u00f3n repetida de un bloque de \ninstrucciones.  El objetivo es colocar el bloque de instru cciones dentro de un ciclo como se \nmuestra en el gr\u00e1fico. Sin embargo, es necesario agregar un dispositivo que permita salir del ciclo para que el algoritmo pueda continuar:  \n \n                 \n                                \n                                                   \n  \n            P \n  \n \n  \nHay tres formas comunes que se usan para salir de una estructura de repetici\u00f3n. Dos de \nellas usan una condici\u00f3n para salir del ciclo. Esta condici\u00f3n puede estar al inicio o al final.  \nLa otra forma, utiliza los valores de un conteo o una secuencia de valores  para controlar la \nrepetici\u00f3n . \n \n \na) Estructura de repetici\u00f3n controlada mediante una condici\u00f3n al inicio  \n \nRepresentaci\u00f3n gr\u00e1fica \n \n \n \n                  F \n                                Mientras  condici\u00f3n  \n \n                                                     V \n  \n            P \n  \n \n \n \n \n  \nAl entrar a esta estructura se eval\u00faa la condici\u00f3n. Si el resultado es verdadero ( V) se \nejecutar\u00e1n las instrucciones dentro del bloque y regresar\u00e1 nuevamente a evaluar la \ncondici\u00f3n.  \n \nMientras la condici\u00f3n mantenga el valor verdadero ( V), el bloque de instrucciones se \nejecutar\u00e1 nuevamente. Esto significa que en alg\u00fan ciclo al evaluar la condici\u00f3n deber\u00e1 obtenerse el r esultado falso ( F) para salir de la estructura y continuar la ejecuci\u00f3n despu\u00e9s \ndel bloque. Al dise\u00f1ar el algoritmo deber\u00e1n escribirse las instrucciones necesarias.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1647, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e622ff48-27fb-45c7-8cd4-9e8b6b77fff5": {"__data__": {"id_": "e622ff48-27fb-45c7-8cd4-9e8b6b77fff5", "embedding": null, "metadata": {"page_label": "34", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cddc73ef-a2f8-4584-809c-1e3d4fb3b981", "node_type": "4", "metadata": {"page_label": "34", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "156ac70d169dc0632815fd660251a5874b1ff137a00d76b8f391e083da6deee2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43d180d3-66bf-45a7-a7c6-0a6c95aa9270", "node_type": "1", "metadata": {"page_label": "33", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f20c942e25bc9da99d931b47ff3f02028004ac688449c00041f5117ca7e0d838", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "242b8446-3d02-4ab6-b744-1e76f0dda7f9", "node_type": "1", "metadata": {}, "hash": "bb86b1a7a0b157c1602cee53f53fdb85dbc5365c2daeb8ef1163e932285bad8e", "class_name": "RelatedNodeInfo"}}, "hash": "e17bb7965c32ffc092aa24a818f0cabc690c0def2a056dc2bdc50e2f206dbbd2", "text": "34 \n \nLa condici\u00f3n es cualquier expresi\u00f3n cuyo resultado puede ser \u00fanicamente verdadero ( V) o \nfalso (F). Puede incluir operadores para comparar el contenido de variables y tambi\u00e9n se \npueden usar los conectores de la l\u00f3gica matem\u00e1tica.  \n \nEjemplo de expresiones que pudieran ser usadas como una condici\u00f3n. El resultado de \ncada una depender\u00e1 del contenido de las variables:  \n \n n > 0  \na \u2264 5 \nx \u2260 4 \n a < 3 \u2228 x > 1  \n \n \nSeudo lenguaje  \n \n Mientras   condici\u00f3n \n \n  P \n \nFin \n \n \nEjemplo.  Describir  algor\u00edtmicamente la repetici\u00f3n de un bloque de instrucciones mientras \nla variable  x  tenga un valor menor a 10 \n \n \n \n                  F \n                                   Mientras  x < 10  \n \n                                                    V  \n  \n             P \n  \n \n \n \n \n \n \nAntes del bloque, la variable x debe haber sido asignada con alg\u00fan valor, caso contrario \nser\u00eda un error.  \n \nEs necesario que la variable x  cambie su contenido  dentro del bloque de instrucciones que \nse repiten para que en alg\u00fan ciclo la repetici\u00f3n pueda terminar y la ejecuci\u00f3n continue \ndespu\u00e9s del bloque. Caso contrario ser\u00eda un error l\u00f3gico pues el algoritmo permanecer\u00eda \nen el ciclo.  \n \n \nNOTA:  Los s\u00edmbolos gr\u00e1ficos usados en este documentos para representar ciclos no son \ns\u00edmbolos estandarizados, pero son suficientemente descriptivos . Una notaci\u00f3n m\u00e1s \nconocida usa rombos para describir las repeticiones condicionadas, sin embargo esto \npuede agregar alguna ambig\u00fcedad al graficar el algoritmo \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "242b8446-3d02-4ab6-b744-1e76f0dda7f9": {"__data__": {"id_": "242b8446-3d02-4ab6-b744-1e76f0dda7f9", "embedding": null, "metadata": {"page_label": "35", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c028ebb1-f2be-4ebf-b02e-6acf6f5fe978", "node_type": "4", "metadata": {"page_label": "35", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8122941623f72ab132c013e4277b86139ac93ece9a16090e6dbbed0406bfd4ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e622ff48-27fb-45c7-8cd4-9e8b6b77fff5", "node_type": "1", "metadata": {"page_label": "34", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e17bb7965c32ffc092aa24a818f0cabc690c0def2a056dc2bdc50e2f206dbbd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "655be83c-b917-4767-935a-acca919fd820", "node_type": "1", "metadata": {}, "hash": "66c3631cdbb8e3d6a294ed161dcfbd92f16e44bbcd7788f8fc97384d52aa3d12", "class_name": "RelatedNodeInfo"}}, "hash": "bb86b1a7a0b157c1602cee53f53fdb85dbc5365c2daeb8ef1163e932285bad8e", "text": "35 \n \nEjemplo. Describir  en notaci\u00f3n algor\u00edtmica una soluci\u00f3n para el siguiente problema.  \n \nEn un cultivo se tiene una cantidad inicial de bacterias. Cada d\u00eda esta cantidad se duplica. \nDetermine en que d\u00eda la cantidad excede a un valor m\u00e1ximo.   \n \nAlgoritmo:  Crecimiento de la cantidad de bacterias  \n Variables  \n     x:  Cantidad inicial de bacterias  \n     m: Cantidad m\u00e1xima de bacterias \n    d:  D\u00eda  \n \nDiagrama de fl ujo \n        \n                                  x, m   Ingreso  de los datos \n  \n                                                       d \u2190 0   Iniciar el d\u00eda en cero  \n  \n                  F \n                                   Mientras   x \u2264 m   \nEl ciclo se repetir\u00e1 mientras  \n       la cantidad de bacterias no  \n                                                     V    exceda al m\u00e1ximo.  \n \nx \u2190 2x Dentro del bloque se  \nd \u2190 d + 1  modifica la cantidad de  \n                                               bacterias y el d\u00eda.  \n       \n \n \n \n \n                                                              \n         d     Mostrar el valor final del d\u00eda  \n                                                         \n \nNote que se debe usar el ciclo condicionado pues no se puede anticipar la cantidad de \nrepeticiones necesarias para que la cantidad de bacterias exceda al valor m\u00e1ximo . \n \n \nPrueba . Realice una prueba del algoritmo anterior. Ingrese los datos desde fuera del \nbloque y registre los cambios en el contenido de las variables.  \n \nPrueba  x m d Salida  \n 200 5000  0  \n 400  1  \n 800  2  \n 1600   3  \n 3200   4  \n 6400   5 5 \n \nSe puede verificar que es el resultado esperado y que coincide con el valor que se puede \ncalcular matem\u00e1ticamente con la expresi\u00f3n n2 (x) m>  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1740, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "655be83c-b917-4767-935a-acca919fd820": {"__data__": {"id_": "655be83c-b917-4767-935a-acca919fd820", "embedding": null, "metadata": {"page_label": "36", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9dd91f4-550d-465c-8ed9-f5f2abe19257", "node_type": "4", "metadata": {"page_label": "36", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "833f7db6adcb32ee855cc70a991ae5a4f6ad6135df4506d9182d3fb43d3e5d8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "242b8446-3d02-4ab6-b744-1e76f0dda7f9", "node_type": "1", "metadata": {"page_label": "35", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bb86b1a7a0b157c1602cee53f53fdb85dbc5365c2daeb8ef1163e932285bad8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06dc3abc-2bbd-480c-b718-de28e45ae610", "node_type": "1", "metadata": {}, "hash": "8f6bd7880ad77f4fc396f0cb82b96865615280b4384e5bee0028d33c93650d13", "class_name": "RelatedNodeInfo"}}, "hash": "66c3631cdbb8e3d6a294ed161dcfbd92f16e44bbcd7788f8fc97384d52aa3d12", "text": "36 \n \nDescribir  el algoritmo del ejemplo anterior en seudo lenguaje  \n \n Leer  x,m \n d \u2190 0 \n Mientras   x \u2264 m \n     x \u2190 2x \n     d \u2190 d + 1  \n Fin \n Mostrar  d \n \n \n \nb) Estructura de repetici\u00f3n  controlada mediante un a secuencia de valores  \n \nRepresentaci\u00f3n gr\u00e1fica \n \n \n \n                  F \n                               Para   v \u2190 secuencia \n                                                      V  \n  \n             P  \n  \n \n \n \n \n \n \nPara usar esta estructura de control es necesario especificar una variable para el conteo \nde repeticiones  y una lista de valores o secuencia que puede tomar.  El ciclo se repetir\u00e1 \ncon cada valor especificado para la variable. Al ejecutarse cada ciclo el valor de la variable \ncambiar\u00e1 siguiendo la especificacion . \n \nAl entrar a esta estructura, se inicia la variable de control. Si esta variable no excede al \nvalor final, se ejecuta el bloque y regresa nue vamente al inicio del ciclo y la variable toma \nel siguiente valor de la secuencia.  Cuando el valor de la variable llegue al valor final, el \nciclo finalizar\u00e1 y la ejecuci\u00f3n continuar\u00e1 despu\u00e9s del bloque.  \n \nSeudo lenguaje  \n \n Para  v \u2190 secuencia \n \n \n  P \n \n Fin \n \n \nLa variable de control del ciclo puede especificarse con alguna notaci\u00f3n que exprese \ncuales son los valores que puede tomar . \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1327, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06dc3abc-2bbd-480c-b718-de28e45ae610": {"__data__": {"id_": "06dc3abc-2bbd-480c-b718-de28e45ae610", "embedding": null, "metadata": {"page_label": "37", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d4ebc4ad-d924-4820-9580-b1f0717b705a", "node_type": "4", "metadata": {"page_label": "37", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a9f83d3021eb2381fa5884d80060ab5bc1c53b8832dc1b43fd54d35d639a317", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "655be83c-b917-4767-935a-acca919fd820", "node_type": "1", "metadata": {"page_label": "36", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66c3631cdbb8e3d6a294ed161dcfbd92f16e44bbcd7788f8fc97384d52aa3d12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e693d93-e902-4fdf-a0f9-7d1dd951b04e", "node_type": "1", "metadata": {}, "hash": "99c02388301da3665be4249e15007d28c218c49498daed11f2db24a71a6400e5", "class_name": "RelatedNodeInfo"}}, "hash": "8f6bd7880ad77f4fc396f0cb82b96865615280b4384e5bee0028d33c93650d13", "text": "37 \n \nDefinici\u00f3n de la secuencia de valores \n \nMediante una lista de valores:  \n \nEjemplo.  n  \u2190 [2, 5, 4, 7, 6]  \n \n \nIndicando el valor inicial, el valor final de la secuencia y el incremento:  \n \nEjemplo.  k  \u2190 1, 10, 1 \n \nGenera la secuencia:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10 \n \n \nEjemplo.  i  \u2190 1, 15, 2   \n  \nGenera la secuencia:  1, 3, 5, 7, 9, 11, 13, 15 \n \n \nSi no se escribe el incremento, se supondr\u00e1 que es la unidad.  \n \nEjemplo.  k  \u2190 1, 10  \n  \nGenera la secuencia:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10 \n \n \n \nEjemplo.   Especificar  una variable de control  para que el bloque de instrucciones   P  \n                 se repita  20 veces  \n \n \n \n                  F \n                                    Para   i \u2190 1, 20 \n                                                      V  \n  \n             P \n  \n \n \n \n \n \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 845, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e693d93-e902-4fdf-a0f9-7d1dd951b04e": {"__data__": {"id_": "7e693d93-e902-4fdf-a0f9-7d1dd951b04e", "embedding": null, "metadata": {"page_label": "38", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "889d20d9-1497-44c9-9947-aab477630032", "node_type": "4", "metadata": {"page_label": "38", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e6cf51cb01506b124fbae259ac67f06da5897eb9b1ebb51484254803f46380d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06dc3abc-2bbd-480c-b718-de28e45ae610", "node_type": "1", "metadata": {"page_label": "37", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8f6bd7880ad77f4fc396f0cb82b96865615280b4384e5bee0028d33c93650d13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "097123db-8319-4309-ad66-64237b38a545", "node_type": "1", "metadata": {}, "hash": "313ea2f7e234c603c1f2613e847f209818cb29e4b00939e92e4e602958b84283", "class_name": "RelatedNodeInfo"}}, "hash": "99c02388301da3665be4249e15007d28c218c49498daed11f2db24a71a6400e5", "text": "38 \n \nEjemplo. Describir  en notaci\u00f3n algor\u00edtmica una soluci\u00f3n al siguiente problema.  \n \nDado un entero positivo n , se desea verificar q ue la suma de los primeros  n  n\u00fameros \nimpares es igual a  n2 \n \nEj.  n = 5:    1 + 3 + 5 + 7 + 9  =  52 \n \nAlgoritmo:  Suma de impares  \n Variables  \n     n:  Cantidad de n\u00fameros impares \n     k:  Cada n\u00famero impar  \n    s:  Suma de impares  \n    i:   Conteo de ciclos        \n \n \nDiagrama de flujo  \n  \n \n                                   \n          n     Cantidad de impares  \n \n \n                                                             \n         s \u2190 0    Inicio de la suma de impares  \n  \n                  F \n                                    Para   i \u2190 1, n   Estructura para realizar ciclos  \n       La variable de control es  i \n                                                     V  \n \n   k \u2190 2i - 1   k contiene cada n\u00famero impar  \n   s \u2190 s + k    Agregar a la suma el valor k \n  \n  \n                                                      \n          F \n                                   \n      s = n\n2                  Verificar si se cumple        \n                                                     \n                                         V                                                                                                           \n                                                            \n     \u2018Verdadero\u2019                  \u2018Falso\u2019  \n \n \n  \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "097123db-8319-4309-ad66-64237b38a545": {"__data__": {"id_": "097123db-8319-4309-ad66-64237b38a545", "embedding": null, "metadata": {"page_label": "39", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1cb8934b-b306-4ea6-a323-7627deb61a67", "node_type": "4", "metadata": {"page_label": "39", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "521bc72c66750a4942f8f5384c775fac3998eee62b81480f8ac2990e9fa89e26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e693d93-e902-4fdf-a0f9-7d1dd951b04e", "node_type": "1", "metadata": {"page_label": "38", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "99c02388301da3665be4249e15007d28c218c49498daed11f2db24a71a6400e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c43bf933-3eae-4aa2-ab04-496d41c56932", "node_type": "1", "metadata": {}, "hash": "b3e1aee46ba88258ca4ea77297c749f4ce1eb4d7d9f42cf2500f7d2ab05fb128", "class_name": "RelatedNodeInfo"}}, "hash": "313ea2f7e234c603c1f2613e847f209818cb29e4b00939e92e4e602958b84283", "text": "39 \n \nPrueba . Realice una pru eba del algoritmo anterior. Ingrese un dato desde fuera del bloque \ny registre los cambios en el contenido de las variables.  \n \nPrueba  n Ciclo   i  Impar  k  s Salida  \n 5   0  \n  1 1 1  \n  2 3 4  \n  3 5 9  \n  4 7 16  \n  5 9 25 \u2018Verdadero\u2019  \n \nSe verifica que el r esultado es  \u2018Verdadero\u2019 .  \n \nNote que este algoritmo no constituye una  demostraci\u00f3n matem\u00e1tica. Solo verfica que la \npropiedad se cumple para algunos valores espec\u00edficos.  \n \n \nDescribir  el algoritmo del ejemplo anterior en seudo lenguaje  \n \n Leer  n \n s \u2190 0 \n Para  i \u2190 1, 2, 3, ..., n  \n     k \u2190 2i - 1 \n     s \u2190 s + k  \n Fin \n Si  s = n2 \n     Mostrar  \u2018Verdadero\u2019  \n Sin\u00f3  \n     Mostrar  \u2018Falso\u2019  \n Fin \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 730, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c43bf933-3eae-4aa2-ab04-496d41c56932": {"__data__": {"id_": "c43bf933-3eae-4aa2-ab04-496d41c56932", "embedding": null, "metadata": {"page_label": "40", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2f6c344-3c34-4864-8157-bd4922f9d099", "node_type": "4", "metadata": {"page_label": "40", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0d30bc2f81446a6a0144a0d2de92aaa4c1430da6e168e68db0cbee8e1e34147a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "097123db-8319-4309-ad66-64237b38a545", "node_type": "1", "metadata": {"page_label": "39", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "313ea2f7e234c603c1f2613e847f209818cb29e4b00939e92e4e602958b84283", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e56e2136-bb86-4e29-bf05-1a9414aeb5c6", "node_type": "1", "metadata": {}, "hash": "586c5a2e675a7f94148c325b723314c00499e8788a88fe5f3239f29ef3976df0", "class_name": "RelatedNodeInfo"}}, "hash": "b3e1aee46ba88258ca4ea77297c749f4ce1eb4d7d9f42cf2500f7d2ab05fb128", "text": "40 \n \nc) Estructura de repetici\u00f3n controlada mediante una condici\u00f3n al final  \n \nAlgunos  programadores prefieren definir ciclos con la cond ici\u00f3n al final. Esta estructura se \nusa para repetir  un bloque hasta que se cumpla  alguna condici\u00f3n. Se la puede \nrepresentar con el siguiente gr\u00e1fico:  \n                 \n                                 \n \n                                                   \n  \n            P \n  \n                   F \n \n                                 Hasta  condici\u00f3n  \n \n \n                                                                V  \n \n \nAl entrar a esta estructura, se ejecuta n las instrucciones en el bloque y despu\u00e9s se \nchequea  el valor de la condici\u00f3n.  Si la condici\u00f3n tiene el valor verdadero, termina el ciclo y \nla ejecuci\u00f3n continua abajo, caso contrario, nuevamente se repite el bloque. En esta \nestructura algor\u00edtmica, el bloque de instrucci\u00f3nes se repite al menos una vez . \n Seudo lenguaje  \n \n Repita  \n \n \n  P \n \n Hasta  condici\u00f3n  \n \n \nNota:  Los s\u00edmbolos  gr\u00e1fico s que aparecen  en este documento para describir las \nestructuras de repetici\u00f3n  no son los t\u00edpicos usados por los programadores, pero  los \nhemos elegido por ser  distintivos. Algunos  programadores prefieren el rombo de las \ndecisiones para describir repeticiones condicionadas . Se muestra la representaci\u00f3n gr\u00e1fica \ncom\u00fanmente  utilizada  para las estructuras de repetici \u00f3n condicionada al inicio y \ncondicionada al final .  El uso de esta representaci\u00f3n gr\u00e1fica es opcional.  \n     \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1533, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e56e2136-bb86-4e29-bf05-1a9414aeb5c6": {"__data__": {"id_": "e56e2136-bb86-4e29-bf05-1a9414aeb5c6", "embedding": null, "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de7fbe80-78ac-43a6-8ea3-c88a162b1834", "node_type": "4", "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a68ef38f0423d345b5b37879bf2c75332e7e85e58985aff82da53e0ab6867f04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c43bf933-3eae-4aa2-ab04-496d41c56932", "node_type": "1", "metadata": {"page_label": "40", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b3e1aee46ba88258ca4ea77297c749f4ce1eb4d7d9f42cf2500f7d2ab05fb128", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2286a6b-87a2-493a-a999-a7fc3b043368", "node_type": "1", "metadata": {}, "hash": "616ea8a69e39b83a66b2e018aeeb437fe06e05b73e1ed1dbf2b4f5ca5e29fcea", "class_name": "RelatedNodeInfo"}}, "hash": "586c5a2e675a7f94148c325b723314c00499e8788a88fe5f3239f29ef3976df0", "text": "41 \n \n              \nLas estructuras de repetici\u00f3n son necesarias cuando un bloque del algoritmo debe \nejecutarse varias veces para constru\u00edr la soluci\u00f3n.   \n Si se puede anticipar la cantidad de ciclos que se deben realizar, en tonces conviene usar \nla repetici\u00f3n controlada con un conteo de ciclos  definido con una secuencia.  \n \nSi el algoritmo que se propone para resolver un problema requiere repetir un bloque pero \nno se puede anticipar la cantidad de ciclos que deben realizarse, entonces deberia usarse \nla repetici\u00f3n controlada con una condici\u00f3n.  \n    \n   3.4.4 Ejercicios con la notaci\u00f3n algor\u00edtmica: Algoritmos con ciclos  \n \nPara cada ejercicio desarrolle una soluci\u00f3n en notaci\u00f3n algor\u00edtmica y realice una prueba \n \n1. Calcule el mayor val or de los pesos de n  paquetes en una bodega. Estos datos ingresan \nuno a la vez dentro de un ciclo.  Al inicio ingrese el valor de  n para especificar la cantidad \nde ciclos que se realizar\u00e1n  \n2. Lea los votos de n  personas  en una consulta . Cada voto es un n \u00famero 0, o 1 \ncorrespondiente a la opci\u00f3n a favor ( 1) o en contra ( 0).  Al inicio lea el valor de n  para \nespecificar la cantidad de ciclos que se realizar\u00e1n.  Muestre el resultado de la consulta.  \n \n3. Determine la suma de los n  primeros n\u00fameros de la serie:   1, 1, 2, 3, 5, 8, 13, 21, ....  \nen la cual cada t\u00e9rmino, a partir del tercero,  se obtiene sumando los dos t\u00e9rminos \nanteriores  \n \n4.", "start_char_idx": 0, "end_char_idx": 1422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2286a6b-87a2-493a-a999-a7fc3b043368": {"__data__": {"id_": "a2286a6b-87a2-493a-a999-a7fc3b043368", "embedding": null, "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de7fbe80-78ac-43a6-8ea3-c88a162b1834", "node_type": "4", "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a68ef38f0423d345b5b37879bf2c75332e7e85e58985aff82da53e0ab6867f04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e56e2136-bb86-4e29-bf05-1a9414aeb5c6", "node_type": "1", "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "586c5a2e675a7f94148c325b723314c00499e8788a88fe5f3239f29ef3976df0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b18378d4-8d21-4db1-96ca-5cca69c967a2", "node_type": "1", "metadata": {}, "hash": "0f7759301123cb13f9fa06cc3e04e971b898b5cde106d83dc674b35cc0980393", "class_name": "RelatedNodeInfo"}}, "hash": "616ea8a69e39b83a66b2e018aeeb437fe06e05b73e1ed1dbf2b4f5ca5e29fcea", "text": "Calcule un valor aproximado para la constante  \u03c0  usando la siguiente expresi\u00f3n:  \n \n    \u03c0/4 = 1 \u2013 1/3 + 1/5 \u2013  1/7 + 1/9 \u2013  1/11 + 1/13 ...  \n \n   La cantidad de t\u00e9rminos es un dato que debe ser ingresado al inicio del algoritmo.  \n \n5. Determine la cantidad de t\u00e9rminos que deben sumarse de la serie  1\n1 + 22 + 33 + 44 + ... \npara que el valor de la suma sea mayor  a un n\u00famero  x  ingresado al inicio.  \n \n6. El inventor del juego del ajedr\u00e9z pidi\u00f3 a su rey que como recompensa le diera por la \nprimera casilla 2  granos  de trigo, por la segunda, 4  granos, por la tercera 8 , por la cuarta \n16,  y as\u00ed sucesivamente hasta llegar a la casilla 64. El rey acept\u00f3. Suponga que cada Kg. \nde trigo consta de 2 0000 granos  de trigo. Si cada tonelada tiene 1000 Kg. describa un \nalgoritmo para calcular la cantidad de toneladas  de trigo que s e hubiesen necesitado.  \n \nEn el  ciclo describa la suma  21 + 22 + 23 + 24 + \u2026 + 264 \nPython Programaci\u00f3n", "start_char_idx": 1423, "end_char_idx": 2372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b18378d4-8d21-4db1-96ca-5cca69c967a2": {"__data__": {"id_": "b18378d4-8d21-4db1-96ca-5cca69c967a2", "embedding": null, "metadata": {"page_label": "42", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eca54a8e-1db1-4024-ae1b-b81f6aa140f6", "node_type": "4", "metadata": {"page_label": "42", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "68945a271dba656f5ad0563a3d5d8a0a4bfd824a9ff1c8ca37b64e1c55c9ac13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2286a6b-87a2-493a-a999-a7fc3b043368", "node_type": "1", "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "616ea8a69e39b83a66b2e018aeeb437fe06e05b73e1ed1dbf2b4f5ca5e29fcea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b0d81d6-0502-4c0a-a614-91b4cf4d22b2", "node_type": "1", "metadata": {}, "hash": "76b2463c83bd05529fa87b4fba78c380035c67a343c304128d0872d2b02a9f7d", "class_name": "RelatedNodeInfo"}}, "hash": "0f7759301123cb13f9fa06cc3e04e971b898b5cde106d83dc674b35cc0980393", "text": "42 \n \n3.5 Reestructuraci\u00f3n de algoritmos \n \nEl prop\u00f3sito de esta secci\u00f3n es introducir conceptos del  dise\u00f1o correcto de algoritmos \nutilizando las estructuras de control de flujo des critas anteriormente. Estos algoritmos se \nlos puede denominar algoritmos estructurado s.  \n \nPara exponer estos conceptos se proponen algoritmos no estructurados , en los cuales el \nflujo de ejecuci \u00f3n se ha descrito mediante saltos de l\u00ednea,  lo cual hace que sean dif\u00edciles \nde entender y validar.   El objetivo es construir algoritmos equivalentes, pero estructurados.  \n \nEn cada ejemplo propuesto se analiza e interpreta gr\u00e1ficamente el contenido de l algoritmo \ny luego se lo reescribe  en seudo lenguaje usando las estru cturas de control definidas en \nlas secci ones  anterior es. El resultado es un  algoritmo estructurado  equivalente , \nordenado, f\u00e1cil de entender  y validar . Estos algoritmos estructurados permiten \nposteriormente convertirlos con facilidad a programas computacion ales reales.  \n \nEjemplo 1.  Analizar y r eestructurar el siguiente algoritmo  \n \n1 Leer  a, b, c  \n2 Si a<b salte a la l\u00ednea 4  \n3 Salte a la l\u00ednea 5  \n4 Si b>c salte a la l\u00ednea 6  \n5 Salte a la l\u00ednea 7  \n6 Mostrar a  \n7 Mostrar b  \n8 Mostrar c  \n \nInterpretaci\u00f3n gr\u00e1fica         Algoritmo en se udo lenguaje  \n \n   \n   Leer a,b,c \n Si a<b \u2227 b>c \n     Mostrar  a \n Fin \n Mostrar b,c \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1387, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b0d81d6-0502-4c0a-a614-91b4cf4d22b2": {"__data__": {"id_": "4b0d81d6-0502-4c0a-a614-91b4cf4d22b2", "embedding": null, "metadata": {"page_label": "43", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0edd5bf5-a398-4a79-b5bd-d225035cf251", "node_type": "4", "metadata": {"page_label": "43", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "beb75462f071191365af2ea055b0d460cd5a845bfe0b0ac341a704cba03a9814", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b18378d4-8d21-4db1-96ca-5cca69c967a2", "node_type": "1", "metadata": {"page_label": "42", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0f7759301123cb13f9fa06cc3e04e971b898b5cde106d83dc674b35cc0980393", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93d7e415-5d2a-4ab0-ba64-b0d52fee3e7f", "node_type": "1", "metadata": {}, "hash": "4cfc11167b2b210346a1d0cae27c2954150127169424afd53bbb1cfeacb00661", "class_name": "RelatedNodeInfo"}}, "hash": "76b2463c83bd05529fa87b4fba78c380035c67a343c304128d0872d2b02a9f7d", "text": "43 \n \nEjemplo 2.  Analizar y r eestructurar el siguiente algoritmo  \n \n1 Leer  a, b, c  \n2 Si a<b salte a la l\u00ednea 4  \n3 Si c>b salte a la l\u00ednea 6  \n4 t \u2190 a+b \n5 Salte a la l\u00ednea 7  \n6 t \u2190 b\u2013c \n7 Mostrar a,t  \n8 Mostrar b,t  \n \n     Interpretaci\u00f3n gr\u00e1fica         Algoritmo en seudo lenguaje  \n \n \n  \n \n \n \n \n \n   \n Leer a,b,c \n Si a<b \u2228 c\u2264b \n     t \u2190 a+b \n Sin\u00f3  \n     t \u2190 b\u2013c  \n Fin \n Mostrar a,t \n Mostrar b,t \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 435, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93d7e415-5d2a-4ab0-ba64-b0d52fee3e7f": {"__data__": {"id_": "93d7e415-5d2a-4ab0-ba64-b0d52fee3e7f", "embedding": null, "metadata": {"page_label": "44", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d088ffcf-8741-4646-93df-68c282c3ac67", "node_type": "4", "metadata": {"page_label": "44", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b94d0351a00aec0b548774a3e14f4a453eb9c41af175730a42de42eb9b19893b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b0d81d6-0502-4c0a-a614-91b4cf4d22b2", "node_type": "1", "metadata": {"page_label": "43", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76b2463c83bd05529fa87b4fba78c380035c67a343c304128d0872d2b02a9f7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3140c27b-e824-4ae0-a4bc-4e1cbe93f1d6", "node_type": "1", "metadata": {}, "hash": "1d9747613e35d610ccc43f08c3bfeced3427e231001714300b3f26cc20748d17", "class_name": "RelatedNodeInfo"}}, "hash": "4cfc11167b2b210346a1d0cae27c2954150127169424afd53bbb1cfeacb00661", "text": "44 \n \nEjemplo 3.  Analizar y r eestructurar el siguiente algoritmo  \n \n1 Leer a, b, c  \n2 r \u2190 0 \n3 Si a<b \u2228 c<0 salte a la l\u00ednea 8  \n4 Si b es par salte a la l\u00ednea 6  \n5 r \u2190 r + c \n6 b \u2190 b - 1 \n7 Salte a la l\u00ednea 3  \n8 Mostrar r  \n \n \nInterpretaci\u00f3n gr\u00e1fica         Alg oritmo en seudo lenguaje  \n \n  \n   Leer a,b,c \n r \u2190 0 \n Mientras a\u2265b \u2227 c\u22640 \n     Si b no es par  \n         r \u2190 r+c \n     Fin \n     b \u2190 b-1 \n Fin \n Mostrar r \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3140c27b-e824-4ae0-a4bc-4e1cbe93f1d6": {"__data__": {"id_": "3140c27b-e824-4ae0-a4bc-4e1cbe93f1d6", "embedding": null, "metadata": {"page_label": "45", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5ae32cf5-293f-4d47-9534-00d2c197061f", "node_type": "4", "metadata": {"page_label": "45", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "baad2b5bd6ab0c289a4a21fb0c1f3886123d263b7ba1fd06749caf744b986653", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93d7e415-5d2a-4ab0-ba64-b0d52fee3e7f", "node_type": "1", "metadata": {"page_label": "44", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4cfc11167b2b210346a1d0cae27c2954150127169424afd53bbb1cfeacb00661", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a03da2e5-1e6a-44c6-aca8-39335cb5ee42", "node_type": "1", "metadata": {}, "hash": "88efd017cc6a6e5cd9faf6649175deb484498dfcea0a65a4c5bdd592cfa16f91", "class_name": "RelatedNodeInfo"}}, "hash": "1d9747613e35d610ccc43f08c3bfeced3427e231001714300b3f26cc20748d17", "text": "45 \n \nEjemplo 4.  Analizar y r eestructurar el siguiente algoritmo  \n \n1 Leer a, b  \n2 Salte a la l\u00ednea 5  \n3 Mostrar x  \n4 Salte a la l\u00ednea 12  \n5 x \u2190 0 \n6 Si a<5 salte a la l\u00ednea 10  \n7 x \u2190 x + a \n8 Si x>b salte a la l\u00ednea 11  \n9 Salte a la l\u00ednea 7  \n10 x \u2190 x + a \u2013 b \n11 Salte a la l\u00ednea 3  \n12 Fin \n \n \nInterpretaci\u00f3n gr\u00e1fica         Algoritmo en seudo lenguaje  \n \n          \n    \n Leer a,b \n x \u2190 0 \n Si a<5 \n     x \u2190 x+a-b \n Sin\u00f3 \n     Repita  \n        x \u2190 x+a \n     Hasta x>b \n Fin \n Mostrar x \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a03da2e5-1e6a-44c6-aca8-39335cb5ee42": {"__data__": {"id_": "a03da2e5-1e6a-44c6-aca8-39335cb5ee42", "embedding": null, "metadata": {"page_label": "46", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19a2cde9-48d7-4b1a-a91c-f446f296dbb1", "node_type": "4", "metadata": {"page_label": "46", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "55f6eb4a8ef52129c3439d505e75dc4126734872d787659ad5e14961cf84a7e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3140c27b-e824-4ae0-a4bc-4e1cbe93f1d6", "node_type": "1", "metadata": {"page_label": "45", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1d9747613e35d610ccc43f08c3bfeced3427e231001714300b3f26cc20748d17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f61baa5-6c9e-4352-b14a-315bf956a64c", "node_type": "1", "metadata": {}, "hash": "e4f85e2c44cf4a75e32edcf2f2d7f921a6086bb221ca595d0badacb25f8cc870", "class_name": "RelatedNodeInfo"}}, "hash": "88efd017cc6a6e5cd9faf6649175deb484498dfcea0a65a4c5bdd592cfa16f91", "text": "46 \n \n \nEjemplo 5.  Analizar y r eestructurar el siguiente algoritmo  \n \n1 Leer a, b, c  \n2 Si a>b saltar a la l\u00ednea 6  \n3 a \u2190 a+5 \n4 Si a>b+c saltar a la linea 10  \n5 Saltar a la l\u00ednea 3 \n6 Si c>a saltar a la l\u00ednea 9  \n7 c \u2190 c+3 \n8 Saltar a la l\u00ednea 6  \n9 Saltar a la l\u00ednea 11  \n10 Mostrar a  \n11 Mostrar c  \n12 Fin \n \nInterpretaci\u00f3n gr\u00e1fica            Algoritmo en seudo lenguaje  \n \n \n           \nLeer a,b,c \nSi a>b \n    Mientras c\u2264a \n        c \u2190 c+3 \n    Fin \nSino \n    Repita  \n        a \u2190 a+5 \n    Hasta a>b+c \n    Mostrar  a \nFin \nMostrar c \n  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 575, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f61baa5-6c9e-4352-b14a-315bf956a64c": {"__data__": {"id_": "0f61baa5-6c9e-4352-b14a-315bf956a64c", "embedding": null, "metadata": {"page_label": "47", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efce34c4-dea4-4bb5-bb52-5c1adcbff233", "node_type": "4", "metadata": {"page_label": "47", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "82e38ca6faec96cd6d9b26bde7bfda32437a1ff52f717ac1ca70b46560a6e9b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a03da2e5-1e6a-44c6-aca8-39335cb5ee42", "node_type": "1", "metadata": {"page_label": "46", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "88efd017cc6a6e5cd9faf6649175deb484498dfcea0a65a4c5bdd592cfa16f91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cce4c6bd-4079-485b-a0a8-896080eecf2c", "node_type": "1", "metadata": {}, "hash": "b6a98e8a77598e8454b95fd647d097083ce30ff0de5dcece7f31232fcc58198a", "class_name": "RelatedNodeInfo"}}, "hash": "e4f85e2c44cf4a75e32edcf2f2d7f921a6086bb221ca595d0badacb25f8cc870", "text": "47 \n \n3.5.1 Ejercicios de reestructuraci \u00f3n de algoritmos  \n \n1. Considere el siguiente algoritmo    \n1 Leer a, b, c \n2 x \u2190 0 \n3 y \u2190 0 \n4 Si \uf8f9(a<2 \u2227 b>1) \u2228 (c>3) \n5    x \u2190 a + b \n6 Sino \n7    y \u2190 b - c \n8 Fin \n9 Mostrar x, y \n \nModifique el algoritmo de tal manera que la  estructura de decisi\u00f3n  cuya condici \u00f3n contiene \nconectores l\u00f3gicos ( \u2227, \u2228, \uf8f9 ) sea sustituida  con estructuras de decisi \u00f3n en las cuales la s \ncondiciones no tengan estos conectores l\u00f3gicos. Ambos algoritmos debe ser equivalentes.  \n \n2. El siguiente algoritmo contiene un ciclo controlado por una secuencia:  \n \n Leer n \nPara  i \u2190 1, 2, 3, ..., n  \n     k \u2190 2i \u2013 1 \n     Mostrar  i, k \n Fin \n \na) Convierta a un algoritmo equivalente con un ciclo condicionado al inicio  \nb) Convierta a un algoritmo equivalente con un ciclo condicionado al final  \n \nNecesita definir una variable para el conteo de repeticiones y la condici\u00f3n para salir . \n \n3. Dado el siguiente algoritmo \n \n s=0 \nRepita \n     Leer x \n    Si x>0 \u2227 x<10 \n         s  \u2190 s+x \n     Fin \nHasta s>100  \nMostrar s \n  \nConvierta a un algoritmo equivalente pero sustituyendo el ciclo condicionado al final por un \nciclo condicionado al inicio.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cce4c6bd-4079-485b-a0a8-896080eecf2c": {"__data__": {"id_": "cce4c6bd-4079-485b-a0a8-896080eecf2c", "embedding": null, "metadata": {"page_label": "48", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c119a010-f544-4fd4-ba6c-73887c6c85b2", "node_type": "4", "metadata": {"page_label": "48", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "41f4464e4bb65619bc882c7cb91efb3fa312d0e90ba5afb99b6895942570a88c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f61baa5-6c9e-4352-b14a-315bf956a64c", "node_type": "1", "metadata": {"page_label": "47", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4f85e2c44cf4a75e32edcf2f2d7f921a6086bb221ca595d0badacb25f8cc870", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb43d6d4-5f15-47a3-9291-f87b95931c4e", "node_type": "1", "metadata": {}, "hash": "34682f13e351dad8fb37ac001d7ef59c32307c3e90397f1bde70c6ef35c02b4b", "class_name": "RelatedNodeInfo"}}, "hash": "b6a98e8a77598e8454b95fd647d097083ce30ff0de5dcece7f31232fcc58198a", "text": "48 \n \n4.  Analice y reestructure  el siguie nte algoritmo. Describa gr\u00e1ficamente, interprete y \ncodifique en seudo lenguaje el algoritmo estructurado resultante.  \n \n1 Leer a, b  \n2 Si a>0 salte a la l\u00ednea 4  \n3 Salte a la l\u00ednea 5  \n4 Si b<100 salte a la l\u00ednea 7  \n5 t \u2190 0 \n6 Salte a la l\u00ednea 8  \n7 t \u2190 2a+b \n8 Mostrar t  \n \n5.  Analic e y reestructure el siguiente algoritmo. Describa gr\u00e1ficamente, interprete y \ncodifique en seudo lenguaje el algoritmo estructurado resultante.  \n \n1 Leer a, b  \n2 Si a<0 salte a la l\u00ednea 7  \n3 a \u2190 a+1 \n4 b \u2190 b-1 \n5 Si a<b salte a la l\u00ednea 3  \n6 Salte a la l\u00ednea 1 1 \n7 Si b<0 salte a la l\u00ednea 10  \n8 b \u2190 b+1 \n9 Salte a la l\u00ednea 7  \n10 b \u2190 2b \n11 Mostrar a,b  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 718, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb43d6d4-5f15-47a3-9291-f87b95931c4e": {"__data__": {"id_": "eb43d6d4-5f15-47a3-9291-f87b95931c4e", "embedding": null, "metadata": {"page_label": "49", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bbe34053-568f-4dfc-aeb8-8a0b554d74d6", "node_type": "4", "metadata": {"page_label": "49", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4bf2ccd38a14dce020433bdbe9bbdf30ed11f61a2ba4b360ace2b3e827f8fd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cce4c6bd-4079-485b-a0a8-896080eecf2c", "node_type": "1", "metadata": {"page_label": "48", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6a98e8a77598e8454b95fd647d097083ce30ff0de5dcece7f31232fcc58198a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afe994db-1348-4a38-a874-3875181a6ed9", "node_type": "1", "metadata": {}, "hash": "19521e72e1760c6a0b3591be9333781f0260e8280be735e1bbaec1799829cf24", "class_name": "RelatedNodeInfo"}}, "hash": "34682f13e351dad8fb37ac001d7ef59c32307c3e90397f1bde70c6ef35c02b4b", "text": "49 \n \n4  Lenguajes de Programa ci\u00f3n de Computadoras  \n \nUn lenguaje de programaci\u00f3n  es un  instrumento  dise\u00f1ado para describir acciones que \npuedan ser realizadas por una computadora. Para que esto sea posible es necesario que \nse cumplan ciertos requerimien tos b\u00e1sicos:  \na) Debe haberse construido o elaborado el algoritmo con el procedi miento detallado \npara resolver el problema de inter\u00e9s. Este algoritmo debe tener orientaci\u00f3n \ncomputacional.  \nb) Se necesita conocer la sintaxis y significado de las instrucciones del lenguaje de \nprogramaci\u00f3n que se va a utilizar  \nc) Es necesario tener acceso a un equipo computacional, el cual debe tener \ninstalado el traductor del lenguaje computacional que ser\u00e1 utilizado.  \n \nLos lengu ajes de programaci\u00f3n est\u00e1n formados por un conjunto de s\u00edmbolos y reglas para \nsu uso.  La instrumentaci\u00f3n del algoritmo mediante estas reglas se denomina programar y \nel producto obtenido es el programa. El programa escrito se denomina programa fuente, \nmient ras que el programa traducido al lenguaje que entiende el computador se denomina \nprograma objeto o ejecutable . \nLa actividad de programaci\u00f3n incluye varias etapas: escritura del programa, pruebas, \ndepuraci\u00f3n, validaci\u00f3n de los resultados y documentaci\u00f3n del  desarrollo.  \nLa programaci\u00f3n requiere precisi\u00f3n y cuidado en los detalles de uso del lenguaje. Los \nerrores de sintaxis normalmente los detecta el traductor del lenguaje, pero los errores de \ncontenido requieren mayor esfuerzo y la realizaci\u00f3n de pruebas. E sta etapa se denomina \ndepuraci\u00f3n.  \nEn las aplicaciones reales  los programas pueden necesitar cambios y actualizaciones, por \nlo que el uso de normas y una buena documentaci\u00f3n son escenciales.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1736, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "afe994db-1348-4a38-a874-3875181a6ed9": {"__data__": {"id_": "afe994db-1348-4a38-a874-3875181a6ed9", "embedding": null, "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf7538f1-de7e-4b8f-88de-cba52c03f12b", "node_type": "4", "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a460a818b0303554da60c445538e921d93f4f8cbcdbf6f972675d946eedc808", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb43d6d4-5f15-47a3-9291-f87b95931c4e", "node_type": "1", "metadata": {"page_label": "49", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "34682f13e351dad8fb37ac001d7ef59c32307c3e90397f1bde70c6ef35c02b4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7412fe0f-f644-4c34-84f7-d70fd1174be1", "node_type": "1", "metadata": {}, "hash": "755193de755c2307d14237c13f96bacc4ec8f31edfd3c91f3b8d9e5418deeccc", "class_name": "RelatedNodeInfo"}}, "hash": "19521e72e1760c6a0b3591be9333781f0260e8280be735e1bbaec1799829cf24", "text": "50 \n \n4.1 Metodolog\u00edas de programaci\u00f3n  \n \nLas siguientes son algunas de las metodolog\u00edas de programaci\u00f3n m\u00e1s comunes utilizadas \nen programaci\u00f3n de computadoras:  Programaci\u00f3n Estructurada, Programaci\u00f3n Modular, \nProgramaci\u00f3n Orientada a O bjetos \n \nLa Programaci\u00f3n Estructurada  usa instrucciones de control b\u00e1sicas con el objetivo de \nmantener la claridad en la codificaci\u00f3n de un programa o m\u00f3dulo. Esta metodolog\u00eda \nenfatiza el desarrollo de la programaci\u00f3n al nivel de detalle.  \n \nLa Programaci\u00f3n Modular  divide el desarrollo de p rograma s, usualmente complejo s o \ngrandes , en subprogramas o m\u00f3dulos  que facilitan la codificaci\u00f3n y la validaci\u00f3n. Esta \nmetodolog\u00eda orienta la organizaci\u00f3n de la programaci\u00f3n mediante la construcci\u00f3n de \nbloques o m\u00f3dulos y su integraci\u00f3n.  \n \nLa Programaci\u00f3n Orientada a Objetos permite a los programadores organizar el  dise\u00f1o \nde un proyecto de programaci\u00f3n definiendo objetos relacionados con el problema que se \nintenta  modelizar. En est a metodolog\u00eda las estructura s de los datos son el centro alrededor \ndel cual se desarrolla la programaci\u00f3n.  \nEn este documento se desarroll ar\u00e1 el aprendizaje de la programaci\u00f3n  con el lenguaje \nPython  aplicando estas metodolog\u00edas sucesivamente en el orden indicado. Al final, cada \nusuario podr\u00e1 reconocerlas y agregar\u00e1 su propio estilo de programaci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1347, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7412fe0f-f644-4c34-84f7-d70fd1174be1": {"__data__": {"id_": "7412fe0f-f644-4c34-84f7-d70fd1174be1", "embedding": null, "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf7538f1-de7e-4b8f-88de-cba52c03f12b", "node_type": "4", "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a460a818b0303554da60c445538e921d93f4f8cbcdbf6f972675d946eedc808", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afe994db-1348-4a38-a874-3875181a6ed9", "node_type": "1", "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "19521e72e1760c6a0b3591be9333781f0260e8280be735e1bbaec1799829cf24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0bf8df4-d6e2-4e32-b2e7-d886c5917347", "node_type": "1", "metadata": {}, "hash": "ec5713ac56830c9ad6a53c9e57c43a99aeda79d887734d7a548cc4cdb8fb684f", "class_name": "RelatedNodeInfo"}}, "hash": "755193de755c2307d14237c13f96bacc4ec8f31edfd3c91f3b8d9e5418deeccc", "text": "4.2 Factores para elegir un lenguaje de pro gramaci\u00f3n  \n \nAlgunos aspectos que deben considerarse al elegir un lenguaje de programaci\u00f3n:  \n \n        a)  Prop\u00f3sito o aplicaci\u00f3n : general o dedicado  \n        b)   Caracter\u00edsticas operativas : interacci\u00f3n, tipos  de datos , control de excepciones  \n        c)  Soport e t\u00e9cnico : disponibilidad, sistemas operativos , documentaci\u00f3n, comunidad \n        d)  Metodolog\u00edas de programaci\u00f3n aplicables  \n        e)   Facilidad y tiempo para el  aprendizaje  \n        f)   Legibilidad de la codificaci\u00f3n \n        g)  Eficiencia  de los progra mas resultantes  \n        h)  Productividad: velocidad de desarrollo de los programas \n        i)   Perspectivas a futuro  para desarrollo y crecimiento del lenguaje \n \nSe dice que un programador debe conocer al menos dos lenguajes de programaci\u00f3n. El \nprimero pu ede ser Python y el siguiente C++, Java, etc. Sin embargo Python  puede ser el \nprimero y \u00fanico lenguaje computacional que necesitan la mayor\u00eda de usuarios.  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1350, "end_char_idx": 2380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0bf8df4-d6e2-4e32-b2e7-d886c5917347": {"__data__": {"id_": "b0bf8df4-d6e2-4e32-b2e7-d886c5917347", "embedding": null, "metadata": {"page_label": "51", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd2a411c-7bc4-4813-9c70-55bb97b62103", "node_type": "4", "metadata": {"page_label": "51", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "97b0aa98b9b09cc56bd634fd7d8b348101a0fcc75e326e59c314ab1a03c37ddb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7412fe0f-f644-4c34-84f7-d70fd1174be1", "node_type": "1", "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "755193de755c2307d14237c13f96bacc4ec8f31edfd3c91f3b8d9e5418deeccc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "252b6170-6745-43a9-a6d2-99d2db096e3d", "node_type": "1", "metadata": {}, "hash": "7c0663d89999a2fb69084728ad271ebaccdd055a000220cbdd249afde6459427", "class_name": "RelatedNodeInfo"}}, "hash": "ec5713ac56830c9ad6a53c9e57c43a99aeda79d887734d7a548cc4cdb8fb684f", "text": "51 \n \n4.3  Lenguajes compilados y lenguajes interpretados \n \nCompilar es el proceso de traducir un program a escrito por un usuario en alg\u00fan lenguaje \nde programaci\u00f3n al lenguaje con el que opera un computador. Para que un programa \npueda compilarse debe estar completo y sin errores.  \n Interpretar un programa es el proceso de traduc ir y ejecu tar en forma progresiva  las \ninstrucciones de un programa escrito por un usuario. En est a modalidad, el programa no \nrequiere estar completo para que se pueda probar. Los errores son detectados a medida que progresa la traducci\u00f3n y ejecuci\u00f3n.  \n C++ es un lenguaje de programaci\u00f3n q ue opera en la modalidad de compilaci\u00f3n, mientras \nque Python es un lenguaje interpretado.  \n Los compiladores como C++ tienen una ventana para el desarrollo de la programaci\u00f3n en \nla cual se escribe el programa.  El programa se compila y si no hay errores se g enera un \nprograma ejecutable aut\u00f3nomo  que no  requiere que el traductor est\u00e9 presente. El \nprograma ejecutable resultante es muy eficiente.  \n \nLos interpretadores de lenguaje como Python  tienen una ventana interactiva para pruebas \ny una ventana de edici\u00f3n par a crear los programas. Este entorno permite realizar pruebas \ndurante el desarrollo, con lo cual mejora  la productividad. Los resultados se muestran en la \nventana interactiva y se requiere que el interpretador de instrucciones est\u00e9 presente. Los \nprogramas r esultantes no son muy eficientes, pero el desarrollo y pruebas son  eficientes .  \n Actualmente  existen compiladores para generar programas ejecutables a partir de \nprograma s construidos con lenguajes interpretados.  Igualmente, se pueden incorporar \ncomponentes  compilados a un programa interpretado.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1748, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "252b6170-6745-43a9-a6d2-99d2db096e3d": {"__data__": {"id_": "252b6170-6745-43a9-a6d2-99d2db096e3d", "embedding": null, "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46d520e9-6fb8-4ca4-ac8c-4a0e1c3baa6f", "node_type": "4", "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2d7c3c5eee5b2ed64a5bd6b21463c6326c88b2e3395b1c710c1b2f48a46ab5a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0bf8df4-d6e2-4e32-b2e7-d886c5917347", "node_type": "1", "metadata": {"page_label": "51", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec5713ac56830c9ad6a53c9e57c43a99aeda79d887734d7a548cc4cdb8fb684f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc7a11fa-ef4f-4075-b973-e883d4cc6d9c", "node_type": "1", "metadata": {}, "hash": "4e453e4f79ca9f860fd69f82e842272f96d91a0d487a7e765456c4d45a45405b", "class_name": "RelatedNodeInfo"}}, "hash": "7c0663d89999a2fb69084728ad271ebaccdd055a000220cbdd249afde6459427", "text": "52 \n \n5  El lenguaje Python \n \n5.1 Origen del lenguaje Python \n \nEl lenguaje Python  fue creado por Guido v an Ros sum a principos de los a\u00f1os 90 en \nHolanda. El nombre del lenguaje proviene de la afici\u00f3n de su creador por el gr upo de \nhumoristas brit\u00e1nicos los Monty Python.  \n \n \nPython  es un interpretador de instrucciones que permite usar el lenguaje  en forma \ninteractiva.  Los lenguajes interpretados, a diferencia de los lenguajes compilados, permiten \nexperimentar interactivamente en una ventana y tambi\u00e9n mediante programas  que pueden \ndesarrollarse y probarse a medida que son construidos . Esta interacci\u00f3n facilita el \naprendizaje del leng uaje y mejora la productividad. Los programas compilados en cambio, \ndeben estar completos para qu e sean probados y no admiten experimentar \nseparadamente con las instrucciones. La ventaja de los programas compilados es que el \ntiempo de ejecuci\u00f3n es menor.  \nPython es un lenguaje de prop\u00f3sito general. Su dise\u00f1o no obliga a los usuarios  a adoptar \nun estilo  particular . Esta caracter\u00edstica del lenguaje motiva la creatividad y permite la \nelecci\u00f3n entre varios paradigmas o metodolog\u00edas  de programaci\u00f3n .  \nCon todos los recursos del  lenguaje y el soporte de las librer\u00edas disponibles, el \nprogramador puede usar libr emente su imaginaci\u00f3n para crear nuevas soluciones.  \nPartiendo de un conocimiento inicial b\u00e1sico, puede av anzar en el aprendizaje del lenguaje \na su propio ritmo.  \nPython es un producto p\u00fablico y de distribuci\u00f3n libre que puede descar garse de internet.", "start_char_idx": 0, "end_char_idx": 1539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc7a11fa-ef4f-4075-b973-e883d4cc6d9c": {"__data__": {"id_": "fc7a11fa-ef4f-4075-b973-e883d4cc6d9c", "embedding": null, "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46d520e9-6fb8-4ca4-ac8c-4a0e1c3baa6f", "node_type": "4", "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2d7c3c5eee5b2ed64a5bd6b21463c6326c88b2e3395b1c710c1b2f48a46ab5a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "252b6170-6745-43a9-a6d2-99d2db096e3d", "node_type": "1", "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7c0663d89999a2fb69084728ad271ebaccdd055a000220cbdd249afde6459427", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9209af47-af1a-4d70-a852-b5b269c1a101", "node_type": "1", "metadata": {}, "hash": "162ed620a04bdc1fde53cbc4e6fc6dc57cc7a97742f2e974bb72f14516d46644", "class_name": "RelatedNodeInfo"}}, "hash": "4e453e4f79ca9f860fd69f82e842272f96d91a0d487a7e765456c4d45a45405b", "text": "(*) Los datos biogr\u00e1ficos se tomaron de la direcci\u00f3n de internet:   \nhttp://www.ecured.cu/index.php/Guido_van_Rossum  \n \nEn la siguiente direcci\u00f3n de YouTube hay un video en el cual Guido van Rossum  expone algunos \naspectos del lenguaje Python:   \n  http://www.youtube.com/watch?v=EBRMq2Ioxsc  Guido van Rossum naci\u00f3 en  1956  en Holanda. All\u00ed recibi\u00f3 \nun t\u00edtulo de maestr\u00eda en  matem\u00e1tica  y ciencias  de la   \ncomputaci\u00f3n  de parte de la Universidad  de \nAmsterdam en 1982 . Esto le abri\u00f3 las puertas a varios \npuestos de trabajo en los siguientes a\u00f1os en el Centrum \nWiskunde & Informatica (CWI) . En esa misma ciudad \ncre\u00f3 Python.  Actualmente colabora en Google.   \n \nSe lo conoce actualmente por el t\u00edtulo BDFL (\"Benevolent \nDictator for Life'\"), teniendo asignada la tarea de fijar las \ndirectrices sobre la evoluci\u00f3n de Python, as\u00ed como la de \ntomar decisiones finales sobre el lenguaje que todos los \ndesarrolladores acatan. Van Rossum tiene fama de ser \nbastante conservador, realizando pocos cambios al \nlenguaje entre versiones sucesivas, intentando mantener \nsiempre la compatibilidad con ve rsiones anteriores . (*) \nPython Programaci\u00f3n", "start_char_idx": 1550, "end_char_idx": 2701, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9209af47-af1a-4d70-a852-b5b269c1a101": {"__data__": {"id_": "9209af47-af1a-4d70-a852-b5b269c1a101", "embedding": null, "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70a4b2d2-3a64-4818-a46d-2bc0db2f746a", "node_type": "4", "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c46e4fd521e4a6768fc73ed86336706cc45467bb4a26fac1a9aa15852f5186a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc7a11fa-ef4f-4075-b973-e883d4cc6d9c", "node_type": "1", "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4e453e4f79ca9f860fd69f82e842272f96d91a0d487a7e765456c4d45a45405b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8160ee55-b166-4e24-863a-b6e806df76d9", "node_type": "1", "metadata": {}, "hash": "f4c7eee1e2b2d803fe0ed851e340904c797f589854ce6115c53cbd374bf823b0", "class_name": "RelatedNodeInfo"}}, "hash": "162ed620a04bdc1fde53cbc4e6fc6dc57cc7a97742f2e974bb72f14516d46644", "text": "53 \n \n5.2  Caracteristicas del lenguaje computacional Python  \n \na) Python es un lenguaje interpretado. Se considera sucesor del lenguaje ABC y usa \nconceptos de otros lenguajes como Modula -3, Lisp, entre otros.  \n \nb) Python no obliga a los programadores a adoptar un estilo particular de programaci\u00f3n.  \n \nc) Se puede instalar en varias plataformas: Windows, Linux, etc. Con menores cambios \npuede trasladarse entre ellas.  \n \nd) Es software libre y de c\u00f3digo abierto con licencia GPL (General Public License). Se \npuede instalar, modificar y distribuir proporcionando el c\u00f3digo fuente. Una licencia GPL no \nofrece garant\u00eda, pero la gr an comunidad de usuarios que disponen del c\u00f3digo abierto, \nr\u00e1pidamente detectan errores.  \n \ne) El c\u00f3digo escrito en Python es legible, sin marcas para definir bloques como en otros \nlenguajes. No requiere s\u00edmbolos de fin de l\u00ednea. Escribir en este lenguaje es casi como \nescribir en seudo c\u00f3digo en ingl\u00e9s  \nEjemplo.  \nSi e no est\u00e1 en [12,34,25,17,24]             Seudo lenguaje  \nimprimir \"No est\u00e1 en la lista\"  \n \nif e not in  [12,34,25,17,24]:                        Lenguaje Python  \nprint(\"No est\u00e1 en la lista\" ) \n \nf)  Usa el encolumnamiento de instrucciones para definir bloques y establecer el alcance \nde las estructuras de control. El c\u00f3digo resultante es compacto pero legible.  \n \ng) Python es un lenguaje de tipado din\u00e1mico: conecta un m\u00e9todo y un nombre de variable \ndurante la ejecuci\u00f3n del programa.  \n \nh) Es un lenguaje seguro. Realiza chequeo din\u00e1mico de tipos de datos y de \u00edndices \n \ni) Es un lenguaje extendible. Continuamente la gran comunidad de usuarios est\u00e1 creando \nnuevas librer\u00edas en diferentes \u00e1reas de aplicaci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1684, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8160ee55-b166-4e24-863a-b6e806df76d9": {"__data__": {"id_": "8160ee55-b166-4e24-863a-b6e806df76d9", "embedding": null, "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "70a4b2d2-3a64-4818-a46d-2bc0db2f746a", "node_type": "4", "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c46e4fd521e4a6768fc73ed86336706cc45467bb4a26fac1a9aa15852f5186a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9209af47-af1a-4d70-a852-b5b269c1a101", "node_type": "1", "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "162ed620a04bdc1fde53cbc4e6fc6dc57cc7a97742f2e974bb72f14516d46644", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b06c917-d0ac-44f2-a065-13dfd81935fb", "node_type": "1", "metadata": {}, "hash": "dda70a3168695688d72fc5c392095e137ea0754b6b05f1b0a186202a95c6bbf4", "class_name": "RelatedNodeInfo"}}, "hash": "f4c7eee1e2b2d803fe0ed851e340904c797f589854ce6115c53cbd374bf823b0", "text": "j) Python  es un lenguaje de prop\u00f3sito general. Algunas aplicaciones  son: \na) Aprendizaje de la programaci\u00f3n.  \nb) Desarrollo de prototipos.  \nc) Computaci\u00f3n cient\u00edfica y matem\u00e1tica.  \nd) Estad\u00edstica y optimizaci\u00f3n.  \ne) Desarrollo de interfaz visual.  \nf)     Desarrollo de aplicaciones web.  \ng) Interfaz para manejo de bases de datos.  \nh) Educaci\u00f3n y juegos.  \ni)     Desarrollo de software.  \nPython Programaci\u00f3n", "start_char_idx": 1689, "end_char_idx": 2107, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b06c917-d0ac-44f2-a065-13dfd81935fb": {"__data__": {"id_": "4b06c917-d0ac-44f2-a065-13dfd81935fb", "embedding": null, "metadata": {"page_label": "54", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a975f660-f6e0-4e09-ba0f-ab457b6683e3", "node_type": "4", "metadata": {"page_label": "54", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "51c4c1498fe5879b61e1a9a064fcf7cc4bd3953c5b015dc5e3ff27c4ba0b32cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8160ee55-b166-4e24-863a-b6e806df76d9", "node_type": "1", "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f4c7eee1e2b2d803fe0ed851e340904c797f589854ce6115c53cbd374bf823b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35a02ef7-b7ac-4b02-b8ff-604ac4c7f9a0", "node_type": "1", "metadata": {}, "hash": "1785caa0d926081e78b48577773f407fd2434d079065bff3876e5b2ec64d3be8", "class_name": "RelatedNodeInfo"}}, "hash": "dda70a3168695688d72fc5c392095e137ea0754b6b05f1b0a186202a95c6bbf4", "text": "54 \n \nk) Algunos usuarios actuales de Python:  YouTube, Google, NASA, universidades , etc. \n \nl) Aprendizaje f\u00e1cil para diferentes niveles de usuarios. Recomendable como prim er \nlenguaje de programaci\u00f3n.  \n \nm) Python puede tener abiertas varias ventanas interactivas y varias ventanas de edici\u00f3n \ntrabajando en pruebas o proyectos diferentes  n) En Python  la ejecuci\u00f3n se inicia desde la ventana de edici\u00f3n o cargando el programa en \nla ventana interactiva. Siendo un interpretador de lenguaje, el traductor debe estar \npresente. Sin embargo ya existen utilitarios para compilar programas Python. Ejemplo. \nPyPy.  \n \no) En Python, la mayor\u00eda de las funciones est\u00e1n en librer\u00edas que deben ser carg adas antes \nde acceder a las funciones. Por este motivo, el tiempo de carga del traductor Python es \nmenor . \n  \np) Python es un lenguaje de prop\u00f3sito general y tiene estructuras de datos muy flexibles. \nSe pueden crear listas con componentes de diferentes  tipos. \n \n \nLa filosof\u00eda de Python es la legibilidad y la transparencia. Estos principios est\u00e1n codificados \ny se los puede revisar  escribiendo la instrucci\u00f3n   import this   en la ventana  principal de  \nPython.  \n  \n \n \n \n \n \n \n \n \n  \n \n \n \n \n \n  \n \nAlguna  informaci\u00f3n para esta secci\u00f3n fu e tomada del curso en la direcci\u00f3n de internet:  \n \nhttp://codigofacilito.com/cursos/Python  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1365, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35a02ef7-b7ac-4b02-b8ff-604ac4c7f9a0": {"__data__": {"id_": "35a02ef7-b7ac-4b02-b8ff-604ac4c7f9a0", "embedding": null, "metadata": {"page_label": "55", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f671dc41-e7fd-4954-913d-662b63c84e00", "node_type": "4", "metadata": {"page_label": "55", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f0d3c721713bb37ae6a1b946ceefabd79cc43941350c9f07c2ea0af7ef2fe0d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b06c917-d0ac-44f2-a065-13dfd81935fb", "node_type": "1", "metadata": {"page_label": "54", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dda70a3168695688d72fc5c392095e137ea0754b6b05f1b0a186202a95c6bbf4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28a72b9a-0c74-4660-8f27-8c1479db8b3c", "node_type": "1", "metadata": {}, "hash": "bf7fede5098ae17ef58de98f255e03cf5914e8272bb0cb7aed6c2e64c13416bf", "class_name": "RelatedNodeInfo"}}, "hash": "1785caa0d926081e78b48577773f407fd2434d079065bff3876e5b2ec64d3be8", "text": "55 \n \n5.3 Carga e i nstalaci\u00f3n  \n \nEl tradu ctor del lenguaje de program aci\u00f3n Python es p\u00fablico y de acceso libre. S e lo puede \ndescargar e instalar para WINDOWS y  para otros sistemas operativos  desde la p\u00e1gina \noficial de Python en la direcci\u00f3n  de la red internet : \n \nhttps://www. python.org/  \n \n              \n  \n \nLa version m\u00e1s reciente disponible para WINDOWS  es la versi\u00f3n 3.4.1 de mayo 18 , 2014  \n \nLa instalaci\u00f3n es guiada mediante pantallas con opciones que deben aceptar se. Cuando la \ninstalaci\u00f3n est\u00e1 completa se habr\u00e1 creado una carpeta con el nombre Python34.  \n \nLa instalaci\u00f3n tambi\u00e9n crea en la barra del men\u00fa inicial de WINDOWS y en la carpeta del \nprograma  a la que se accede desde el men\u00fa inicial, un \u00edcono con el nombre IDLE ( Python  \nGUI)  mediante el cual se despliega una pantalla de interfaz que facilta la interacci\u00f3n con \nPython:  \n  \n              \n  \n \nEsta es la pantalla principal o S hell de Python . Esta pantalla incluye en el margen superior \nun men\u00fa de opciones. Al presionar  file   en el men\u00fa se abren opciones para crear \nventanas de edici\u00f3n de programas, para buscar programas, guardarlos, etc.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28a72b9a-0c74-4660-8f27-8c1479db8b3c": {"__data__": {"id_": "28a72b9a-0c74-4660-8f27-8c1479db8b3c", "embedding": null, "metadata": {"page_label": "56", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "845ceb00-1c22-46e8-b768-67349848d52f", "node_type": "4", "metadata": {"page_label": "56", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "01e235c68ea469529267baee1475e31f14c1ee112270b55655c5daf212fdf30b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "35a02ef7-b7ac-4b02-b8ff-604ac4c7f9a0", "node_type": "1", "metadata": {"page_label": "55", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1785caa0d926081e78b48577773f407fd2434d079065bff3876e5b2ec64d3be8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ae6da1d-abf2-4078-8425-a0ae779a05c6", "node_type": "1", "metadata": {}, "hash": "04fd0f0bab15fa716b2d836f0c429b2809d4667b947a6db46b9e52ee2a65458e", "class_name": "RelatedNodeInfo"}}, "hash": "bf7fede5098ae17ef58de98f255e03cf5914e8272bb0cb7aed6c2e64c13416bf", "text": "56 \n \nEn este documento usaremos est e dispositi vo para interactuar en l\u00ednea con Python y \ntambi\u00e9n para el ingreso y salida de los resultados cuando se escriban programas y se \nrealice la ejecuci\u00f3n.  Aparte del IDLE que ofrece Python, e xisten otras instrumentaciones \ndisponibles como interfaz de Python.  \n \nSe puede personalizar la apariencia de esta pantalla presionando el bot\u00f3n Options  en el \nmen\u00fa  y seleccionando  Configure IDLE . \n \nIDLE proviene de las palabras Interactive Development Environment.  \nGUI proviene de las palabras  Graphical User Interface \n \nNota : Si en lugar de IDLE ( Python GUI)  elije Python (command line)  se abrir\u00e1 la ventana \nprimitiva de Python la cual es muy limitada para interactuar con el lenguaje.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ae6da1d-abf2-4078-8425-a0ae779a05c6": {"__data__": {"id_": "3ae6da1d-abf2-4078-8425-a0ae779a05c6", "embedding": null, "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f3ed657-488f-4d3c-8d1b-4a625544cb31", "node_type": "4", "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f2785b38278ba885ee0917a1e9e043531e98e60977e262e7dc6903bb2ef71dac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28a72b9a-0c74-4660-8f27-8c1479db8b3c", "node_type": "1", "metadata": {"page_label": "56", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf7fede5098ae17ef58de98f255e03cf5914e8272bb0cb7aed6c2e64c13416bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c591052a-2f17-41e1-8100-c5dbcd4012c7", "node_type": "1", "metadata": {}, "hash": "d8d15e4ce0cea7f58650b5d093b0317eea1609b7c34a825fb890906a7877bdfa", "class_name": "RelatedNodeInfo"}}, "hash": "04fd0f0bab15fa716b2d836f0c429b2809d4667b947a6db46b9e52ee2a65458e", "text": "57 \n \n5.4 Extensiones al lenguaje  \n \nPara enriquecer el lenguaje,  los usuarios de la comunidad P ython  han desarrollado  \nmuchas extensiones organizadas en paquetes  o librer\u00edas las cuales  est\u00e1n disponibles de \nmanera gratuita en la red internet para integrarlas al  entorno del  lenguaje.  \n \nUn sitio de internet que contiene una gran cantidad de paquetes con extens iones para \nPython ha sido compilada por Christoph Gohlke  de la Universidad de California en Irvine.  \nDe este sitio s e puede n descargar e instalar para WIINDOWS, en  la direcci\u00f3n : \n \n http://www.lfd.uci.edu/~gohlke/ Python libs/ \n \nLos siguientes son algunos de los paquetes de extensi\u00f3n importantes que se pueden \ndescargar de este sitio para WINDOWS .  Se recomienda realizar su instalaci\u00f3n.   \n \nNumPy: Paquete fundam ental para computaci\u00f3n matem\u00e1tica y cient\u00edfica con Python  \nMatplotlib , Pylab : Librer\u00eda para gr\u00e1ficos en dos  y tres dimensiones  \nSymPy: Librer\u00eda para aplicaciones con matem\u00e1ticas simb\u00f3licas  \n \nAl descargar estas  extensiones , el programa de instalaci\u00f3n las agreg a a la carpeta site-\npackages ubicada dentro de  lib  la cual a su vez est\u00e1 incluida en la carpeta Python34. La \ncarpeta site-packages contiene algunos paquetes iniciales que se agregan directamente \nal instalar  Python.   La librer\u00eda Matplotlib  incluye a Pylab . \n \nEl sitio oficial para decargar las librer\u00edas fundamentales: Numpy, SciPy, SymPy, Matplotlib:  \n \n http://www.scipy.org/  \nExiste gran cantidad de informaci\u00f3n acerca del uso del lenguaje Python  en la red internet , \nas\u00ed com o ejemplos y videos en el portal YouTube .", "start_char_idx": 0, "end_char_idx": 1602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c591052a-2f17-41e1-8100-c5dbcd4012c7": {"__data__": {"id_": "c591052a-2f17-41e1-8100-c5dbcd4012c7", "embedding": null, "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f3ed657-488f-4d3c-8d1b-4a625544cb31", "node_type": "4", "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f2785b38278ba885ee0917a1e9e043531e98e60977e262e7dc6903bb2ef71dac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ae6da1d-abf2-4078-8425-a0ae779a05c6", "node_type": "1", "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "04fd0f0bab15fa716b2d836f0c429b2809d4667b947a6db46b9e52ee2a65458e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3af92d02-1db6-4285-9cdf-ab136fa0741e", "node_type": "1", "metadata": {}, "hash": "9d1d905ffe88a5528569488b1840e436c1f78d6ef46b2d9df8d8da01ba8e979c", "class_name": "RelatedNodeInfo"}}, "hash": "d8d15e4ce0cea7f58650b5d093b0317eea1609b7c34a825fb890906a7877bdfa", "text": "Algunos sitios de inter\u00e9s en la red internet con  informaci\u00f3n para el aprendizaje de Python : \n Sitio we b con informaci\u00f3n incial para la instalaci\u00f3n y uso de del lenguaje Python  \n \nhttps://wiki.python.org/moin/BeginnersGuide/  \n \nUn tutorial detallado del lenguaje Python.   \n \nhttp://www.tutorialspoint.com/ Python/  \n \nEn la siguiente direcci\u00f3n se puede encontrar y bajar en formato pdf el tutorial elaborado \npor Guido Van Rossum y traducido al espa\u00f1ol por voluntarios usuarios de Python en \nArgentina .  \n \nhttp://docs. Python .org.ar/tutorial/pdfs/Tuto rialPython3.pdf  \n \nEn general, estos documentos proveen  informaci\u00f3n dispersa acerca del uso del lenguaje, \npero no incluyen muchos ejemplos de aplicaci\u00f3n.  \n \nEl documento que ofrecemos  en esta obra es una integraci\u00f3n de muchos temas de inter\u00e9s \npara el aprendi zaje del lenguaje Python, con una gran cantidad de ejemplos instructivos  y \nejercicios de pr\u00e1ctica para los interesados.  \nPython Programaci\u00f3n", "start_char_idx": 1606, "end_char_idx": 2574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3af92d02-1db6-4285-9cdf-ab136fa0741e": {"__data__": {"id_": "3af92d02-1db6-4285-9cdf-ab136fa0741e", "embedding": null, "metadata": {"page_label": "58", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "870fed0e-5c68-4223-9885-1785da4b3959", "node_type": "4", "metadata": {"page_label": "58", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "52871b17beb0de7cd89bc90d46a6427688e20884639c5fa236630146d8eea1a7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c591052a-2f17-41e1-8100-c5dbcd4012c7", "node_type": "1", "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8d15e4ce0cea7f58650b5d093b0317eea1609b7c34a825fb890906a7877bdfa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ec2c56b-1c40-4dc5-84e4-9b7a01c8c095", "node_type": "1", "metadata": {}, "hash": "8a920319bd5a7d8d30f50d57e1859b212dfa956bfcc0a5a7e9a07069b14f5961", "class_name": "RelatedNodeInfo"}}, "hash": "9d1d905ffe88a5528569488b1840e436c1f78d6ef46b2d9df8d8da01ba8e979c", "text": "58 \n \n5.5     Desarrollo de programas en el lenguaje Python  \n \nUn programa es la descripci\u00f3n de un algoritmo en un lenguaje computacional. En la \nterminolog\u00eda de Python, un programa se denomina m\u00f3dulo.  \n \nPara escribir un programa es necesario haber conceptualizado o construido el algoritmo \npara resolver el problema de inter\u00e9s y conocer las reglas de sintaxis y sem\u00e1ntica del \nlenguaje computacional  que ser\u00e1 usado.  \n Tambi\u00e9n deber\u00e1 tener instalado en su computador el traductor del lenguaje. En este \ndocumento se usar\u00e1 una interfaz d e Python para desarrollo denominada IDLE (Interactive \nDeveL opment Environment) . Adicionalmente se pueden instalar extensio nes del lenguaje \nque han sido desarrollados para aplicaciones especiales.  \n \n \n5.6 Algunos elementos b\u00e1sicos para escribir  programas  \n \n5.6.1 Tipos de datos b\u00e1sicos  \n \nSon los componentes elementales con los que se opera en el lenguaje Python. En color \nazul entre  par\u00e9ntesis se muestr a el nombre del tipo en el lenguaje Python.   \n  \na) Enteros ( int) \n Son n\u00fameros sin punto decimal.  \n \nEjemplos.  \n 37 \n 0 \n -128 \n \nb) Reales o n\u00fameros de punto flotante ( float ) \n \nN\u00fameros con punto decimal o expresados  en notaci\u00f3n de potencias de 10 \n \nEjemplos.  \n 3.25 \n -0.028 \n 2.4e-5      es el n\u00famero 2.4x10\n-5 \n c) Complejos  (complex)  \n \nN\u00fameros expresados con un componente real y un componente imaginario  \n \nEjemplo.  \n (2+3j) \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ec2c56b-1c40-4dc5-84e4-9b7a01c8c095": {"__data__": {"id_": "6ec2c56b-1c40-4dc5-84e4-9b7a01c8c095", "embedding": null, "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e22f34f1-4930-4ccc-bb83-500ce89f4e83", "node_type": "4", "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7f54868163b5fc006c31a1662771d7e493b7a09db80a27b1a28412a686806c17", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3af92d02-1db6-4285-9cdf-ab136fa0741e", "node_type": "1", "metadata": {"page_label": "58", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9d1d905ffe88a5528569488b1840e436c1f78d6ef46b2d9df8d8da01ba8e979c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e88878d-e413-473d-aeca-e4de18d50af2", "node_type": "1", "metadata": {}, "hash": "cb8485e03c3ab9900a7f339813e25045f054a64e636d6e81946c216bfafef197", "class_name": "RelatedNodeInfo"}}, "hash": "8a920319bd5a7d8d30f50d57e1859b212dfa956bfcc0a5a7e9a07069b14f5961", "text": "59 \n \nd) Cadenas de caracteres ( str) \n \nExpresiones encerradas ent re comillas simples o comillas dobles . Este tipo de datos no es \nb\u00e1sico. Pero damos una primera mirada. Ser\u00e0 estudiado en detalle en otra secci\u00f3n.  \n Ejemplos . \n 'un algoritmo'    o     \"un algoritmo\"  \n \ne) Valores l\u00f3gicos  (bool) \n \nTrue  Representa al valor l\u00f3gico verdadero   (Se pue de usar 1 en lugar de True ) \nFalse    Representa al valor l\u00f3gico falso   (Se puede usar 0  en lugar de False)  \n \n \n5.6.2 Variables o identificadores  \n \nSon los s\u00edmbolos para representar  los valores y otros componentes de los programas. \nPara escribir variables se pu eden usar letras, may\u00fasulas y min\u00fasculas, d\u00edgitos y el sub-\ngui\u00f3n  pero deben comenzar con una letra o con el sub -gui\u00f3n . Se pueden usar tildes y \u00f1 . \n Las variables se crean al asignarles un valor. Esta asignaci\u00f3n se denomina din\u00e1mica pues \nse realiza durante l a ejecuci\u00f3n, es decir que las variables se crean y pueden modificarse \ndurante la ejecuci\u00f3n.  El tipo de datos de la variable se define con el tipo del valor asignado.  \n \nSe recomienda que los nombres de variables no coincidan con las palabras reservadas \nque tienen un significado especial para el lenguaje de programaci\u00f3n. Se sugiere usar \nnombres cortos pero significativos y relacionados con los valores que representar\u00e1n.", "start_char_idx": 0, "end_char_idx": 1320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e88878d-e413-473d-aeca-e4de18d50af2": {"__data__": {"id_": "2e88878d-e413-473d-aeca-e4de18d50af2", "embedding": null, "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e22f34f1-4930-4ccc-bb83-500ce89f4e83", "node_type": "4", "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7f54868163b5fc006c31a1662771d7e493b7a09db80a27b1a28412a686806c17", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ec2c56b-1c40-4dc5-84e4-9b7a01c8c095", "node_type": "1", "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8a920319bd5a7d8d30f50d57e1859b212dfa956bfcc0a5a7e9a07069b14f5961", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "375645bf-a8fd-4caf-a1ed-a3f5566620ab", "node_type": "1", "metadata": {}, "hash": "9a33acd05c0a2253542f5d8b293ff003bb7b63ab05e374ffb819e1a14b933c8e", "class_name": "RelatedNodeInfo"}}, "hash": "cb8485e03c3ab9900a7f339813e25045f054a64e636d6e81946c216bfafef197", "text": "Lista (no exhaustiva) de \npalabras reservadas de Python  \n \nand  assert  break  class  continue  def  del  elif  else  except  exec  \nfinally  for  f rom  global  if  import  in  input is  lambda  next  none \nnot  or  p ass  print  raise  return  try  while  yield   \n 5.6.3 Operadores  \n \nSon los s\u00edmbolos utilizados para expresar las operaciones b\u00e1sicas en los programas  \n \na) Operadores aritm\u00e9ticos  \n Se utilizan para escribir expresiones aritm\u00e9ticas. Tambi\u00e9n se pueden usar los par\u00e9ntesis  ( ) \npara definir el orden de las operaciones . El resultado es un valor aritm\u00e9tico.  \n \nOperaci\u00f3n  S\u00edmbolo Python  \n  Suma  + \n  Resta  - \n  Multiplicaci\u00f3n  * \n  Divisi\u00f3n real  / \n  Potenciaci\u00f3n  ** \nPython Programaci\u00f3n", "start_char_idx": 1325, "end_char_idx": 2041, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "375645bf-a8fd-4caf-a1ed-a3f5566620ab": {"__data__": {"id_": "375645bf-a8fd-4caf-a1ed-a3f5566620ab", "embedding": null, "metadata": {"page_label": "60", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5bf1b37-19c9-40a6-a086-7faff7a0e505", "node_type": "4", "metadata": {"page_label": "60", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6afa941c24c1960ee775dbf7a9497c6f646b9483a9e078a17c4930866984c542", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e88878d-e413-473d-aeca-e4de18d50af2", "node_type": "1", "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cb8485e03c3ab9900a7f339813e25045f054a64e636d6e81946c216bfafef197", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b73da78c-f9be-4fc3-b68a-0fb8c4fc2e6e", "node_type": "1", "metadata": {}, "hash": "e2fcba3cee08f8dda441e7713af2b96bbef299624a27a5e8906bfaafb650ab61", "class_name": "RelatedNodeInfo"}}, "hash": "9a33acd05c0a2253542f5d8b293ff003bb7b63ab05e374ffb819e1a14b933c8e", "text": "60 \n \nEjemplos . (a+2)3   traducci\u00f3n al lenguaje Python:   (a+2)**3     \n \n  a5\nb1+\n\u2212  traducci\u00f3n al lenguaje Python:   (a+5)/(b- 1)  \n \nb) Operadores relacionales  \n \nEstos  s\u00edmbolos se u san para comparar valores. El resultado de esta comparaci\u00f3n es un \nvalor l\u00f3gico : True  o  False.  \n \nMatem\u00e1ticas  S\u00edmbolo Python  \n< < \n> >   \n\u2264 <=   \n\u2265 >=   \n= ==  \n\u2260 != \n \nEjemplo.  x <= 5   \n El resultado ser\u00e1  True   si el contenido de  x  es menor o igual que 5 , caso contrario, ser\u00e1  \nFalse  \n \nc)  Conectores l\u00f3gicos  \n Estos  s\u00edmbolos se utilizan para construir expresiones l\u00f3gicas . El resultado es un valor \nl\u00f3gico  True  o  False.  \n \nMatem\u00e1ticas  S\u00edmbolo Python  \n   Conjunci\u00f3n:      \u2227             and    \n   Disyunci\u00f3n:      \u2228                 or         \n   Negaci\u00f3n:         \uf8f9                not   \n  \nEjemplo.    x < 5  and  t > 2    \n \nDependiendo de  x  y  t   el resultado ser\u00e1 True o  False  \n  \n   \nd) Precedencia de operadores \n \nSi en una expresi\u00f3n hay operadores de diferente tip o, primero se eval\u00faan l as operaciones \naritm\u00e9ticas, luego l as operaciones  relacionales y finalmente l as operaciones  l\u00f3gic as. \n \nLos par\u00e9ntesis  ( ) se pueden usar para definir con claridad la precedencia de las \noperaciones.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b73da78c-f9be-4fc3-b68a-0fb8c4fc2e6e": {"__data__": {"id_": "b73da78c-f9be-4fc3-b68a-0fb8c4fc2e6e", "embedding": null, "metadata": {"page_label": "61", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "58e7945b-8d0f-4633-ae74-b6233b8bc542", "node_type": "4", "metadata": {"page_label": "61", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a113ee930bdd72580c06c53215b42848e31e141dfd6555d6a734fd503fbfe12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "375645bf-a8fd-4caf-a1ed-a3f5566620ab", "node_type": "1", "metadata": {"page_label": "60", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a33acd05c0a2253542f5d8b293ff003bb7b63ab05e374ffb819e1a14b933c8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0524568d-9d91-483f-b111-59730ea46463", "node_type": "1", "metadata": {}, "hash": "286e1a59d8286d76bf0cd445c4122dc7c693fe2fd69d94ccf9e9da57c4f4da8c", "class_name": "RelatedNodeInfo"}}, "hash": "e2fcba3cee08f8dda441e7713af2b96bbef299624a27a5e8906bfaafb650ab61", "text": "61 \n \nc)  Operadores especiales \n \nExisten  otros operadores. Aqu\u00ec incluimos dos  operador es de uso frecuente  en Python  \n  Operador de inclusi\u00f3n  \n  e  in  c \n e  not in  c \n \nEste operador detecta si un elemento  e  pertenece o no a una colecci\u00f3n de datos   c. Las \ncolecciones de datos ser\u00e1n revisadas  en una secci\u00f3n posterior . Una cadena o string es \nuna colecci\u00f3n de datos. El resultado de esta operaci\u00f3n es un valor l\u00f3gico: True o False \n \nEjemplo:     \n \n>>> 'm'  in  'programa'     El resultado es   True  \n \nEl s\u00edmbolo  >>>  es la marca de Python en pantalla que ind ica al usuario que ingrese una \ninstrucci\u00f3n  \n \nOperador de concatenaci\u00f3n  \n \nEl operador  aritm\u00e9tico   \n+  tambi\u00e9n se puede usar como operador  para concatenar \ncolecciones de datos . Ejemplo. una cadena o string es una colecci\u00f3n de datos. Si se \nconcatenan cadenas, el  resultado ser\u00e1 una cadena compuesta por ambas caden as. \n \nEjemplo.  \n \n>>> x='Mate'     El s\u00edmbolo  >>>   es la marca de Python  en pantalla  \n>>> y='m\u00e1tica'    que indica al usuario que ingrese una instrucci\u00f3n \n>>> z=x+y  \n>>> z     Al escribir la variable se muestra el contenido \n'Matem\u00e1tica'     El resultado es una cadena concatenada  \n>>> z='La '+z    Puede usarse en forma recurrente  \n>>> z \n'La Matem\u00e1tica'  \n >>> r='e' in  z \n>>> r \nTrue \n \nNota s:  Los \u00e1ngulos   >>>  al inicio de cada l\u00ednea los muestra el lenguaje Python cuando s e \nlo usa interactivamente. Esta interacci\u00f3n se describir\u00e1 en detalle posteriormente.  \n \nEl s\u00edmbolo =  es la operaci\u00f3n de asignaci\u00f3n  de valores a variables en el lenguaje Python . \nEstas operaciones se describir\u00e1n en detalle en otra secci\u00f3n.  \n \nLos colores aparecen autom\u00e1ticamente al escribir instrucciones en la ventana de Python\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0524568d-9d91-483f-b111-59730ea46463": {"__data__": {"id_": "0524568d-9d91-483f-b111-59730ea46463", "embedding": null, "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ece548c-1254-4652-a107-98fd697ab686", "node_type": "4", "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c4707605bea00a5b10ef3389333e149f56bb8935b2da2e569af22ffddbebc03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b73da78c-f9be-4fc3-b68a-0fb8c4fc2e6e", "node_type": "1", "metadata": {"page_label": "61", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2fcba3cee08f8dda441e7713af2b96bbef299624a27a5e8906bfaafb650ab61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "442c090e-2e35-4ffe-b5cf-6d270a1e9d2f", "node_type": "1", "metadata": {}, "hash": "2363468f9e5bc543318e4a8f4889a3f866037996714f1466f63cf2d1b5cb03dd", "class_name": "RelatedNodeInfo"}}, "hash": "286e1a59d8286d76bf0cd445c4122dc7c693fe2fd69d94ccf9e9da57c4f4da8c", "text": "62 \n \n5.6.4 Conversi \u00f3n entre tipos de datos  \n \nSiempre que el contenido sea compatible,  se puede convertir entre tipos de datos  \nmediante un a especificaci\u00f3n correspondiente al tipo de datos requeri do.  \n \nEjemplos.", "start_char_idx": 0, "end_char_idx": 220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "442c090e-2e35-4ffe-b5cf-6d270a1e9d2f": {"__data__": {"id_": "442c090e-2e35-4ffe-b5cf-6d270a1e9d2f", "embedding": null, "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ece548c-1254-4652-a107-98fd697ab686", "node_type": "4", "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c4707605bea00a5b10ef3389333e149f56bb8935b2da2e569af22ffddbebc03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0524568d-9d91-483f-b111-59730ea46463", "node_type": "1", "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "286e1a59d8286d76bf0cd445c4122dc7c693fe2fd69d94ccf9e9da57c4f4da8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "face4fca-aa51-4a08-8c44-3a7bb8d6cb11", "node_type": "1", "metadata": {}, "hash": "89996a13a7ef7d588a6227b8c88452c27414c3f5285c60d6dbca984369821b12", "class_name": "RelatedNodeInfo"}}, "hash": "2363468f9e5bc543318e4a8f4889a3f866037996714f1466f63cf2d1b5cb03dd", "text": "Ejemplos.  \n \n         Asignaci\u00f3n         Resultado        Tipo del resultado  \n \n  >>> a=73   73  Entero  \n  >>>  b=float(a)   73.0   Real \n  >>>  c=str(a)   '73'   Cadena  \n \n  >>>  d=73.5   73.5   Real \n  >>> e=int(d)   73  Entero  \n \n  >>>  s='125'  '125'   Cadena  \n  >>>  g=int(s)  125  Entero  \n \n  >>>  s='125.7'   '125.7' Cadena  \n  >>>  r=float(s)   125.7  Real \n  >>>  t=int(s)     Error de conversi\u00f3n \n \n  >>>  s='n728'  'n728'  Cadena  \n  >>>  t=int(s)    Error de conversi\u00f3n \n \n  >>>  x=5   5  Entero   \n  >>>  z=complex(x)   (5+0j)  Complejo  \n \n  >>>  u=2+3j   (2+3j)  Complejo  \n  >>> a=u.real   2.0  Real (Componente real de u ) \n  >>>  b=u.imag   3.0  Real ( Componente imaginario de u)  \n  >>>  y=float(u)     Error de conversi\u00f3n \n \n  >>>  s='2+3j'  '2+3j'  Cadena  \n  >>>  z=complex(s)   (2+3j)   Complejo  \n  >>>  t=2<3   True  L\u00f3gico \n \n  >>>  a=75   75  Entero  \n  >>>  b=chr(a)   'K'  Car\u00e1cter cuy o c\u00f3digo entero (ASCII)  es 75 \n   >>>  c='R'   'R'  Car\u00e1cter \n  >>>  d=ord(c)   82  C\u00f3digo enter o que representa el car\u00e1cter  'R' \n  \nLos colores en los ejemplos son para resaltar y distinguir l os nombres de Python.", "start_char_idx": 211, "end_char_idx": 1352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "face4fca-aa51-4a08-8c44-3a7bb8d6cb11": {"__data__": {"id_": "face4fca-aa51-4a08-8c44-3a7bb8d6cb11", "embedding": null, "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ece548c-1254-4652-a107-98fd697ab686", "node_type": "4", "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c4707605bea00a5b10ef3389333e149f56bb8935b2da2e569af22ffddbebc03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "442c090e-2e35-4ffe-b5cf-6d270a1e9d2f", "node_type": "1", "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2363468f9e5bc543318e4a8f4889a3f866037996714f1466f63cf2d1b5cb03dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b49fdc0-2932-4245-ab5b-7b38ae02e492", "node_type": "1", "metadata": {}, "hash": "25a6fb50b5e7d1519a2a7dd7bbb383d09240a5e013cad7222e4f1df854dcf875", "class_name": "RelatedNodeInfo"}}, "hash": "89996a13a7ef7d588a6227b8c88452c27414c3f5285c60d6dbca984369821b12", "text": "Estos \ncolores aparecen autom\u00e1ticamente al escribir expresiones en la ventana de Python.  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1354, "end_char_idx": 1468, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b49fdc0-2932-4245-ab5b-7b38ae02e492": {"__data__": {"id_": "3b49fdc0-2932-4245-ab5b-7b38ae02e492", "embedding": null, "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3aa2928-76eb-44ee-b6f3-a85d58cb7520", "node_type": "4", "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a364245867cf986325558782971d62f19f81df5d28375ceb872691d328b77f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "face4fca-aa51-4a08-8c44-3a7bb8d6cb11", "node_type": "1", "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "89996a13a7ef7d588a6227b8c88452c27414c3f5285c60d6dbca984369821b12", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44635f82-708b-4ccc-8e97-a43e73ef488d", "node_type": "1", "metadata": {}, "hash": "0fd903ef259f32bedfd753fcef619073f441db528630b4e117ca68b0e5598ce1", "class_name": "RelatedNodeInfo"}}, "hash": "25a6fb50b5e7d1519a2a7dd7bbb383d09240a5e013cad7222e4f1df854dcf875", "text": "63 \n \n5.6.5 Tipos num\u00e9ricos en otras bases  \n \n \nN\u00fameros en binario  (bin) \n Base:    2 \n S\u00edmbolos :  0,1 \n Formato:  0bdddd.....     (d\u00edgitos en binario)  \n Ejemplo:  0b1001101101  \n \nN\u00fameros en octal  (oct) \n Base:    8 \n S\u00edmbolos :  0,1,2,3,4,5,6,7  \n Formato:  0odddd.....     (d\u00edgitos en octal)  \n Ejemplo:  0o2536174  \n \nN\u00fameros en hexadecimal   (hex) \n Base:    16 \n S\u00edmbolos :  0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f  \n Formato:  0xdddd.....     (d\u00edgitos en hexadecimal)  \n Ejemplo:  0x36a7d0a 9 \n \nSe puede operar con n\u00fameros de diferente base. Python muestra el resultado en formato \ndecimal .  \n \nEjemplo.  Sumar n\u00fameros con diferente base   \n \n>>> 7352 + 0o123 + 0x2ac4 + 0b10011 \n18402 \n \nSe puede convertir de decimal a otra base con las funciones de conversi\u00f3n de tipo:  \n \n         Asignaci\u00f3n     Resultado        Tipo del resultado  \n \n  >>>  n=93    \n  >>>  q=bin(n) '0b1011101'       C adena con la representaci\u00f3n en binario de 93 \n  >>> r=oct(n) '0o135'       C adena con la representaci\u00f3n octal  de 93 \n  >>>  s=hex(n) '0x5d'             C adena con la representaci\u00f3n hexadecimal  de 93 \n \n \nLa conversi\u00f3n de binario, octal o hexadecimal a decimal  es autom\u00e1tica. No se requiere \naplicar la funci\u00f3n de conversi\u00f3n de tipo:  \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 1248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44635f82-708b-4ccc-8e97-a43e73ef488d": {"__data__": {"id_": "44635f82-708b-4ccc-8e97-a43e73ef488d", "embedding": null, "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3aa2928-76eb-44ee-b6f3-a85d58cb7520", "node_type": "4", "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a364245867cf986325558782971d62f19f81df5d28375ceb872691d328b77f1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b49fdc0-2932-4245-ab5b-7b38ae02e492", "node_type": "1", "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "25a6fb50b5e7d1519a2a7dd7bbb383d09240a5e013cad7222e4f1df854dcf875", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "675c4e9f-1a58-46ee-ac8c-2d430c58e7a9", "node_type": "1", "metadata": {}, "hash": "e79dd98ea542a79162188d3c0c23bcf3d396933d248e0ef7475556b93e9145d8", "class_name": "RelatedNodeInfo"}}, "hash": "0fd903ef259f32bedfd753fcef619073f441db528630b4e117ca68b0e5598ce1", "text": ">>> u=0b1011101  \n>>> u \n93 \n >>> u=int(0b1011101)         La conversi\u00f3n de tipo no es necesaria \n>>> u \n93 \nPython Programaci\u00f3n", "start_char_idx": 1253, "end_char_idx": 1381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "675c4e9f-1a58-46ee-ac8c-2d430c58e7a9": {"__data__": {"id_": "675c4e9f-1a58-46ee-ac8c-2d430c58e7a9", "embedding": null, "metadata": {"page_label": "64", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d6c0ad75-a453-460a-b076-d7d6bbd05d77", "node_type": "4", "metadata": {"page_label": "64", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aec0e19c40aecf180b3330d7bae5b2c2cb6758dfc60dd45b1482781f99467503", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44635f82-708b-4ccc-8e97-a43e73ef488d", "node_type": "1", "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0fd903ef259f32bedfd753fcef619073f441db528630b4e117ca68b0e5598ce1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e7fdd825-2b50-447e-b170-6b4b22f4bbeb", "node_type": "1", "metadata": {}, "hash": "a5d4b308918f1914e0cded2e517933918f38fb1072de29fef18859574304dad5", "class_name": "RelatedNodeInfo"}}, "hash": "e79dd98ea542a79162188d3c0c23bcf3d396933d248e0ef7475556b93e9145d8", "text": "64 \n \n5.6.6 Uso de m\u00f3dulos especiales \n \nLos algoritmos escritos en el lenguaje Python se denominan programas o m\u00f3dulos. Estos \nm\u00f3dulos se almacenan con alg\u00fan nombre en a lguna carpeta en el disco. Tambi\u00e9n existen \notros m\u00f3dulos especiales o librer\u00edas  que deben  cargarse para tener acceso a estos \nrecursos.    \n Algunos de estos m\u00f3dulos especiales se instalan desde el inicio en la librer\u00eda est\u00e1ndar del  \ntraductor Python. Otros se  los puede descargar de la red internet y otros pueden ser \ncreados por los propios usuarios.   \n \nPython incluye los operadores e instrucciones b\u00e1sicas pero si se necesitan funciones \nespeciales se debe cargar el m\u00f3dulo o librer\u00eda  que las contiene con la sigui ente sintaxis:  \n \n  >>> from  m\u00f3dulo  import  funci\u00f3n \n Las funciones matem\u00e1ticas comunes est\u00e1n en el m\u00f3dulo math .  \n \nEjemplo.  Si se desea usar la funci\u00f3n coseno , puede escribir:  \n \n  >>> from  math  import  cos \n \nPara cargar todas  las funciones del m\u00f3dulo math  debe es pecificarse con un asterisco:  \n \n  >>> from  math  import*  \n \nEjemplo. Asignar a  x  el logaritmo  natural  de \n3 \n \n  >>> x=log(sqrt(3))  \n Otro formato para importar un m\u00f3dulo usa la siguiente especificaci\u00f3n:  \n \n  >>> import  m\u00f3dulo  \n En este caso las funciones inclu \u00eddas en el m\u00f3dulo deben referenciarse con la notaci\u00f3n:  \n   >>> m\u00f3dulo.funci\u00f3n  \n \nEjemplo.  Importar el m\u00f3dulo math  \n \n  >>> import  math  \n \nAsignar a  x   el logaritmo de \n3 \n \n  >>> x=math.log(math.sqrt(3))  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e7fdd825-2b50-447e-b170-6b4b22f4bbeb": {"__data__": {"id_": "e7fdd825-2b50-447e-b170-6b4b22f4bbeb", "embedding": null, "metadata": {"page_label": "65", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ad8b4cd-1c5a-4203-b5b2-62adb83bfbc3", "node_type": "4", "metadata": {"page_label": "65", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb44ca890bb76c90ea300020274e226c268893ff7faca9fd39c937942f14101f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "675c4e9f-1a58-46ee-ac8c-2d430c58e7a9", "node_type": "1", "metadata": {"page_label": "64", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e79dd98ea542a79162188d3c0c23bcf3d396933d248e0ef7475556b93e9145d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3171e51-1b86-43fe-8a82-8cf190483158", "node_type": "1", "metadata": {}, "hash": "31c614223007d306703489fc20fdd62f7d0f9e27614dd4ffa48f9ca5352c9def", "class_name": "RelatedNodeInfo"}}, "hash": "a5d4b308918f1914e0cded2e517933918f38fb1072de29fef18859574304dad5", "text": "65 \n \nSe puede importar un m\u00f3dulo para usarlo con otro nombre \n \nEjemplo. Importar el m\u00f3dulo math para usarlo con el nombre mt \n \n  >>> import math as mt \n \nAsignar a  x   el logaritmo de 3 \n \n  >>> x=mt.log(mt.sqrt(3))  \n \nUn m\u00f3dulo para acceder al reloj : time  \n \nEjemplo.  Mostrar la fecha y hora actual format eadas  \n \n  >>> from time import* \n  >>> asctime()  \n'Fri Jul 12 15:38:25 2014 ' \n \nEjemplo.  Registrar  el tiempo de ejecuci\u00f3n de un proceso \n \n  >>> from time import* \n  >>> a=clock()  \n \n(Proceso)  \n \n  >>> b=clock() \n \nLa diferencia  b -a  ser\u00e1 el tiempo de ejecuci\u00f3n del proceso en segundos.  \n  \n5.6.7  El sistema de ayuda \n \nPython incluye un sistema de ayuda en l\u00ednea con la sintaxis : \n   >>> help('item')  \n \nEn donde \u2018item\u2019 representa el tema para el que se solicita ayuda:  \n \nEjemplo. Si desea conocer el nombre y uso de todas las funciones matem\u00e1ticas del \nm\u00f3dulo math  escribir : \n   \n  >>> help('math')  \n \nEjemplo. Si desea conocer informaci\u00f3n del tipo de datos  int escribir : \n   >>> help('int')  \n \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1056, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3171e51-1b86-43fe-8a82-8cf190483158": {"__data__": {"id_": "f3171e51-1b86-43fe-8a82-8cf190483158", "embedding": null, "metadata": {"page_label": "66", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10532f87-49a0-423f-9cab-09016430586a", "node_type": "4", "metadata": {"page_label": "66", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b8b50fe53eef4bb5b82c61b2d6d703447baf1d89ff45d25e9c42f7d10c5397c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e7fdd825-2b50-447e-b170-6b4b22f4bbeb", "node_type": "1", "metadata": {"page_label": "65", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a5d4b308918f1914e0cded2e517933918f38fb1072de29fef18859574304dad5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "944487ef-5318-4366-aabb-62abcff6e39b", "node_type": "1", "metadata": {}, "hash": "99140046e55bc872bbc878a73818a35a8af2e15274f9538046b981fa51874069", "class_name": "RelatedNodeInfo"}}, "hash": "31c614223007d306703489fc20fdd62f7d0f9e27614dd4ffa48f9ca5352c9def", "text": "66 \n \n5.6.8 Documentaci\u00f3n en linea \n \nDesde la ventana de Python, s i presiona la tecla funcional  F1 se tiene acceso a la \ndocumentaci\u00f3n de Python incorporada en el S hell, incluyendo las caracter\u00edsticas de la \nversi\u00f3n instalada, tutorial de uso del lenguaje, la informaci\u00f3n fundamental de la librer\u00eda \nest\u00e1ndar de Python,  el manual de r eferencia del Lenguaje Python , etc. como aparece en la \npantalla:  \n \n \n \nSiguiendo las opciones que ofrecen el documento se puede llegar a un nivel de detalle fino \n \n \n5.6.9 Depuraci\u00f3n  de programas \n \nPython dispone de un dispositi vo de seguimiento y depuraci\u00f3n de programas. Para \nacceder a esta pantalla selecciones Debugger de la opci\u00f3n Debug de la barra del men\u00fa.  \n \n \n \nEl uso de estas opciones es \u00fatil para usuarios que enfrentan problemas complicados en el \ndesarrollo de programas co mplejos.\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "944487ef-5318-4366-aabb-62abcff6e39b": {"__data__": {"id_": "944487ef-5318-4366-aabb-62abcff6e39b", "embedding": null, "metadata": {"page_label": "67", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "390f0fb4-1688-4bd4-b240-a6816598cf6e", "node_type": "4", "metadata": {"page_label": "67", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1222d9233f399305b790db4592efadcbb551efacd186dbdeb3a58c692445f9c5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3171e51-1b86-43fe-8a82-8cf190483158", "node_type": "1", "metadata": {"page_label": "66", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31c614223007d306703489fc20fdd62f7d0f9e27614dd4ffa48f9ca5352c9def", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75291371-8dd7-404e-800b-d2892f33694c", "node_type": "1", "metadata": {}, "hash": "8b2d06e8e68ac97af33004cc2a9d52bb07808c4dedc92834fb568611162f430b", "class_name": "RelatedNodeInfo"}}, "hash": "99140046e55bc872bbc878a73818a35a8af2e15274f9538046b981fa51874069", "text": "67 \n \n5.6.10 Funciones del m \u00f3dulo math  \n \nEste m\u00f3dulo provee acceso a las funciones matem\u00e1t icas comunes:   \n \nLas funciones se muestran en el siguiente cuadro en orden alfab\u00e9tico:  \n \nNombre  Resultado  \nabs(x) Valor absoluto  \nacos(x) Arco coseno de x en radianes  \nacosh(x) Arco seno hiperb\u00f3lico  \nasin(x) Arco seno  \nasinh(x) Arco seno hiperb\u00f3lico  \natan(x) Arco tangente  \natanh(x) Arco tangente hiperb\u00f3lico  \nceil(x) Entero menor  \ncos(x) Coseno  trigonom\u00e9trico  de x en radianes  \ncosh(x) Coseno hiperb\u00f3lico  \ndegrees(x) Conv ersi\u00f3n de radianes a grados  \nerf(x) Funci\u00f3n error  \nexp(x) Funci\u00f3n exponencial  \nfabs(x) Valor absoluto de un real  \nfactorial (x) Factorial de un entero positrivo  \nfloor(x) Entero mayor  \ngamma(x) Funci\u00f3n Gamma  \nhypot(x,y) Distancia Euclideana  \nlog(x) Logaritm o natural  \nlog(x,b) Logaritmo de x, en base b  \nlog10(x) Logaritmo base 10  \nlog2(x) Logaritmo en base 2  \nmodf(x) Parte decimal y parte entera de x  \npow(x,y) x elevado a la potencia y  \nradians(x) Conversi\u00f3n de grados  a radianes  \nsin(x) Seno trigonom\u00e9trico  de x en radianes  \nsinh(x) Seno hiperb\u00f3lico  \nsqrt(x) Ra\u00edz cuadrada  \ntan(x) Tangente trigonom\u00e9trica  de x en radianes  \ntrunc(x) Truncamiento de decimales hacia 0  \ne Constante e = 2.718281828459045 ... \npi Constante \u03c0  = 3.141592653589793 ... \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75291371-8dd7-404e-800b-d2892f33694c": {"__data__": {"id_": "75291371-8dd7-404e-800b-d2892f33694c", "embedding": null, "metadata": {"page_label": "68", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6951bcaa-d353-4940-bd6a-c12d82a6760d", "node_type": "4", "metadata": {"page_label": "68", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "82eee973d9780778dccae1e8384e31c3f28d2ae388a382f051e3d85e71000a82", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "944487ef-5318-4366-aabb-62abcff6e39b", "node_type": "1", "metadata": {"page_label": "67", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "99140046e55bc872bbc878a73818a35a8af2e15274f9538046b981fa51874069", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "185869b5-a10c-4e9f-b13a-23d09a80dec2", "node_type": "1", "metadata": {}, "hash": "af556027e3370d47a1e79b48c12107d22f3b1d6cbad04e67c29ae13cf191892a", "class_name": "RelatedNodeInfo"}}, "hash": "8b2d06e8e68ac97af33004cc2a9d52bb07808c4dedc92834fb568611162f430b", "text": "68 \n \n5.6.11 Traducci\u00f3 n de expresiones \n \nEn esta secci\u00f3n se realiza una pr\u00e1ctica de escritura de expresiones en la notaci\u00f3n Python  \n \n \nEjemplo. Traduzca al lenguaje Python la expresi\u00f3n  aritm\u00e9tica : \n \n0.75\n232\ne1\u2212 \n \nTraducci\u00f3n : \n \n  >>> from math import*                        Las funciones matem\u00e1ticas est\u00e1n  math  \n  >>> 3**0.75*sqrt(2)/(exp(2)- 1)                El resultado ser\u00e1 un n\u00famero real \n \n \nEjemplo. Traduzca al lenguaje Python la expresi\u00f3n  l\u00f3gica : \n \n a \u2264 2 \u2227 b \u2260 3  \n \nTraducci\u00f3n : \n \n  >>> a<=2 and b!=3        El resultado ser\u00e1 un valor l\u00f3gico (True o  False ) \n  \n \n \n5.6.12  Ejercicios  de traducci\u00f3n de expresiones    \n \nTraduzca al lenguaje  Python cada expresi\u00f3n.  \n \n1)   3tan(x )  \n \n2)   3cos( 0.2) 3\ntan( 2 2) 0.2\u03c0+ \u2212\n\u2212+ \n \n3)   221\nsen(2) 0.12x1+\n\u2212+\u2212 \n \n4)   \uf8f9 ( b < 5 \u2228 c = 0 ) \n \n5)   ( a < b ) \u21d2 ( c = 5 )    Sugerencia:  Use la equivalencia l\u00f3gica   p\u21d2q \u2261\uf8f9p\u2228q \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 927, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "185869b5-a10c-4e9f-b13a-23d09a80dec2": {"__data__": {"id_": "185869b5-a10c-4e9f-b13a-23d09a80dec2", "embedding": null, "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d69e80c-d1b2-4f08-bda2-d46dfd02913f", "node_type": "4", "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d0618a2bd74e356edf6af997732758fc764b71ba5cc74c8db205058e7da13770", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75291371-8dd7-404e-800b-d2892f33694c", "node_type": "1", "metadata": {"page_label": "68", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8b2d06e8e68ac97af33004cc2a9d52bb07808c4dedc92834fb568611162f430b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19fe51b2-7161-4148-a8f0-74a157acf1cf", "node_type": "1", "metadata": {}, "hash": "3eff318ef00460290122d2edd9a18b0120b21f9505db7aaf78bc16cba24b115e", "class_name": "RelatedNodeInfo"}}, "hash": "af556027e3370d47a1e79b48c12107d22f3b1d6cbad04e67c29ae13cf191892a", "text": "69 \n \n5.6.13  Un ejemplo introductorio  desarrollado en modo interactivo  \n \nPara iniciar el aprendizaje del lenguaje Python  en esta secci\u00f3n se desarrolla un ejemplo en \nforma interactiva en la ventana principal o shell.  Se recomienda que el usuario realice \nesta pr\u00e1ctica en la computadora.   \n El mismo ejemplo se lo resolver\u00e1 posteriormente escribiendo un progra ma en una ventana \nde edici\u00f3n de Python. Esta pr\u00e1ctica permitir\u00e1 resaltar las diferencias entre el modo \ninteractivo y  el modo de programaci\u00f3n .  \n \nEjemplo.  Describir  un algoritmo para calcular el \u00e1rea de un tri\u00e1ngulo cuyos lados son:  \n     5, 6,  y 8 \n \nAlgoritm o: \u00c1rea de un tri\u00e1ngulo conocidos sus lados  \n \nVariables  \n a, b, c:  Lados del tri\u00e1ngulo  (Datos conocidos :  5, 6, y 8) \n s:  \u00c1rea del tri\u00e1ngulo  (Es el resultado esperado)  \n t: Semiper\u00edmetro   (Valor usado para la f\u00f3rmula del \u00e1rea  \n \ns t(t a)(t b)(t c)=\u2212\u2212\u2212 ,   (F\u00f3rmula del \u00e1rea del tri\u00e1ngulo)  \nsiendo  t = (a + b + c)/2  \n \nDiagrama de flujo  \n \n   \n \n     \n                      a \u2190 5        \n             b \u2190 6   \n  c \u2190 8 \n  t \u2190 (a + b + c)/2  \n  s \u2190t(t a)(t b)(t c)\u2212\u2212\u2212    \n   \n \n                         s     \n \n \n \n \n Soluci\u00f3n en modo interactivo en la ventana principal  o shell de P ython  \n \nPresion e el \u00edcono de Python e ingrese a la ventana principal o Shell. En el borde superior \nse muestra un men\u00fa de opciones. Tambi\u00e9n se despliega alguna informaci\u00f3n de la versi\u00f3n \ndel progr ama que est\u00e1 siendo utilizado.  Al inicio de las siguientes l\u00edneas Python muestra  \nun aviso para que el usuario escriba  cada instrucci\u00f3n .", "start_char_idx": 0, "end_char_idx": 1575, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19fe51b2-7161-4148-a8f0-74a157acf1cf": {"__data__": {"id_": "19fe51b2-7161-4148-a8f0-74a157acf1cf", "embedding": null, "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d69e80c-d1b2-4f08-bda2-d46dfd02913f", "node_type": "4", "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d0618a2bd74e356edf6af997732758fc764b71ba5cc74c8db205058e7da13770", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "185869b5-a10c-4e9f-b13a-23d09a80dec2", "node_type": "1", "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "af556027e3370d47a1e79b48c12107d22f3b1d6cbad04e67c29ae13cf191892a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2f8da47-8256-4500-9f96-5d747cb6b966", "node_type": "1", "metadata": {}, "hash": "f3257aebbd586812a90d853a42b6ac505ca5054e41b672e52c328b69b3645d5f", "class_name": "RelatedNodeInfo"}}, "hash": "3eff318ef00460290122d2edd9a18b0120b21f9505db7aaf78bc16cba24b115e", "text": "Este aviso son tres \u00e1ngulos:  >>>   \n \nEn esta ventana debe escribir  cada instrucci \u00f3n a la derecha del s\u00edmbolo >>>  Al fin al de \ncada l\u00ednea presione la tecla de ingreso. Siga el ejemplo que se muestra en el gr\u00e1fico a \ncontinuaci\u00f3n.  \nPython Programaci\u00f3n", "start_char_idx": 1576, "end_char_idx": 1832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2f8da47-8256-4500-9f96-5d747cb6b966": {"__data__": {"id_": "d2f8da47-8256-4500-9f96-5d747cb6b966", "embedding": null, "metadata": {"page_label": "70", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79237b01-ea9b-4ae7-bcf0-1f92ff441c6a", "node_type": "4", "metadata": {"page_label": "70", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0ace67f778649c417d4fcea5c15cdee09117bf378227961223b7e6eaeadb9046", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19fe51b2-7161-4148-a8f0-74a157acf1cf", "node_type": "1", "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3eff318ef00460290122d2edd9a18b0120b21f9505db7aaf78bc16cba24b115e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ffbc115-6106-4d68-a0e7-cf4611b24444", "node_type": "1", "metadata": {}, "hash": "d70ad7505affac0cbd5ccdf70ea444309de4ad092465e26efc19dcc1391acf38", "class_name": "RelatedNodeInfo"}}, "hash": "f3257aebbd586812a90d853a42b6ac505ca5054e41b672e52c328b69b3645d5f", "text": "70 \n \nEn esta ventana se ingresan las instrucciones las cuales son interpretadas y ejecutadas \ninmediatamente en forma parecida a una calculadora.  \n \nPara conocer el contenido de las variables se debe escribir el nombre de la variable.   \n \n      \n  \n       \nLa figura anterior es tomada de la interacci\u00f3n real con el lenguaje Python. Los colores son \nasignados  autom\u00e1ticament al escribir las instrucciones  pero puede n personalizarse, \nigualmente  el tipo y tama\u00f1o de las letras , el tama\u00f1o inicial de la ventana, la tabulaci\u00f3n, etc.  \nPuede hacerlo seleccionando la opci\u00f3n Configure IDLE de Options  en el men\u00fa de la \nventana principal.  \n  \n \n5.6.14  Pr\u00e1ctica computacional  en la ventana interactiva  \n \nPara afirmar el conocimiento adquirido se realizar\u00e1 una pr\u00e1ctica en la pantalla interactiva \nde Python resolviendo problemas b\u00e1sicos. Esta es la pantalla principal o shell . \n Ejemplo.    Resuelva el siguiente ejercicio en la ventana interac tiva de Python  \n \nSi se conoce que el \u00e1rea de un cuadrado es  40 m2, encuentre el valor de la diagonal  \n \nFormulaci\u00f3n   a:   Longitud del lado del cuadrado  \n    d:   Longitud de la diagonal    \n             a       d \n       a2 = 40    \u21d2 a 40=   (Dato del \u00e1rea)  \n             d2 = 2 a2  \u21d2 d a2=     (Teorema de Pit\u00e1goras)       \n                   \nEn la ventana principal de Python se escriben l as instrucciones respectivas:  \n \n>>> from math import*   \n>>> a=sqrt(40)  \n>>> d=a*sqrt(2)  \n>>> d \n8.94427190999916  \n \nAl escribir la variable  d   se muestra el resultado calculado . \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ffbc115-6106-4d68-a0e7-cf4611b24444": {"__data__": {"id_": "4ffbc115-6106-4d68-a0e7-cf4611b24444", "embedding": null, "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22bd62d2-7cd4-412c-a1de-00580193dd64", "node_type": "4", "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "063db3e83b19fd15c81cc45fde04cf840af673e08884d12e5724ab24ac401898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2f8da47-8256-4500-9f96-5d747cb6b966", "node_type": "1", "metadata": {"page_label": "70", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f3257aebbd586812a90d853a42b6ac505ca5054e41b672e52c328b69b3645d5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7444215-0971-4435-af37-fb4de5951160", "node_type": "1", "metadata": {}, "hash": "f7edaf7aed910d250a1aee627fbcda664b145254803c5619a78d8eed59fee9e2", "class_name": "RelatedNodeInfo"}}, "hash": "d70ad7505affac0cbd5ccdf70ea444309de4ad092465e26efc19dcc1391acf38", "text": "71 \n \n5.6.15  Ejercicios  de resoluci\u00f3n de problemas en la ventana interactiva   \n \nPara cada ejercicio escriba la formulaci\u00f3n  necesaria. Despu\u00e9s escriba las instrucciones en \nla ventana principal o shell de Python y obtenga la respuesta.  \n 1)   Calcule el volumen y el \u00e1rea total de un cilindro de radio 5 metros y altura 4 metros \n \n2)  Calcule el \u00e1rea de un tri\u00e1ngulo rect\u00e1ngulo cuyos diagonal mide 5  cm. y tiene un \u00e1ngulo \ninterno de 40 grados.  \n \n3)   El costo mensual c en d\u00f3lares al fabricar una cantidad  x  de art\u00edculos est\u00e1 dado por:  \nc = 50 + 2x, mientras que el ingreso por la venta de x  art\u00edculos est\u00e1 dada por: v  = 2.4x   \na) Calcule la ganancia que se obtendr\u00e1 al fabricar y vender  400 art\u00edculos  \nb) Determine cuantos art\u00edculos deben fabricarse y venderse para que el ingreso iguale          a los gastos  \n \n4)  Un modelo de crecimiento poblacional est\u00e1 dado por f(t) = kt + 2e\n0.1t, siendo k  una \nconstante que  debe determinarse y  t  es tiempo en a\u00f1os. Se conoce que f(10)=50.   \nDetermine la poblaci\u00f3n en  el a\u00f1o 25  \n 5) Un ingeniero desea tener una cantidad de  d\u00f3lares acumulada en su cuenta de ahorros \npara su retiro luego de una cantidad de a\u00f1os de trabajo. Para este objetivo planea \ndepositar un valor mensualmente.", "start_char_idx": 0, "end_char_idx": 1253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7444215-0971-4435-af37-fb4de5951160": {"__data__": {"id_": "c7444215-0971-4435-af37-fb4de5951160", "embedding": null, "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22bd62d2-7cd4-412c-a1de-00580193dd64", "node_type": "4", "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "063db3e83b19fd15c81cc45fde04cf840af673e08884d12e5724ab24ac401898", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ffbc115-6106-4d68-a0e7-cf4611b24444", "node_type": "1", "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d70ad7505affac0cbd5ccdf70ea444309de4ad092465e26efc19dcc1391acf38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "213a415a-a276-47d0-ac38-30f47c83f033", "node_type": "1", "metadata": {}, "hash": "c0cd82950423508e7b8e4838ed84e6abab9ea7688461fe64dc4b5990b7e19cab", "class_name": "RelatedNodeInfo"}}, "hash": "f7edaf7aed910d250a1aee627fbcda664b145254803c5619a78d8eed59fee9e2", "text": "Para este objetivo planea \ndepositar un valor mensualmente. Suponga que el banco acumula el capital mensualmente \nmediante la siguiente f\u00f3rmula:  \n       n(1 x) 1apx\uf8ee\uf8f9+\u2212=\uf8ef\uf8fa\n\uf8f0\uf8fb \na:  valor acumulado luego de n  dep\u00f3sitos mensuales  \np:  valor de cada dep\u00f3sito mensual  \nx: valor nominal del inter \u00e9s mensual  \nn: n\u00famero de dep\u00f3sitos mensuales realizados  \na) Calcule el valor acumulado en 15 a\u00f1os depositando mensualmente cuotas de 300 con un inter\u00e9s anual  de 0.04  \nb) Determine el valor de la cuota que debe depositar mensualmente si desea reunir 200000 en 20 a\u00f1os suponiendo que el  inter\u00e9s anual  es 0.04 \nc) Determine cuantos dep\u00f3sitos mensuales de 400 debe realizar para reunir 250000 con \nuna tasa de inter\u00e9s anual de 0.04  \n \n6) El siguiente ejemplo describe un procedimiento matem\u00e1tico para multiplicar dos \nn\u00fameros enteros con valores entre 1 y 1000.  \n \nSean los n\u00fameros 997 y 991. Se desea conocer su producto:  \n \nObtenga los resultados de las restas:    1000- 997 = 3,  1000- 991 = 9 \nSume los resultados de las restas:    3 + 9 = 12  \nReste de 1000 el resultado de la suma:   1000-12 = 988 \nMultiplique este resultado por 1000:    988x1000 = 988000  \nMultiplique los resultados de las restas  iniciales :   3x9 = 27 \nLa suma de los dos \u00faltimos resultados es el producto deseado:  988000+27 = 988027 \n \nPruebe este procedimiento con otros dos n\u00fameros enteros entre 1 y 1000  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1194, "end_char_idx": 2606, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "213a415a-a276-47d0-ac38-30f47c83f033": {"__data__": {"id_": "213a415a-a276-47d0-ac38-30f47c83f033", "embedding": null, "metadata": {"page_label": "72", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ab2dd62-e9a2-4d4c-9994-237ab61fed0f", "node_type": "4", "metadata": {"page_label": "72", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b45a43acc1bc624451446083b9c384c34e29bf1dd0b38cb1163a879afd9834e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7444215-0971-4435-af37-fb4de5951160", "node_type": "1", "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f7edaf7aed910d250a1aee627fbcda664b145254803c5619a78d8eed59fee9e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7a37cad-4bbd-49f5-b9ce-50ed92213738", "node_type": "1", "metadata": {}, "hash": "a9b4e8577dae47acb415d008257852a77ec301c22acbd38bdbd667020defa388", "class_name": "RelatedNodeInfo"}}, "hash": "c0cd82950423508e7b8e4838ed84e6abab9ea7688461fe64dc4b5990b7e19cab", "text": "72 \n \n5.7   Instrucciones b\u00e1sicas para programar  con Python \n \nEl modo interactivo de Python  facilita la obtenci\u00f3n inmediata de respuestas, pero si se  \nrequier e resolver un problema similar pero con datos diferentes, se tendr \u00edan que digitar \nnuevamente las instrucciones.  Es preferible que las instrucciones est\u00e9n almacenadas en un archivo con alg\u00fan nombre. Estos archivos  son los programas o m\u00f3dulos que se \nejecuta n para obtener la respuesta a los problemas . \n \nLas instrucciones de los programas se las escribe en otra pantalla que la designaremos \ncon el nombre de pantalla de edici\u00f3n. En esta pantalla se escriben las instrucciones sin la marca  >>>. Estas instrucciones no son ejecutadas a medida que se las escribe, como \nocurre en la venta na interactiva, pero se las puede ejecutar desde la ventana interactiva.  \n \nCada instrucci\u00f3n b\u00e1sica del lenguaje  Python  se describir\u00e1 relacion\u00e1ndol a con su \nequivalente  en la notaci\u00f3n algor\u00edtmic a desarrollada en un cap\u00edtulo anterior en este \ndocumento.  Los det alles de la sintaxis del lenguaje Python se los revisar\u00e1 en las siguientes \nsecciones.  \n \n5.7.1 Instrucci\u00f3n de a signaci\u00f3n  \n Esta instrucci\u00f3n se usa para definir  variables y asignar un  valor  a su contenido  \n \nSean  v  una variable y  r  un valor  \n \nNotaci\u00f3n algor\u00edt mica  \n \n   \n v \u2190 r    Asigna el valor  r  a la variable  v \n \n \nSeudo lenguaje  \n \nv \u2190 r \n \nLenguaje Python \n \n    v=r \n Ejemplo.   Asignaciones en el lenguaje de Python  \n \n   x=3 \n   y=2*x+1 \n 5.7.2 Asignaciones especiales  \n \na)  Asignaciones en la misma l\u00ednea. D eben separar se con punto y coma. Las asignaciones \nse realizan de izquierda a derecha.  \n \nEjemplo.  \n \n \n   x=3; t=x+2; n=4  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1715, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7a37cad-4bbd-49f5-b9ce-50ed92213738": {"__data__": {"id_": "c7a37cad-4bbd-49f5-b9ce-50ed92213738", "embedding": null, "metadata": {"page_label": "73", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fae9c19f-173d-425e-a5e3-21128e84eb04", "node_type": "4", "metadata": {"page_label": "73", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e49f6e4a933a8e7d9d45574261a1678c129ba15aa800917799e93a4042be2465", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "213a415a-a276-47d0-ac38-30f47c83f033", "node_type": "1", "metadata": {"page_label": "72", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c0cd82950423508e7b8e4838ed84e6abab9ea7688461fe64dc4b5990b7e19cab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3efcff1-54e3-4541-84c5-40cf7cf71496", "node_type": "1", "metadata": {}, "hash": "968fc8e84962281ad986cd2e6ae59f38cc22a2ed62da72d9919e31636de34851", "class_name": "RelatedNodeInfo"}}, "hash": "a9b4e8577dae47acb415d008257852a77ec301c22acbd38bdbd667020defa388", "text": "73 \n \nb)  Asignaci\u00f3n m\u00faltiple. Deben separarse con coma s. La asignaci\u00f3n se realiza en forma \ncorrespondiente, a cada variable, se asigna cada valor de izqui erda a derecha.  \n \nEjemplo.  \n \n   a,b,c=5,7,'saludo'  \n Es equivalente a  \n \n   a=5 \n   b=7 \n   c='saludo'  \n \nc)  Asigna ci\u00f3n a varias variables el mismo valor  \n  \nEjemplo.  \n \n   a=b=c=d=0  \n \nEs equivalente a  \n \n   a=0 \n   b=0 \n   c=0 \n   d=0 \n \nd)  Intercamb io del contenido de dos variables \n \nEjemplo.  \n \n   a=3 \n   b=5 \n   a,b=b,a    (a contendr\u00e1 5 y b contendr\u00e1 3) \n \nEs equivalente a  \n \n   a=3 \n   b=5 \n   x=a \n   a=b \n   b=x \n \ne)  Notaci\u00f3n abreviada para operar  y asignar   \n \nEjemplo.  \n \n   a=a+b \n \nSe puede escribir en forma abreviada  \n \n   a+=b \n Tambi\u00e9 n es aplicable a  las otras operaciones  aritm\u00e9tic as \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 811, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3efcff1-54e3-4541-84c5-40cf7cf71496": {"__data__": {"id_": "f3efcff1-54e3-4541-84c5-40cf7cf71496", "embedding": null, "metadata": {"page_label": "74", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16d2ae31-27ae-4464-b393-24ea2ca99a8c", "node_type": "4", "metadata": {"page_label": "74", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "88a263e46271c6cbbe2e222a9537d192406004b2c6d0ac4c1028211b289a0008", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7a37cad-4bbd-49f5-b9ce-50ed92213738", "node_type": "1", "metadata": {"page_label": "73", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a9b4e8577dae47acb415d008257852a77ec301c22acbd38bdbd667020defa388", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6055abb1-2af0-4cdf-a883-9bcf48a29d2d", "node_type": "1", "metadata": {}, "hash": "bf3edc59c326bbab0a0f0d1f01d3221d0fb1c9bd8842bdc724bf49d2bbad4d81", "class_name": "RelatedNodeInfo"}}, "hash": "968fc8e84962281ad986cd2e6ae59f38cc22a2ed62da72d9919e31636de34851", "text": "74 \n \n5.7.3 Instrucci\u00f3n para ingreso de datos  \n \nEsta instrucci\u00f3n se usa para describir la acci\u00f3n de ingresar alg\u00fan valor para una variable \ndesde fuera del algoritmo  cuando \u00e9 ste sea ejecutado. Esta instrucci\u00f3n permite que los \ndatos no requieran ser asignados  dentro  del algoritmo y as\u00ed pueda n realizarse pruebas con \ndiferentes datos sin tener que modificar las instrucciones  del programa.  \n  \nNotaci\u00f3n algor\u00edtmica  \n \n \n        v           Ingresar un valor para la variabl e v desde el teclado  \n \n \nSeudo lenguaje  \n \n Leer   v \n \n Lenguaje Python \n \n v=input('mensaje ') \n \nEsta instrucci\u00f3n puede incluir un mensaje que se mostrar\u00e1 al ejecutar el programa en la \nventana principal o shell para indicar que es el momento de ingresar el dato.   Este mensaje \npuede escribirse entre comillas simples o entre comillas dobles.  \n \nPython  recibe el valor ingresado como un dato de tipo texto . Si se desea asignar otro tipo \nde dato a este valor, es necesario aplicar una conversi\u00f3n de tipo:  \n \nPara convertir el texto recibido  a un valor entero:  \n \n  v=int(input('mensaje '))  \n \nPara convertir el texto recibido  a un valor decimal ( o de punto flotante):  \n \n  v=float( input('mensaje '))     \n \nEjemplos . \n \nIngresar un dato tipo texto \n \n s=input( 'Ingrese su nombre: ') \n \nIngrese un dato (n\u00famero entero) y convi\u00e9rtalo a tipo num\u00e9rico entero \n \n n=int(input('Ingrese la cantidad de hijos: ')) \n Ingrese un dato (n\u00famero entero o real ) y convi\u00e9rtalo al tipo num\u00e9rico real  \n \n p=float(input('Ingrese su peso en kg.: ' )) \n \nSi la conversi\u00f3n no puede h acerse, se producir\u00e1 un error  de conversi\u00f3n de tipo.\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1643, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6055abb1-2af0-4cdf-a883-9bcf48a29d2d": {"__data__": {"id_": "6055abb1-2af0-4cdf-a883-9bcf48a29d2d", "embedding": null, "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e68d3801-07c7-4186-aefa-43c158fa4bef", "node_type": "4", "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8c390f3613fd9341a546554465e6d681b6a6612188a0dd1879fd34150c2abcc0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3efcff1-54e3-4541-84c5-40cf7cf71496", "node_type": "1", "metadata": {"page_label": "74", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "968fc8e84962281ad986cd2e6ae59f38cc22a2ed62da72d9919e31636de34851", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "394ee71a-5ba4-4f81-9d9d-cf6063ff0146", "node_type": "1", "metadata": {}, "hash": "5fbbe6ceef5bdcf6c349465cb4e0638176cca28ab7a8d55eada12c6cd616f272", "class_name": "RelatedNodeInfo"}}, "hash": "bf3edc59c326bbab0a0f0d1f01d3221d0fb1c9bd8842bdc724bf49d2bbad4d81", "text": "75 \n \n5.7.4 Instrucci\u00f3n para salida de resultados \n \nEsta instrucci\u00f3n se usa para describir la acci\u00f3n de mostrar  mensajes o el contenido de \nresultados almacenados en variables.  Para mostrar el contenido de una v ariable se debe \nescribir el nombre de la variable.   \n \nNotaci\u00f3n algor\u00edtmica  \n \n        v          Mostrar  en la pantalla el contenido de la variable  v    \n \n \nSeudo lenguaje  \n \n Mostrar  v \n \nLenguaje Python \n \n print(v) \n \nSe pueden mostrar mensajes  entre comillas simp les o dobles junto al  contenido de una o \nm\u00e1s variables separ adas con comas.  La salida se despliega en la ventana principal o shell  \nde Python. En las primeras versiones de Python el uso de los par\u00e9ntesis era opcional.  \n \nEjemplos.    En los ejemplos se supond r\u00e1 que las variables contienen alg\u00fan valor  \n \n print(x)  \n print('El resultado es: ', x ) \nprint('El area es: ', s, ' E l volumen es: ', t )  \n \nSe pueden incluir algunos caracteres de control de salida. Si se desea un salto a la \nsiguiente l\u00ednea en pantalla  se deber\u00e1 escribir  '\\n' \n \nEjemplo.     \nprint('El area es: ', s, ' \\ nEl volumen es: ', t ) \n \nEspecificaciones de formato para  salida  \n \nOpcionalmente, l a instrucci\u00f3n print  puede incluir especificaciones de formato para mejorar \nla apariencia de los resultados que se m uestran en la pantalla. Una forma conocida de \nestas especificaciones requiere escribir las entre comillas precedidas con el s\u00edmbolo % \n \nAlgunas especificaciones de formato se escriben :   %cd, %c.pf, %cs, %c.pg \nEn donde  c, p  son el n\u00famero de columnas y n\u00famero de decimales  o d\u00edgitos \nrespectivamente, mientras que d , f, s, g se refieren en ese orden  a datos de tipo \nentero(decimal), real(flotante) , cadena(string) y en notaci\u00f3n de potencias de 10.", "start_char_idx": 0, "end_char_idx": 1754, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "394ee71a-5ba4-4f81-9d9d-cf6063ff0146": {"__data__": {"id_": "394ee71a-5ba4-4f81-9d9d-cf6063ff0146", "embedding": null, "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e68d3801-07c7-4186-aefa-43c158fa4bef", "node_type": "4", "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8c390f3613fd9341a546554465e6d681b6a6612188a0dd1879fd34150c2abcc0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6055abb1-2af0-4cdf-a883-9bcf48a29d2d", "node_type": "1", "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf3edc59c326bbab0a0f0d1f01d3221d0fb1c9bd8842bdc724bf49d2bbad4d81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d17adbe1-9097-4c41-b185-60784484a701", "node_type": "1", "metadata": {}, "hash": "5ea997e57c15bcb7482ca82ae8ae43a2375097b822dbda1c5d2b0f6f7161ca3f", "class_name": "RelatedNodeInfo"}}, "hash": "5fbbe6ceef5bdcf6c349465cb4e0638176cca28ab7a8d55eada12c6cd616f272", "text": "Ejemplos.  \nn=23 \nx=7.78925  \ne='ESPOL'  \nu=4.5**12  \nprint('Prueba %5d%8.2f%10s%12.5g'%(n,x,e,u))    \nPrueba    23    7.79     ESPOL  6.8953e+07       resultados formateados   \nPython Programaci\u00f3n", "start_char_idx": 1761, "end_char_idx": 1958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d17adbe1-9097-4c41-b185-60784484a701": {"__data__": {"id_": "d17adbe1-9097-4c41-b185-60784484a701", "embedding": null, "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91616269-f156-4b41-83b6-334cb740ba00", "node_type": "4", "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a0913a923f5114650416c9bec6042e13bf47306fbf1d0b9dca65635dfcbea2ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "394ee71a-5ba4-4f81-9d9d-cf6063ff0146", "node_type": "1", "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5fbbe6ceef5bdcf6c349465cb4e0638176cca28ab7a8d55eada12c6cd616f272", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42cc9faa-6b16-4858-83cd-054778b257ce", "node_type": "1", "metadata": {}, "hash": "86b6bcd91965108b0ce3833c8044ce1d799cfddebc6d7e0ebd88940fb0c72b29", "class_name": "RelatedNodeInfo"}}, "hash": "5ea997e57c15bcb7482ca82ae8ae43a2375097b822dbda1c5d2b0f6f7161ca3f", "text": "76 \n \nLas especificaciones de formato se pueden almacenar con un nombre:  \n \nf='Prueba %5d%8.2f%10s%12.5g'  \nprint(f%(n,x,e,u))  \n \nTambi\u00e9n se puede especificar el forma to con la palabra especial   format \n \nprint(format(n,'5d'))  \n       23 \nprint(format(x,'8.2f'))  \n          7.79  \n \n \n5.7.5  Documentaci\u00f3n de los  programas  \n Es una buena pr\u00e1ctica de programaci\u00f3n incluir comentarios en los programas para \ndocumentar su desarrollo.  \n \nPara incluir comentarios o anotaciones en el programa inicie la l\u00ednea con el s\u00edmbolo  #  \n \nLos comentarios tambi\u00e9n pueden abarcar varias l\u00edneas. Para estas anotaciones escriba al \ninicio de la primera l\u00ednea del comentario tres comillas simples o dobles y tamb i\u00e9n \nescr\u00edbalas al final de la \u00faltima linea del comentario.  \n  \n# Esta es una l\u00ednea de comentario  \n \n''' \nEstas l\u00edneas  \nson comentarios  \n \n''' \nSe pueden usar l\u00edneas en blanco para mejorar la claridad de los programas.  \n \n5.7.6 Encolumnamiento de instrucciones  \n \nEn el lenguaje Python se definen los bloques encolumn ando las instrucciones  a la derecha \ndebajo de la instrucci\u00f3n de control en cuyo \u00e1mbito estar\u00e1n incluidas. A diferencia de otros \nlenguajes, Python no tiene s\u00edmbolos o palabras especiales para delimitar un bloque.  \n \nLas instrucciones que pertenecen a un bloque deben escribirse desplazadas al menos una \ncolumna a la derecha dentro del bloque y t odas las instrucciones deben tener el mismo \nencolumnamiento.  Python  sugiere el encolumnamiento al momento de escribir las \ninstrucciones del programa. Es importante constatar el encolumnamiento de las \ninstrucciones para asegurar su pertenencia o exclusi\u00f3n de un  bloque.", "start_char_idx": 0, "end_char_idx": 1653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42cc9faa-6b16-4858-83cd-054778b257ce": {"__data__": {"id_": "42cc9faa-6b16-4858-83cd-054778b257ce", "embedding": null, "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91616269-f156-4b41-83b6-334cb740ba00", "node_type": "4", "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a0913a923f5114650416c9bec6042e13bf47306fbf1d0b9dca65635dfcbea2ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d17adbe1-9097-4c41-b185-60784484a701", "node_type": "1", "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5ea997e57c15bcb7482ca82ae8ae43a2375097b822dbda1c5d2b0f6f7161ca3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5784ce12-edfd-4bdc-aa57-c6c51e330d7a", "node_type": "1", "metadata": {}, "hash": "821335392387ae6c4fceacccd76268b19457dd1d71350be193cb46a95f0a3830", "class_name": "RelatedNodeInfo"}}, "hash": "86b6bcd91965108b0ce3833c8044ce1d799cfddebc6d7e0ebd88940fb0c72b29", "text": "El encolumnamiento de las instrucciones para definir el \u00e1mbito o alcance de las estructuras \nde control es muy simple de aplicar y entender, aporta claridad a la escritura de los \nprogramas y es un componente importante de la metodolog\u00eda de la Programaci\u00f3n \nEstructurada . \n \nPython Programaci\u00f3n", "start_char_idx": 1660, "end_char_idx": 1955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5784ce12-edfd-4bdc-aa57-c6c51e330d7a": {"__data__": {"id_": "5784ce12-edfd-4bdc-aa57-c6c51e330d7a", "embedding": null, "metadata": {"page_label": "77", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89494959-6a74-4cdb-8d60-27c591145bff", "node_type": "4", "metadata": {"page_label": "77", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e9f3937b2129a06fc05414c02a893f8a1dfacb611a1cd998a84a560b2a448653", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42cc9faa-6b16-4858-83cd-054778b257ce", "node_type": "1", "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "86b6bcd91965108b0ce3833c8044ce1d799cfddebc6d7e0ebd88940fb0c72b29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e689585c-1f64-4238-a62e-6d170b8f8045", "node_type": "1", "metadata": {}, "hash": "87d2066d7e9a1eaf87dd5f31decad9b2550296486f64369915de0ed18aff9d1b", "class_name": "RelatedNodeInfo"}}, "hash": "821335392387ae6c4fceacccd76268b19457dd1d71350be193cb46a95f0a3830", "text": "77 \n \n5.7.7 El primer ejemplo desarrollado en modo de programa ci\u00f3n \n \nCuando un usuario enfrenta a un nuevo lenguaje, es tradicional que su primer programa \nsea el cl\u00e1sico \u201cHola mundo\u201d . Este programa consiste en hacer que el computador \nmuestre en la pantalla un saludo.  En lenguajes \u201cduros\u201d com o C++ o Java, esta simple \nactividad involucra varios detalles  que para un usuario novicio es dif\u00edcil entender.  En \nPython escribir y probar programas es una actividad simple y amigable  \n \nEl  programa \u201cHola mundo\u201d en Python \n \nPrimero i ngrese a la ventana principal o Shell de Python activando el programa. En esta \nventana  presione  file   en la barra del men\u00fa y elija la opci\u00f3n  New File. Se abrir\u00e1 una \nventana de edici\u00f3n.  \n \n  Ventana interactiva o Shell     Ventana de edici\u00f3n  \n \n \n \nEscribir  en la ventana de edici\u00f3n de Python la instrucci\u00f3n. En esta ventana no debe \nescribir la m arca  >>> \n \nprint('Hola mundo' ) \n \nAlmacene el contenido de la ventana de edici\u00f3n. Este contenido es su primer programa. \nPara almacenar el programa presione file  en la barra del men\u00fa de la ventana de edici\u00f3n y \nelija la opci\u00f3n save. Python le pedir\u00e1 un nombre.  Escribir  alg\u00fan nombre para su programa \nsin dejar espacios intermedios Para probar o ejecutar el programa elija  la opci\u00f3n  run de la \nventana de edici\u00f3n o presion e la tecla F5 . El siguiente gr\u00e1fico muestra el resultado que \naparece en la pantalla interactiva.  \n \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1457, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e689585c-1f64-4238-a62e-6d170b8f8045": {"__data__": {"id_": "e689585c-1f64-4238-a62e-6d170b8f8045", "embedding": null, "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6390b09d-7a9f-41dd-9dc8-6790f77948e0", "node_type": "4", "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b99d3ad4bc30fbd8c002f1dfb67f63f5a69dc53f902470610619265cacea3729", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5784ce12-edfd-4bdc-aa57-c6c51e330d7a", "node_type": "1", "metadata": {"page_label": "77", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "821335392387ae6c4fceacccd76268b19457dd1d71350be193cb46a95f0a3830", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7ede0ab-2c76-489f-bf7f-75228f28f48a", "node_type": "1", "metadata": {}, "hash": "7d09fbc0c5b439d2c3bf332d0aaab0669696ea7c184a60456f350addf99c6e0f", "class_name": "RelatedNodeInfo"}}, "hash": "87d2066d7e9a1eaf87dd5f31decad9b2550296486f64369915de0ed18aff9d1b", "text": "78 \n \nEl segundo ejemplo ser\u00e1 convertir en un programa el ejemplo del tri\u00e1ngulo que se \ndesarroll\u00f3 interactivamente en la ventana interactiva  de Python.  Los datos ser\u00e1n \ningresados desde el teclado para realizar varias pruebas. Primero se codificar\u00e1 el \nprogra ma con las reglas indicadas anteriormente y luego se lo trasladar\u00e1 a la ventana de \nedici\u00f3n . El ejemplo permitir\u00e1 entender  la ventaja de escribir programas.  \n \nEjemplo.  Escribir  en el lenguaje Python un programa para traducir el algoritmo que  calcula \nel \u00e1rea de un tri\u00e1ngulo ingresando el valor de sus tres lados  \n Algoritmo: \u00c1rea de un tri\u00e1ngulo dados sus lados  \n \nVariables  \n a, b, c:  Lados del tri\u00e1ngulo  (Datos desconocidos)  \n s:  \u00c1rea del tri\u00e1ngulo  (Es el resultado esperado)  \n t: Semiper\u00edmetro   (Valor usado para la f\u00f3rmula del \u00e1rea  \n s t(t a)(t b)(t c)=\u2212\u2212\u2212 ,   (F\u00f3rmula del \u00e1rea del tri\u00e1ngulo)  \nsiendo  t = (a + b + c)/2  \n \nDiagrama de flujo  \n      \n                                 a, b, c       \n               \n \n  t \u2190 (a + b + c)/2  \n  s \u2190t(t a)(t b)(t c)\u2212\u2212\u2212    \n   \n                                         \n                                        s  \n                                \n \nTraducci\u00f3n del a lgoritmo al lenguaje Python \n \n#Programa calcular el \u00e1rea de un tri\u00e1ngulo  \nfrom math import sqrt \na=float( input('Primer lado: '))  \nb=float( input ('Segundo lado: '))  \nc=float( input ('Tercer lado: '))  \nt=(a+b+c)/2  \ns=sqrt(t*(t -a)*(t-b)*(t-c)) \nprint('Respuesta: ',s)    \n  \n \nAl escribir las instrucciones del  programa en la ventana de Python  los colores aparecen \nautom\u00e1ticamente. En la vent ana de edici\u00f3n  no debe escribir la marca  >>>.", "start_char_idx": 0, "end_char_idx": 1647, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7ede0ab-2c76-489f-bf7f-75228f28f48a": {"__data__": {"id_": "a7ede0ab-2c76-489f-bf7f-75228f28f48a", "embedding": null, "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6390b09d-7a9f-41dd-9dc8-6790f77948e0", "node_type": "4", "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b99d3ad4bc30fbd8c002f1dfb67f63f5a69dc53f902470610619265cacea3729", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e689585c-1f64-4238-a62e-6d170b8f8045", "node_type": "1", "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "87d2066d7e9a1eaf87dd5f31decad9b2550296486f64369915de0ed18aff9d1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c5839c8-6d76-49fa-813a-dd799094138d", "node_type": "1", "metadata": {}, "hash": "6c23cc7e3f8fbb849dc1875fb16a8eae23ac1cdb297da74ef34a45936ff4bda0", "class_name": "RelatedNodeInfo"}}, "hash": "7d09fbc0c5b439d2c3bf332d0aaab0669696ea7c184a60456f350addf99c6e0f", "text": "En la vent ana de edici\u00f3n  no debe escribir la marca  >>>. \n \nLos colores de las ventanas de Python pueden  personalizarse, igualmente el tipo y tama\u00f1o \nde las letras, el tama\u00f1o inicial de la ventana, la tabulaci\u00f3n, etc. Puede hacerlo \nseleccionando la opci\u00f3n Configure IDLE  de Options  en el men\u00fa de la ventana principal.  \nSe sugiere no modificar ni el tipo de letra ni la tabulaci\u00f3n.  \nPython Programaci\u00f3n", "start_char_idx": 1589, "end_char_idx": 1998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c5839c8-6d76-49fa-813a-dd799094138d": {"__data__": {"id_": "8c5839c8-6d76-49fa-813a-dd799094138d", "embedding": null, "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64055e18-de96-4163-812b-c130a5ec3f97", "node_type": "4", "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0bb635e668055c6321670e6e00c8eda0b84396f1eb6372b8e842bfffd292a086", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7ede0ab-2c76-489f-bf7f-75228f28f48a", "node_type": "1", "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7d09fbc0c5b439d2c3bf332d0aaab0669696ea7c184a60456f350addf99c6e0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bf1f3e0-437b-445a-a921-c63e25efcfbb", "node_type": "1", "metadata": {}, "hash": "11bc5abc285f4b15b9a36d7170e1a2d6d8b1d5fb71e9ef99fc64c86ffddd2e06", "class_name": "RelatedNodeInfo"}}, "hash": "6c23cc7e3f8fbb849dc1875fb16a8eae23ac1cdb297da74ef34a45936ff4bda0", "text": "79 \n \nEscribir  el programa en la ventana de edici\u00f3n de Python. Elija la opci\u00f3n save o save as y \nescribir  un nombre para su programa . Python  agrega la extensi\u00f3n  .py  al nombre.  \n \nPara probar o ejecutar el programa elija  la opci\u00f3n   run  de la ventana de edici\u00f3n en la que \nescribi\u00f3 el programa,  o presion e la tecla  F5.  Esta forma de ejecutar programas ser\u00e1 \nusada en casi todos los ejemplos en este document o. \n \nEl ingreso de los datos y la salida de resultados se realiza en  la ventana principal o Shell \ncomo se muestra en  la siguiente figura  tomada  de la interacci\u00f3n real con Python.  \n \n  Ventana de principal o Shell         Ventana de edici\u00f3n con el programa  \n \n \n \nLa ventaja de un programa es su independencia con respecto a los  datos . Los datos \nentran desde fuera del programa cuando es ejecutado. De esta manera el programa no \nnecesita modificarse para realizar pruebas. Al  estar almacenado se lo puede cargar y \nejecutar en cualquier momento y no necesita escribir las instrucciones nuevamente.  \n Para realizar cambios en el programa que est\u00e1 abierto en la ventana de edici\u00f3n, posicione \nel cursor en el lugar respectivo, realice los cambios, almacene nuevamente el archiv o y \nejec\u00fatelo.  Puede cargar y modificar los programas que est\u00e1n almacenados . \n \nLos m\u00f3dulos (programas y funciones) son almacenados en una carpeta identificada c on el \nnombre idlelib ubicada dentro de lib en la carpeta Python34. Python usa esta carpeta \ncomo d ispositivo de almacenamiento normal  de programas y archivos . Si los m\u00f3dulos se \nalmacenan en otra carpeta, no se los puede acceder en forma directa y no aparecen en el \ndirectorio de m\u00f3dulos, aunque Python  si los incluye en la lista de archivos recientes de \ndonde se los puede cargar y ejecutar.", "start_char_idx": 0, "end_char_idx": 1773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bf1f3e0-437b-445a-a921-c63e25efcfbb": {"__data__": {"id_": "5bf1f3e0-437b-445a-a921-c63e25efcfbb", "embedding": null, "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64055e18-de96-4163-812b-c130a5ec3f97", "node_type": "4", "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0bb635e668055c6321670e6e00c8eda0b84396f1eb6372b8e842bfffd292a086", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c5839c8-6d76-49fa-813a-dd799094138d", "node_type": "1", "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6c23cc7e3f8fbb849dc1875fb16a8eae23ac1cdb297da74ef34a45936ff4bda0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2a20b0d-2b4f-4e9d-a28d-4ad6c7f14445", "node_type": "1", "metadata": {}, "hash": "5a744a71b1b1d5d14a811fd80440dc6907ff0145d54bb9257a98b03b01c7912f", "class_name": "RelatedNodeInfo"}}, "hash": "11bc5abc285f4b15b9a36d7170e1a2d6d8b1d5fb71e9ef99fc64c86ffddd2e06", "text": "Tambi\u00e9n s e puede ejecutar desde la ventana interactiva un programa  que est\u00e1 \nalmacenado en la carpeta id lelib. No es necesario abrir el programa en la ventana de \nedici\u00f3n, solamente debe escribir la siguiente instrucci\u00f3n  en la ventana interactiva . Antes de \ncada ejecuci\u00f3n debe activar Restart Shell  de la opci\u00f3n Shell  del men\u00fa de Python.  \n \n>>> import n              S ustituya  n   por el nombre del programa almacenado  En la ventana principal o \nshell se realiza la \nejecuci\u00f3n del programa  \n \n \n \n \n \n En la ventana de \nedici\u00f3n se escribe el \nprograma y se \nordena su ejecuci\u00f3n  \nPython Programaci\u00f3n", "start_char_idx": 1778, "end_char_idx": 2390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2a20b0d-2b4f-4e9d-a28d-4ad6c7f14445": {"__data__": {"id_": "a2a20b0d-2b4f-4e9d-a28d-4ad6c7f14445", "embedding": null, "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c60f5d5-686a-4713-98ec-18c385b0fcdf", "node_type": "4", "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ccc2627613ef64b96ac1b5eac24d1455ba169de857eb5de1974cd2faa31e2e3e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5bf1f3e0-437b-445a-a921-c63e25efcfbb", "node_type": "1", "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "11bc5abc285f4b15b9a36d7170e1a2d6d8b1d5fb71e9ef99fc64c86ffddd2e06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad29cb5b-1bbc-4cc1-88df-ce425096dc7c", "node_type": "1", "metadata": {}, "hash": "516ca8c321c7adbd472493851ab71dd37e77ddf528278cecf2f0f4b755712528", "class_name": "RelatedNodeInfo"}}, "hash": "5a744a71b1b1d5d14a811fd80440dc6907ff0145d54bb9257a98b03b01c7912f", "text": "80 \n \n5.7.8 Ejercicios de programaci\u00f3n con las inst rucciones b\u00e1sicas  \n \nPara cada ejercicio escriba y pruebe un programa en la ventana de edici\u00f3n de Python.  \n \n1.  Dados el radio y altura de un cilindro calcule el \u00e1rea total y el volumen \n 2.  Se tiene un recipiente cil\u00edndrico con capacidad en litros. Su altura es un dato en metros.    \nDetermine el di\u00e1metro de la base  \n 3.  Dadas las tres dimensiones de un bloque rectangular calcule y muestre su \u00e1rea total y \nsu volumen.  \n \n4. La siguiente f\u00f3rmula proporciona el en\u00e9simo t\u00e9rmino u de una progresi\u00f3n aritm\u00e9tica:   \n     u = a + (n \u2212 1) r     \nen donde a  es el primer t\u00e9rmino, n  es el la cantidad de t\u00e9rminos y r  es la raz\u00f3n entre dos  \nt\u00e9rminos consecutivos.  Calcular el valor de  r  dados u, a, n  \n \n5.  En el ejercicio anterior, c alcular el valor de: n  dados u, a, r  \n \n6.  El examen de una  materia es el 70% de la nota total. Las lecciones constituyen el 20%  \ny las tareas el 10% de la nota total. Ingrese como datos la nota del examen calificado \nsobre 100 puntos, la nota de una lecci\u00f3n calificada sobre 10 puntos, y las notas de tres \ntareas calificadas cada una sobre 10 puntos. Calcule la calificaci\u00f3n total sobre 100 puntos.  \n \n7.  Un modelo de crecimiento poblacional est\u00e1 dado por: n = 5t + 2e\n0.1t, en donde n es el \nn\u00famero de habitantes, t es tiempo en a\u00f1os.  Se desea conocer el n\u00famero de habitant es \nque habr\u00edan en los a\u00f1os 5, 10 y 20.  Obtenga los resultados ejecutando tres veces el \nprograma.  \n 8.", "start_char_idx": 0, "end_char_idx": 1488, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad29cb5b-1bbc-4cc1-88df-ce425096dc7c": {"__data__": {"id_": "ad29cb5b-1bbc-4cc1-88df-ce425096dc7c", "embedding": null, "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c60f5d5-686a-4713-98ec-18c385b0fcdf", "node_type": "4", "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ccc2627613ef64b96ac1b5eac24d1455ba169de857eb5de1974cd2faa31e2e3e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2a20b0d-2b4f-4e9d-a28d-4ad6c7f14445", "node_type": "1", "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5a744a71b1b1d5d14a811fd80440dc6907ff0145d54bb9257a98b03b01c7912f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b72ed29-52e0-49f6-b80e-a83a1c8b1f95", "node_type": "1", "metadata": {}, "hash": "c801191726b7881bcbca6b16a669a57294e88498cf15a75ce3ad6032353206e8", "class_name": "RelatedNodeInfo"}}, "hash": "516ca8c321c7adbd472493851ab71dd37e77ddf528278cecf2f0f4b755712528", "text": "Obtenga los resultados ejecutando tres veces el \nprograma.  \n 8.  Un ingeniero desea tener una cantidad de  d\u00f3lares acumulada en su cuenta de ahorros \npara su retiro luego de una cantidad de a\u00f1os de trabajo. Para este ob jetivo planea \ndepositar un valor mensualmente. Suponga que el banco acumula el capital mensualmente \nmediante la siguiente f\u00f3rmula:  \n \n n(1 x) 1APx\uf8ee\uf8f9+\u2212=\uf8ef\uf8fa\n\uf8f0\uf8fb,  en donde  \n A:  Valor acumulado  \n P:  Valor de cada dep\u00f3sito mensual  \n n: Cantidad de dep\u00f3sitos m ensuales  \n x: Tasa de inter\u00e9s mensual  \nCalcule el valor acumulado ingresando como datos valores para P ,  n,  x \n \n9. Lea la abscisa y ordenada de dos puntos P, Q en el plano: (a, b) , (c, d) .  \nEstos puntos y el origen (0, 0)  conforman un tri\u00e1ngulo.  \nCalcule y e ncuentre el \u00e1rea del tri\u00e1ngulo.  \nF\u00f3rmula de la distancia del punto  P al punto Q:     \n  \nF\u00f3rmula del \u00e1rea del tri\u00e1ngulo:    \n ,     t = (x+y+z)/2  \nx, y, z   representan el valor de los tres lados del tri\u00e1ngulo  \n                           \nPython Programaci\u00f3n", "start_char_idx": 1424, "end_char_idx": 2438, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b72ed29-52e0-49f6-b80e-a83a1c8b1f95": {"__data__": {"id_": "4b72ed29-52e0-49f6-b80e-a83a1c8b1f95", "embedding": null, "metadata": {"page_label": "81", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98e3775c-336e-40d0-aca9-9267146911b2", "node_type": "4", "metadata": {"page_label": "81", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5144336b56655a875557d8ce131cb5b4b5b70850b394bed09ebfff6cf17fa164", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad29cb5b-1bbc-4cc1-88df-ce425096dc7c", "node_type": "1", "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "516ca8c321c7adbd472493851ab71dd37e77ddf528278cecf2f0f4b755712528", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "116513dc-dbeb-4d58-b762-1a2161414b05", "node_type": "1", "metadata": {}, "hash": "a9d40656dea69d338cdee5ff42d1886914478e456f2fcd1e99671329d62483d3", "class_name": "RelatedNodeInfo"}}, "hash": "c801191726b7881bcbca6b16a669a57294e88498cf15a75ce3ad6032353206e8", "text": "81 \n \n5.7.9 Operadores para aritm\u00e9tica enter a \n \nAlgunas  aplicaciones num\u00e9ricas incluyen  operaciones aritm\u00e9ticas que requieren el \ncociente entero de la divisi\u00f3n entre dos n\u00fameros y el res\u00edduo de esta divisi\u00f3n . En el \nlenguaje Python estas operaciones est\u00e1n definidas con s\u00edmbolos especiales  \n \nLos operadores  //  y  %  \n \nEl operador  //  trunca los decimales del resultado de la  divisi\u00f3n  y entrega la parte entera.  \n \nEjemplo.  \n \n>>> c=20 //3 \n>>> c \n6 \n \nEl operador  %  entrega el m\u00f3dulo aritm\u00e9tico ( residuo de la divisi\u00f3n entre dos enteros ). \n \nEjemplo.  \n \n>>> r=20%6  \n>>> r \n2 \n \nEjemplo.  Dado un n\u00famero entero de dos cifras, escribir  un programa en  Python para \nsumar las cifras.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n n: dato entero de dos cifras \n d: d\u00edgito de las decenas \n u: d\u00edgito de las unidades  \n s: suma de d\u00edgitos \n \nPrograma  \n \n#Suma de dos cifras  \nn=int(input('Ingrese un entero: \u2018 )) \nd=n //10 \nu=n%10 \ns=d+u \nprint('Respuesta: ',s)  \n \n Prueba del programa  \n>>>  \nIngrese un entero: 73 \nRespuesta:  10  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "116513dc-dbeb-4d58-b762-1a2161414b05": {"__data__": {"id_": "116513dc-dbeb-4d58-b762-1a2161414b05", "embedding": null, "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "457ffbe3-3e00-4da3-88dc-243bcbd41275", "node_type": "4", "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e0f3e05a7c06dab75ef10ae686ed4f41548746e823e876731207763bfb06a77c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b72ed29-52e0-49f6-b80e-a83a1c8b1f95", "node_type": "1", "metadata": {"page_label": "81", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c801191726b7881bcbca6b16a669a57294e88498cf15a75ce3ad6032353206e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7b1f719-6abd-41cb-b279-2abc432f9b5a", "node_type": "1", "metadata": {}, "hash": "b8291ab78e01c1a0f72251daba68aa1808df3e14bd44c1632d52d6a478160cc1", "class_name": "RelatedNodeInfo"}}, "hash": "a9d40656dea69d338cdee5ff42d1886914478e456f2fcd1e99671329d62483d3", "text": "82 \n \nLa funci\u00f3n divmod  \n \nSean   x, y  dos n\u00fameros  \n \ndivmod(x,y)    entrega el par   (x //y, x%y) \n Ejemplo.  \n \n>>> [a,b]=divmod(20,6)  \n>>> a \n3 \n>>> b \n2 \n   \n5.7.10 Ejercicios de programaci\u00f3n con los operadores  para aritm\u00e9tica entera  \n \nPara cada ejercicio escriba y pruebe un programa en la ventana de edici\u00f3n de Python.  \n \n1. Dado un n\u00famero entero (dias), determine y muestre el equivalente en a\u00f1os, meses y \nd\u00edas sobrantes. Por simplicidad suponga que un a\u00f1o tiene 365 d\u00edas y que cada mes tiene \n30 d\u00edas. Use los operadores //  y % para obtener cociente y res\u00edduo.  \n \nEjemplo.  1372 d\u00edas equiv alen a  3 a\u00f1os, 9 meses y 7 d\u00edas.  \n \n2.  Dado un dato con la cantidad de d\u00edas. E ncuentre  el equivalente en meses, semanas y \nd\u00edas sobrantes. Suponga que cada mes tiene treinta d\u00edas.  \n \nEjemplo. Si el dato es 175 el resultado ser\u00e1 5 meses, 3 semanas y 4 d\u00edas  \n \n3. Lea dos n\u00fameros de tres cifras cada uno. Sume la cifra central del primer n\u00famero con la \ncifra central del segundo n\u00famero y muestre el resultado.  \n \n4. Dado un n\u00famero entero de tres cifras. Muestre el mismo n\u00famero pero con las cifras en \norden opuesto.  \n \n5. Dado un n\u00famero entero (cantidad de d\u00f3lares), mostrar el valor equivalente usando la \nmenor cantidad de billetes de 100, 50, 20, 10, 5 y 1. \n \n6.", "start_char_idx": 0, "end_char_idx": 1283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7b1f719-6abd-41cb-b279-2abc432f9b5a": {"__data__": {"id_": "a7b1f719-6abd-41cb-b279-2abc432f9b5a", "embedding": null, "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "457ffbe3-3e00-4da3-88dc-243bcbd41275", "node_type": "4", "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e0f3e05a7c06dab75ef10ae686ed4f41548746e823e876731207763bfb06a77c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "116513dc-dbeb-4d58-b762-1a2161414b05", "node_type": "1", "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a9d40656dea69d338cdee5ff42d1886914478e456f2fcd1e99671329d62483d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d68cfb5f-7efa-480b-a4d2-8c15bcdd168c", "node_type": "1", "metadata": {}, "hash": "33451699df266818edc6e2d81f33b987e3a7dfb6dd72d9b8d0c4607e1be77320", "class_name": "RelatedNodeInfo"}}, "hash": "b8291ab78e01c1a0f72251daba68aa1808df3e14bd44c1632d52d6a478160cc1", "text": "6. En un ejercicio de algoritmos con ciclos en este documento se encuentra la siguiente \nf\u00f3rmula para determinar e l d\u00eda  n  en el cual  e l n\u00famero de bacterias  x ,  cuya cantidad se \nduplica cada d\u00eda,   excede a un valor m\u00e1ximo  m:    \n2n(x) > m.  \n \nIngrese los valores de  x   y  m  y determine el d\u00eda  n   con la f\u00f3rmula anterior . Este \nresultado debe ser el menor entero que satisface la desigualdad. Para depejar  n  debe \nusar logaritmos y tambi\u00e9n truncamiento de decimales  \nPython Programaci\u00f3n", "start_char_idx": 1281, "end_char_idx": 1785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d68cfb5f-7efa-480b-a4d2-8c15bcdd168c": {"__data__": {"id_": "d68cfb5f-7efa-480b-a4d2-8c15bcdd168c", "embedding": null, "metadata": {"page_label": "83", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68a8ba39-3ef1-4d1b-a13e-b481f1d4936d", "node_type": "4", "metadata": {"page_label": "83", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "57e16b55ff2897dc2e8a31d40952e2df773f009136a11eaf30ff767ec7a8e01e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7b1f719-6abd-41cb-b279-2abc432f9b5a", "node_type": "1", "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b8291ab78e01c1a0f72251daba68aa1808df3e14bd44c1632d52d6a478160cc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ff7c25b-4f41-4f51-9f1a-12fe9eb8b7d7", "node_type": "1", "metadata": {}, "hash": "7edc1463f0ca96462c6b743f2193365104777ac3433a2f7a6f566e612a112aa1", "class_name": "RelatedNodeInfo"}}, "hash": "33451699df266818edc6e2d81f33b987e3a7dfb6dd72d9b8d0c4607e1be77320", "text": "83 \n \n5.8 Estructuras de decisi\u00f3n en Python \n \nLas decisiones son operaciones computacionales que permiten  condicionar  la ejecuci\u00f3n de \ninstrucciones dependiendo de una expresi\u00f3n que al evaluarla puede tomar \u00fanicamente los \nvalores logico s: verdadero  o  falso ,  True  o  False  en la notaci\u00f3n de Python.  \n \n5.8.1 Ejecuci\u00f3n condicionada de un bloque de instrucciones  \n \nEsta estructura de control  se usa para condicionar la ejecuci\u00f3 n de un bloque de \ninstrucciones  utilizando como criterio el resultado de una condici\u00f3n  como se muestra en la \nsiguiente representaci\u00f3n gr\u00e1fica:  \n \nRepresentaci\u00f3n  gr\u00e1fica \n \n \n    \n                                                   F \n                                                      Condici\u00f3n  \n           V \n  \n \n     P \n  \n \n \n \n \nAl entrar a esta estructura se eval\u00faa la condici\u00f3n. Si el resultado es verdadero ( V) se \nejecutar\u00e1n las instrucciones del bloque  P caso contrario, si el resultado es falso ( F) las \ninstrucciones d el bloque no ser\u00e1n  ejecutadas . En ambos casos el algoritmo continua abajo \ndel bloque.  \n \nSeudo lenguaje  \n \n Si   condici\u00f3n  \n \n  P \n \n Fin \n \n \nLenguaje Python \n \n  if  condici\u00f3n:  \n       Instrucci\u00f3n en el bloque P  \n       Instrucci\u00f3n en el bloque P  \n                   . . . \n       Instrucci\u00f3n en el bloque P  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ff7c25b-4f41-4f51-9f1a-12fe9eb8b7d7": {"__data__": {"id_": "4ff7c25b-4f41-4f51-9f1a-12fe9eb8b7d7", "embedding": null, "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ecde64cb-a89e-4c04-8185-09ad19da898b", "node_type": "4", "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "132af41742605d88f981f748aad23183b0a754bb311d61ded65fc0501164d29f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d68cfb5f-7efa-480b-a4d2-8c15bcdd168c", "node_type": "1", "metadata": {"page_label": "83", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "33451699df266818edc6e2d81f33b987e3a7dfb6dd72d9b8d0c4607e1be77320", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9264b3b4-dab2-4858-96b9-251bd0dd0246", "node_type": "1", "metadata": {}, "hash": "ce2e9b97662bd65ab5d5e8c9cda0d6911e21f18f7ec117338467eee6c17fc7da", "class_name": "RelatedNodeInfo"}}, "hash": "7edc1463f0ca96462c6b743f2193365104777ac3433a2f7a6f566e612a112aa1", "text": "84 \n \nObserve la relaci\u00f3n entre la estructura de control del lenguaje algor\u00edtmico y la instrucci\u00f3n \ndel lenguaje computacional. Ambas describen la misma acci\u00f3n. El color  de la palabra clave  \nif  para decisiones de Python es el color est\u00e1ndar del IDLE ( interfaz para interactuar con \nPython),  pero se lo puede cambiar activando options .  \n \nEl bloque  de la estructura de decisi\u00f3n incluye  todas las instrucciones que est\u00e1n \ncondicionadas.  En  el diagrama de flu jo est\u00e1 claram ente delimitado con las  l\u00edneas  de flujo.  \n \nEl lenguaje Python  no tiene s\u00edmbolos especiales para cerrar el bloque de instrucciones \ncondicionadas.   \n \nEl bloque o \u00e1mbito de la decisi\u00f3n se define encolumn ando  las instrucciones que se desea n \ncondicionar. Las instrucciones condicionadas deben escribirse en las siguientes l\u00edneas \ndesplazadas al menos una columna a la derecha de la palabra  if.  \n \nTodas las instrucciones condicionadas deben tener el mismo encolumnamiento.  Python \nencolumna las instrucciones al escribir las. Este encolumnamiento es una tabulaci\u00f3n \npredefinida que desplaza las instrucciones  cuatro espacios a la derecha y es el que se usa \nen este documento.   Sin embargo, Python permite  cambiar esta tabulaci\u00f3n  \n \n Ejemplo. Describir  en Python las instrucciones  para leer el precio  p  de un producto y \nreducir su valor en el 10% si el dato ingresado es  mayor a  40.    \n \np=float( input('Ingrese el precio: ' )) \nif  p>40:  \n     p=p\u2013 0.1*p \n Para escribir las  expresi ones  que condicionan el bloque  de instrucciones se pueden usar \noperadores relacionales y conectores l\u00f3gicos.", "start_char_idx": 0, "end_char_idx": 1602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9264b3b4-dab2-4858-96b9-251bd0dd0246": {"__data__": {"id_": "9264b3b4-dab2-4858-96b9-251bd0dd0246", "embedding": null, "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ecde64cb-a89e-4c04-8185-09ad19da898b", "node_type": "4", "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "132af41742605d88f981f748aad23183b0a754bb311d61ded65fc0501164d29f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ff7c25b-4f41-4f51-9f1a-12fe9eb8b7d7", "node_type": "1", "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7edc1463f0ca96462c6b743f2193365104777ac3433a2f7a6f566e612a112aa1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e2a721b-1a23-4ce7-aaeb-c8fabb425281", "node_type": "1", "metadata": {}, "hash": "e7e982f01aa66affa61371538af34df3be4b1e1c643773045afe35316e5b1435", "class_name": "RelatedNodeInfo"}}, "hash": "ce2e9b97662bd65ab5d5e8c9cda0d6911e21f18f7ec117338467eee6c17fc7da", "text": "Para que una expresi\u00f3n pueda ser usada como una condici\u00f3n,  las variables incluidas en la expresi\u00f3n deben tener asignado alg\u00fan \nvalor, caso contrario ser\u00e1 un error pues la condici\u00f3n no podr\u00eda evaluarse.  \n \nEjemplo.  x<3 and t>2   es una expresi\u00f3n condici onal y su valor ( verdadero  o falso ) \ndepender\u00e1 del contenido actual de las variables   x  y  t \n \n \nEn el lenguaje Python, se pueden usar expresi ones  con conectores l\u00f3gic os para verificar \nen una condici\u00f3n , si una variable pertenece a un intervalo real, como el siguiente ejemplo:  \n \nx>3 and x<10 \n \nEstas expresiones con el conector  and   tambi\u00e9n se puede n escribir en forma abreviada:  \n \n 3<x<10 \n \nEjemplo. Describir  en Python las instrucciones para leer un n\u00famero real x. Verificar si x \nest\u00e1 dentro del intervalo [2, 5]  y mostrar un mensaje  si se cumple esta condici\u00f3n:  \n \nx=float( input('Ingrese el dato: ')) \nif 2<=x<=5:  \n    print( 'El dato est\u00e1 d entro del intervalo')  \nPython Programaci\u00f3n", "start_char_idx": 1603, "end_char_idx": 2574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e2a721b-1a23-4ce7-aaeb-c8fabb425281": {"__data__": {"id_": "7e2a721b-1a23-4ce7-aaeb-c8fabb425281", "embedding": null, "metadata": {"page_label": "85", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "234aaad4-09a4-4d88-97af-dbd97c86e4e3", "node_type": "4", "metadata": {"page_label": "85", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13da05d1a15d0f6f17e84fcc8dbff8665234db86adb61ef998b65db8f5b23c23", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9264b3b4-dab2-4858-96b9-251bd0dd0246", "node_type": "1", "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ce2e9b97662bd65ab5d5e8c9cda0d6911e21f18f7ec117338467eee6c17fc7da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "769353a5-dc92-48a2-a6bb-fc6309adbca4", "node_type": "1", "metadata": {}, "hash": "9598bd3519b07c93460e657077a965c1bab0ea9b865f5aa78550e38d5fbb0af2", "class_name": "RelatedNodeInfo"}}, "hash": "e7e982f01aa66affa61371538af34df3be4b1e1c643773045afe35316e5b1435", "text": "85 \n \nEjemplo.  Describir  en Python un programa para resolver el siguient e problema:  \n \nCalcular el valor total que una persona debe pagar por la compra de llantas en un almac\u00e9n \nque tiene la siguiente promoci\u00f3n: Si la cantidad de llantas comprada es mayor a 4 , el \nprecio unitario tiene un descuento de 10%.   El programa debe ingresar como datos la \ncatidad de llantas y el precio inicial de cada llanta. Mediante una comparaci\u00f3n el programa deber\u00e1 aplicar el descuento.  \n \nInstrumentaci\u00f3n  \n Variables  \n     n:  Cantidad de llantas  \n     p:  Precio unitario  \n    t:   Valor a pagar  \n \nPrograma  \n \n    #Compra de llantas con descuento  \n  n=int( input('Cantidad de llantas: '))  \n  p=float(input('Precio unitario: ' )) \n  if n>4: \n     p=0.9*p \n  t=n*p \n  print( 'Valor a pagar: ' ,t) \n \n \nPrueba del programa  \n>>>  \nCantidad de llantas: 3 \nPrecio unitario: 80  \nValor a pag ar:  240.0  \n \n>>>  \nCantidad de llantas: 5  \nPrecio unitario: 80  \nValor a pagar:  360.0  \n>>> \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1006, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "769353a5-dc92-48a2-a6bb-fc6309adbca4": {"__data__": {"id_": "769353a5-dc92-48a2-a6bb-fc6309adbca4", "embedding": null, "metadata": {"page_label": "86", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "567da195-2ad4-4189-83f6-b73350f940d3", "node_type": "4", "metadata": {"page_label": "86", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b2e6de16cdd5fda53e815e080818752c3a25772ab80a7c66fc56ffde08e87ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e2a721b-1a23-4ce7-aaeb-c8fabb425281", "node_type": "1", "metadata": {"page_label": "85", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e7e982f01aa66affa61371538af34df3be4b1e1c643773045afe35316e5b1435", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50564783-8235-44ef-93f3-dda05eddd918", "node_type": "1", "metadata": {}, "hash": "23c4075317a004e2877de5cf832c9d8cacc8758d0f84152d8114daf47437686b", "class_name": "RelatedNodeInfo"}}, "hash": "9598bd3519b07c93460e657077a965c1bab0ea9b865f5aa78550e38d5fbb0af2", "text": "86 \n \n5.8.2 Ejecuci\u00f3n selectiva entre dos bloques de instrucciones  \n \nEsta estructura de control de flujo del algoritmo eval\u00faa la condici\u00f3n y de pendiendo del \nresultado realiza las instrucciones incluidas en  una de las dos opciones  \n \nRepresentaci\u00f3n  gr\u00e1fica \n \n \n    \n                                                    F  \n                                                      Condici\u00f3n  \n           V \n  \n \n     P         Q  \n  \n \n  \n \nAl entrar a esta estructura, se eval\u00faa la condici\u00f3n. Si el resultado es verdadero ( V) se \nejecutar\u00e1 el bloque P asociado al valor verdadero, caso contrario, si el resultado es falso \n(F) se ejecutar\u00e1 el bloque Q .  El algoritmo continua abajo, despues de ejecutar  alguno de \nlos dos bloques.  \n \nSeudo lenguaje  \n \n Si   condici\u00f3n  \n \n  P \n Sin\u00f3 \n  Q \n \n Fin \n \n \nLenguaje Python \n   if   condici\u00f3n:  \n         instrucci\u00f3n  en el bloque  P \n               instrucci\u00f3n en el bloque  P \n                     . . .  \n              instrucci\u00f3n en el bloque  P  \n  else: \n         instrucci\u00f3n en el bloque  Q \n               instrucci\u00f3n en el bloque  Q \n                     . . .  \n              instrucci\u00f3n en el bloque  Q \n  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1194, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50564783-8235-44ef-93f3-dda05eddd918": {"__data__": {"id_": "50564783-8235-44ef-93f3-dda05eddd918", "embedding": null, "metadata": {"page_label": "87", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bac1257e-0af7-4c9d-988f-82068bb8ff49", "node_type": "4", "metadata": {"page_label": "87", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "005e5c9d2dcb33f5536ddc8428d4428490519639e5ae18b3bef4fbe2836874e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "769353a5-dc92-48a2-a6bb-fc6309adbca4", "node_type": "1", "metadata": {"page_label": "86", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9598bd3519b07c93460e657077a965c1bab0ea9b865f5aa78550e38d5fbb0af2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0efc3d88-1885-4f7d-9c4b-c458d7d3db1e", "node_type": "1", "metadata": {}, "hash": "d1f84dbe5598c9dcb454105c09c9242086b79b1a4874e10e1fc4edadfeb12b80", "class_name": "RelatedNodeInfo"}}, "hash": "23c4075317a004e2877de5cf832c9d8cacc8758d0f84152d8114daf47437686b", "text": "87 \n \nPara definir el bloque de instrucciones asociado a cada una de las dos opciones, s e deben \nescribir  las instrucciones desplazadas al menos una columna a la derecha. Todas las \ninstrucciones deben tener el mismo encolumnamiento.  Python sugiere el encolumnamiento \nal momento de escribir las instrucciones del programa.  Este encolumnamiento es  un \ndeplazamiento de cuatro espacios a la derecha y es el que se usa en este documento.  \n \nEjemplo. Describir  en notaci\u00f3n algor\u00edtmica como asignar a la variable  m  el mayor entre \ndos valores almacenados respectivamente en las variables  a  y  b \n \n  if a>=b: \n      m=a \n  else: \n      m=b \n \nEjemplo. Describir  en lenguaje Python un programa para resolver el siguiente problema:  \n \nPara el pago semanal a un obrero se consideran los siguientes datos: horas trabajadas, \ntarifa por hora y descuentos. Si la cantidad de hor as trabajadas en la semana es mayor a \n40, se le debe pagar las horas en exceso con una bonificaci\u00f3n de 50% adicional al pago normal.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n     c:  Cantidad de horas trabajadas en la semana  \n     t:   Tarifa por hora \n    d:  Descuento s que se aplican al pago semanal  \n    p:  Pago que recibe el obrero \n \nPrograma  \n \n    #C\u00e1lculo del pago semanal  \n  c=float( input('Horas trabajadas: ')) \n    t=float( input('Tarifa por hora: ' )) \n    d=float( input('Descuentos '))  \n    if c<=40: \n            p=c*t - d \n      else: \n         p=40*t + 1.5*t*(c - 40) - d \n      print('Valor a pagar', p)  \n \n \nPrueba del programa  \n>>>  \nHoras trabajadas: 45 \nTarifa por hora: 4 \nDescuentos 40 \nValor a pagar 150.0  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1641, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0efc3d88-1885-4f7d-9c4b-c458d7d3db1e": {"__data__": {"id_": "0efc3d88-1885-4f7d-9c4b-c458d7d3db1e", "embedding": null, "metadata": {"page_label": "88", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6966c548-c3cd-4309-a234-69bd01b95b87", "node_type": "4", "metadata": {"page_label": "88", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f37c19466b82b74e6eda7c0347bd8c0f6c702f1abc95b51af31409ffed89c303", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50564783-8235-44ef-93f3-dda05eddd918", "node_type": "1", "metadata": {"page_label": "87", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "23c4075317a004e2877de5cf832c9d8cacc8758d0f84152d8114daf47437686b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "838eee69-2173-403d-901b-447816fbb51c", "node_type": "1", "metadata": {}, "hash": "3f8457fc781ebb718edf418097086ddea3a607b5ed45d8f2dd99bf95f2343683", "class_name": "RelatedNodeInfo"}}, "hash": "d1f84dbe5598c9dcb454105c09c9242086b79b1a4874e10e1fc4edadfeb12b80", "text": "88 \n \n 5.8.3  Decisiones anidadas \n \nEn problemas con decisiones m\u00faltiples se deben elegir acciones mediante condiciones \nque deben verificarse en forma sucesiva. Para describir  en Python la selecci\u00f3n de \nacciones  mediante condiciones se las puede estructurar con decisiones incluidas dentro de \notras decisiones  con el siguiente formato,  el cual establece una jerarqu\u00eda de acciones : \n \n  if  condici\u00f3n 1:  \n \n      Instruccio nes    \nelse: \n \n    if  condici\u00f3n 2:  \n \n                  Instrucciones  \n \n            else:  \n \n               if  condici\u00f2n 3:  \n \n                        Instrucciones \n \n             else: \n \n              . . . \n \n \nLa ejecuci\u00f3n se realiza de arriba hacia abajo. Si se cumple alguna condici\u00f3n de la cl\u00e1usula \nif, la ejecuci\u00f3n continu\u00e1 en ese bloque, caso contrario, la ejecuci\u00f3n contin\u00faa en las \ninstrucciones incluidas en la cl\u00e1usula else.  Ca da cl\u00e1usula if y cada cl\u00e1usula else pueden \nabrir otra ruta de decisiones.  \n \nLas inst rucciones est\u00e1n condicionadas mediante el encolumnamiento asociado a cada \ncl\u00e1usula  if   y a cada cl\u00e1usula  else.    \n Es necesario encolumnar las instrucciones con cuidado par a establecer con claridad la \ndependencia a cada cl\u00e1usula if y a cada cl\u00e1usula else.  \n El algoritmo continua abajo al completarse la ruta de las decisiones.  \n \nLas instrucciones tambi\u00e9n pueden incluir a otras decisiones para formar estructuras de \ndecisi\u00f3n m\u00e1s complejas.    Representaci\u00f3n gr\u00e1fica  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1474, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "838eee69-2173-403d-901b-447816fbb51c": {"__data__": {"id_": "838eee69-2173-403d-901b-447816fbb51c", "embedding": null, "metadata": {"page_label": "89", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "700b8d2d-5f6f-4c43-90a6-43b2e4f6905f", "node_type": "4", "metadata": {"page_label": "89", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e17c58d8f38a2a65f43b4f6bfbecdd9d36a855eeadda08aa2359bbbfe25362b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0efc3d88-1885-4f7d-9c4b-c458d7d3db1e", "node_type": "1", "metadata": {"page_label": "88", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d1f84dbe5598c9dcb454105c09c9242086b79b1a4874e10e1fc4edadfeb12b80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8556b216-ea12-4405-8342-450aa7887a6f", "node_type": "1", "metadata": {}, "hash": "badf18a5c9699f6560b46b42f88875b2125766c5ec3d9f7be24a7efc8e50436d", "class_name": "RelatedNodeInfo"}}, "hash": "3f8457fc781ebb718edf418097086ddea3a607b5ed45d8f2dd99bf95f2343683", "text": "89 \n \nEjemplo.  Describir  en Python un programa para resolver el siguiente problema:  \n \nDurante el semestre un estudiante debe realizar tres evaluaciones. Cada evaluaci\u00f3n tiene \nuna calificaci\u00f3n y la nota total que recibe el estudiante es la suma de las  dos mejores \ncalificaciones  \n \nEscribir  un programa que lea las tres calificaciones y determine cual es la calificaci\u00f3n total \nque recibir\u00e1 el estudiante.  \n  \nInstrumentaci\u00f3n  \n \nVariables  \n     a, b, c:   Variables que recibir\u00e1n los datos de las tres calificaciones  \n        t:           Variable con la suma de las dos mejores calificaciones  \n \nSolamente hay tres casos posibles y son excluyentes, por lo que se usar\u00e1n dos decisiones \nanidadas  para verificar dos casos y el tercero ser\u00e1 la cl\u00e1usula else.  \n \nPrograma  \n \n# Suma de calificaciones  \na=int(input('Ingrese su primera calificaci\u00f3n: '))  \nb=int(input('Ingrese su segunda calificaci\u00f3n: '))  \nc=int(input('Ingrese su tercera calificaci\u00f3n: '))  \nif a>=c and b>=c: \n    t=a+b  \nelse: \n    if a>=b and c>=b: \n        t=a+c  \n    else:  \n        t=b+c \nprint('Su calificaci\u00f3n total es: ',t)  \n \n Prueba del programa  \n \n>>>  \nIngrese su primera calificaci\u00f3n: 75 \nIngrese su segunda calificaci\u00f3n: 68 \nIngrese su tercera calificaci\u00f3n: 82 \nSu calificaci\u00f3n total es:  157  \n>>> \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8556b216-ea12-4405-8342-450aa7887a6f": {"__data__": {"id_": "8556b216-ea12-4405-8342-450aa7887a6f", "embedding": null, "metadata": {"page_label": "90", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2f65be8-0f8c-4f11-9f5a-8a182932931c", "node_type": "4", "metadata": {"page_label": "90", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "03271ccd475ea2cb7d23b77edde5cf228e7aa7304d639d5977f6affa41827315", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "838eee69-2173-403d-901b-447816fbb51c", "node_type": "1", "metadata": {"page_label": "89", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3f8457fc781ebb718edf418097086ddea3a607b5ed45d8f2dd99bf95f2343683", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea4531e4-002b-4cc9-84b7-410f18efe3d2", "node_type": "1", "metadata": {}, "hash": "995e81f9cac531fd563437aa10d906913263282df01f185439ca61d5e5c00036", "class_name": "RelatedNodeInfo"}}, "hash": "badf18a5c9699f6560b46b42f88875b2125766c5ec3d9f7be24a7efc8e50436d", "text": "90 \n \nEjemplo.  Describir  en Python la siguie nte decisi\u00f3n para pagar una cuenta en un \nrestaurante: Si la cuenta es menor a  $50 pago en efectivo. Sin\u00f3, si es de $50 hasta $100 \npagar\u00e9 con el celular(dinero electr\u00f3nico). Pero si es mayor a 100 hasta $200, usar\u00e9 la \ntarjeta de d\u00e9bito. Caso contrario, pag ar\u00e9 con la tarjeta de cr\u00e9dito.  \n \nInstrumentaci\u00f3n  \n Variables  \n     c:  Valor de la cuenta a pagar  \n \nEn la soluci\u00f3n se usar\u00e1n decisiones anidadas para seleccionar el caso que corresponda al \nvalor de la cuenta. Tambi\u00e9n se usar\u00e1 una forma abreviada que permite Py thon para \nexpresar elrango para una variable en la condici\u00f3n.  \n \n Programa  \n \n# Pago de una cuenta  \nc=float( input('Ingrese el valor de la cuenta: ')) \nif c<50: \n     print( 'Pago en efectivo')  \nelse: \n     if 50<=c<=100: \n          print( 'Pago con el celular (dinero electr\u00f3nico) ') \n     else:  \n          if 100<=c<=200: \n               print( 'Pago con la tarjeta de d\u00e9bito' ) \n          else: \n               print( 'Pago con la tarjeta de cr\u00e9dito' ) \n             \n \n \nPrueba del programa  \n >>>  \nIngrese el valor de la cuenta: 1 20.50 \nPago con la tarjeta de d\u00e9bito  \n>>>    \n   \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1188, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea4531e4-002b-4cc9-84b7-410f18efe3d2": {"__data__": {"id_": "ea4531e4-002b-4cc9-84b7-410f18efe3d2", "embedding": null, "metadata": {"page_label": "91", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6e73269-10de-4578-9da6-6919c78b9d16", "node_type": "4", "metadata": {"page_label": "91", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1c3e79b9e19f8f5a316c0f54be5ee31ba7a818226875615d6dfd92fb2fc3adb2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8556b216-ea12-4405-8342-450aa7887a6f", "node_type": "1", "metadata": {"page_label": "90", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "badf18a5c9699f6560b46b42f88875b2125766c5ec3d9f7be24a7efc8e50436d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0ab45e77-f50c-4e00-8e50-ed2b71eecf99", "node_type": "1", "metadata": {}, "hash": "bf134c291c78603e54573d31a7456c5e769832ed722dd7503e2d6ce6c54b2fbc", "class_name": "RelatedNodeInfo"}}, "hash": "995e81f9cac531fd563437aa10d906913263282df01f185439ca61d5e5c00036", "text": "91 \n \n5.8.4 Decisiones consecutivas \n \nEsta es otra manera de estructurar decisiones m\u00faltiples. Si las decisiones utilizan \ncondiciones similares  y con valores diferentes, se las puede estructurar en forma vertical  \nalineadas.  Esta estructura es m\u00e1s clara que las decisones anidadas que requieren \nencolumnar las instrucciones en forma diferente para definir la jerarqu\u00eda de las decisiones.  \n \nEl forma to de las decisiones consecutivas en Python es:  \n \n        Representaci\u00f3n gr\u00e1fica  \n  if    condici\u00f3n 1:  \n \n        Instrucci\u00f3nes  \n \n  elif  condici\u00f3n 2:  \n \n        Instrucciones  \n \n  elif  condici\u00f3n 3:  \n \n      Instrucciones  \n  . . . \n   \nelif  condici\u00f3n n: \n \n      Instrucciones  \n \nelse: \n \n       Instrucciones  \n  \nLas inst rucciones condicionadas est\u00e1n definidas mediante el encolumnamiento asociado a \ncada condici\u00f3n: c ondici\u00f3n 1, c ondici\u00f3n 2, condici\u00f3n 3,  etc., Si se cumple alguna de esta \ncondiciones, se ejecutan las instrucciones condicionadas. Si no se cumple alguna de estas \ncondiciones, se ejecutar\u00e0n las  instrucciones asociadas a la cl\u00e1usula else.  Este \u00faltimo \ncomponente es opcional.  \n \nLa ejecuci\u00f3n continua abajo de esta estuctura, despues de ejecutar alguno de los bloques  \nde instrucciones.  \n \n \nEn general, los  problemas con decisiones m\u00faltiples pueden resolv erse con cualquiera de \nestos dos tipos decisiones: decisiones anidadas o decisiones consecutivas.   \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ab45e77-f50c-4e00-8e50-ed2b71eecf99": {"__data__": {"id_": "0ab45e77-f50c-4e00-8e50-ed2b71eecf99", "embedding": null, "metadata": {"page_label": "92", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64ec1232-3291-48ab-a464-c42f4699ac6e", "node_type": "4", "metadata": {"page_label": "92", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0266db9dba188de9aa0c92b0a9f6d5edec7ee528776a9b4d5acaa7295c878948", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea4531e4-002b-4cc9-84b7-410f18efe3d2", "node_type": "1", "metadata": {"page_label": "91", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "995e81f9cac531fd563437aa10d906913263282df01f185439ca61d5e5c00036", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad193005-485e-4e29-96a4-491fdd35dfea", "node_type": "1", "metadata": {}, "hash": "73b550f11a3355372fb7495fc0a0cb74c77217a154e4da5905ecd773d24a205b", "class_name": "RelatedNodeInfo"}}, "hash": "bf134c291c78603e54573d31a7456c5e769832ed722dd7503e2d6ce6c54b2fbc", "text": "92 \n \nEjemplo.  Describir  un programa para resolver el siguiente problema:  \n \nLeer el n\u00famero de llantas de una compra y mostrar el valor que debe pagarse. El alma c\u00e9n \nlas vende con la siguiente pol\u00edtica:  Si se compran menos de 5 llantas, el precio unitario es \n80. Si se compran 6 o 7, el precio unitario es 70, y si se compran m\u00e1s de 7 llantas, el \nprecio unitario es 60.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n     n:  Cantidad de llantas compradas \n     p:  Precio unitario (80, 70, o 60)  \n     t:   Valor de la compra  \n  \nPrograma  \n   # Compra de llantas con descuento  \nn=int(input('Cantidad de llantas: ')) \n  if n<5: \n      p=80  \n  elif n==5 or n==6: \n      p=70  \n  else: \n      p=60  \nt=n*p \n  print('Valor a pagar:  ', t) \n \n \nPrueba del programa  \n \n>>>  \nCantidad de llantas: 6  \nValor a pagar:  420  \n>>>  \nCantidad de llantas: 4  \nValor a pagar:  320  \n>>>  \nCantidad de llantas: 8  \nValor a pagar:  480  \n>>> \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 951, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad193005-485e-4e29-96a4-491fdd35dfea": {"__data__": {"id_": "ad193005-485e-4e29-96a4-491fdd35dfea", "embedding": null, "metadata": {"page_label": "93", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b972e0ab-89a7-4a7d-9ee7-da95b0db0dec", "node_type": "4", "metadata": {"page_label": "93", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "23751f2bc44bf566833795b5a1982db770a74bda442469fc07195ce070dc94dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0ab45e77-f50c-4e00-8e50-ed2b71eecf99", "node_type": "1", "metadata": {"page_label": "92", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf134c291c78603e54573d31a7456c5e769832ed722dd7503e2d6ce6c54b2fbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "977f82db-4052-4a02-9f02-3d48581e67cc", "node_type": "1", "metadata": {}, "hash": "f7a632617885f6cbf065a198489c34ab21808539f2304d763ba2394d861b7a5d", "class_name": "RelatedNodeInfo"}}, "hash": "73b550f11a3355372fb7495fc0a0cb74c77217a154e4da5905ecd773d24a205b", "text": "93 \n \nEjemplo.   El precio  de una pizza depende de su tama\u00f1o seg\u00fan la siguiente tabla:  \n \n       Tama\u00f1o          P recio  \n1  $5 \n2  $8 \n3  $12 \n Cada ingrediente adicional cuesta $1.5.    \n \nEscribir  un programa en Python  que lea el tama\u00f1o de la pizza y el n\u00famero de ingredientes  \nadicionales  y muestre el precio que debe pagar  \n \nInstrumentaci\u00f3n  \n \nVariables  \n    t:   Tama\u00f1o de pizza  \n     n:  N\u00famero de ingredientes  \n     p:  Valor a pagar  \n  Programa  \n \n#Compra de una pizza  \nt=int(input('Tama\u00f1o de la pizza:  ')) \nn=int(input('N\u00famero de ingredientes  adicionales:  ')) \nif t==1: \n      p=5+1.5*n  \nelif t==2: \n      p=8+1.5*n  \nelif t==3: \n      p=12+1.5*n  \nelse: \n      p=0  \nprint('Valor a pagar:  ', p) \n \n \nPrueba del programa  \n \n>>>  \nTama\u00f1o de la pizza: 2  \nN\u00famero de ingredientes adicionales: 3  \nValor a pagar:  12.5  \n>>> \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 873, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "977f82db-4052-4a02-9f02-3d48581e67cc": {"__data__": {"id_": "977f82db-4052-4a02-9f02-3d48581e67cc", "embedding": null, "metadata": {"page_label": "94", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6c178835-ea83-4d07-912d-79b6cf059cba", "node_type": "4", "metadata": {"page_label": "94", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2dbea390848c42159977a350b810180759359ef4abf482cb5e4c79db17294ed8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad193005-485e-4e29-96a4-491fdd35dfea", "node_type": "1", "metadata": {"page_label": "93", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "73b550f11a3355372fb7495fc0a0cb74c77217a154e4da5905ecd773d24a205b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1040b630-cbe0-4d2a-94db-c3b263f95c37", "node_type": "1", "metadata": {}, "hash": "b2dad346fdb82688f43f9d40e6c1e4c18aab9e1a549b0cb655a1082755f6ed35", "class_name": "RelatedNodeInfo"}}, "hash": "f7a632617885f6cbf065a198489c34ab21808539f2304d763ba2394d861b7a5d", "text": "94 \n \nEjemplo.  Use decisiones consecutivas para resolver  el ejemplo del pago de la cuenta en \nun restaurante  revisado en la secci\u00f3n anterior.  \n \nInstrumentaci\u00f3n  \n Variables  \n     c:  Valor de la cuenta a pagar  \n \nEn la soluci\u00f3n se usar\u00e1n decisiones consecutivas para seleccionar el caso respectivo  \n \n Programa  \n \n# Pago de una cuenta  \nc=float( input('Ingrese el valor de la cuenta: '))  \nif c<50: \n    print( 'Pago en efectivo')  \nelif 50<=c<=100:  \n    print( 'Pago con el celular (dinero electr\u00f3nico)')  \nelif 100<=c<=200:  \n    print( 'Pago con la tarjeta de d\u00e9bito')  \nelse: \n    print( 'Pago con la tarjeta de cr\u00e9dito')\n             \n \n \nPrueba del programa  \n>>>  \nIngrese el valor de la cuenta: 120.50 \nPago con la tarjeta de d\u00e9bito  \n>>>   \n \n  \n \n5.8.5 Ejercicios de programaci\u00f3n con decisiones \n  \nPara cada ejercicio escriba y pruebe un programa en la ventana de edici\u00f3n de Python.  \n 1. Dados el radio y altura de un cilindro, si la altura es mayor al radio calcule y muestre el \nvalor del volumen del cilindro, caso contrario muestre el valor del \u00e1rea del cilindro.  \n 2. Dados el radio y altura de un cilin dro, si la altura es mayor al radio calcule y muestre el \nvalor del volumen, caso contrario muestre el mensaje: 'Error'  \n 3. Dadas las dimensiones de un bloque rectangular, calcule las diagonales de las tres \ncaras diferentes. Muestre el valor de la mayor diagonal.  \n \n4. Lea un n\u00famero de dos cifras. Determinar si la suma de ambas cifras es un n\u00famero par o \nimpar. Muestre un mensaje  \n \n5. Lea un n\u00famero. Determine si es entero y m\u00faltiplo de 7  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1040b630-cbe0-4d2a-94db-c3b263f95c37": {"__data__": {"id_": "1040b630-cbe0-4d2a-94db-c3b263f95c37", "embedding": null, "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a67f4fc2-685f-4192-96d8-98c8069d925d", "node_type": "4", "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "58b0841cc7a48bb8628bdea92692f56370ea7bce3911d70fdd5574b94f48e1da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "977f82db-4052-4a02-9f02-3d48581e67cc", "node_type": "1", "metadata": {"page_label": "94", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f7a632617885f6cbf065a198489c34ab21808539f2304d763ba2394d861b7a5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5ed18b2-28a0-495e-8b65-6e98f2228c4a", "node_type": "1", "metadata": {}, "hash": "a99ef654a6604542d44cbf26e529c9f9c0f1027f6b9de02173b5261c3f6a346e", "class_name": "RelatedNodeInfo"}}, "hash": "b2dad346fdb82688f43f9d40e6c1e4c18aab9e1a549b0cb655a1082755f6ed35", "text": "95 \n \n6.  Lea la cantidad de Kw que ha consumido una familia y el precio por Kw. Si la cantidad \nes mayor a 700, incremente el precio en 5% para el exceso de Kw sobre 700. Muestre el \nvalor total a pagar.  \n \n7.  Lea un valor de temperatura t  y un c\u00f3digo p  que puede ser 1   o  2.  Si el c\u00f3digo es 1  \nconvierta la temperatura t de grados f  a grados c con la f\u00f3rmula c=5/9(t -32). Si el c\u00f3digo \nes 2 convierta la temperatura t de grados c a f con la f\u00f3rmula: f=32+9t/5, caso contrario \nmuestre un mensaje de error.  \n 8. Dadas las tres calificaciones de dos  estudiante s. La calificaci\u00f3n final de cada uno es la \nsuma de sus  dos mejores calificaciones.  Muestre un mensaje que indique cual estudiante \n(1 o 2) tiene la mayor calificaci\u00f3n final.  \n \n9. Dadas las tres calificaciones de un estudiante, encuentre y muestre la calificaci\u00f3n m ayor \ny la califiicaci\u00f3n menor  \n \n10. Dados los tres lados de un tri\u00e1ngulo determine su tipo: Equil\u00e1tero, Is\u00f2sceles, o \nEscaleno  \n \n11.  Dadas la abscisa y ordenada de dos puntos, calcule su distancia al origen y determine \ncual de los dos puntos (primero o segundo) est\u00e1 m\u00e1s cerca del origen. La respuesta \ndeber\u00e1 ser  un mensaje: \u2018Punto 1\u2019 o \u2018Punto 2\u2019  \n \nPunto  Abscisa  Ordenada  \n1 a b \n2 c d \n \nF\u00f3rmula de la distancia del punto ( x, y) al origen: 22xy+    \n \n12. Un local vende sus productos con la siguiente promoci\u00f3n. Si  compra hasta 5 art\u00edculos, \nno hay descuento. Si compra m\u00e1s de 5 art\u00edculos, pero menos de 10, el precio unitario se \nreduce en 5%.", "start_char_idx": 0, "end_char_idx": 1505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5ed18b2-28a0-495e-8b65-6e98f2228c4a": {"__data__": {"id_": "e5ed18b2-28a0-495e-8b65-6e98f2228c4a", "embedding": null, "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a67f4fc2-685f-4192-96d8-98c8069d925d", "node_type": "4", "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "58b0841cc7a48bb8628bdea92692f56370ea7bce3911d70fdd5574b94f48e1da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1040b630-cbe0-4d2a-94db-c3b263f95c37", "node_type": "1", "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b2dad346fdb82688f43f9d40e6c1e4c18aab9e1a549b0cb655a1082755f6ed35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8fc00fe-e84c-481e-a7d4-25bf3a733e33", "node_type": "1", "metadata": {}, "hash": "aaa53f24b71ae6d5f1254a6a11ce6aa5d7a321a204cdcb285bc5205a9d5b4f70", "class_name": "RelatedNodeInfo"}}, "hash": "a99ef654a6604542d44cbf26e529c9f9c0f1027f6b9de02173b5261c3f6a346e", "text": "Si compra 10 o m\u00e1s art\u00edculos, el precio unitario se reduce en 8%. Ingrese \nun dato de cantidad y el valor del precio unitario or iginal. Calcule y muestre el valor total a \npagar.  \n 13. Juan, Pedro y Jos\u00e9 trabajan en una empresa que paga semanalmente. Ingrese para \ncada uno los siguientes datos del trabajo semanal: horas trabajadas, salario por hora, y descuentos.  Calcule el pago semanal que recibir\u00e1 cada uno y determine cual de los tres \nrecibir\u00e1 el mayor pago semanal. No  considere el pago de horas extras.  \n \n14. Lea las dimensiones de un bloque rectangular (largo, ancho y altura del bloque), y el \ndi\u00e1metro de un agujero. Determine si es posible que el bloque pueda pasar por el agujero.  \n \nSugerencia: Calcule cada una de las tres diagonales del bloque. Si alguna de ellas tiene \nun valor menor al di\u00e1metro del agujero muestre el mensaje: \u2018Si pasa por el agujero\u2019.  \n  \n \nPython Programaci\u00f3n", "start_char_idx": 1506, "end_char_idx": 2412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8fc00fe-e84c-481e-a7d4-25bf3a733e33": {"__data__": {"id_": "c8fc00fe-e84c-481e-a7d4-25bf3a733e33", "embedding": null, "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e30d8ba2-8b1b-4636-ad4c-1de448534ed1", "node_type": "4", "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "efa3a320fc4e05ac3e44f7562fd2d8d181b7c258d7fb290d4fb3f69d6ab5945e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5ed18b2-28a0-495e-8b65-6e98f2228c4a", "node_type": "1", "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a99ef654a6604542d44cbf26e529c9f9c0f1027f6b9de02173b5261c3f6a346e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "323e4f66-5874-49d9-be31-72e3c95af2d8", "node_type": "1", "metadata": {}, "hash": "e514bc70ca9baef416fae484ab6fbe9c3b1445645e0f9645d2f51c6327b06fe0", "class_name": "RelatedNodeInfo"}}, "hash": "aaa53f24b71ae6d5f1254a6a11ce6aa5d7a321a204cdcb285bc5205a9d5b4f70", "text": "96 \n \n15. Un c\u00f3digo de tres cifras debe cumplir la siguiente regla para que sea v\u00e0lido: La tercera \ncifra debe ser igual al m\u00f2dulo 10 del producto de las dos primeras cifras. Escriba un \nprograma que lea un c\u00f3digo y verifique si cumple la regla anterior. Muestre un mensaje \ncorrespondiente.  \n Ejemplo . 384 es un c\u00f3digo v\u00e0lido pues el m\u00f3dulo de 3x8 en 10  es igual a 4 \n \n \n16. El n\u00famero de pulsaciones que debe tener una persona por cada 10 segundos de \nejercicio aer\u00f3bico se calcula con la f\u00f3rmula:  \n \nG\u00e9nero femenino  (1):    n\u00famero de pulsaciones = (220 - edad en a\u00f1os)/10  \nG\u00e9nero masculino (2):    n\u00famero de pulsaciones = (210 -  edad en a\u00f1os)/10 \n \nLea la edad y el g\u00e9nero y muestre el n\u00famero de pulsaciones . \n \n17. El \u00edndice de masa corporal IMC de una persona se calcula con la f\u00f3rmula IMC=P/ T\n2 en \ndonde P es el peso en Kg. y T es la talla en metros.  \n \nLea un valor de P y de T, calcule el IMC y muestre su estado  seg\u00fan la siguiente tabla:  \n    IMC     Estado  \n Menos de 18.5  Desnutri do \n [18.5 a 25.5]   Peso Normal  \n M\u00e1s de 25.5  Sobrepeso \n \n18. Otro reporte de salud m uestra una tabla diferente del \u00edndice de masa corporal IMC de \nuna persona que se calcula con la f\u00f3rmula IMC=P/ T2 en donde P es el peso en Kg. y T es \nla talla en metros.", "start_char_idx": 0, "end_char_idx": 1268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "323e4f66-5874-49d9-be31-72e3c95af2d8": {"__data__": {"id_": "323e4f66-5874-49d9-be31-72e3c95af2d8", "embedding": null, "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e30d8ba2-8b1b-4636-ad4c-1de448534ed1", "node_type": "4", "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "efa3a320fc4e05ac3e44f7562fd2d8d181b7c258d7fb290d4fb3f69d6ab5945e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8fc00fe-e84c-481e-a7d4-25bf3a733e33", "node_type": "1", "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aaa53f24b71ae6d5f1254a6a11ce6aa5d7a321a204cdcb285bc5205a9d5b4f70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf04fc64-6c4f-4472-9733-c7f4f137b5f8", "node_type": "1", "metadata": {}, "hash": "036648ef5f5cfb48388277badf10addd3025a6f0d3863945ae5f2a9f560b9c82", "class_name": "RelatedNodeInfo"}}, "hash": "e514bc70ca9baef416fae484ab6fbe9c3b1445645e0f9645d2f51c6327b06fe0", "text": "y T es \nla talla en metros.  \n Lea un valor de P y de T, calcule el IMC y muestre su estado  seg\u00fan la siguiente tabla : \n             IMC                Estado  \nMeno r a 20 Desnutrido  \n[20, 25)  Normal  \n[25,30)   Sobrepeso \n[30,35)   Obesidad Grado 1 \n[35,40)   Obesidad Grado 2 \nMayor a 40  Obesidad Grado 3 \n \n19.  En un concurso hay tres jueces. La opini\u00f3n del juez es 1 si est\u00e1 a favor  y 0 si est\u00e1 en \ncontra.  Para que un participante pueda continuar en el concurso debe tener al menos dos \nvotos favorables. Escriba un algoritmo que lea los votos de los tres jueces y muestre el \nresultado mediante un mensaje: CONTINUA  o  ELIMINADO. No sume votos. Debe \ncompararlos.  \n \n20.  Dadas las dimensiones de un bloque rectangular, calcule y muestre el \u00e1rea de la cara \nde mayor dimensi\u00f3n.  \n \n21.  Se conocen tres de los cuatro n\u00fameros de una matriz cuadrada de tama\u00f1o 2. Lea \nestos tres n\u00fameros y determine cual debe ser el cuarto n\u00famero para que el determinante de la matriz sea igual a 0.  \nPython Programaci\u00f3n", "start_char_idx": 1241, "end_char_idx": 2259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf04fc64-6c4f-4472-9733-c7f4f137b5f8": {"__data__": {"id_": "cf04fc64-6c4f-4472-9733-c7f4f137b5f8", "embedding": null, "metadata": {"page_label": "97", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2cf7473-a863-4f51-b591-50276ab9f6db", "node_type": "4", "metadata": {"page_label": "97", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "52fdee3b68ba590a04f67593b3a52d83915db924b1df794b667d68a6d14835b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "323e4f66-5874-49d9-be31-72e3c95af2d8", "node_type": "1", "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e514bc70ca9baef416fae484ab6fbe9c3b1445645e0f9645d2f51c6327b06fe0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f06ebad7-e3b4-414b-bc32-1afd2fa78f2b", "node_type": "1", "metadata": {}, "hash": "d66aa0f0a53be317d76275d33283906c7118d2730f68b9f248a06280acba17f9", "class_name": "RelatedNodeInfo"}}, "hash": "036648ef5f5cfb48388277badf10addd3025a6f0d3863945ae5f2a9f560b9c82", "text": "97 \n \n \n22. Lea un n\u00famero  x   y los n\u00fameros  a, b .  Suponga que  a<b . y que  x  \u2260 a ,  x \u2260 b . \nDetermine en que lugar se encuentra el n\u00famero  x ,  antes de a , entre  a  y b  o despu\u00e9s de  \nb. Muestre un mensaje.  \n \n23. Lea las tres calificaciones que obtuvo un estudiante en una materia. No suponga que \nestos tres n\u00fameros est\u00e1n ordenados. Describa como ordenarlos en forma ascendente y muestre los n\u00fameros ordenados  \n \n24. Lea los n\u00fameros de matr\u00edcul a de tres estudiantes que toman la materia A y los \nn\u00fameros de matr\u00edcula de tres estudiantes que toman la materia B. Encuentre cuantos estudiantes que toman la materia A, tambi\u00e9n toman la materia B.  \n \n25. Un almac\u00e9n ofrece un producto con descuento seg\u00fan la siguiente tabla:  \n          Kilos comprados          Precio por kilo  \n   Menos de 3    $2.4 \n   [3 a 6)    $2.3 \n   [6 a 10)    $2.1 \n   M\u00e1s de 10    $1.85 \nLea la cantidad comprada y determine cuanto debe pagar.  \n \n \n26. Traduzca al lenguaje Python los algoritmos de l os ejemplos 1  y 2 de la Secci\u00f3n  3.5 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1050, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f06ebad7-e3b4-414b-bc32-1afd2fa78f2b": {"__data__": {"id_": "f06ebad7-e3b4-414b-bc32-1afd2fa78f2b", "embedding": null, "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a828857b-34c1-4414-a711-577a900dc233", "node_type": "4", "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e57981b558c46092ba1dbd213699f2874d6d0fc20840774960f6d7a5ac8484ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf04fc64-6c4f-4472-9733-c7f4f137b5f8", "node_type": "1", "metadata": {"page_label": "97", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "036648ef5f5cfb48388277badf10addd3025a6f0d3863945ae5f2a9f560b9c82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d4d11d4-994f-4c71-af58-ce72ecc7adc8", "node_type": "1", "metadata": {}, "hash": "b6e0e20a3e6cf0d1eaa551f8f00d818cf413085d0439349fbee855bc47beb219", "class_name": "RelatedNodeInfo"}}, "hash": "d66aa0f0a53be317d76275d33283906c7118d2730f68b9f248a06280acba17f9", "text": "98 \n \n5.9 N\u00fameros aleatorios  \n \nLos n\u00fameros aleatorios son valores  que est\u00e1n en un rango de posibles resultados pero no \nse puede predecir  cual es el resultado que se obtendr\u00e1 al tomar alguno. Por ejemplo, al \nlanzar un dado no podemos afirmar cual resultado se obtendr \u00e1 entre los seis n\u00fameros \nposibles.  \n \nLos lenguajes computacionales tiene n funciones  especiales para generar n\u00fameros \naleatorios , los cuales son  \u00fatiles para muchas aplicaciones de inter\u00e9s.  \n El m\u00f3dulo random  es una libr er\u00eda de Python que contiene funciones para generar \nn\u00fameros aleatorios . Para acceder a este m\u00f3dulo especial se lo debe cargar con la \nsiguiente directiva:  \n \nfrom random import*  \n \nAlgunas funciones b\u00e1sicas del m\u00f3dulo random:  \n \na)  Generar un n\u00famero aleatorio real en el intervalo semi abierto  [0,  1)  \n \n  random()  \n \nb)  Generar un n\u00famero aleatorio entero en el intervalo [a, b]  incluyendo los extremos  \n \n  randint(a,b)  \n \nc)  Iniciar una secuencia de n\u00fameros aleatorios  con una semilla dada  \n \nseed(n) \n \nLa semilla  n, es un entero positivo. Es un  valor que usa el generador de n\u00fameros \naleatorios para construir la secuencia. El uso de seed  es opcional. Si se especifica \ndebe escribirse al inicio. Esto har\u00e1 que la secuencia se repita en cada prueba.  \n d)  Elegir aleatoriamente un elemento de una lista  \n \nchoice(s)     \n \ne)  Desordenar aleatoriamente los elementos de una lista \n \nshuffle( s) \n \nEn estas instrucciones  s  representa una lista cuyos elementos  pueden tener  \ndiferente tipo.  Las listas  se estudiar\u00e1n en un capitulo posterior.", "start_char_idx": 0, "end_char_idx": 1572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d4d11d4-994f-4c71-af58-ce72ecc7adc8": {"__data__": {"id_": "7d4d11d4-994f-4c71-af58-ce72ecc7adc8", "embedding": null, "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a828857b-34c1-4414-a711-577a900dc233", "node_type": "4", "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e57981b558c46092ba1dbd213699f2874d6d0fc20840774960f6d7a5ac8484ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f06ebad7-e3b4-414b-bc32-1afd2fa78f2b", "node_type": "1", "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d66aa0f0a53be317d76275d33283906c7118d2730f68b9f248a06280acba17f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "585b52c7-3ad6-4145-816f-9936b1e2ae2c", "node_type": "1", "metadata": {}, "hash": "6d0d3f9dce5846d935520bbc3a9d976e0635252a5d147623e1d9ccc19093c202", "class_name": "RelatedNodeInfo"}}, "hash": "b6e0e20a3e6cf0d1eaa551f8f00d818cf413085d0439349fbee855bc47beb219", "text": "Las listas  se estudiar\u00e1n en un capitulo posterior.  \n \nf)  Generar un n\u00famero aleatori o con distribuci\u00f3n Normal o Gaussiana  \n \n      gauss(mu,sigma)  \n \nmu  es la media, sigma   es la desviaci\u00f3n est\u00e1ndar  \n \ng)  Obten er una muestra de  k  elementos diferentes  de una lista ( poblaci\u00f3n )   p \n      Las listas  se estudiar\u00e1n en un capitulo posterior.  \n \n  sample(p,k)  \nPython Programaci\u00f3n", "start_char_idx": 1521, "end_char_idx": 1914, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "585b52c7-3ad6-4145-816f-9936b1e2ae2c": {"__data__": {"id_": "585b52c7-3ad6-4145-816f-9936b1e2ae2c", "embedding": null, "metadata": {"page_label": "99", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e1fa239-18f8-4d19-96a7-bdfc9c1eee60", "node_type": "4", "metadata": {"page_label": "99", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b45ec48574d91691bd1be59d336e60f9070a3e71e7c6256627c5687f6394a4bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d4d11d4-994f-4c71-af58-ce72ecc7adc8", "node_type": "1", "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6e0e20a3e6cf0d1eaa551f8f00d818cf413085d0439349fbee855bc47beb219", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ee1ca9d-8f97-4a50-9ae2-326fecca49fc", "node_type": "1", "metadata": {}, "hash": "5b9cee5213afd38b5a174c569128949ab745c087cbfbe8407183bc6e05d42f9b", "class_name": "RelatedNodeInfo"}}, "hash": "6d0d3f9dce5846d935520bbc3a9d976e0635252a5d147623e1d9ccc19093c202", "text": "99 \n \nEjemplos. Uso de las funciones del m\u00f3dulo   random  en la ventana interactiva \n \n>>> from random import* \n>>> x=random()  \n>>> x \n0.9635612618951365  \n>>> r=randint(1,6)  \n>>> r \n3 \n>>> s=[10,90,20,40,50]           Crear  una lista \n>>> shuffle(s)        Desordenar la lista \n>>> s \n[40, 50, 10, 20, 90]        \n>>> c=choice(s)  \n>>> c \n50 \n>>> v=gauss(10,2)  \n>>> v \n9.31986340769587  \n>>> \n \n \nEjemplo.  Escribir  un programa que genere un n\u00famero aleatorio de un dado. Si sale  6  \nmuestre el mensaje:  \u2018Afortunado\u2019 , caso contrario muestre el n\u00famero que se obtuvo y el \nmensaje: \u2018 No hubo suerte hoy\u2019 \n \nInstrumentaci\u00f3n  \n \n \nVariable  \n n: n\u00famero aleatorio entre 1 y 6  \n \n Programa  \n \n# N\u00famero de un dado  \nfrom random import * \nn=randint(1, 6)  \nif n==6: \n    print( 'Afortunado')  \nelse: \n    print( 'Sali\u00f3: ',n)  \n    print( 'No hubo suerte hoy' ) \n \n \nPrueba del programa  \n \n>>>  \nSali\u00f3 3 \nNo hubo suerte hoy  \n>>> \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ee1ca9d-8f97-4a50-9ae2-326fecca49fc": {"__data__": {"id_": "7ee1ca9d-8f97-4a50-9ae2-326fecca49fc", "embedding": null, "metadata": {"page_label": "100", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9d78de3-3142-4940-9111-304069374948", "node_type": "4", "metadata": {"page_label": "100", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c3f6db1c678a1d36442b82d5bc2991f42580027e7c687b95563f0d99c8fe3030", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "585b52c7-3ad6-4145-816f-9936b1e2ae2c", "node_type": "1", "metadata": {"page_label": "99", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d0d3f9dce5846d935520bbc3a9d976e0635252a5d147623e1d9ccc19093c202", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b80d02e-3acc-4aec-a4f6-fc6dcee5212d", "node_type": "1", "metadata": {}, "hash": "59cea2c36ef1532cf5ca61a013361495aacbebe76fe18ec7d09322f4c30a13bc", "class_name": "RelatedNodeInfo"}}, "hash": "5b9cee5213afd38b5a174c569128949ab745c087cbfbe8407183bc6e05d42f9b", "text": "100 \n \n5.10   Estructuras de repetici\u00f3n o ciclos  en Python \n \nEstas estructuras de control se usan para describir la ejecuci\u00f3n repetida de un bloque de \ninstrucciones.  El objetivo es colocar el bloque de instruciones dentro de un ciclo como se \nmuestra en el gr\u00e1fico. Sin embargo, es necesario agregar un dispositivo que permita salir del ciclo para que el algoritmo pueda continuar:  \n \n                 \n                                \n                                                   \n  \n            P \n  \n \n  \nHay tres formas comunes que se usan para salir de una estructura de repetici\u00f3n. Dos de \nellas usan una condici\u00f3n para salir del ciclo. Esta condic i\u00f3n puede estar al inicio o al final.  \nLa otra forma, utiliza los valores de un conteo o una secuencia de valores para controlar la \nrepetici\u00f3n.  \n \n \n5.10.1 Ejecuci\u00f3n repetida de un bloque mediante una condici\u00f3n al inicio  \n \nRepresentaci\u00f3n gr\u00e1fica \n \n \n \n                 F \n                                Mientras condici\u00f3n  \n \n                                                  V  \n  \n            P \n  \n \n \n \n \n \n \nAl entrar a esta estructura, se eval\u00faa la condici\u00f3n. Si el resultado es verdadero ( V) se \nejecutar\u00e1n las inst rucciones en el bloque y regresar\u00e1 nuevamente a evaluar la condici\u00f3n.  \n \nMientras la condici\u00f3n mantenga el valor verdadero el bloque de instrucciones seguir\u00e1 \nejecut\u00e1ndose. Esto significa que es necesario que en alg\u00fan ciclo la condici\u00f3n t ome el \nresultado fal so (F) para salir de la estructura y continuar la ejecuci\u00f3n despu\u00e9s del bloque.  \n La condici\u00f3n es cualquier expresi\u00f3n cuyo resultado puede ser \u00fanicamente verdadero ( V) o \nfalso ( F). Puede incluir operadores para comparar el contenido de variables y tambi\u00e9n s e \npueden usar los conectores de la l\u00f3gica matem\u00e1tica.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b80d02e-3acc-4aec-a4f6-fc6dcee5212d": {"__data__": {"id_": "2b80d02e-3acc-4aec-a4f6-fc6dcee5212d", "embedding": null, "metadata": {"page_label": "101", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6350d9ad-cdeb-45c2-96f9-3f7960333f83", "node_type": "4", "metadata": {"page_label": "101", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "08f00b797e256382ac6312a4a0d0a204094f47c9d676f9ea427694af7540262f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ee1ca9d-8f97-4a50-9ae2-326fecca49fc", "node_type": "1", "metadata": {"page_label": "100", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5b9cee5213afd38b5a174c569128949ab745c087cbfbe8407183bc6e05d42f9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8535e12e-d74f-45ba-b907-536b1a1c65c9", "node_type": "1", "metadata": {}, "hash": "00044eb0823da5889481240e53c69c2189d71c37b02b7fdd9bd4d673027bdfbc", "class_name": "RelatedNodeInfo"}}, "hash": "59cea2c36ef1532cf5ca61a013361495aacbebe76fe18ec7d09322f4c30a13bc", "text": "101 \n \n Seudo lenguaje  \n \n Mientras   condici\u00f3n \n \n  P \n \nFin \n \n \nLenguaje Python \n \n while  c ondici\u00f3n:  \n   Instrucci\u00f3n  en el bloque  P   \n   Instrucci\u00f3n  en el bloque  P  \n   . . . \n Instrucci\u00f3n  en el bloque  P  \n \n \nEl bloque de las instrucciones que se repetir\u00e1n est\u00e1 definido mediante el \nencolumnamiento . Las instrucciones que se repetir\u00e1n deben escribirse desplazadas \nalgunas column as a la derecha de la palabra while.  Todas deben tener el mismo \nencolumnamiento . \n \nEjemplo.  Simular  lanzamientos de un dado. Muestre el resultado en cada intento. Finalice \ncuando  salga el n\u00famero 3. \n \nInstrumentaci\u00f3n  \n \nVariable  \n         x:  resultado del dado en cada lanzamiento. Inicialmente un valor nulo para entrar al  \n   ciclo. Note este artificio \u00fatil  para usar la estructura while  \n \nPrograma  \n \n#Simular el lanzamiento de un dado hasta que salga el n\u00famero 3  \nfrom random import * \nx=0 \nwhile x!=3: \n    x=randint(1, 6)  \n    print(x) \n \n \nPrueba del programa  \n>>>  \n2 \n6 \n6 \n1 \n6 \n4 \n3 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8535e12e-d74f-45ba-b907-536b1a1c65c9": {"__data__": {"id_": "8535e12e-d74f-45ba-b907-536b1a1c65c9", "embedding": null, "metadata": {"page_label": "102", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16afd148-6c54-4664-bf37-65a82b515bab", "node_type": "4", "metadata": {"page_label": "102", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4700e93ad7c0e41fa8f6d14251317e4535022283f45023916710511f5deeeb90", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b80d02e-3acc-4aec-a4f6-fc6dcee5212d", "node_type": "1", "metadata": {"page_label": "101", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59cea2c36ef1532cf5ca61a013361495aacbebe76fe18ec7d09322f4c30a13bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "52bb2a95-fd18-4ef5-abb6-0fe176a21fee", "node_type": "1", "metadata": {}, "hash": "b6e9179dde65c80d26fd7b8a4aca74d7534f5e0bf32d12874c3914dcf5687abb", "class_name": "RelatedNodeInfo"}}, "hash": "00044eb0823da5889481240e53c69c2189d71c37b02b7fdd9bd4d673027bdfbc", "text": "102 \n \n \nEl uso de la estructura while en este ejemplo es  natural pues no se conoce la cantidad de \nrepeticiones que deben realizarse para que se cumpla la condici\u00f3n y pueda salir del ciclo.  \n \nNota. Observ e el siguiente programa que incluye un cambio menor respecto al programa \nanterior. \u00bfCual es el resul tado que se obtendr\u00e1? \n \n \n#Simular el lanzamiento de un dado hasta que sale un n\u00famero  \nfrom random import * \nx=0 \nwhile x!=3: \n    x=randint(1, 6)  \nprint(x)  \n \n \nRespuesta: El encolumnamiento de la instrucci\u00f3n  print   la saca del bloque que se repite \nen el ciclo. P or lo tanto solamente se mostrar\u00e1 el valor final de la variable x . \n \nSi es de inter\u00e9s conocer el n\u00famero de repeticiones realizadas se debe incluir una variable \npara efectuar el conteo como se muestra en el siguiente ejemplo.  \n \n Ejemplo.  Simular lanzamientos de un dado. Determinar la cantidad de lanzamientos que \nse realizaron hasta que se obtuvo el n\u00famero 3 . \n \nInstrumentaci\u00f3n  \n \nVariables  \nx:  R esultado del dado en cada lanzamiento. Al inicio el valor 0 para entrar al ciclo \nc:  C onteo de repeticiones  \n Programa  \n \n#Conteo de lanzamientos de un dado  \nfrom random import * \nc=0 \nx=0 \nwhile x!=3: \n    x=randint(1, 6)  \n    c=c+1  \nprint('Cantidad de lanzamientos hasta que sali\u00f3 el 3: ', c) \n \n \nPrueba del programa  \n \n>>>  \nCantidad de lanzamientos hasta que sali\u00f3 el 3:  5  \n>>> \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52bb2a95-fd18-4ef5-abb6-0fe176a21fee": {"__data__": {"id_": "52bb2a95-fd18-4ef5-abb6-0fe176a21fee", "embedding": null, "metadata": {"page_label": "103", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7f67a0a-a134-4ef1-ab79-4a26a38e9066", "node_type": "4", "metadata": {"page_label": "103", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a3341034ef78ef6ea00dacad79a5eb1db76265ed43fc7940886a55db109a3828", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8535e12e-d74f-45ba-b907-536b1a1c65c9", "node_type": "1", "metadata": {"page_label": "102", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "00044eb0823da5889481240e53c69c2189d71c37b02b7fdd9bd4d673027bdfbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5b36131-b13b-4305-84e6-df71a137e93f", "node_type": "1", "metadata": {}, "hash": "55e8313b803acb549d09f25f25b50ad7e3ea129471315dc48c72be5748c6005b", "class_name": "RelatedNodeInfo"}}, "hash": "b6e9179dde65c80d26fd7b8a4aca74d7534f5e0bf32d12874c3914dcf5687abb", "text": "103 \n \nEjemplo. Suma de los cuadrados de los primeros  n\u00fameros naturales  \n \nInstrumentaci\u00f3n  \n \nVariables  \n  n: dato (n\u00famero natural  hasta el que se llegar\u00e1)  \n  s: suma de cuadrados  \n  i:  cada n\u00famero natural  \n  Programa  \n   \n#Suma de cuadrados  \nn=int(input('Ingrese el valor fin al: ')) \ns=0 \ni=1 \nwhile i<=n: \n    c=i**2  \n    s=s+c  \n    i=i+1 \nprint('La suma es: ', s) \n \nPrueba del programa  \n >>>  \nIngrese el valor final: 20  \nLa suma es:  2870  \n \n \nEjemplo. Describir  en notaci\u00f3n Python una soluci\u00f3n para el siguiente problema usando la \nestructura de ciclos condicionada.  \n \nEn un cultivo se tiene una cantidad inicial de bacterias. Cada d\u00eda esta cantidad se duplica. \nDetermine en que d\u00eda la cantidad excede a un valor m\u00e1ximo.   \n \nInstrumentaci\u00f3n  \n Variables  \n     x:  Cantidad inicial de bacterias  \n     m: Cant idad m\u00e1xima de bacterias \n   d:  D\u00eda  \n Programa  \n \n#Crecimiento de la cantidad de bacterias  \nx=int(input('Ingrese la cantidad inicial  '))  \nm=int(input('Ingrese la cantidad m\u00e1xima '))  \nd=0; \nwhile x<=m: \n    x=2*x  \n    d=d+1  \nprint('La cantidad excede al m\u00e1ximo en el dia:  ', d)  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5b36131-b13b-4305-84e6-df71a137e93f": {"__data__": {"id_": "e5b36131-b13b-4305-84e6-df71a137e93f", "embedding": null, "metadata": {"page_label": "104", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e72a25e3-5f06-4283-893d-7e6d16d6ef96", "node_type": "4", "metadata": {"page_label": "104", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2abdcf6f7e1ead0b996e6fcf8e12caf1b17e143c36acf1e05eceaac60b6267c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "52bb2a95-fd18-4ef5-abb6-0fe176a21fee", "node_type": "1", "metadata": {"page_label": "103", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6e9179dde65c80d26fd7b8a4aca74d7534f5e0bf32d12874c3914dcf5687abb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14c3a972-1adb-42fc-9b15-6d84f600cd0b", "node_type": "1", "metadata": {}, "hash": "2a2e7c3eb807d522b5a1dd2d072ba6ce7ad04961005aa246856bd4b68bbdde9d", "class_name": "RelatedNodeInfo"}}, "hash": "55e8313b803acb549d09f25f25b50ad7e3ea129471315dc48c72be5748c6005b", "text": "104 \n \nPrueba del programa  \n \n>>>  \nIngrese la cantidad inicial  200  \nIngrese la cantidad m\u00e1xima  5000 \nLa cantidad excede al m\u00e1ximo en el dia:   5  \n  \nEjemplo.  Dado un n\u00famero entero, genere una secuencia  num\u00e9rica con la siguiente regla. \nEsta secuencia se denomina de Ulam. Esta secuencia siempre llega al n\u00famero 1 \n x /2,   x parx3x 1,   x impar\uf8f1=\uf8f2+\uf8f3  \n Una prueba manual de esta definici\u00f3n  \nx  \n20 Valor inicial  \n10 par \n5 impar  \n16 par \n8 par \n4 par \n2 par \n1 valor final  \n \n \nInstrumentaci\u00f3n  \n \nVariable  \n x:  n\u00famero entero positivo \n \nPrograma  \n  \n# Secuencia de Ulam  \nx=int(input('Ingrese el dato inicial: '))  \nwhile x>1: \n    if x%2 == 0: \n        x=x//2  \n    else:  \n        x=3*x+1  \n    print(x)  \n    \nEste ejemplo muestra un tema de inter \u00e9s: u na estructura de decisi\u00f3n dentro de un ci clo.  \n \nObserve el encolumnamiento de las instrucciones q ue define cuales pertenecen a cada \nestructura de control.  El encolumnamiento de instrucciones es obligatorio en el lenguaje Python.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1031, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14c3a972-1adb-42fc-9b15-6d84f600cd0b": {"__data__": {"id_": "14c3a972-1adb-42fc-9b15-6d84f600cd0b", "embedding": null, "metadata": {"page_label": "105", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b45bdd31-0df5-4a22-926b-af65315a0d01", "node_type": "4", "metadata": {"page_label": "105", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1a2a8bcca1a48955f18120ea0f4884d7587c564b51d30e4ea1e55a27ceb33c5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5b36131-b13b-4305-84e6-df71a137e93f", "node_type": "1", "metadata": {"page_label": "104", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "55e8313b803acb549d09f25f25b50ad7e3ea129471315dc48c72be5748c6005b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d630e019-20f3-4d3c-a085-13210a7fbf98", "node_type": "1", "metadata": {}, "hash": "b2e644d66a5d985a6b06266fbb613c806aeeb93cb71727e4e4d425577722f001", "class_name": "RelatedNodeInfo"}}, "hash": "2a2e7c3eb807d522b5a1dd2d072ba6ce7ad04961005aa246856bd4b68bbdde9d", "text": "105 \n \nPrueba del programa  \n>>>  \nIngrese el dato inicial: 20 \n10 \n5 \n16 \n8 \n4 \n2 \n1 \n>>>  \n  \n \n5.10.2 Ejecuci\u00f3n repetida de un bloque mediante una secuencia de valores  \n \nEsta es tructura  es muy usada para controlar la repetici\u00f3n de bloques de instrucciones.  \n \nEl control del ciclo se realiza mediante una secuencia  de valores . \n \nRepresentaci\u00f3n  gr\u00e1fica \n \n \n \n                  F \n                              Para   v \u2190 secuencia  \n \n                                                  V  \n  \n            \nP \n \n \n \n \n \n \n \n \nPara usar esta estructura de repetici\u00f3n es necesario especificar una variable y una \nsecuencia de los valores que puede tomar. El ciclo se repetir\u00e1 con cada valor especificado \npara la variable.   \n \nAl entrar a esta estructura se inicia la variable de control. Con cada valor que toma esta \nvariable se ejecuta el bloque de instrucciones . A con tinuaci\u00f3n, el flujo r egresa nuevamente \nal inicio del ciclo y la variable toma el siguiente valor de la secuencia. Cuando el valor de la \nvariable llegue al valor final, el ciclo finalizar\u00e1 y la ejecuci\u00f3n continuar\u00e1 despu\u00e9s del bloque.  \n \nLa variable de control del ciclo puede especificarse con alguna notaci\u00f3n que exprese \ncuales son los valores que puede tomar.  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d630e019-20f3-4d3c-a085-13210a7fbf98": {"__data__": {"id_": "d630e019-20f3-4d3c-a085-13210a7fbf98", "embedding": null, "metadata": {"page_label": "106", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5084c12c-3adf-4409-a4d2-c17e4728019e", "node_type": "4", "metadata": {"page_label": "106", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1d71af446d588dff1ac687d98b4ef20bacfacbb17f4b4e63853481ee10a82257", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14c3a972-1adb-42fc-9b15-6d84f600cd0b", "node_type": "1", "metadata": {"page_label": "105", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a2e7c3eb807d522b5a1dd2d072ba6ce7ad04961005aa246856bd4b68bbdde9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "204b500d-e974-41f9-9d93-4004f3e6057b", "node_type": "1", "metadata": {}, "hash": "c86407ea79c888d7e581793b3be4fc0fada22a37d69f3f61866df284229e805d", "class_name": "RelatedNodeInfo"}}, "hash": "b2e644d66a5d985a6b06266fbb613c806aeeb93cb71727e4e4d425577722f001", "text": "106 \n \nSeudo lenguaje  \n \nPara   v \u2190 secuencia \n \n  P \n \nFin \n \n \nLenguaje Python \n \nEn el lenguaje de Python e xisten dos formas de especificar la repetici\u00f3n controiada por \nuna secuencia:   \n \na) Secuencia definida mediante una lista   \n \nSe puede especificar una secuencia mediante una lista de valores escritos entre \ncorchetes  [ ]  o entre par\u00e9ntesis  ( )  con el siguiente formato:  \n \n  for  v  in secuencia:  \n   instrucci\u00f3n en el bloque P \ninstrucci\u00f3n en el bloque P \n. . . \ninstrucci\u00f3n en el bloque P \n \n \nEn donde v  es la variable que recorre la secuencia y P  es el bloque que contiene las \ninstrucciones que se desea repetir . \n \nEl bloque de las instrucciones que se repetir\u00e1n est\u00e1 definido mediante el \nencolumnamiento. Las instrucciones que se repetir\u00e1n deben escribirse desplazadas \nalgunas columnas a la derecha de la palabra for . Todas deben tener el mismo \nencolumnamiento . \n \n  Ejemplos.   Las siguientes listas son ejemplos de secuencias  de control para el ciclo for : \n   [2, 5, 7, 8, 9, 5, 4]  \n \n  ['Enero', 'Febrero ', 'Marzo', 'Abril', 'Mayo']  \n   \n  [3.5, 2.8, 0.75, 4.3, 7.6]  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1136, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "204b500d-e974-41f9-9d93-4004f3e6057b": {"__data__": {"id_": "204b500d-e974-41f9-9d93-4004f3e6057b", "embedding": null, "metadata": {"page_label": "107", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f675e1a7-f2e1-4ffa-9d4d-fff755221d21", "node_type": "4", "metadata": {"page_label": "107", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "904d11aab26a13433ee082a975a9838a90e5c68ae69c562e08c755691ab482a6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d630e019-20f3-4d3c-a085-13210a7fbf98", "node_type": "1", "metadata": {"page_label": "106", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b2e644d66a5d985a6b06266fbb613c806aeeb93cb71727e4e4d425577722f001", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f327e1a3-c7eb-463b-bb92-e760be1ef9ea", "node_type": "1", "metadata": {}, "hash": "d13e02b0dd3a5130ce1bfa0f8806a67bfc39f4a93335e57762f6c254bf12cf73", "class_name": "RelatedNodeInfo"}}, "hash": "c86407ea79c888d7e581793b3be4fc0fada22a37d69f3f61866df284229e805d", "text": "107 \n \nEjemplo. Describir  un ciclo para mostrar cada entero entre 1 y 5   junto con su cuadrado \n \n \n  \nfor n in [1, 2, 3, 4, 5]:  \n    c=n**2 \n    print(n,c)  \n   \n \nPrueba del programa  \n>>>  \n1 1 2 4 \n3 9 \n4 16 \n5 25  \n Los elementos de la lista pueden estar en cualquier orden  y pueden estar repetidos : \n \n  \nfor n in [3, 2, 5, 1, 5, 4]:  \n    c=n**2 \n    print(n,c)  \n   \n \nPrueba del programa  \n>>>  \n3 9 \n2 4 5 25 \n1 1 \n5 25 \n4 16 \n \nEjemplo. Describir  un ciclo que muestre  cada nombre de las provincias de la costa \necuatoriana.  \n \n  \nfor p in ['Guayas' ,'Los Rios', 'El Oro',  'Manab\u00ed',  \n          'Sta. Elena', 'Esmeraldas' ]: \n    print( 'Provincia: ', p) \n   \n \nPrueba del program a \n>>>  \nProvincia:  Guayas  \nProvincia:  Los Rios  \nProvincia:  El Oro  \nProvincia:  Manab\u00ed  \nProvincia:  Sta. Elena  \nProvincia:  Esmeraldas  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f327e1a3-c7eb-463b-bb92-e760be1ef9ea": {"__data__": {"id_": "f327e1a3-c7eb-463b-bb92-e760be1ef9ea", "embedding": null, "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92922613-6405-4107-b763-a7ed65cf5968", "node_type": "4", "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "93fc4fe64766a8d4fe48b4e06a90477f6fe4bcf6bc06ecc920dc6f15719f63f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "204b500d-e974-41f9-9d93-4004f3e6057b", "node_type": "1", "metadata": {"page_label": "107", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c86407ea79c888d7e581793b3be4fc0fada22a37d69f3f61866df284229e805d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4053998a-802c-4ccc-9bf9-c53f5f81cf9e", "node_type": "1", "metadata": {}, "hash": "a7b3d8b479ec105148beee60252cab02effd839d421cfecbad4659cee94d4943", "class_name": "RelatedNodeInfo"}}, "hash": "d13e02b0dd3a5130ce1bfa0f8806a67bfc39f4a93335e57762f6c254bf12cf73", "text": "108 \n \nb) Secuencia definida mediante un rango  \n \nLa forma m\u00e1s utilizada para especificar secuencia s de control para la estructura fo r se \ndefin e con la funci\u00f3n  range  con la cual se define un rango para los valores , con e l \nsiguiente formato : \n \n  for  v  in range(especificaci\u00f3n):  \n   instrucci\u00f3n en el bloque P \ninstrucci\u00f3n en el bloque P \n. . . \ninstrucci\u00f3n en el bloque P \n \nEn donde v  es la v ariable que tomar\u00e1  cada valor del rango especificado,  y P es el bloque \nque contiene las instrucciones que se desean  repetir.  \n \nEl rango se debe especificar \u00fanicamente con n\u00fameros  entero s, no se pueden usar \ndecimales  o caracteres \n La especificaci\u00f3n  del rango puede tomar varias formas  como se muestra en los ejemplos : \n El rango s e puede especificar con el valor final .  En este caso, el valor inicial es cero.  \n \nEjemplo.  \n \n  range(10)   Genera los valores 0, 1, 2, 3, 4, 5, 6, 7, 8, 9  \nEl ciclo se repetir\u00e1 10 veces . \n \n El rango se puede especificar con  los extremos \n \nEjemplos . \n \n  range(2,10)   Genera los valores  2, 3, 4, 5, 6, 7, 8,  9 \nEl ciclo se repetir\u00e1 8 veces  \n \n  range(4,1)   El valor inicial excede al valor final del rango. No se pueden \n  generar valores. El ciclo no  se realiza ni una vez . \n \n \n  \n    La secuencia generada con  range   no incluye el extremo final del rango.  \n \n \n El rango se puede especificar con los  extremos y el incremento  \n \n \nEjemplos .", "start_char_idx": 0, "end_char_idx": 1419, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4053998a-802c-4ccc-9bf9-c53f5f81cf9e": {"__data__": {"id_": "4053998a-802c-4ccc-9bf9-c53f5f81cf9e", "embedding": null, "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92922613-6405-4107-b763-a7ed65cf5968", "node_type": "4", "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "93fc4fe64766a8d4fe48b4e06a90477f6fe4bcf6bc06ecc920dc6f15719f63f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f327e1a3-c7eb-463b-bb92-e760be1ef9ea", "node_type": "1", "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d13e02b0dd3a5130ce1bfa0f8806a67bfc39f4a93335e57762f6c254bf12cf73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "859a8c9e-ba22-4c3d-a54c-4af41b194ba1", "node_type": "1", "metadata": {}, "hash": "4cc6fe1793df07282d4969c562642816755e50b0c3dcc2b73c5f025bd2114251", "class_name": "RelatedNodeInfo"}}, "hash": "a7b3d8b479ec105148beee60252cab02effd839d421cfecbad4659cee94d4943", "text": "range(1,15,2)  Genera los valores  1,  3, 5, 7, 9, 11, 13   \nEl ciclo se  repetir\u00e1 7 veces . \n \n range(8,1,-1) Genera los valores  8, 7, 6, 5, 4, 3, 2       \nEl ciclo se repetir\u00e1 7  veces .  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 1425, "end_char_idx": 1642, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "859a8c9e-ba22-4c3d-a54c-4af41b194ba1": {"__data__": {"id_": "859a8c9e-ba22-4c3d-a54c-4af41b194ba1", "embedding": null, "metadata": {"page_label": "109", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9ba861b-e745-4af4-a419-243434443849", "node_type": "4", "metadata": {"page_label": "109", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3f97ce3dd6bc5ef621ac1aaa3f73ef2d26f22229cbe3a2b8626cfb83b62fd1f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4053998a-802c-4ccc-9bf9-c53f5f81cf9e", "node_type": "1", "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a7b3d8b479ec105148beee60252cab02effd839d421cfecbad4659cee94d4943", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f4356e7-6290-42c7-a88a-8ea0a134cdea", "node_type": "1", "metadata": {}, "hash": "d614501e72ac7402ef21439f855bfadb205caf60db0c96243587648aa5e59237", "class_name": "RelatedNodeInfo"}}, "hash": "4cc6fe1793df07282d4969c562642816755e50b0c3dcc2b73c5f025bd2114251", "text": "109 \n \nEjemplo. Describir  un ciclo para mostrar cada entero entre 1 y 5  junto con su cuadrado:  \n \n \nfor n in range(1,6 ): \n    c=n**2  \n    print( 'N\u00famero: ',n,' Cuadrado : ',c) \n \n \nPrueba del programa  \n>>>  \nN\u00famero:  1  Cuadrado:  1  \nN\u00famero:  2  Cuadrado:  4  \nN\u00famero:  3  Cuadrado:  9  \nN\u00famero:  4  Cuadrado:  16  \nN\u00famero:  5  Cuadrado:  25  \n  \nEjemplo.  Se necesita sumar los cuadrados de los primeros  n  n\u00fameros natura les. \n \nInstrumentaci\u00f3n  \n Variables  \n  n: n\u00famero final  \n  i:  cada n\u00famero natural  \n s: suma de los cuadrados  \n \nPrograma  \n \n#Suma de cuadrados  \nn=int(input('Ingrese el valor final: '))  \ns=0 \nfor i in range(1,n+1):  \n    c=i**2  \n    s=s+c  \nprint('La suma es: ',s)  \n \n \nPrueba del programa  \n>>>  \nIngrese el valor final: 100  \nLa suma es:  338350  \n>>> \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 816, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f4356e7-6290-42c7-a88a-8ea0a134cdea": {"__data__": {"id_": "3f4356e7-6290-42c7-a88a-8ea0a134cdea", "embedding": null, "metadata": {"page_label": "110", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "615c9b3b-f682-4ffa-a231-a8ac900ec143", "node_type": "4", "metadata": {"page_label": "110", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "543b2a8fc313e73cf1b83ed157c362a5b6e8951d495a42b557db2b9abd2e5930", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "859a8c9e-ba22-4c3d-a54c-4af41b194ba1", "node_type": "1", "metadata": {"page_label": "109", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4cc6fe1793df07282d4969c562642816755e50b0c3dcc2b73c5f025bd2114251", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa177698-a681-4f70-9843-02b32bfd00a0", "node_type": "1", "metadata": {}, "hash": "8e1f9a14f5d7b9a60ff79ef0f94e851e4143772a3cb431f4369eda7f47448c8e", "class_name": "RelatedNodeInfo"}}, "hash": "d614501e72ac7402ef21439f855bfadb205caf60db0c96243587648aa5e59237", "text": "110 \n \nEjemplo.  Calcule y m uestre el promedio de un grupo de datos ingresados desde el teclado  \n \nInstrumentaci\u00f3n  \n \nVariables  \n  n: cantidad de datos  \n  i:  conteo de ciclos \n  x: cada dato ingresado desde el teclado \n s: suma de los datos  \n p: promedio \n \nPrograma  \n \n#Promedio de un grupo de datos  \nn=int(input('Cantidad de datos:  '))  \ns=0 \nfor i in range(n):  \n    x=float (input('Ingrese el siguiente dato:  '))  \n    s=s+x  \np=s/n \nprint('El promedio es: ',p)  \n  \n  \n  \nPrueba del programa  \n \n>>> \nCantidad de datos: 5  \nIngrese el siguiente dato: 4.2  \nIngrese el siguiente dato: 5.8  \nIngrese el siguiente dato: 2.5  \nIngrese el siguiente dato: 8.1  \nIngrese el siguiente dato: 6.2  \nEl promedio es:  5.36  \n>>> \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 757, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa177698-a681-4f70-9843-02b32bfd00a0": {"__data__": {"id_": "aa177698-a681-4f70-9843-02b32bfd00a0", "embedding": null, "metadata": {"page_label": "111", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "118cf916-4848-4119-a7ad-6faa24c4585c", "node_type": "4", "metadata": {"page_label": "111", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf78b98cb47cc5bd7b603b4a91a2dc4c07193e5b549aba0321a906f308f38512", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f4356e7-6290-42c7-a88a-8ea0a134cdea", "node_type": "1", "metadata": {"page_label": "110", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d614501e72ac7402ef21439f855bfadb205caf60db0c96243587648aa5e59237", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95723fce-7598-4d2b-9960-8b69aeb03981", "node_type": "1", "metadata": {}, "hash": "50c08ef8d91df03db9c4357d0fac3abb798e095c3a84ee0d77d459d59d6c839d", "class_name": "RelatedNodeInfo"}}, "hash": "8e1f9a14f5d7b9a60ff79ef0f94e851e4143772a3cb431f4369eda7f47448c8e", "text": "111 \n \nEjemplo. Describir  en notaci\u00f3n Python una soluci\u00f3n al siguiente problema:  Dado un \nentero positivo  n ,  se desea verificar que la suma de los primeros  n  n\u00fameros impares es \nigual a  n2 \nEjemplo .  n = 5:    1 + 3 + 5 + 7 + 9  =  52 \n \nInstrumentaci\u00f3n  \n \nVariables  \n     n:     Cantidad de n\u00fameros impares \n     imp:  Cada n\u00famero impar  \n    s:     Suma de impares \n   i:      Conteo de ciclos       \n \n# Suma de impares  \nn=int(input('Ingrese la cantidad de impares:  '))  \ns=0 \nimp=1 \nfor i in range(n): \n    s=s+imp  \n    imp=imp+2  \nif s==n**2:  \n    print( 'Verdadero')  \nelse: \n    print('Falso')  \n \n \nPrueba del programa  \n>>>  \nIngrese la cantidad de impares:  5  \nVerdadero  \n>>>  \n \nNote que este resultado solo prueba que la propiedad se cumple con el  dato ingresado \npero no es una demostraci\u00f3n de que la propiedad es verdadera con todos los enteros \npositivos.  Esta demostraci\u00f3n tendr\u00eda que hacerse mediante alg\u00fan m\u00e9todo formal, por \nejemplo usando inducci\u00f3n matem\u00e1tica.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95723fce-7598-4d2b-9960-8b69aeb03981": {"__data__": {"id_": "95723fce-7598-4d2b-9960-8b69aeb03981", "embedding": null, "metadata": {"page_label": "112", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62a18152-1752-4e69-bedb-9158aa52c972", "node_type": "4", "metadata": {"page_label": "112", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4fa42d8ac3a6ddb5a219c8a2438de03282a121fae8911bbe305c0c1ccd9b3fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa177698-a681-4f70-9843-02b32bfd00a0", "node_type": "1", "metadata": {"page_label": "111", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8e1f9a14f5d7b9a60ff79ef0f94e851e4143772a3cb431f4369eda7f47448c8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67bbb77c-c601-4fb0-9fdd-36c4f2a56f81", "node_type": "1", "metadata": {}, "hash": "3b0534680ef085e62c60b698a7bfaeb0a2f319c517c54a44e4e2a29a6979564f", "class_name": "RelatedNodeInfo"}}, "hash": "50c08ef8d91df03db9c4357d0fac3abb798e095c3a84ee0d77d459d59d6c839d", "text": "112 \n \nEjemplo.  Lea un grupo de datos (precios) desde el teclado. Encuentre y muestre el mayor \nvalor  \n \nInstrument aci\u00f3n  \n Variables  \n  n: cantidad de datos  \n  i:  conteo de ciclos \n  x: cada dato ingresado desde el teclado \n t:  el mayor valor  \n \nLa variable t que contendr\u00e1 el mayor valor se la inicia con cero. En un ciclo se ingresar\u00e1 \ncada dato y se lo comparar\u00e1 con t, si es mayor , la variable t  ser\u00e1 asignada con el valor del \ndato ingresado. Al finalizar el ciclo ,  t  contendra el mayor valor  \n \nPrograma  \n \n#El mayor valor de un grupo de datos \nn=int(input('Cantidad de datos: ' )) \nt=0 \nfor i in range(n):  \n    x=float (input('Ingrese el siguiente dato: '))  \n    if x>t: \n        t =x \nprint('El mayor valor es: ', t) \n  \n \n   Prueba del programa  \n>>>  \nCantidad de datos:  5 \nIngrese el siguiente dato: 45  \nIngrese el siguiente dato: 37  \nIngrese el siguiente dato: 28  \nIngrese el siguiente dato: 56  \nIngrese el siguiente dato: 24  \nEl mayor valor es:  56.0  \n>>> \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1018, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67bbb77c-c601-4fb0-9fdd-36c4f2a56f81": {"__data__": {"id_": "67bbb77c-c601-4fb0-9fdd-36c4f2a56f81", "embedding": null, "metadata": {"page_label": "113", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b27c6276-3acf-4a64-af02-44abdfe5a7fd", "node_type": "4", "metadata": {"page_label": "113", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b5f39e69019ecaddcc693f4606937c65ed7f64f16e0293182ebac9d9aaf2fae7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95723fce-7598-4d2b-9960-8b69aeb03981", "node_type": "1", "metadata": {"page_label": "112", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "50c08ef8d91df03db9c4357d0fac3abb798e095c3a84ee0d77d459d59d6c839d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82771733-a644-4f63-a6da-8e7c7c9e889b", "node_type": "1", "metadata": {}, "hash": "b55ff2788c17a76434a73674a784e4fc96d8a32c9dd4f4c3abdbef0c0ce3b24a", "class_name": "RelatedNodeInfo"}}, "hash": "3b0534680ef085e62c60b698a7bfaeb0a2f319c517c54a44e4e2a29a6979564f", "text": "113 \n \nEjemplo.  Dado un n\u00famero entero positivo, encuentre todos sus divisores enteros \npositivos . \n \nInstrumentaci\u00f3n  \n \nVariables  \n n: n\u00famero entero positivo ( dato)  \n d: cada n\u00famero entero entre 1 y n , posible div isor de n  \n \nPrograma  \n \n #Divisores de un entero  \nn=int(input('Ingrese un entero positivo: '))  \nfor d in range (1,n+1):  \n    if n%d==0: \n        print( 'Divisor: ' ,d)   \n \n \nPrueba del programa  \n>>>  \nIngrese un entero positivo: 20 \nDivisor:  1  \nDivisor:  2  \nDivisor:  4  \nDivisor:  5  \nDivisor:  10  \nDivisor:  20  \n>>> \n \nSe especifica el final del rango con el valor  n+1  para que en el ciclo se incluya el valor   n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 676, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82771733-a644-4f63-a6da-8e7c7c9e889b": {"__data__": {"id_": "82771733-a644-4f63-a6da-8e7c7c9e889b", "embedding": null, "metadata": {"page_label": "114", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98edb035-5e38-47d8-abc0-1d064ae2dfdb", "node_type": "4", "metadata": {"page_label": "114", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "db06b444ad0df7b82204483eefa09ad153553be8ee43bb584ed525d7df6098c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67bbb77c-c601-4fb0-9fdd-36c4f2a56f81", "node_type": "1", "metadata": {"page_label": "113", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3b0534680ef085e62c60b698a7bfaeb0a2f319c517c54a44e4e2a29a6979564f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3833b86-dfb9-47ea-a0d4-f6c3674c0d46", "node_type": "1", "metadata": {}, "hash": "5572081f226ec8bd22a95bf22176bbd1be14bcc293ac6864fd5db8a4f070260b", "class_name": "RelatedNodeInfo"}}, "hash": "b55ff2788c17a76434a73674a784e4fc96d8a32c9dd4f4c3abdbef0c0ce3b24a", "text": "114 \n \nEjemplo.  Dado un n\u00famero entero, cuente sus divisores enteros exactos.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n n: n\u00famero enter o positivo ( dato)  \n x: cada n\u00famero entero entre 1 y n, posible divisor de n  \n c: cantidad de divisores  \n \nPrograma  \n \n#Divisores de un entero  \nn=int(input('Ingrese un entero positivo: '))  \nc=0 \nfor d in range (1,n+1):  \n    if n%d==0: \n        c=c+1  \nprint('Cantidad de divisores: ',c)  \n \n \nPrueba del programa  \n>>>  \nIngrese un entero positivo: 20 \nCantidad de divisores:  6  \n>>>  \nEjemplo.  Dado un n\u00famero entero determine si es un n\u00famero primo \n \nInstrumentaci\u00f3n  \n Variables  \n n: n\u00famero entero positivo ( dato)  \n x: cada n\u00famero entero entre 1 y n, posible divisor de n  \n c: cantidad de divisores  \n Si el conteo de divisores enteros es mayor a 2, el n\u00famero no es primo  \n \nPrograma  \n \n   #Determinar si un n\u00famero es primo  \nn=int(input('Ingrese un entero positivo: '))  \nc=0 \nfor d in range (1,n+1):  \n    if n%d==0: \n        c=c+1  \nif c>2: \n    print( n,'No es primo' ) \nelse: \n    print(n,'Si es primo' ) \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1080, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3833b86-dfb9-47ea-a0d4-f6c3674c0d46": {"__data__": {"id_": "c3833b86-dfb9-47ea-a0d4-f6c3674c0d46", "embedding": null, "metadata": {"page_label": "115", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "848502e6-3271-4195-88d0-a381bb3e866b", "node_type": "4", "metadata": {"page_label": "115", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "576fcb0c1fc666e182a33941c6522e570654d9b50b8168ec61cdc64910495cd8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82771733-a644-4f63-a6da-8e7c7c9e889b", "node_type": "1", "metadata": {"page_label": "114", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b55ff2788c17a76434a73674a784e4fc96d8a32c9dd4f4c3abdbef0c0ce3b24a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43923c40-859b-444a-b259-a0741e2f67c8", "node_type": "1", "metadata": {}, "hash": "3ac77dac0c8348f5e4e7cd71ba3183ab2251b0efebc624217240fc388f167639", "class_name": "RelatedNodeInfo"}}, "hash": "5572081f226ec8bd22a95bf22176bbd1be14bcc293ac6864fd5db8a4f070260b", "text": "115 \n \n    Prueba del programa  \n>>>  \nIngrese un entero positivo: 43 \nSi es primo  \n>>>  \nIngrese un entero positivo: 57 \nNo es primo  \n>>>   \n \nEjemplo.  Dado un n\u00famero entero enc uentre los d\u00edgitos de su equivalente en el sistema \nbinario.  El algoritmo para obtener los d\u00edgitos binarios de un n\u00famero entero decimal \nconsiste en dividirlo sucesivamente para 2. Los res\u00edduos de la divisi\u00f3n entera tomados \ndesde el final hacia arriba son los d\u00edgitos buscados.  \n \nPara probar :  Obtener los d\u00edgitos binarios del n\u00famero  23 \n \n                                 \n  \n \nEntonces,  23 es equivalente a  1 0 1 1 1  en el sistema binario  \n  \nInstrumentaci\u00f3n  \n \nVariables  \n \n  n: N\u00famero entero positivo  \n  b: Cadena de c aracteres que contiene los d\u00edgitos de n  en el sistema binario.  \n                 La cadena crece en forma recurrente de derecha a izquierda  \n \n \n#Convertir un entero positivo a binario  \nn=int(input('Ingrese un entero positivo: '))  \nb='' \nwhile n>0: \n    d=n%2  \n    n=n//2 \n    b=str(d)+b  \nprint('N\u00famero binario: ',b)  \n \n \nPrueba del programa  \nIngrese un entero positivo: 23 \nN\u00famero binario:  10111  \n>>> b     La variable b contiene una cadena de caracteres  \n'10111'    con los d\u00edgitos en binario  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43923c40-859b-444a-b259-a0741e2f67c8": {"__data__": {"id_": "43923c40-859b-444a-b259-a0741e2f67c8", "embedding": null, "metadata": {"page_label": "116", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "afc8ea44-63bc-4b8b-ab04-003c6c7ab056", "node_type": "4", "metadata": {"page_label": "116", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2801892c4674173646bbdbe4183e3643a6997138233c6c285379092a70321832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3833b86-dfb9-47ea-a0d4-f6c3674c0d46", "node_type": "1", "metadata": {"page_label": "115", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5572081f226ec8bd22a95bf22176bbd1be14bcc293ac6864fd5db8a4f070260b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3845fbb-a953-45cd-92a0-5b61092cdf89", "node_type": "1", "metadata": {}, "hash": "c04f791114b0746435e6d925f586d199975f303c4722c2545e476ac7f11c3ad4", "class_name": "RelatedNodeInfo"}}, "hash": "3ac77dac0c8348f5e4e7cd71ba3183ab2251b0efebc624217240fc388f167639", "text": "116 \n \nPara comparar, se usa la funci\u00f3n de conversion de tipo de Python  \n \n>>> n=23  \n>>> b=bin(n)  \n>>> b \n'0b10111'        Cadena de caracteres con los d\u00edgitos en binario  \n \n>>> b=0b10111       N\u00famero en binario   \n>>> n=int(0b10111)  \n>>> n \n23 \n \n \nEjemplo.  Simule  n  lanzamientos de un dado. Muestre cuantas v eces se obtuvo el 3 . \n \nInstrumentaci\u00f3n  \n Variables  \n n: dato (cantidad de lanzamientos)  \n i: conteo de lanzamientos  \n x: cada n\u00famero aleatorio  \n c: cantidad de veces que se obtuvo el 3  \n \nPrograma  \n \n#Simular lanzamientos de un dado  \nfrom random import* \nn=int(input('Cantidad de lanzamientos: ')) \nc=0 \nfor i in range(n):  \n    x=randint(1,6)  \n    if x==3: \n        c=c+1  \nprint('Conteo de resultados favorables: ',c)   \n \n Prueba del programa  \n>>>  \nCantidad de lanzamientos: 600  \nConteo de resultados favorables:  105 \n>>>  \n \nNOTA:   Pruebe con valor es grandes  de n. Verifique q ue la respuesta es  aproximadamente  \n1/6 de n.   Este resultado confirma lo que indica la Teor\u00eda de la Probabilidad. Si el dado es \nbalanceado, c ada n\u00famero tiene aproximadamente la misma probabilidad de salir.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1151, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3845fbb-a953-45cd-92a0-5b61092cdf89": {"__data__": {"id_": "e3845fbb-a953-45cd-92a0-5b61092cdf89", "embedding": null, "metadata": {"page_label": "117", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e82a4b96-fe23-4c4f-9527-132217b21b1b", "node_type": "4", "metadata": {"page_label": "117", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "867df8c306cd48fdcad7b6fc31268a3ac1280e98a7ff80e30fa057e560ae4819", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43923c40-859b-444a-b259-a0741e2f67c8", "node_type": "1", "metadata": {"page_label": "116", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3ac77dac0c8348f5e4e7cd71ba3183ab2251b0efebc624217240fc388f167639", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd013e1e-77d8-481a-811c-aca184032f76", "node_type": "1", "metadata": {}, "hash": "e1c29ec987bc8a3aa3fa6277cfaeb0b28ee2a08755f20175cc0a6f445f781b79", "class_name": "RelatedNodeInfo"}}, "hash": "c04f791114b0746435e6d925f586d199975f303c4722c2545e476ac7f11c3ad4", "text": "117 \n \nEjemp lo. Simule  n  lanzamientos de dos dados. Muestre cuantas veces los dos dados \ntuvieron el mismo resultado.  \n \nInstrumentaci\u00f3n  \n Variables  \n n: dato (cantidad de lanzamientos)  \n i: conteo de lanzamientos  \n a,b: contendr\u00e1n n\u00fameros aleatorios enteros entre 1 y 6  \n c: cantidad de veces en las que  a  fue igual a  b \n \nPrograma  \n \n#Lanzamientos de dos dados  \nfrom random import* \nn=int(input('Cantidad de lanzamientos: ')) \nc=0 \nfor i in range(n):  \n    a=randint(1,6)  \n    b=randint(1,6)  \n    if a==b: \n        c=c+1  \nprint('Cantidad de repetidos: ',c)   \n \n  \nPrueba del programa  \n>>>  \nCantidad de lanzamientos:  400  \nCantidad de repetidos:  67 \n>>> \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 699, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd013e1e-77d8-481a-811c-aca184032f76": {"__data__": {"id_": "dd013e1e-77d8-481a-811c-aca184032f76", "embedding": null, "metadata": {"page_label": "118", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2149ec21-ef1c-449b-b490-5ad4b06d92f0", "node_type": "4", "metadata": {"page_label": "118", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1a9ad5ecfa29aa7436e16c1b882c4e9757e79cbe482e309511ac0bb0f343b42", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3845fbb-a953-45cd-92a0-5b61092cdf89", "node_type": "1", "metadata": {"page_label": "117", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c04f791114b0746435e6d925f586d199975f303c4722c2545e476ac7f11c3ad4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "021056e6-8d30-4637-bff3-cd0bf2be5663", "node_type": "1", "metadata": {}, "hash": "f9df3f7b5b0eff4b79dae3e803f039d3624583b29649930ff600e5f3fc64f2fe", "class_name": "RelatedNodeInfo"}}, "hash": "e1c29ec987bc8a3aa3fa6277cfaeb0b28ee2a08755f20175cc0a6f445f781b79", "text": "118 \n \nEjemplo . Simular n  intentos de un juego con un dado,  con la s siguientes reglas:    \nSi sale   \n6   Gana 4 d\u00f3lares  \n            3   Gana 1 d\u00f3lar  \n      1  Siga jugando  \n2,4 o 5 Pierde 2 d\u00f3lares  \n \nInstrumentaci\u00f3n  \n Variables  \nn: dato (cantidad de intentos)  \n i: conteo de lanzamientos  \n x: cada n\u00famero aleatorio  \n s: cantidad acumulada de dinero  \n \nPrograma  \n \n#Simulaci\u00f3n de un juego de azar  \nfrom random import* \nn=int(input('Cantidad de intentos: ')) \ns=0 \nfor i in range(n):  \n    x=randint(1,6)  \n    if x==6: \n        s=s+4  \n    elif x==3: \n        s=s+1  \n    elif x==2 or x==4 or x==5: \n        s=s -2 \nprint('Ganancia total: ',s)  \n \n \nPrueba del programa  \n>>>  \nCantidad de intentos: 100  \nGanancia total:  - 20 \n>>> \n \n \nObserve en las pruebas que si el n\u00famero de intentos es grande, normalmente se obtendr\u00e1 \nun valor negativo (p\u00e9rdida), pues las reglas dadas en el ejemplo est\u00e1n desbalanceadas a \nfavor de perder.  La teor\u00eda de la probabilidad demues tra estos resultados formalmente con \nla definici\u00f3n del Valor Esperado. Esto significa que no es una buena idea jugar este juego \nni ning\u00fan otro juego de azar, pues siempre est\u00e1n desbalanceados a favor del promotor.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "021056e6-8d30-4637-bff3-cd0bf2be5663": {"__data__": {"id_": "021056e6-8d30-4637-bff3-cd0bf2be5663", "embedding": null, "metadata": {"page_label": "119", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "76a109d9-854e-4885-b2ee-9419c2a34b4b", "node_type": "4", "metadata": {"page_label": "119", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cebc773d4b2530856c954c173a24ba7e752f0e3f8572daadea2494a0c514aaf6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd013e1e-77d8-481a-811c-aca184032f76", "node_type": "1", "metadata": {"page_label": "118", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e1c29ec987bc8a3aa3fa6277cfaeb0b28ee2a08755f20175cc0a6f445f781b79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5250742-d59a-4381-8022-1cc417f5f412", "node_type": "1", "metadata": {}, "hash": "8a7324618feacc796479cb6cd859da98741028cc0622ba4ac367d2ab38cecf60", "class_name": "RelatedNodeInfo"}}, "hash": "f9df3f7b5b0eff4b79dae3e803f039d3624583b29649930ff600e5f3fc64f2fe", "text": "119 \n \nEjemplo.   Simule  n lanzamientos de un dardo en un cuadrado de 1 m de lado. Determine \ncuantos intentos cayeron dentro de un c\u00edrculo inscrito en el cuadrado.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n  n:  dato (cantidad de intentos)  \n  i:  conteo de lanzamientos  \n  x,y:  coordenadas para cada lanzamiento (n\u00fameros aleatorios)  \n  c:  cantidad de veces que est\u00e1n dentro del c\u00edrculo de radio 1  \n \n Programa  \n \n#Puntos aleatorios dentro de un c\u00edrculo  \nfrom random import* \nn=int(input('Cantidad de intentos: ')) \nc=0 \nfor i in range(n):  \n    x=random()  \n    y=random()  \n    if x**2 + y**2 <= 1:  \n        c=c+1  \nprint('Dentro del c\u00edrculo: ',c)  \n \nPrueba del programa  \n>>>  \nCantidad de intentos: 100 \nDentro del c\u00edrculo:  80  \n>>> \n \nEjemplo .  Dado un conjunto de enteros numerados 1  a n, elegir una muestra aleatoria de \nm n\u00fameros, m\u2264n \n Instrumentaci\u00f3 n \n \nVariables  \n  n:  Tama\u00f1o de la poblaci\u00f3n  (dato)  \n  m:  Tama\u00f1o de la muestra (dato)  \n  i:  Variable para el conteo de repeticiones  \n  x:  Contiene c ada n\u00famero aleatorio seleccionado para la muestra   \n \n Programa  \n \n#Muestra aleatoria (con repeticiones) \nfrom random import* \nn = int( input('Ingrese tama\u00f1o de la poblaci\u00f3n '))  \nm = int( input('Ingrese tama\u00f1o de la muestra '))  \nfor i in range(m):  \n    x=randint(1,n)  \n    print(x)    \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5250742-d59a-4381-8022-1cc417f5f412": {"__data__": {"id_": "d5250742-d59a-4381-8022-1cc417f5f412", "embedding": null, "metadata": {"page_label": "120", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "330269f8-9185-4529-8658-1052855ce5c2", "node_type": "4", "metadata": {"page_label": "120", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e81a9fcf987aec95022be134e0fd4e9779ca3633399ddeeccbf65ded15bfd1e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "021056e6-8d30-4637-bff3-cd0bf2be5663", "node_type": "1", "metadata": {"page_label": "119", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f9df3f7b5b0eff4b79dae3e803f039d3624583b29649930ff600e5f3fc64f2fe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e8644c6-5705-4165-a1c2-49f66959d8ee", "node_type": "1", "metadata": {}, "hash": "8bec007c5b93bd9d77ae919c921d054e8b9c26745aefc5f0c01328bbe10ca103", "class_name": "RelatedNodeInfo"}}, "hash": "8a7324618feacc796479cb6cd859da98741028cc0622ba4ac367d2ab38cecf60", "text": "120 \n \nPrueba del programa  \n>>>  \nIngrese tama\u00f1o de la poblaci\u00f3n 10 \nIngrese tama\u00f1o de la muestra 4 \n3 \n9 \n2 \n3 \n>>>  \n \nNote que la muestra puede tener  valores repetidos . Posteriormente se describir\u00e1 una \nt\u00e9cnica para que una muestra no incluya elementos repetidos .  \n \n \nEjemplo.   Escribir  un programa para simular el siguiente juego: U na rana es colocada en \nla casilla  central de una caja cuadr iculada de tama\u00f1o 9x9 dm. La rana realiza saltos \naleatoriamente de 1 dm. en cualquiera de las cuatro direcciones: arriba, abajo, izquierda o \nderecha. Determine la cantidad de saltos realizados  hasta llegar a alguno de los bordes de \nla caja.  \n \nInstrumentaci\u00f3n  \n  \nVariables  \n x,y:  coordenadas de las casillas  \n d: direcci\u00f3n del salto (aleatoria)  \n  i:  conteo de intentos  \n \nLa casilla central coincid ir\u00e1 con las coordenadas (0, 0)  \n \n Programa  \n \nfrom random import* \nx=0 \ny=0 \ni=0 while -5<x<5 and -5<y<5: \n    d=randint(1,4)  \n    i=i+1  \n    if d==1: \n        x=x+1  \n    elif d==2: \n        x=x -1 \n    elif d==3: \n        y=y+1  \n    else:  \n        y=y -1 \n    print(x,y)  \nprint('Cantidad de intentos: ',i)  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1157, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e8644c6-5705-4165-a1c2-49f66959d8ee": {"__data__": {"id_": "8e8644c6-5705-4165-a1c2-49f66959d8ee", "embedding": null, "metadata": {"page_label": "121", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "958f3714-453b-443d-b0e3-e38fee332f76", "node_type": "4", "metadata": {"page_label": "121", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c878d975f29f46c34e8f3524edd39b512b41773fe022fd5812a72a60c0ea2db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5250742-d59a-4381-8022-1cc417f5f412", "node_type": "1", "metadata": {"page_label": "120", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8a7324618feacc796479cb6cd859da98741028cc0622ba4ac367d2ab38cecf60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34eaceed-cb7b-49fe-9d2d-c695f4e8e993", "node_type": "1", "metadata": {}, "hash": "fed846c8b28b3998d5ecf75639ef5ca7954e3c8383f342065936bb807ea1a01b", "class_name": "RelatedNodeInfo"}}, "hash": "8bec007c5b93bd9d77ae919c921d054e8b9c26745aefc5f0c01328bbe10ca103", "text": "121 \n \nPrueba del programa  \n \n>>>  \n 1 0 \n 1 1 \n 0 1 \n-1 1 \n-2 1 \n-2 0 \n-2 1 \n-2 2 \n-2 3 \n-3 3 \n-3 2 \n-4 2 \n-4 1 \n-5 1 \nCantidad de intentos:  14  \n \nEjemplo.   Escribir  un programa para representar mediante barras de asteriscos, 10 \nn\u00fameros aleatorios con valores enteros entre 1 y 20.   \n \nInstrumentaci\u00f3n  \n \nVariables  \n  i:  variable para el conteo de repeticiones  \n  n:  n\u00famero aleatorio  \n  barra :  barra de n asteriscos  \n \n Programa  \n \nfrom random import* \nfor i in range(10):  \n    n=randint(1,20)  \n    barra=''  \n    for j in range(1,n+1):  \n        barra= barra+'*'  \n    print('%4d '%n,barra)  \n Prueba del programa  \n>>>  \n   3  ***  \n  11  ***********  \n  13  *************  \n  12  ************  \n  10  **********  \n   4  ****  \n   4  ****  \n   6  ****** \n   5  *****  \n  17  *****************  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34eaceed-cb7b-49fe-9d2d-c695f4e8e993": {"__data__": {"id_": "34eaceed-cb7b-49fe-9d2d-c695f4e8e993", "embedding": null, "metadata": {"page_label": "122", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "953acc30-bd77-483f-a19a-3154e267269c", "node_type": "4", "metadata": {"page_label": "122", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "39864a658dc9c3dfa8faff92168cc1814a4f60d7bd7fa9b1d43975c345a94132", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e8644c6-5705-4165-a1c2-49f66959d8ee", "node_type": "1", "metadata": {"page_label": "121", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8bec007c5b93bd9d77ae919c921d054e8b9c26745aefc5f0c01328bbe10ca103", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2622b50-078f-4f7f-99b5-7747636fc861", "node_type": "1", "metadata": {}, "hash": "9ee656ee973f1b09bad052399ce7017d8a49263149d9f6bf3787124538f6c4a4", "class_name": "RelatedNodeInfo"}}, "hash": "fed846c8b28b3998d5ecf75639ef5ca7954e3c8383f342065936bb807ea1a01b", "text": "122 \n \n5.10.3   Ciclos anidados  \n \nAlgunos algoritmos requieren ciclos dentro de otros ciclos . La regla establece que para \ncada instancia  del ciclo externo, el ciclo inter no se realiza completamente.  \n \n Una representaci\u00f3n gr\u00e1fica de dos ciclos  \u201dwhile \u201d  anidados:  \n \n \n                   F \n                               \nMientras condici\u00f3n 1   Ciclo externo  \n        \n                                                V                                     \n                                                                 F  \n                              Mientras condici\u00f3n 2             Ciclo interno  \n \n                                                V \n                                        \n                                              P    \n    \n                                                                                                                                                                                    \n \n \n                                                                                                        \n                                                                                                                                                                                                                                                  \n                                                                                                                                                                                           \n \n \n \n  \nUna representaci\u00f3n gr\u00e1fica de dos ciclos  \u201cfor\u201d  anidados:  \n \n \n                   F \n                              Para  v 1 \u2190 Secuencia 1   Ciclo externo  \n        \n                                                  V                                     \n                                                                 F  \n                           Para v2 \u2190 Secuencia 2         Ciclo interno             \n \n                                                  V \n                                        \n                                             P \n        \n    \n  \n \n \n \n                                                                                                        \n \n \n \nP  representa el bloque de instrucciones que se repit e \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 2260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2622b50-078f-4f7f-99b5-7747636fc861": {"__data__": {"id_": "e2622b50-078f-4f7f-99b5-7747636fc861", "embedding": null, "metadata": {"page_label": "123", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c8e0a3c-6db3-4931-a853-5020f7e86020", "node_type": "4", "metadata": {"page_label": "123", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5a405ecdc802bb632560f5896dc7af37c6b91a07a9d8287e59781617fa6be4cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34eaceed-cb7b-49fe-9d2d-c695f4e8e993", "node_type": "1", "metadata": {"page_label": "122", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fed846c8b28b3998d5ecf75639ef5ca7954e3c8383f342065936bb807ea1a01b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "272d07f4-8115-4401-9fa4-9a13b9436d24", "node_type": "1", "metadata": {}, "hash": "8ec53bdfdc5db1d102c9399d832c799931e25ec9c1d187eb65562cca54f2d44e", "class_name": "RelatedNodeInfo"}}, "hash": "9ee656ee973f1b09bad052399ce7017d8a49263149d9f6bf3787124538f6c4a4", "text": "123 \n \nEjemplo.  Liste todas las parejas de n\u00fameros con valores enteros del 1 al  3  \n  \nInstrumentaci\u00f3n  \n Variables  \n        a,b:  contendr\u00e1n los enteros 1, 2, 3  \n \n Programa  \n \n#Parejas de n\u00fameros  \nfor a in [1,2,3]: \n    for b in [1,2,3]:  \n        print(a,b)     \n \n \nPrueba del programa  \n>>>  \n1 1 \n1 2 \n1 3 \n2 1 \n2 2 \n2 3 \n3 1 \n3 2 \n3 3 \n \n \nOtra soluci\u00f3n para el ejemplo anterior  \n \n#Parejas de n\u00fameros  \nfor a in range (1,4): \n    for b in range (1,4): \n        print(a,b)     \n  \nPrueba del programa  \n>>>  \n1 1 1 2 \n1 3 \n2 1 \n2 2 \n2 3 \n3 1 \n3 2 \n3 3 \n \nSe produc en los mismos resultados . Note que e l extremo final del rango no se incluye.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 679, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "272d07f4-8115-4401-9fa4-9a13b9436d24": {"__data__": {"id_": "272d07f4-8115-4401-9fa4-9a13b9436d24", "embedding": null, "metadata": {"page_label": "124", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1aca0ac0-ac89-4636-b7a0-773658c0f2a3", "node_type": "4", "metadata": {"page_label": "124", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e3e1ed35d1fac84a105498aa1ce75944ef2e73cd0cc8ab1da30f88c3530ef762", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2622b50-078f-4f7f-99b5-7747636fc861", "node_type": "1", "metadata": {"page_label": "123", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9ee656ee973f1b09bad052399ce7017d8a49263149d9f6bf3787124538f6c4a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88f4cece-34a9-4b3d-ace8-2a9ea14e7ce8", "node_type": "1", "metadata": {}, "hash": "389c754955a4fad671823fe03cd1d269145bb5719c0d032cb0f008fd1c24fc40", "class_name": "RelatedNodeInfo"}}, "hash": "8ec53bdfdc5db1d102c9399d832c799931e25ec9c1d187eb65562cca54f2d44e", "text": "124 \n \nEjemplo.  Liste todas las parejas de n\u00fameros con valores enteros del 1 al 3 pero sin que \nhayan parejas repetidas \n \nInstrumentaci\u00f3n  \n \nVariables  \n        a:  contendr\u00e1 los enteros 1, 2, 3  \n b:  contendr\u00e1 los enteros desde el valor de a  hasta 3 \n Se usar\u00e1 un rango para el ciclo interno que se inicie con el valor del rango del ciclo \nexterno. Esto evita que el ciclo interno use valores anteriores que ya fueron considerados  \n \n Programa  \n \n#Parejas de n\u00fameros sin repeticiones \nfor a in range (1,4): \n    for b in range (a,4): \n        print(a,b)     \n \nPrueba del programa  \n \n>>>  \n1 1 \n1 2 \n1 3 \n2 2 \n2 3 3 3 \n>>> \n \n \nEjemplo.  Para cada mes muestre un a lista numerada de las cuatro semanas.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n        m:  contendr\u00e1 el nombre del mes  \n s:   contendr\u00e1 l os n\u00fameros de las semanas \n \n Programa  \n \nfor m in ['Ene','Feb','Mar','Abr','May','Jun','Jul', \n          'Ago', 'Sep','Oct','Nov','Dic']: \n    print('Mes: ',m)  \n    for s in range(1,5): \n          print( ' Semana: ',s)     \n \n \nNote el encolumnamiento de las instrucciones dentro de cada ciclo \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88f4cece-34a9-4b3d-ace8-2a9ea14e7ce8": {"__data__": {"id_": "88f4cece-34a9-4b3d-ace8-2a9ea14e7ce8", "embedding": null, "metadata": {"page_label": "125", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94e52ed0-36a1-4ec6-9fc2-f3a710d3b530", "node_type": "4", "metadata": {"page_label": "125", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "60ec87bbbab06dbe1431574ea2213de737829dfb1438dc5c0b12b2bb9e01aa24", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "272d07f4-8115-4401-9fa4-9a13b9436d24", "node_type": "1", "metadata": {"page_label": "124", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8ec53bdfdc5db1d102c9399d832c799931e25ec9c1d187eb65562cca54f2d44e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "641d848a-d1aa-4423-862a-24830baeca26", "node_type": "1", "metadata": {}, "hash": "fa6587788d3b382050b595d5b72f46fa894b8a8154c403ccc5bd4788bc3dcab5", "class_name": "RelatedNodeInfo"}}, "hash": "389c754955a4fad671823fe03cd1d269145bb5719c0d032cb0f008fd1c24fc40", "text": "125 \n \nPrueba del programa  \n \n>>>  \nMes:  Ene  \n Semana:  1  \n Semana:  2  \n Semana:  3  \n Semana:  4  \nMes:  Feb  \n Semana:  1 \n Semana:  2  \n Semana:  3  \n Semana:  4  \nMes:  Mar  \n Semana:  1  \n Semana:  2  \n Semana:  3  \n Semana:  4  \nMes:  Abr  \n Semana:  1  \n Semana:  2  \n Semana:  3  \n Semana:  4  \nMes:  May  \n Semana:  1  \n Semana:  2  \n Semana:  3  \n Semana:  4  \nMes:  Jun  \n Semana:  1  \n Semana:  2  \n Semana:  3 \n Semana:  4  \nMes:  Jul  \n Semana:  1  \n Semana:  2  \n Semana:  3  \n Semana:  4  \nMes:  Ago  \n Semana:  1  \n Semana:  2  \n Semana:  3  \n Semana:  4  \n . . .    etc. \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "641d848a-d1aa-4423-862a-24830baeca26": {"__data__": {"id_": "641d848a-d1aa-4423-862a-24830baeca26", "embedding": null, "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34f57a5b-285f-4ce0-89a7-b3f7b04fe1e8", "node_type": "4", "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ed6f5336c23e065a76c9771366ffcbb2a784a9163dad91d2a258183faf5270e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88f4cece-34a9-4b3d-ace8-2a9ea14e7ce8", "node_type": "1", "metadata": {"page_label": "125", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "389c754955a4fad671823fe03cd1d269145bb5719c0d032cb0f008fd1c24fc40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed3805a5-c060-4ad6-8116-c3d5433b951c", "node_type": "1", "metadata": {}, "hash": "a9dbb90bcad64bfaf657b7843c6ce3010a9b721748d1280f95b1bc0dfc609a2d", "class_name": "RelatedNodeInfo"}}, "hash": "fa6587788d3b382050b595d5b72f46fa894b8a8154c403ccc5bd4788bc3dcab5", "text": "126 \n \nEjemplo.   Dado un entero positivo encuentre sus factores primos  \n \nLos factores primos son los n\u00fameros primos q ue conforman el mayor conjunto de divisores \nenteros positivos de un n\u00famero, tales que su producto es igual al n\u00famero dado.   \nEjemplo : si el dato es   120, sus factores primos son: 2, 2, 2, 3, 5   pues su producto es  120 \n \nInstrumentaci\u00f3n   \n \nVariables  \n  x:  D ato entero positivo \n  n:  Cada n\u00famero natural se pr obar\u00e1 como posible divisor de  x  \n \nSe usar\u00e1 un ciclo para probar cada n\u00famero natural n comenzando en 2 hasta llegar a  x .  \nSi n es un divisor de  x  se mostrar\u00e1 este divisor y se reduc ir\u00e1 el valor de  x  di vidi\u00e9ndolo  \npara este divisor  n.  Esto se realizar\u00e1 en un  ciclo pues el n\u00famero x  puede ser divis ible \npara  n   m\u00e1s de una vez.    \n \nPrograma  \n \n#Factores primos de un n\u00famero entero \nx = int( input('Ingrese el dato: ' )) \nn = 2 \nwhile n<=x: \n      while x%n == 0:    #Probar el divisor n  \n            print('Divisor: ', n)  \n            x=x/n     #Reducir el dato x  \n      n=n+1    \n \n \nPrueba del programa  \n>>>  \nIngrese el dato: 120 \nDivisor:  2  \nDivisor:  2  \nDivisor:  2  \nDivisor:  3  \nDivisor:  5  \n  \n \nEste ejemplo muestra algunos aspect o de inter\u00e9s. El uso de un ciclo while  dentro de otro \nciclo while. En est os casos,  el ciclo interno se realiza completamente  antes de salir \nnuevamente al ciclo externo.  \n \nEl encolumnamiento de  las instrucciones define cuales pertenecen a cada ciclo.  \n \nEste algoritmo es peque\u00f1o pero algo m\u00e1s complejo de entender que los ejemplos \nanteriores .", "start_char_idx": 0, "end_char_idx": 1565, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed3805a5-c060-4ad6-8116-c3d5433b951c": {"__data__": {"id_": "ed3805a5-c060-4ad6-8116-c3d5433b951c", "embedding": null, "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34f57a5b-285f-4ce0-89a7-b3f7b04fe1e8", "node_type": "4", "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ed6f5336c23e065a76c9771366ffcbb2a784a9163dad91d2a258183faf5270e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "641d848a-d1aa-4423-862a-24830baeca26", "node_type": "1", "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fa6587788d3b382050b595d5b72f46fa894b8a8154c403ccc5bd4788bc3dcab5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "080219ba-e4dc-46f6-9747-bb6f86d02b29", "node_type": "1", "metadata": {}, "hash": "5ccf2196179d40783bb346017db74bc6c26944ccf360e2f7b8a800d39207e70e", "class_name": "RelatedNodeInfo"}}, "hash": "a9dbb90bcad64bfaf657b7843c6ce3010a9b721748d1280f95b1bc0dfc609a2d", "text": "Se ha descrito en forma abreviada la idea propuesta para resolver lo, antes de \nconstruir el programa.  Tambi\u00e9n se desarrolla  una prueba manual . \n \nEn el ejemplo tambi\u00e9n se obs erva la escritura de comentarios al inicio y tambi\u00e9n al final de \nalgunas instrucciones.  \nPython Programaci\u00f3n", "start_char_idx": 1566, "end_char_idx": 1855, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "080219ba-e4dc-46f6-9747-bb6f86d02b29": {"__data__": {"id_": "080219ba-e4dc-46f6-9747-bb6f86d02b29", "embedding": null, "metadata": {"page_label": "127", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e297ff0c-2cf0-43e6-9fdb-65bc6423cd92", "node_type": "4", "metadata": {"page_label": "127", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1ef074d8acccfab8b96eb7431c1bfdef403fe21a789340ce9b09d15490b997ae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed3805a5-c060-4ad6-8116-c3d5433b951c", "node_type": "1", "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a9dbb90bcad64bfaf657b7843c6ce3010a9b721748d1280f95b1bc0dfc609a2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51675fd1-a70d-46ba-b70b-d3af98198c03", "node_type": "1", "metadata": {}, "hash": "75fbf406d9577fa3fe708d6bc55df51da1f4d9e3f73eb72379e4592bf5a67ca6", "class_name": "RelatedNodeInfo"}}, "hash": "5ccf2196179d40783bb346017db74bc6c26944ccf360e2f7b8a800d39207e70e", "text": "127 \n \nPrueba manual del programa  \n \n  Salida  x n \n   120 2 \nCiclo externo  Ciclo interno     \n2\u2264120      \n 120 % 2 = 0  2 60  \n 60 % 2 = 0  2 30  \n 30 % 2 = 0  2 15  \n 15 % 2 \u2260 0    \n    3 \n3\u226415      \n 15 % 3 = 0  3 5  \n 5 % 3 \u2260 0    \n    4 \n4\u22645     \n 5 % 4 \u2260 0    \n    5 \n5\u22645     \n 5 % 5 = 0  5 1  \n    6 \n6 no es \u2264 1      \n \n \nEjemplo.   Liste todas las ternas  (a, b, c) de n\u00fameros enteros entre 1  y 20 que cumplen la \npropiedad Pitag\u00f3rica:  a2 + b2 = c2  \n Instrumentaci\u00f3n  \n Variables  \n a, b, c : n\u00fameros enteros entre 1 y 20 \n \nPrograma  \n \n#Ternas Pitag\u00f3ricas  \nfor a in range (1,21): \n    for b in range (1,21): \n        for c in range (1,21): \n            if a**2+b**2==c**2:  \n                     print(a,b,c)   \n    \n \nPrueba del programa  \n>>>  \n3 4 5 \n4 3 5 \n5 12 13 \n6 8 10 \n8 6 10 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 822, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51675fd1-a70d-46ba-b70b-d3af98198c03": {"__data__": {"id_": "51675fd1-a70d-46ba-b70b-d3af98198c03", "embedding": null, "metadata": {"page_label": "128", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e5bbb2d-80b8-4931-93ea-16ae758f10a4", "node_type": "4", "metadata": {"page_label": "128", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "81196783e5917c93277d1e283dad28f85e6875aa85d386fb14af9c6c4692c7f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "080219ba-e4dc-46f6-9747-bb6f86d02b29", "node_type": "1", "metadata": {"page_label": "127", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5ccf2196179d40783bb346017db74bc6c26944ccf360e2f7b8a800d39207e70e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c93bcf80-0742-4648-bb8e-bde29076ec30", "node_type": "1", "metadata": {}, "hash": "186b67604ba138ae02409a8b034af4a2039be753c5f221ec8083d5b715e6e2e0", "class_name": "RelatedNodeInfo"}}, "hash": "75fbf406d9577fa3fe708d6bc55df51da1f4d9e3f73eb72379e4592bf5a67ca6", "text": "128 \n \n8 15 17 \n9 12 15 \n12 5 13 \n12 9 15 \n12 16 20  \n15 8 17 \n16 12 20  \n>>> \n \nLa lista de resultados incluye ternas repetidas  \n \n \nEjemplo.   Liste todas las ternas  (a, b, c) de n\u00fameros enteros entre 1 y 20 que cumplen la \npropiedad Pitag\u00f3rica:   a2 + b2 = c2  pero sin incluir  ternas repetidas  \n \nInstrumentaci\u00f3n  \n \nVariables  \n a, b, c: n\u00fameros enteros entre 1 y 20 \n \nEs una modificaci\u00f3n del ejemplo anterior. El rango de cada ciclo interno comienza en el \nvalor del rango del ciclo externo para que no se repitan valores que ya fueron \nconsiderados  antes.  \n \nPrograma  \n \n#Ternas Pitag\u00f3ricas  \nfor a in range (1,21): \n    for b in range (a,21): \n        for c in range (b,21): \n            if a**2+b**2==c**2:  \n                 print(a,b,c)     \n \n \nPrueba del programa  \n>>>  \n3 4 5 \n5 12 13 \n6 8 10 \n8 15 17 \n9 12 15 \n12 16 20  \n>>> \n \nPregunta:  \u00bfCuantas repeticiones se realizan en total en cada uno de los dos \u00faltimos \nalgoritmos?  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 976, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c93bcf80-0742-4648-bb8e-bde29076ec30": {"__data__": {"id_": "c93bcf80-0742-4648-bb8e-bde29076ec30", "embedding": null, "metadata": {"page_label": "129", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34598745-1e6c-4547-b298-0c68d892b481", "node_type": "4", "metadata": {"page_label": "129", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5b8891fd142ac1c3040b485c9d4d6415c319bb6b1f91766505bfe81314f39a64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51675fd1-a70d-46ba-b70b-d3af98198c03", "node_type": "1", "metadata": {"page_label": "128", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "75fbf406d9577fa3fe708d6bc55df51da1f4d9e3f73eb72379e4592bf5a67ca6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "deeda100-7be1-4751-8265-6bbeae4d8a2c", "node_type": "1", "metadata": {}, "hash": "b1f8164f65f03141d5169bfbcd7a36b4849a4ac435cd6670914a1baa53402f72", "class_name": "RelatedNodeInfo"}}, "hash": "186b67604ba138ae02409a8b034af4a2039be753c5f221ec8083d5b715e6e2e0", "text": "129 \n \nEjemplo.  Determine si la proposici\u00f3n  l\u00f3gica:   (a\u2227b)\u21d2(a\u2228c)  es una ta utolog\u00eda.  \n \nPara que una expresi\u00f3n l\u00f3gica sea una tautolog\u00eda, el resultado debe ser verdadero para \ntodas las combinaciones de los valores l\u00f3gicos de las variables.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n a,b,c: cada variable tomar\u00e1 los valores l\u00f3gicos: True  y False \n \nEl lenguaje Python  no tiene un operador para el enunciado  \u21d2  pero s e puede usar una \nequivalen cia l\u00f3gica :  p\u21d2q \u2261\uf8f9p\u2228q.   \n \nCon esta equivalencia, la expresi\u00f3n  (a\u2227b)\u21d2(a\u2228c)  se transforma a:   \uf8f9((a\u2227b)) \u2228 (a\u2228c) \n \nPrograma  \n \n#Verificar tautolog\u00eda  \nfor a in [True,False]: \n    for b in [True ,False]: \n        for  c in [True,False]: \n            p=not((a and b)) or (a or c) \n            print(a,b,c,p)  \n  \nPrueba del programa  \n>>>  \nTrue True True True  \nTrue True False True  \nTrue False True True  \nTrue False False True  \nFalse True True True  \nFalse True False True  \nFalse False True True  \nFalse False False True  \n>>> \n El resultado muestra que la expresi\u00f3n l\u00f3gica si  es una tautolog\u00eda  pues la cuarta columna \nque contiene el resultado para cada una de las combinaciones de valores l\u00f3gicos de las  \nvariables , es en cada caso verdadero . \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "deeda100-7be1-4751-8265-6bbeae4d8a2c": {"__data__": {"id_": "deeda100-7be1-4751-8265-6bbeae4d8a2c", "embedding": null, "metadata": {"page_label": "130", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b1c7e72-53b5-4514-91a7-6716325ec7aa", "node_type": "4", "metadata": {"page_label": "130", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77428807c085b4ddeccbe782223a71c715265e5ca407a31a8f644baf9e7fe512", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c93bcf80-0742-4648-bb8e-bde29076ec30", "node_type": "1", "metadata": {"page_label": "129", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "186b67604ba138ae02409a8b034af4a2039be753c5f221ec8083d5b715e6e2e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "321d588a-4b1a-4205-b406-93d0dc052462", "node_type": "1", "metadata": {}, "hash": "c6464dfe7d22e1aad89d15ccba799d7943961c6a0ab48b05506e2faba157652b", "class_name": "RelatedNodeInfo"}}, "hash": "b1f8164f65f03141d5169bfbcd7a36b4849a4ac435cd6670914a1baa53402f72", "text": "130 \n \nEjemplo.   Se dice que dos n\u00fameros son \u201camigables\u201d si el primero es la suma de los \ndivisores del segundo y viceversa.  Escribir  un programa que lea dos n\u00fameros y determine \nsi son \u201camigables\u201d.  \n \nPrueba: Los n\u00fameros 220 y  284 son \u201c amigables \u201d pues se cumple  que: \nLos divisores de 220 son:  {1, 2, 4, 5, 10, 11, 20, 22, 44, 55, 110}   y la suma es 284.  \nLos divisores de 284 son: {1, 2, 4, 71, 142}  y la suma es 220.  \n Instrumentaci\u00f3n  \n Variables  \n a,b: Datos (n\u00fameros enteros positi vos) \n n:    Cada posible divisor  \n s:    Suma de los divisores menores que a  \n t:     Suma de los divisores menores que b  \n \nLa suma de los divisores de  a  se compara con la suma de los divisores de   b \n \nPrograma  \n \n# N\u00fameros amigables  \na=int(input('Primer n\u00famero: '))  \nb=int(input('Segundo n\u00famero: '))  \ns=0 \nfor n in range(1,a):  \n    if a%n==0: \n        s=s+n    # Suma los divisores de  a  \nt=0 for n in range(1,b):  \n    if b%n==0: \n        t=t+n    # Suma los divisores de  b \nif s==b and t==a: \n    print( 'Son n\u00fameros amigables' ) \nelse: \n    print('No son n\u00fameros amigables')  \n \n    \nPrueba del programa  \n \n>>>  \nPrimer n\u00famero: 230  \nSegundo n\u00famero: 540  \nNo son n\u00fameros amigabless  \n \n>>>  \nPrimer n\u00famero: 220  \nSegundo n\u00famero: 284  \nSon n\u00fameros amigables  \n>>> \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "321d588a-4b1a-4205-b406-93d0dc052462": {"__data__": {"id_": "321d588a-4b1a-4205-b406-93d0dc052462", "embedding": null, "metadata": {"page_label": "131", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4394c03-f508-4552-b0fa-edaac16f5c94", "node_type": "4", "metadata": {"page_label": "131", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d5d8a65098116b3c42add8ecdfaa8f5e08a6d351379f0198b3a6eab9389fcd9b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "deeda100-7be1-4751-8265-6bbeae4d8a2c", "node_type": "1", "metadata": {"page_label": "130", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b1f8164f65f03141d5169bfbcd7a36b4849a4ac435cd6670914a1baa53402f72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "675b2482-638a-4c03-82de-f05568353214", "node_type": "1", "metadata": {}, "hash": "7bf23a5749cc37b6a72a0c2ab7b32aa5222e02fb1c0460aca0bc81de157dfa71", "class_name": "RelatedNodeInfo"}}, "hash": "c6464dfe7d22e1aad89d15ccba799d7943961c6a0ab48b05506e2faba157652b", "text": "131 \n \nEjemplo.   Escribir  un programa que busqu e todas las parejas de n\u00fameros \u201camigables \u201d \nentre los numeros naturales menores a 500.  \n \nInstrumentaci\u00f3n  \n Variables  \n a, b: Variables que toman cada valor entero entre 1 y 500  \n n:     Cada n\u00famero natural  \n s:     Suma de los divisores menores que  a \n t:      Suma de los divisores menores que  b \n \nCada suma de los divisores de   a   se compara con cada suma de los divisores de   b \n Programa  \n \n# N\u00fameros amigables  \nfor a in range(1,500):  \n    s=0 \n    for n in range(1,a):                     \n        if a%n==0: \n            s=s+n             # Suma los divisores de  a  \n    for b in range(1,500):    # Para cada suma de a  se calcula  \n        t=0             # la suma de los divisores de  b \n        for n in range(1,b):               \n            if b%n==0:              \n                t=t+n          # Suma los divisores de  b  \n        if s==b and t==a and a!=b:     # Compara las sumas  \n            print(a,b)  \n \n    \nPrueba del programa  \n>>>  \n220 284 \n284 220 \n>>> \n \nLos resultados muestran que solamente hay una pareja de n\u00fameros \u201camigables\u201d entre 1 y \n500.  Note que verificar manualmente est e resultado ser\u00eda muy laborioso.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "675b2482-638a-4c03-82de-f05568353214": {"__data__": {"id_": "675b2482-638a-4c03-82de-f05568353214", "embedding": null, "metadata": {"page_label": "132", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0dd59eb0-b18b-44fe-804b-80d77f2981ff", "node_type": "4", "metadata": {"page_label": "132", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1fd90f3434c02ce2cc1c40493f5beae2d3ad6736317f1b7272bdbb5d7a8ad6dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "321d588a-4b1a-4205-b406-93d0dc052462", "node_type": "1", "metadata": {"page_label": "131", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c6464dfe7d22e1aad89d15ccba799d7943961c6a0ab48b05506e2faba157652b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50c16ccf-38b5-4719-bfc4-ca95586b8fec", "node_type": "1", "metadata": {}, "hash": "b3380d07f0a10d767828816b2093b39575e7fa3617049ddf1bd90c713c3d6480", "class_name": "RelatedNodeInfo"}}, "hash": "7bf23a5749cc37b6a72a0c2ab7b32aa5222e02fb1c0460aca0bc81de157dfa71", "text": "132 \n \n5.10.4 La instrucci\u00f3n   break \n \nEsta instrucci\u00f3n se utiliza para interrumpir las repetici ones de un ciclo y salir sin completar \nla cantidad de iteraciones  que estaba previ sta. \n Ejemplo.  Simular lanzamientos de un dado. Determinar la cantidad de intentos realizados  \nhasta que salga el 5 . \n  \n Soluci\u00f3n usando un ciclo for y la instrucci\u00f3n break  \n  Variables  \n  n:  cantidad m\u00e1xima de intentos  que se realizar\u00e1n \n  x:  n\u00famero aleatori o entre 1 y 6  \n \n Programa  \n \n# Simular lanzamientos de un dado  \nfrom random import* \nn=int(input('Cantidad m\u00e1xima de lanzamientos: '))  \nfor i in range(n):  \n    x=randint(1,6)  \n    print(x)  \n    if x==5: \n        print('Lanzamiento en el cual sali\u00f3 el 5: ',i+1)  \n        break \n \n \nPrueba del programa  \n>>>  \nCantidad m\u00e1xima de lanzamientos:  20  \n2 \n2 \n1   \n2 \n1 \n2 \n5 \nLanzamiento en el cual sali\u00f3 el 5:  7 \n>>>     \n \nEn este ejemplo l a soluci\u00f3n no luce muy natural pues la salida normal del ciclo   for  ocurre  \ncuando se agotan los valor es del rango o lista. La instrucci\u00f3n break permite salir del ciclo \nantes de agotar la lista de valores .  \n \nEsta soluci\u00f3n  no garantiza que se obtenga el n\u00famero 5 dentro de la cantidad m\u00e1xima de \nlanzamientos especificada.  \n \nLa manera m\u00e1s natural de construir  algoritmos  cuando no se conoce cuantos ciclos deben \nrealizarse hasta llegar a la soluci\u00f3n, es la instrucci\u00f3n de repetici\u00f3n while  como se muestra \nen la siguiente soluci\u00f3n.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1468, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50c16ccf-38b5-4719-bfc4-ca95586b8fec": {"__data__": {"id_": "50c16ccf-38b5-4719-bfc4-ca95586b8fec", "embedding": null, "metadata": {"page_label": "133", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ad41de1-c652-4d0a-b799-33188c7d7fc2", "node_type": "4", "metadata": {"page_label": "133", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6ef791b5a0a550bc2e06264ac8e4024876b75e3a02d59314179cc87a0faddc7f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "675b2482-638a-4c03-82de-f05568353214", "node_type": "1", "metadata": {"page_label": "132", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7bf23a5749cc37b6a72a0c2ab7b32aa5222e02fb1c0460aca0bc81de157dfa71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7826483e-d8a2-4b1d-bdcc-55d6d3fa18d1", "node_type": "1", "metadata": {}, "hash": "ef0f55c59c34dad8687a0317f0b453c4bb23b852bcef6e0952de737aa0f1d6c1", "class_name": "RelatedNodeInfo"}}, "hash": "b3380d07f0a10d767828816b2093b39575e7fa3617049ddf1bd90c713c3d6480", "text": "133 \n \nEjemplo.  Simular lanzamientos de un dado. Determinar la cantidad de lanzamientos hasta \nque salga el   5. \n  \n Soluci\u00f3n usando la estructura while  \n \nLa estructura while  se puede usar para mantener la repetici\u00f3n  mientras se cumpl e \nuna condici\u00f3n, y no se necesita usar la instrucci\u00f3n break \n \n Variables  \n  n:  cantidad de intentos  \n  c:  conteo de repeticiones  \n  x:  n\u00famero aleatorio entre 1 y 6  \n \n Programa  \n \n# Simular lanzamientos de un dado  \nfrom random import* \nc=0 \nx=0 \nwhile x!=5: \n    x=randint(1,6)  \n    print(x)  \n    c=c+1  \nprint('Lanzamiento en el cual sali\u00f3 el 5: ',c)  \n \n Prueba del programa  \n>>>  \n3 \n2 \n2 \n4 \n1 \n6 \n1 \n5 \nLanzamiento en el cual sali\u00f3 el 5:  8 \n>>> \n \nEl valor inicial  x = 0 permite ingresar al ciclo  while . Dentro del ciclo se genera la \nsecuencia de n\u00fameros aleatorios hasta que se cumple la condici\u00f3n de salida.  \n Como se ver\u00e1 en secciones posteriores, la programaci\u00f3n de algunos algoritmos puede \nnecesitar el uso de la instrucci\u00f3n  break  para salir de ciclos. De todas maneras esta \ninstrucci\u00f3n debe usarse con precauci\u00f3n para mantener la claridad de la codificaci\u00f3n de los \nprogramas.\n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7826483e-d8a2-4b1d-bdcc-55d6d3fa18d1": {"__data__": {"id_": "7826483e-d8a2-4b1d-bdcc-55d6d3fa18d1", "embedding": null, "metadata": {"page_label": "134", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e859d7fe-f1c0-48b6-b1bc-7e19cf7996e8", "node_type": "4", "metadata": {"page_label": "134", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6429574e5b83454bbe0f0fd78240ac111858faf256ef9a3fb19746caf34d0c47", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50c16ccf-38b5-4719-bfc4-ca95586b8fec", "node_type": "1", "metadata": {"page_label": "133", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b3380d07f0a10d767828816b2093b39575e7fa3617049ddf1bd90c713c3d6480", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "776b472c-31a9-4b56-8604-aa2546b6752d", "node_type": "1", "metadata": {}, "hash": "0299aaaf0d6f20a8ad0a4baa32d7effe763ad4f4b4e19a2993e09941f9ffb9c9", "class_name": "RelatedNodeInfo"}}, "hash": "ef0f55c59c34dad8687a0317f0b453c4bb23b852bcef6e0952de737aa0f1d6c1", "text": "134 \n \nEjemplo . Dise\u00f1e un prog rama para el juego de adivinar un entero generado al azar . \nIncluya un mensaje de ayuda y un conteo de intentos.  \n \nInstrumentaci\u00f3n  \n Variables  \n  x:  n\u00famero aleatorio entero \n  n:  n\u00famero ingresado  \n  i:   conteo de intentos  \n  Programa  \nSe usa un ciclo while  con la condici\u00f3n  True . Este artificio mantiene el ciclo activo.  \nLa \u00fanica manera de salir es forzar la salida con la instrucci\u00f3n break. Esto ocurre al \nadivinar el n\u00famero.  \n \nfrom random import* \nx=randint(1,100)  \ni=0 \nwhile True:  \n    i=i+1  \n    n=int( input('Adivine el n\u00famero:  ')) \n    if n==x: \n        print( 'Adivin\u00f3 en ',i,' intentos')  \n        break  \n    else:  \n        if n<x: \n            print( 'Muy peque\u00f1o')  \n        else:  \n            print('Muy grande')  \n \n Prueba del programa  \n>>>  \nAdivine el n\u00famero:  50 \nMuy grande  \nAdivine el n\u00famero:  25 \nMuy peque\u00f1o  \nAdivine el n\u00famero:  42 \nMuy peque\u00f1o  \nAdivine el n\u00famero:  48 \nMuy grande  \nAdivine el n\u00famero:  46 \nMuy grande  \nAdivine el n\u00famero:  45 \nAdivin\u00f3 en  6  intentos  \n>>>  \n \nEl uso del ciclo while  con una condici\u00f3n True  es un artificio \u00fatil para cr ear un ciclo infinito  \ndel cual se debe salir con la instrucci\u00f3n break. Este artificio ser\u00e1 usado en otros ejemplos.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1279, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "776b472c-31a9-4b56-8604-aa2546b6752d": {"__data__": {"id_": "776b472c-31a9-4b56-8604-aa2546b6752d", "embedding": null, "metadata": {"page_label": "135", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16a578be-947e-41c0-9078-6e4f2f1a0b60", "node_type": "4", "metadata": {"page_label": "135", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b2988d950d8459a9e85c7fb493366d015d2f7f8238c96e81eb38f413b405791d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7826483e-d8a2-4b1d-bdcc-55d6d3fa18d1", "node_type": "1", "metadata": {"page_label": "134", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ef0f55c59c34dad8687a0317f0b453c4bb23b852bcef6e0952de737aa0f1d6c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83aa8f39-6e5b-47c3-806c-6fc2a65007ff", "node_type": "1", "metadata": {}, "hash": "1687dfa3013a64decf0648fc3f8dd36d0a50a9815d35484348ad771901a5a0f7", "class_name": "RelatedNodeInfo"}}, "hash": "0299aaaf0d6f20a8ad0a4baa32d7effe763ad4f4b4e19a2993e09941f9ffb9c9", "text": "135 \n \nInterrupci\u00f3n de las iteraciones de un ciclo doble  \n \nLa instrucci\u00f3n  break   interrumpe las iteraciones de un ciclo. Para salir de un ciclo doble se \npuede usar un artificio como se muestra en el siguiente programa. Suponer que se desea salir de ambos ciclos la primera vez que el valor asignado a la variable n  sea divisible por 7 \n  \nsalida = False  \nfor i in range(1,10):  \n    for j in range(1,10): \n        n=2*i**3+3*j**2  \n        if n%7==0: \n            print(i,j,n)  \n            salida = True \n            break   # Sale del ciclo interno  \n    if salida: \n        break    # Sale del cic lo externo  \n \n \nAl activarse la instrucci\u00f3n  break  en el ciclo interno se asigna un valor l\u00f3gico a la variable  \nsalida y sale del ciclo interno. El valor de la variable salida es usado en el ciclo externo \npara salir tambi\u00e9n del ciclo externo.  \n Prueba del programa  \n>>>  \n1 2 14 \n>>>  \n 5.10.5 La instrucci\u00f3n  continue  \n \nLa instrucci\u00f3n c ontinue  se usa en los ciclos para regresar al comienzo del ciclo ignorando \ntodas las instrucciones restantes en la iteraci\u00f3n actual.  \n \nEjemplo.  El siguiente programa suma los elementos de una lista ignorando los valores \nnegativos . \n \n#Uso de continue  \nx=[23,45,- 34,27,-82,56] \ns=0 \nfor n in x: \n    if n<0:  \n        continue  \n    s=s+n  \nprint(s)  \n \nPrueba del programa  \n>>>  \n151 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1368, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83aa8f39-6e5b-47c3-806c-6fc2a65007ff": {"__data__": {"id_": "83aa8f39-6e5b-47c3-806c-6fc2a65007ff", "embedding": null, "metadata": {"page_label": "136", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ce35ae3-c7c0-4b7d-af82-4bc42cef8c68", "node_type": "4", "metadata": {"page_label": "136", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a40039fa886a6bdd455485e65811c43faf82eb82411ed58e1dddc4ed36cd3d57", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "776b472c-31a9-4b56-8604-aa2546b6752d", "node_type": "1", "metadata": {"page_label": "135", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0299aaaf0d6f20a8ad0a4baa32d7effe763ad4f4b4e19a2993e09941f9ffb9c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd19e4f4-6bc5-44b0-92b7-8dc7314a6642", "node_type": "1", "metadata": {}, "hash": "ebe7e696094ff68eeef2c031bd29814b7d212ac61bd7b8a598fb76f98ab4c64a", "class_name": "RelatedNodeInfo"}}, "hash": "1687dfa3013a64decf0648fc3f8dd36d0a50a9815d35484348ad771901a5a0f7", "text": "136 \n \n5.10. 6 La instrucci\u00f3n   exit \n \nEsta instrucci\u00f3n se encuentra en el m\u00f3dulo sys. Se usa para forzar la finalizaci\u00f3n de un \nprograma  antes de la salida normal.  \n \nfrom sys import* \n. . .  \n. . . \n. . . \nexit()     Finalizar\u00e1 la ejecuci\u00f3n del programa  \n \n \n \nUna de las normas de la Programaci\u00f3n Estructurada es evitar instrucciones que alteran \nel flujo establecido en las estructuras de control  de las  decisiones y  ciclos.  Esto ocurre \ncon las instrucciones break,  continue  y exit  por lo tanto, el uso de est os recursos que \nalteran el flujo normal debe restringirse a los casos en los cuales sea necesario.   \n \n \n \n \n5.10.7 La instrucci\u00f3n  pass \n \nLa instrucci\u00f3n  pass  repres enta una operaci\u00f3n nula.  Cuando es ejecutada nada ocurre. \nSe la usa como un relleno en alg\u00fan lugar del programa en donde debe n escribir se \ninstrucci ones, pero al no estar listas se escribe esta instrucci\u00f3n . \n \nEjemplo.  \n \nif m in [1,3,5,7,8,10,12]:  \n    print('Mes de 31  d\u00edas') \nelse: \n    pass  # Reemplaza al c\u00f3digo que aun no se escribe  \n \n \n5.10.8 El objeto  None  \n \nEste nombre especial se usa para crear  variables pero sin especificar a\u00fan ni el valor  ni su \ntipo \n Ejemplo.  \n >>> x=None  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd19e4f4-6bc5-44b0-92b7-8dc7314a6642": {"__data__": {"id_": "dd19e4f4-6bc5-44b0-92b7-8dc7314a6642", "embedding": null, "metadata": {"page_label": "137", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7f2bdb7-07f1-4d3c-803f-675176c3cc0f", "node_type": "4", "metadata": {"page_label": "137", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9cc92c5db8a1cb345b004d524bdb931810d4fbb53376465c0a021f28c7f86ed6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83aa8f39-6e5b-47c3-806c-6fc2a65007ff", "node_type": "1", "metadata": {"page_label": "136", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1687dfa3013a64decf0648fc3f8dd36d0a50a9815d35484348ad771901a5a0f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "509897ce-3b58-4df7-8a03-bab6687fa2b4", "node_type": "1", "metadata": {}, "hash": "26d41c19dffc40206aa1dd86288088f0b38c2213901156339732328e52d2bce5", "class_name": "RelatedNodeInfo"}}, "hash": "ebe7e696094ff68eeef2c031bd29814b7d212ac61bd7b8a598fb76f98ab4c64a", "text": "137 \n \n5.10. 9 Ejecuci\u00f3n repetida de un bloque mediante una condici\u00f3n al final  \n \nAlgunos  programadores prefieren definir ciclos con la condici\u00f3n al final. Esta estructura se \nusa p ara repetir  un bloque hasta que se cumpla  alguna condici\u00f3n. Gr\u00e1ficamente se la \npuede representar con la siguiente f orma:  \n \nRepresentaci\u00f3n gr\u00e1fica  \n                 \n                                 \n \n                                                   \n  \n            P \n  \n                   F \n \n                                 Hasta  c ondici\u00f3n  \n \n                                                                  V\n \n \n \nAl entrar a esta estructura, se ejecuta n las instrucciones en el bloque y despu\u00e9s se \nchequea el valor de la condici\u00f3n.  Si la condici\u00f3n tiene el valor verdadero, termina el ciclo y \nla ejecuci\u00f3n continua abajo, c aso contrario nuevamente se repite el bloque.  En esta \nestructura  algor\u00edtmica , el bloque de instrucci\u00f3nes se r epite al menos una vez . \n \nSeudo lenguaje  \n \n Repita  \n \n \n  P \n \n Hasta  condici\u00f3n  \n \n \n \nLenguaje Python \n \nEl lenguaje Python no dispone de una instrucci\u00f3n especial para describir  esta estructura de \ncontrol pero se la puede traducir usando la instrucci\u00f3n   while   y la instrucci\u00f3n  break  de la \nsiguiente manera:  \n \nwhile True:  \n   instrucci\u00f3n en el bloque P \ninstrucci\u00f3n en el bloque P \n. . . \ninstrucci\u00f3n en el bloque P \nif condici\u00f3n: break \n \n \nEl ciclo  while   permanece repitiendo el bloque de instrucciones hasta que se cumpl a la \ncondici\u00f3n  al final .  En este caso, se activa  la instrucci\u00f3n  break  y el ciclo termina  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "509897ce-3b58-4df7-8a03-bab6687fa2b4": {"__data__": {"id_": "509897ce-3b58-4df7-8a03-bab6687fa2b4", "embedding": null, "metadata": {"page_label": "138", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92df0a1b-3074-4cf1-9ae9-f2a87ef8d11b", "node_type": "4", "metadata": {"page_label": "138", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "559f7c6b9035491719e7ce94c81d9fdc98adf74eea79d63e74b3cb116c230362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd19e4f4-6bc5-44b0-92b7-8dc7314a6642", "node_type": "1", "metadata": {"page_label": "137", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ebe7e696094ff68eeef2c031bd29814b7d212ac61bd7b8a598fb76f98ab4c64a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "614e4809-8025-4762-ba4f-71b7cd475d0a", "node_type": "1", "metadata": {}, "hash": "ec5beab9a609908dfed91a4dde3e163f1b0fa92fa2d0973a47075801b89e9b38", "class_name": "RelatedNodeInfo"}}, "hash": "26d41c19dffc40206aa1dd86288088f0b38c2213901156339732328e52d2bce5", "text": "138 \n \nEjemplo.  Simular lanzamientos de un dado. Determinar la cantidad de lanzamientos hasta \nque salga el   5. \n  \n Soluci\u00f3n con la  estructura de repetici\u00f3n condicionada al final  \n \n \nfrom random import* \nc=0 \nwhile True:  \n    x=randint(1,6)  \n    print(x)  \n    c=c+1  \n    if x==5: break \nprint('Lanzamiento en el cual sali\u00f3 el 5: ', c) \n \n \nPrueba del programa  \n \n>>>  \n2 \n1 \n4 \n3 \n2 \n4 \n5 \nLanzamiento en el cual sali\u00f3 el 5:  7  \n>>>\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "614e4809-8025-4762-ba4f-71b7cd475d0a": {"__data__": {"id_": "614e4809-8025-4762-ba4f-71b7cd475d0a", "embedding": null, "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b730dcac-3444-434c-a56c-86157f3b8f57", "node_type": "4", "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "511cf8d2e5fa3f214a25a8804dea49934207b63d383467adf6f425fb500ebf41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "509897ce-3b58-4df7-8a03-bab6687fa2b4", "node_type": "1", "metadata": {"page_label": "138", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "26d41c19dffc40206aa1dd86288088f0b38c2213901156339732328e52d2bce5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d09d8c5d-5488-4f7d-849e-01d22a3eed8f", "node_type": "1", "metadata": {}, "hash": "041d8f140c17004a99c9dc55b513cf3a9ef9f611d842584f7c199f3d83e871bc", "class_name": "RelatedNodeInfo"}}, "hash": "ec5beab9a609908dfed91a4dde3e163f1b0fa92fa2d0973a47075801b89e9b38", "text": "139 \n \n5.11  Introducci\u00f3n a validaci\u00f3n de datos  y control de errores de ejecuci \u00f3n \n \nEn los ejemplos de las secciones anteriores se ha supuesto que los datos que ingresan no contienen alg\u00fan error. En la realidad al usar un programa es frecuente que se introduzcan \ndatos incorrectos, por lo que el programa debe realizar alguna validaci\u00f3n para evitar que ingresen estos datos y se produzcan resultados incorrectos y que adicionalmente el \nprograma tenga una inter rupci\u00f3n inesperada y se detenga. \n Ejemplo.  Dado un n\u00famero entero, determine cuantas cifras tiene.  \n \nVariables  \n n: dato (entero positivo)  \n c: cantidad de cifras de n \n \nEl n\u00famero n es reducido dividi\u00e9ndolo sucesivamente para 10 en un ciclo. La varible c  se \nusa para determinar cuantas veces se realiz\u00f3 la reducci\u00f3n.  \n \n#Conteo de las cifras de un n\u00famero  \nn=int(input('Ingrese un entero positivo:  '))  \nc=0 \nwhile n>0: \n    n=n//10  \n    c=c+1  \nprint('cantidad de cifras: ',c)  \n \n Prueba s del programa  \n>>>  \nIngrese un entero positivo:  4578321 \ncantidad de cifras:  7  \n \n>>> ========= RESTART =========  \n>>>  \nIngrese un entero positivo:  45.2 \nValueError: invalid literal for int() with base 10: '45.2'  \n>>>  \nEn la segunda prueba, el dato ingresado tiene decimales  por lo que se produc e un error de \ntipo y se interrump e la ejecuci\u00f3n del programa. Igual ocurrir\u00eda si el dato no es num\u00e9rico.  \n En la siguiente secci \u00f3n se revisa un dispositivo del lenguaje Python para tener control \nsobre el ingreso y validaci\u00f3n de datos, as\u00ed como en otras operaciones que pueden \ncontener errores.  Tema  importante en la programaci\u00f3n de aplicaciones computacionales.", "start_char_idx": 0, "end_char_idx": 1644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d09d8c5d-5488-4f7d-849e-01d22a3eed8f": {"__data__": {"id_": "d09d8c5d-5488-4f7d-849e-01d22a3eed8f", "embedding": null, "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b730dcac-3444-434c-a56c-86157f3b8f57", "node_type": "4", "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "511cf8d2e5fa3f214a25a8804dea49934207b63d383467adf6f425fb500ebf41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "614e4809-8025-4762-ba4f-71b7cd475d0a", "node_type": "1", "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec5beab9a609908dfed91a4dde3e163f1b0fa92fa2d0973a47075801b89e9b38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0466bad-6bfb-4fb8-a0e1-181746573d3f", "node_type": "1", "metadata": {}, "hash": "f019b4a061889f3bd627d7196143cb91ce8201ba2de2f80379f8194a9da8e44b", "class_name": "RelatedNodeInfo"}}, "hash": "041d8f140c17004a99c9dc55b513cf3a9ef9f611d842584f7c199f3d83e871bc", "text": "Tema  importante en la programaci\u00f3n de aplicaciones computacionales.  \n \nPara el ejemplo anterior, adicionalmente se muestra  una soluci\u00f3n simple para determinar \ncuantas cifras tiene un n\u00famero, usando funciones de Python:  \n \n>>> n=4578321  \n>>> len(str(n))  \n7 \nPython Programaci\u00f3n", "start_char_idx": 1576, "end_char_idx": 1859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0466bad-6bfb-4fb8-a0e1-181746573d3f": {"__data__": {"id_": "c0466bad-6bfb-4fb8-a0e1-181746573d3f", "embedding": null, "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2017215e-1489-40fa-a06a-a204ae0d3942", "node_type": "4", "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "202f0b4bdd6c1d8bf46aadfbde6c225d025d1d5dd713db7b361ab8f538a9dfda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d09d8c5d-5488-4f7d-849e-01d22a3eed8f", "node_type": "1", "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "041d8f140c17004a99c9dc55b513cf3a9ef9f611d842584f7c199f3d83e871bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3785552a-6eb2-43a4-a038-822e62bacb80", "node_type": "1", "metadata": {}, "hash": "4ba7ff56f5157d65a9c327021d09b72f296b76809eb51d3bbd9e3f0b18af81af", "class_name": "RelatedNodeInfo"}}, "hash": "f019b4a061889f3bd627d7196143cb91ce8201ba2de2f80379f8194a9da8e44b", "text": "140 \n \n5.11.1 Control de errores de ejecuci \u00f3n \n \nAl probar  un programa se pueden producir errores de ejecuci\u00f3n. En este caso Python  \nemite un  error o excepci\u00f3n y se detiene la ejecuci\u00f3n del programa. El error producido \naparece en la ventana principal ju nto a un mensaje . Se muestran algunos casos:  \n \nEjemplos . \n \n>>> x=1/0                          \nZeroDivisionError:  division by zero                 (divisi\u00f3n para cero)  \n  \n>>> x=2*t +1                         \nNameError: name 't' is not defined               (si  t  no est\u00e1 definida)   \n >>> x=int(input('Ingrese un entero: '))  \nIngrese un entero: 4.5               \nValueError: invalid literal for int()      (el dato no es un entero)  \n >>> from funciones import*             \nImportError : No module named 'funciones'     (librer\u00eda o m\u00f3dulo no encontrado)  \n \nEl c\u00f3digo del error , resaltado en  color  azul, que aparece en la pantalla es el  error o \nexcepci\u00f3n. Si un programa tuviera estos errores, la ejecuci\u00f3n se detendr\u00eda.  \n Para tener control sobre esta condici\u00f3n de error, el lenguaje Python  dispone de una \ninstrucci\u00f3n para manejo de excepciones, con la siguiente sintaxis:  \n \n try: \n \n     Instrucciones en las que se desea detectar excepciones  \n \n except error: \n \n     Instrucciones con a cciones que deseamos realizar si hay una excepci\u00f3n \n \nSi al ejecutar todas las instrucciones incluidas en try no se detecta la excepci\u00f3n o  error \nespecificado en excep t la ejecuci\u00f3n  se realiza en forma normal  y contin\u00faa despues de la \ninstrucci\u00f3n   try\u2013except . \n \nPor otra parte,  si al ejecutar las instrucciones incluidas  en try ocurre el error o excepci\u00f3n \nespecificado en except , entonces se realizan las instrucciones asociadas a except  y \ndespu\u00e9s prosigue la ejecuci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1758, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3785552a-6eb2-43a4-a038-822e62bacb80": {"__data__": {"id_": "3785552a-6eb2-43a4-a038-822e62bacb80", "embedding": null, "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2017215e-1489-40fa-a06a-a204ae0d3942", "node_type": "4", "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "202f0b4bdd6c1d8bf46aadfbde6c225d025d1d5dd713db7b361ab8f538a9dfda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0466bad-6bfb-4fb8-a0e1-181746573d3f", "node_type": "1", "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f019b4a061889f3bd627d7196143cb91ce8201ba2de2f80379f8194a9da8e44b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dcf76fa-dc60-435e-a546-a3638e14d47c", "node_type": "1", "metadata": {}, "hash": "60fc85024c00bb7eba582012ca039b4bde4fc5a9886ef20bdd4b6fbd492922e5", "class_name": "RelatedNodeInfo"}}, "hash": "4ba7ff56f5157d65a9c327021d09b72f296b76809eb51d3bbd9e3f0b18af81af", "text": "Esta instrucci\u00f3n permite al programador tener control sobre los errores en la ejecuci\u00f3n y la \nposibilidad de escribir instrucciones para describir acciones en caso de que se produzcan \nestos eventos. Si no se usa est\u00e1 instruccion, la ejecuci\u00f3n del programa se detendr\u00eda. \n \nSi no se especifica cual es el  error que se desea detectar, entonces se realizan las \ninstrucciones asociadas a except  al producirse cualquier exepci\u00f3n y despu\u00e9s prosigue la \nejecuci\u00f3n.  \n \nPython Programaci\u00f3n", "start_char_idx": 1764, "end_char_idx": 2249, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3dcf76fa-dc60-435e-a546-a3638e14d47c": {"__data__": {"id_": "3dcf76fa-dc60-435e-a546-a3638e14d47c", "embedding": null, "metadata": {"page_label": "141", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3ffd28c-3bdc-42ec-8164-a8c5e6d79016", "node_type": "4", "metadata": {"page_label": "141", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f1d3837a54f52f40b3ea2a7ebc11f55feab3dacf587deb05dc225473300057d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3785552a-6eb2-43a4-a038-822e62bacb80", "node_type": "1", "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4ba7ff56f5157d65a9c327021d09b72f296b76809eb51d3bbd9e3f0b18af81af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "920776a0-3d2f-4aec-b222-fe318268414a", "node_type": "1", "metadata": {}, "hash": "7fc0c9499ae1d7a9c7f7d394c9449c6dfa3410c36ec6cb1e302cc0ac13671f92", "class_name": "RelatedNodeInfo"}}, "hash": "60fc85024c00bb7eba582012ca039b4bde4fc5a9886ef20bdd4b6fbd492922e5", "text": "141 \n \nEjemplo.  El siguiente ejemplo trivial se usar\u00e1 para describir el procedimiento de validaci\u00f3n. \nSuponer que se debe suma r una cantidad de datos enteros desde el t eclado.  \n \nSi alg\u00fan dato no es entero, se producir\u00e1 una excepci\u00f3n (error) y el programa se detendr\u00eda:  \n \n \n#Sumar datos  \nn=int(input('Cantidad de datos: ' )) \ns=0 \nfor i in range(n):  \n    x=int( input('Ingrese dato: '))  \n    s=s+x  \nprint('Suma: ',s)  \n \n \nPrueba del prog rama  \n \n>>>  \nCantidad de datos: 5  \nIngrese dato: 23  \nIngrese dato: 45  \nIngrese dato: 26  \nIngrese dato: 74  \nIngrese dato: 81  \nSuma:  249  \n>>>  \n \nSegunda Prueba del programa  (Ingreso de datos incorrectos)  \n \n>>> \nCantidad de datos:  abc \n \nValueError: invalid literal for int() with base 10: 'abc'  \n>>>  \n El computador detuvo la ejecuci\u00f3n del programa por el error o excepci\u00f3n encontrado.  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 875, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "920776a0-3d2f-4aec-b222-fe318268414a": {"__data__": {"id_": "920776a0-3d2f-4aec-b222-fe318268414a", "embedding": null, "metadata": {"page_label": "142", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba01fa1b-bca1-4cf8-8f08-90b2012b8d0a", "node_type": "4", "metadata": {"page_label": "142", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8d8625608a8f44f49024b7088a0476937396bef1784060f04e640b4b132855e7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dcf76fa-dc60-435e-a546-a3638e14d47c", "node_type": "1", "metadata": {"page_label": "141", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "60fc85024c00bb7eba582012ca039b4bde4fc5a9886ef20bdd4b6fbd492922e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68b0b680-b951-415e-8f11-4fbb608beb15", "node_type": "1", "metadata": {}, "hash": "16ac17391511660cf32f2030b191e7587759704065e8a254461a8a0f378cefe3", "class_name": "RelatedNodeInfo"}}, "hash": "7fc0c9499ae1d7a9c7f7d394c9449c6dfa3410c36ec6cb1e302cc0ac13671f92", "text": "142 \n \nEn el siguiente intento se evita  la interrupci\u00f3n del programa. En caso de error en el valor \nde la can tidad de datos , se mu estra un mensaje y  no entrar\u00e1n los datos para r ealiza r la \nsuma. Se usa la variable  correcto   para registrar si hubo error al ingresar el  dato \n \n#Sumar datos  \ntry: \n    n=int( input('Cantidad de datos: '))  \n    correcto=True  \nexcept ValueError:  \n    correcto=False  \nif not correcto:  \n    print( 'Cantidad incorrecta')  \n    n=0 \ns=0 \nfor i in range(n):    #Si n=0 el ciclo no se realiza  \n    x=int( input('Ingrese dato: '))  \n    s=s+x  \nprint('Suma: ',s)  \n \n \nEn un siguiente  intento, se solicita la cantidad de datos hasta que se ingres e un dato \ncorre cto. Este procedimiento permite corregir el ingreso de un dato sin salir del programa.  \nNote el uso de las instrucciones continue y break para continuar o salir del ciclo de \nlectura. Sin embargo, si los datos para sumar son incorrectos, la ejecuci\u00f3n se detendr\u00e1.   \n \n#Sumar datos  \nwhile True:  \n    try:  \n        n=int (input('Cantidad de datos: '))  \n    except ValueError:  \n        print( 'Cantidad incorrecta' ) \n        continue  \n    break  \n s=0 for i in range(n):  \n    x=int( input('Ingrese dato: '))  \n    s=s+x  \nprint('Suma: ',s)  \n \nPrueba del programa  \n>>>  \nCantidad de datos: abc  \nCantidad incorrecta  \nCantidad de datos: 3  \nIngrese dato: 5 1 \nIngrese dato: 7 2 \nIngrese dato: 4 6 \nSuma:  169  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68b0b680-b951-415e-8f11-4fbb608beb15": {"__data__": {"id_": "68b0b680-b951-415e-8f11-4fbb608beb15", "embedding": null, "metadata": {"page_label": "143", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "75d9475c-c5dc-417f-808d-417f66623b0e", "node_type": "4", "metadata": {"page_label": "143", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fc5a23cfc86d5e16d8cc1d75dc7e4f7705cd793e1c01e2c44df906f1f771e7d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "920776a0-3d2f-4aec-b222-fe318268414a", "node_type": "1", "metadata": {"page_label": "142", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7fc0c9499ae1d7a9c7f7d394c9449c6dfa3410c36ec6cb1e302cc0ac13671f92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae6987d4-33e5-4c3f-bc2e-e1aa111f49a4", "node_type": "1", "metadata": {}, "hash": "50b0185e577e459f50fb18ad04dc5ea0466fa91104785b80a6495c4efdc824e0", "class_name": "RelatedNodeInfo"}}, "hash": "16ac17391511660cf32f2030b191e7587759704065e8a254461a8a0f378cefe3", "text": "143 \n \nEn el intento final, se protege el ingreso de la cantidad de datos y de los datos para sumar.  \n \nEn el ciclo de la suma se usa un ciclo while  para prevenir el ingreso de datos incorrectos. \nAdicionalmente, se incluye en la salida la identificaci\u00f3n del dato que debe ingresar : \n \n#Sumar datos  \nwhile True:  \n    try: \n        n=int (input('Cantidad de datos: '))  \n    except ValueError:  \n        print('Cantidad incorrecta' ) \n        continue  \n    break  \n \ns=0 \ni=1 \nwhile True:  \n    try: \n        x=int (input('Ingrese el dato '+ str(i)+': ')) \n    except ValueError:  \n        print('Dato incorrecto')  \n        continue  \n    i=i+1  \n    s=s+x \n    if i>n:break \nprint('Suma: ',s)  \n \nPrueba del programa  \n >>>  \nCantidad de datos:  abc \nCantidad incorrecta  \nCantidad de datos: rst  \nCantidad incorrecta  \nCantidad de datos: 4  \nIngrese el dato 1: 34 \nIngrese el dato 2: abc \nDato incorrecto  \nIngrese el dato 2:  27 \nIngrese el dato 3: 48 \nIngrese el dato 4: 72 \nSuma:  181  \n>>>  \n Observe con cuidado el uso de las instrucciones  try \u2013except ,  break,   continue  y el \nencolumnamiento de las instrucciones.  Se sugiere elaborar una representaci\u00f3n gr\u00e1fica del procedimiento utiliz ado.   \n \nEl ciclo  while   permanece activo hasta que se ingrese un dato correcto.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae6987d4-33e5-4c3f-bc2e-e1aa111f49a4": {"__data__": {"id_": "ae6987d4-33e5-4c3f-bc2e-e1aa111f49a4", "embedding": null, "metadata": {"page_label": "144", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de178844-90cf-4dc9-a03d-652283c9854e", "node_type": "4", "metadata": {"page_label": "144", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "29e353b6abae2a2b2717429d813c00abb26d16c7f953012c7a7ae681bf98d269", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68b0b680-b951-415e-8f11-4fbb608beb15", "node_type": "1", "metadata": {"page_label": "143", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "16ac17391511660cf32f2030b191e7587759704065e8a254461a8a0f378cefe3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0eac418c-cf1b-444a-a257-f38600ae334f", "node_type": "1", "metadata": {}, "hash": "c71afa8fe32ae31e5a5c24878a75bd647dbb3a5353e2ee1f51971d1fc22e6060", "class_name": "RelatedNodeInfo"}}, "hash": "50b0185e577e459f50fb18ad04dc5ea0466fa91104785b80a6495c4efdc824e0", "text": "144 \n \n \nNOTA . Al realizar pruebas con  un m\u00f3dulo o librer\u00eda que est\u00e1 siendo modificada, es \nnecesario usar la opci\u00f3n Restart Shell  del men\u00fa de la ventana interactiva e importar \nnuevamente el m\u00f3dulo o librer\u00eda cada vez que sea modificada para realizar pruebas desde \nun programa o desde la ventana interactiva.  \n \n La funci\u00f3n  type  puede usarse para determinar el tipo de un objeto: int, str, etc.   \n \nEjemplos.  \n \n>>> x=35  \n>>> print(type(x))  \n<class 'int'>  \n>>> x='Prueba'  \n>>> print(type(x))  \n<class 'str'>  \n \nSe pueden usar para verificar tipos  en la ventana interactiva o en programas \n \nEjemplos  \n \n>>> x=35  \n>>> y='Prueba'  \n>>> if type(x)!=type(y):  \n print('Tipos diferentes')  \n \nTipos diferentes  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0eac418c-cf1b-444a-a257-f38600ae334f": {"__data__": {"id_": "0eac418c-cf1b-444a-a257-f38600ae334f", "embedding": null, "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dab23684-10a7-4351-8e2a-fc8a0b2e10d6", "node_type": "4", "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b56b30562b48811a99c273b44143eb4bacfb83ebb4111dcea7c10e2152709c5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae6987d4-33e5-4c3f-bc2e-e1aa111f49a4", "node_type": "1", "metadata": {"page_label": "144", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "50b0185e577e459f50fb18ad04dc5ea0466fa91104785b80a6495c4efdc824e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19d9937d-cf0a-4075-b0a1-9b4ba4df16c2", "node_type": "1", "metadata": {}, "hash": "8c298cf7c08b2ea2008f8d42df603cb2bc244587fe6a290dc083508f6bd228e6", "class_name": "RelatedNodeInfo"}}, "hash": "c71afa8fe32ae31e5a5c24878a75bd647dbb3a5353e2ee1f51971d1fc22e6060", "text": "145 \n \n5.12 Ejercicios de programaci\u00f3n con ciclos  \n \nPara cada ejercicio escriba y pruebe un programa en la ventana de edici\u00f3n de Python.  \n \n1.- Calcule el promedio, el menor valor y el mayor valor de los pesos de n  paquetes en una \nbodega. Estos datos ingresan uno a la vez dent ro de un ciclo.  n   es un dato ingresado al \ninicio.  \n \n2.- Clasifique los pesos de los n objetos de una bodega en tres grupos: menor a 10 Kg., \nentre 10 y 20 Kg., mas de 20 Kg. Los datos ingresan uno a la vez en un ciclo.  \n \n3. Determine la cantidad de t\u00e9rminos  que deben sumarse de la serie  12 + 22 + 33 + 44 + ... \npara que el valor de la suma sea mayor a un n\u00famero  x  ingresado al inicio.  \n 4.- Dado dos n\u00fameros enteros  a, b, determine su m\u00e1ximo com\u00fan divisor m . \nEjemplo:  a = 36,  b  = 45  entonces m  = 9 \n \n5. Calcu le un valor aproximado para la constante  \u03c0  usando la siguiente expresi\u00f3n:  \n    \u03c0/4 = 1 \u2013 1/3 + 1/5 \u2013  1/7 + 1/9 \u2013  1/11 + 1/13 ...  \n \n   La cantidad de t\u00e9rminos es un dato que debe ser ingresado al inicio del algoritmo.  \n \n6.- Lea los votos de n  personas. Cada voto es un n\u00famero 1, 2, o 3 correspondiente a tres \ncandidatos. Si el dato es 0 es un voto en blanco. Si es otro n\u00famero es un voto nulo. \nDetermine el total de votos de cada candidato y el total de votos blancos y nulos.  \n \n7.- Lea las coordenadas de u, v de  la ubicaci\u00f3n de una f\u00e1brica y las coordenada x, y de n \nsitios de distribuci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19d9937d-cf0a-4075-b0a1-9b4ba4df16c2": {"__data__": {"id_": "19d9937d-cf0a-4075-b0a1-9b4ba4df16c2", "embedding": null, "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dab23684-10a7-4351-8e2a-fc8a0b2e10d6", "node_type": "4", "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b56b30562b48811a99c273b44143eb4bacfb83ebb4111dcea7c10e2152709c5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0eac418c-cf1b-444a-a257-f38600ae334f", "node_type": "1", "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c71afa8fe32ae31e5a5c24878a75bd647dbb3a5353e2ee1f51971d1fc22e6060", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff08296f-4291-47e9-b397-92ed6eb13be8", "node_type": "1", "metadata": {}, "hash": "0a0b2d8d7dc5edc313e9bc1f400624d125f30760115d7d22a3b57d788f479d0b", "class_name": "RelatedNodeInfo"}}, "hash": "8c298cf7c08b2ea2008f8d42df603cb2bc244587fe6a290dc083508f6bd228e6", "text": "Encuentre cual es la distancia del sitio m\u00e1s alejado de la f\u00e1brica  \n \n8.- Encuentre el mayor valor de la funci\u00f3n f(x)=sen(x)+ln(x), para los valores:  \n    x = 1.0, 1.1, 1.2, 1.3, . .., 4 \n \n9.- Se tienen una lista de las coordenadas   x, y  de  n puntos en un plano. Lea \nsucesivamente las coordenadas de cada punto y acumule las distancias del punto al \norigen. Muestre la distancia total acumulada.  \n \n10.- Determine la suma de los t\u00e9rminos de la serie 1\n3 + 23 + 33 + ... + n3 en donde n es un \nn\u00famero natural  \n \n11.- Determine la suma de los n primeros n\u00fameros de la serie:  1, 1, 2, 3, 5, 8, 13, 21, ....  \nen la cual cada t\u00e9rmino, a partir del tercero,  se obtiene sumando los dos t\u00e9rminos \nanteriores \n 12.- El inventor del juego del ajedr\u00e9z pidi\u00f3 a su rey que como recompensa le diera por la \nprimera casilla 2 granos de trigo, por la segunda, 4 granos, por la tercera 8, por la cuarta \n16,  y as\u00ed sucesivamente hasta llegar a la casilla 64. El rey acept\u00f3. Su ponga que cada Kg. \nde trigo consta de 20000 granos de trigo. Si cada tonelada tiene 1000 Kg. describa un \nalgoritmo para calcular la cantidad de toneladas de trigo que se hubiesen necesitado.  \n \nEn el ciclo describa la suma  2\n1 + 22 + 23 + 24 + \u2026 + 264 \nPython Programaci\u00f3n", "start_char_idx": 1424, "end_char_idx": 2672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff08296f-4291-47e9-b397-92ed6eb13be8": {"__data__": {"id_": "ff08296f-4291-47e9-b397-92ed6eb13be8", "embedding": null, "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed285ee3-bfc0-474f-9787-754db0c9274a", "node_type": "4", "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6c0b5ec39849bb089b730293a896cc92d2e03a65202233176644fc97fe3fc41b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19d9937d-cf0a-4075-b0a1-9b4ba4df16c2", "node_type": "1", "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8c298cf7c08b2ea2008f8d42df603cb2bc244587fe6a290dc083508f6bd228e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06ca22ca-aa92-4e8a-9bd8-f285a975d809", "node_type": "1", "metadata": {}, "hash": "765e09e538b3b5e703ca55e4e7470bb707799978804cd458aa41821f6db85dd9", "class_name": "RelatedNodeInfo"}}, "hash": "0a0b2d8d7dc5edc313e9bc1f400624d125f30760115d7d22a3b57d788f479d0b", "text": "146 \n \n13.- Una empresa compra una m\u00e1quina en $20000 pagando cuotas anuales durante cinco \na\u00f1os.  La siguiente f\u00f3rmula relaciona el costo de la m\u00e1quina P , el pago anual A, el n\u00famero \nde a\u00f1os n  y el inter\u00e9s anual r : \n n\nnr(1 r)AP(1 r) 1+=+\u2212 \nEscriba un programa que per mita calcular P para valores de r = 0.01,0.02, \u2026, 0.1  \n \n14.- Una persona tiene una lista con los precios de n art\u00edculos y dispone de una cierta \ncantidad de dinero. Los art\u00edculos son identificados con la numeraci\u00f3n natural. Escriba un \nprograma para leer estos datos y obtener los siguientes resultados  \na) Muestre la identificaci\u00f3n de los art\u00edculos que puede comprar  \nb) Para cada art\u00edculo cuyo precio es menor que la cantidad de dinero disponible, determine la cantidad que puede comprar.  \n \n15.- La plataforma de un transporte tiene capacidad para llevar hasta m kilos. Se tiene una \nlista ordenada en forma creciente con el peso de n paquetes. Determine cuantos paquetes \npueden ser transportados. La elecci\u00f3n debe hacerse comenzando con los paquetes de \nmenor peso.  \n 16.- En un supermercado se hace una promoci\u00f3n, mediante la cual el cliente obtiene un \ndescuento dependiendo de un n\u00famero de una cifra que se escoge al azar. Si el numero \nescogido es menor que 7 el descuento es del 5% sobre el total de la compra, si es mayor o \nigual a 7 el descuento es del 10%. Lea la cantidad de dinero. genere el n\u00famero aleatorio y \nmuestre cuanto dinero se le descuenta.  \n \n17.- Escriba un programa que genere un n\u00famero aleatorio con un valor entre 1 y 100 y que \nsea un n\u00famero primo.  \n \n18.- Escriba un programa que muestre dos n\u00fameros aleatorios con valores enteros entre 1 \ny 100 tales que la suma sea un n\u00famero primo.", "start_char_idx": 0, "end_char_idx": 1697, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06ca22ca-aa92-4e8a-9bd8-f285a975d809": {"__data__": {"id_": "06ca22ca-aa92-4e8a-9bd8-f285a975d809", "embedding": null, "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed285ee3-bfc0-474f-9787-754db0c9274a", "node_type": "4", "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6c0b5ec39849bb089b730293a896cc92d2e03a65202233176644fc97fe3fc41b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff08296f-4291-47e9-b397-92ed6eb13be8", "node_type": "1", "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0a0b2d8d7dc5edc313e9bc1f400624d125f30760115d7d22a3b57d788f479d0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47e8ef7d-9097-45f8-9b4b-bdad0f8bfccd", "node_type": "1", "metadata": {}, "hash": "3a6a26b7b60a311357cd53cd7f7128db4f8a8ee630483234fea7190141547e8f", "class_name": "RelatedNodeInfo"}}, "hash": "765e09e538b3b5e703ca55e4e7470bb707799978804cd458aa41821f6db85dd9", "text": "19.- Lea un n\u00famero par. Encuentre dos n\u00fameros al azar tales que la suma sea igual al \ndato dado.  \n \n20.- Lea un n\u00famero par. Encuentre dos n\u00fam eros al azar tales que sean primos y la suma \nsea igual al dato dado.  \n 21. Escriba un programa para simular el siguiente juego: U na rana es colocada en el \ncentro de un camino de 20 mt. La rana realiza saltos aleatoriamente de 1 mt. en \ncualquiera de las dos  direcciones: izquierda o derecha.  Determine la cantidad de saltos \nrealizados  hasta llegar a alguno de los dos extremos.  \n \n22.- Simule el siguiente juego entre tres ranas. Las ranas est\u00e1n al inicio de una pista de 20 \nm.  En turnos cada rana realiza un salto . El salto  es aleatorio y puede ser: a) Brinca y cae \nen el mismo lugar, b) Salta 0.5 m en la direcci\u00f3n correcta, c) Salta 1  m en la direccion \ncorrecta, d) Salta 0.5 m retrocediendo. Determin e cual de las tres ranas ll ega primero a la \nmeta.  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 1701, "end_char_idx": 2644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47e8ef7d-9097-45f8-9b4b-bdad0f8bfccd": {"__data__": {"id_": "47e8ef7d-9097-45f8-9b4b-bdad0f8bfccd", "embedding": null, "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc430645-b670-4995-8983-2db599be3dce", "node_type": "4", "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ee2d7ce02b55ab9fb89ab36b5a5b6fa20b0a1aeea83d471ed5c640be20de5e92", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06ca22ca-aa92-4e8a-9bd8-f285a975d809", "node_type": "1", "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "765e09e538b3b5e703ca55e4e7470bb707799978804cd458aa41821f6db85dd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7667e828-218f-4306-83b0-cfa81b067792", "node_type": "1", "metadata": {}, "hash": "26c26a9ff9b032194f119e910c990ffa9ccd4f9b7b9facc76266fff6a32a7255", "class_name": "RelatedNodeInfo"}}, "hash": "3a6a26b7b60a311357cd53cd7f7128db4f8a8ee630483234fea7190141547e8f", "text": "147 \n \n23.- Escriba un programa para simular la extracci\u00f3n de n bolas de una caja que contiene m \nbolas numeradas con los n\u00fameros naturales del 1 al m. Cada vez que se saca la bola se \nmuestra el n\u00famero y se la devuelve a la caja, por lo tanto pueden salir bolas repetidas.    \n24.- Realice la simulaci\u00f3n de n intentos de lanzamientos de un dado con las siguientes \nreglas: si sale 6 gana $5. Si sale 1 gana $1. Si sale 2, 3, 4 o 5 pierde $2. Determine la \ncantidad acumulada al final del juego \n \n25.- Dado un valor entero positivo  n   verifique que   1\n3+23+33+\u2026+n3 = (1+2+3+\u2026n)2 \n \n26.- Escriba un programa que genere n parejas de n\u00famero primos gemelos. Estos \nn\u00fameros primos tienen la propiedad que adem\u00e1s de ser primos, la distancia entre ellos es 2.   Ejemplo. 3 y 5, 5 y 7, 11 y 13, 17 y 19,  etc  \n 27. Analice el siguiente programa. Escriba los resultados que se obtendr\u00edan si el dato que \ningresa para n  es 25 \n \nn = int( input('Ingrese un dato:  ')) \nr = 0 \nwhile n>0: \n    d = n%2  \n    n = n//2  \n    r = 10*r + d  \n    print(d, n, r)  \n \n28. Analice el siguien te programa que usa un ciclo for. Escriba un programa equivalente \nque produzca el mismo resultado, pero sustituyendo el ciclo for por un ciclo while   Debe \ndefinir una variable para conteo de repeticiones y la condici\u00f3n para salir del ciclo.", "start_char_idx": 0, "end_char_idx": 1320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7667e828-218f-4306-83b0-cfa81b067792": {"__data__": {"id_": "7667e828-218f-4306-83b0-cfa81b067792", "embedding": null, "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc430645-b670-4995-8983-2db599be3dce", "node_type": "4", "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ee2d7ce02b55ab9fb89ab36b5a5b6fa20b0a1aeea83d471ed5c640be20de5e92", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47e8ef7d-9097-45f8-9b4b-bdad0f8bfccd", "node_type": "1", "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3a6a26b7b60a311357cd53cd7f7128db4f8a8ee630483234fea7190141547e8f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "155d0ac7-9de6-43aa-ac9c-1f0e02bf292b", "node_type": "1", "metadata": {}, "hash": "725ba9ba6c65d091036cb3e5dbc73a9642524550f834d81d5cca004bb77080fa", "class_name": "RelatedNodeInfo"}}, "hash": "26c26a9ff9b032194f119e910c990ffa9ccd4f9b7b9facc76266fff6a32a7255", "text": "n = int(input(\u2018Ingrese un dato: \u2018))  \n s = 0 \n for i in range(1,n):  \n     s = s + i**2  \n print(s)  \n 29.- En un juego se debe asignar a cada persona un n\u00famero m\u00e1gico que se obtiene con la \nsiguiente regla: Se suman los d\u00edgitos de la fecha de nacimiento y se suman nuevamente los d\u00edgitos del resultado hasta obtener obtener un solo d\u00edgito, como en el siguiente \nejemplo:  \n \nFecha de Nacimiento:  28/11/1989  \n    28 + 11 + 1989 = 2028  \u21d2  2 + 0 + 2 + 8 = 12   \u21d2   1 + 2 = 3  \nEntonces el n\u00famero buscado es 3  \n \nLea tres n\u00fameros: dia, mes, a\u00f1o y muestre el n\u00famero m\u00e1gico correspondiente  \n \n \n30.  Traduzca al lenguaje Python los algoritmos de los ejemplos 3, 4 y  5 de la Secci\u00f3n  3.5 \n \nPython Programaci\u00f3n", "start_char_idx": 1325, "end_char_idx": 2035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "155d0ac7-9de6-43aa-ac9c-1f0e02bf292b": {"__data__": {"id_": "155d0ac7-9de6-43aa-ac9c-1f0e02bf292b", "embedding": null, "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a730fb6-826c-40d4-9ac1-ca1c8e0d0ea8", "node_type": "4", "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d7b0e4f755d150c41dace1149f45bc290651e17241efc53164f72b1171183b92", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7667e828-218f-4306-83b0-cfa81b067792", "node_type": "1", "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "26c26a9ff9b032194f119e910c990ffa9ccd4f9b7b9facc76266fff6a32a7255", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aba371cd-e0a8-4df7-a937-664abfd674a8", "node_type": "1", "metadata": {}, "hash": "2278bb237240f16da55dcdd994cf1d9d086ca5c9d1f2d81abab4a3460d55e4b4", "class_name": "RelatedNodeInfo"}}, "hash": "725ba9ba6c65d091036cb3e5dbc73a9642524550f834d81d5cca004bb77080fa", "text": "148 \n \n31. Construya un algoritmo para resolver  el siguiente problema: En la a samblea de un \npartido pol\u00edtico hay dos posibles candidatos para inscribirlo en las elecciones de alcalde.  \n \nPara elegir al candidato del partido, cada una de las n personas asistentes a la reuni\u00f3n \nentregan un voto. Se deben leer uno por uno los votos y determinar si alguno de los dos \ncandidatos obtuvo m\u00e1s de la mitad de los votos. Este ser\u00e1 el candidato.  \n \n32. Escriba un programa con un ciclo. Dentro del ciclo se generar\u00e1n tres n\u00fameros \naleatorios con valores enteros del 1 al 10. El programa deber\u00e1 terminar si en alguna \nrepetici\u00f3n, uno de los tres n\u00famero s es igual al producto de los otros dos n\u00fameros. Muestre \nlos n\u00fameros resultantes. Muestre tambi\u00e9n la cantidad de repeticiones que se realizaron.  \n \n33. El cuadrado de cualquier n\u00famero terminado en 5 se lo puede formar como el producto: \n(decenas)(decenas+1) +  25.  \nEj.  852 = 10(8)10(9) + 25 = 7225 \n 4752 = 10(47)10(48) + 25 = 225625  \nElabore un programa que verifique si se cumple esta regla con los n\u00fameros 5 , 10, 15, 20, \n..., m. Si no es verdad, muestre el primer n\u00famero que no cumple esta regla,  m es un dato.  \n \n34.  En una empresa multinacional e l n\u00famero usado en la identificaci\u00f3n de productos es un \nc\u00f3digo que consta de 13 d\u00edgitos: tres para el pa\u00eds, cuatro para la empresa, cinco para el \nproducto y el d\u00edgito de control para detectar errores de digitaci\u00f3n con la s iguiente regla:  \n \nComenzado por la izquierda hasta el decimo segundo d\u00edgito, multiplique el d\u00edgito por 1 si la \nposici\u00f3n es impar y por 3 si la posici\u00f3n es par.", "start_char_idx": 0, "end_char_idx": 1598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aba371cd-e0a8-4df7-a937-664abfd674a8": {"__data__": {"id_": "aba371cd-e0a8-4df7-a937-664abfd674a8", "embedding": null, "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a730fb6-826c-40d4-9ac1-ca1c8e0d0ea8", "node_type": "4", "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d7b0e4f755d150c41dace1149f45bc290651e17241efc53164f72b1171183b92", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "155d0ac7-9de6-43aa-ac9c-1f0e02bf292b", "node_type": "1", "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "725ba9ba6c65d091036cb3e5dbc73a9642524550f834d81d5cca004bb77080fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96b9d787-bdd7-46d8-bdca-85349c28bbe2", "node_type": "1", "metadata": {}, "hash": "6fe43cc3273649b6000d1a7c751eee4a17d73f0243de67b53bc9f59338031d57", "class_name": "RelatedNodeInfo"}}, "hash": "2278bb237240f16da55dcdd994cf1d9d086ca5c9d1f2d81abab4a3460d55e4b4", "text": "Sumar los resultados de los productos y \nrestar de la decena superior. Este \u00faltimo resultado debe coincidir con el d\u00edgito de control  \n \nEscriba un programa que lea un c\u00f3digo,  valide que tenga trece d\u00edgitos, calcule el d\u00edfito de \ncontrol e informe el resultado.  \n \nEjemplo .    C\u00f3digo: : 7 7 0 2 0 0 4 0 0 3 5 0 8  \n 7x1 + 7x3 + 0x1 + 2x3 + 0x1 + 0x3 + 4x1 + 0x3 + 0x1 + 3x3 + 5x1 + 0x3 = 52 \n Decena superior:  60  \n 60 \u2013 52 = 8  Coincide con el d\u00edgito de control. El c\u00f3digo es correcto.  \n \n \n35. El siguiente ejemplo describe un procedimiento matem\u00e1tico para multiplicar dos \nn\u00fameros enteros con valores entre 1 y 1000.  \n \nSean  los n\u00fameros 997 y 991. Se desea conocer su producto:  \n \nObtenga los resultados de las restas:    1000- 997 = 3,  1000- 991 = 9 \nSume los resultados de las restas:    3 + 9 = 12  \nReste de 1000 el resultado de la suma anterior : 1000- 12 = 988 \nMultiplique este resul tado por 1000:    988x1000 = 988000  \nMultiplique los resultados de las restas  iniciales :   3x9 = 27 \nLa suma de los dos \u00faltimos resultados es el producto deseado:  988000+27 = 988027 \n \nEscriba un programa que verifique que esta regla se cumple para cada produc to axb en \ndonde a,b son enteros positivos entre 1 y 1000. Genere las parejas  a,b   mediante dos \nciclos  for.  Muestre la respuesta mediante un mensaje.  \nPython Programaci\u00f3n", "start_char_idx": 1599, "end_char_idx": 2943, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96b9d787-bdd7-46d8-bdca-85349c28bbe2": {"__data__": {"id_": "96b9d787-bdd7-46d8-bdca-85349c28bbe2", "embedding": null, "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5b8f2e7-ef11-455b-9206-21a45319ded8", "node_type": "4", "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "771ca9019ae0e16312ffa1325ac905eb878d51b161765e9572aa5d026976ee0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aba371cd-e0a8-4df7-a937-664abfd674a8", "node_type": "1", "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2278bb237240f16da55dcdd994cf1d9d086ca5c9d1f2d81abab4a3460d55e4b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "077679e8-f39e-40cf-8613-34e9043449dd", "node_type": "1", "metadata": {}, "hash": "37874a0110216c6761895b264d5a9759bd28dad0f7f9b00914c5fb54358b403d", "class_name": "RelatedNodeInfo"}}, "hash": "6fe43cc3273649b6000d1a7c751eee4a17d73f0243de67b53bc9f59338031d57", "text": "149 \n \n \n36. Escriba un programa que reciba un valor para  n   y  otro para  m   y  muestre el \nresultado de la si guiente suma :  nm\ni 1j 1= =\u2211\u2211(i2 + j2 + ij) \n 37. Sean  a, b  las longitudes de los dos segmentos en los que se ha dividido una recta, \nsiendo la longitud de  a  mayor que la longitud de b. La relaci\u00f3n   \na\nb  que satisface a la \necuaci\u00f3n ab a\nab+= se denomina \u201cn\u00famero \u00e1ureo\u201d. Este n\u00famero tiene propiedades muy \ninteresantes que han sido estudiadas desde la antig\u00fcedad. Las matem\u00e1ticas demuestran \nque este n\u00famero es irracional  \n \nEscriba un programa en Python que gen ere todas las parejas de n\u00fameros enteros  a, b  \ncon valores entre  1 y n.  Pruebe que no existe alguna pareja de este conjunto de n\u00fameros \nque satisfagan la ecuaci\u00f3n del \u201cn\u00famero \u00e1ureo\u201d.  \n \n \n \n \n 5.13 Programas que interact\u00faan con un men\u00fa  \n \nLos programas en los c uales el  usuario interactua con el computador de manera cont\u00ednua \nse denominan interactivos.  Esta interacci\u00f3n es \u00fatil  para muchas  aplicaciones.  En su forma \nm\u00e1s elemental se usa un men\u00fa para que el usuario elija una opci\u00f3n. Para cada opci\u00f3n, el \ncomputador realiza alguna acci\u00f3n \n \nEstructura b\u00e1sica de un programa  interactivo con un men\u00fa  \n \n 1) El programa muestra un men\u00fa con las opciones disponibles para el usuario  \n 2) El usuario elige una opci\u00f3n \n 3) El programa realiza la acci\u00f3n solicitada  \n \nNormalmente la interac ci\u00f3n est\u00e1 dentro de un ciclo, por lo que debe incluir una opci\u00f3n para \nsalir del ciclo.  \n \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 1489, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "077679e8-f39e-40cf-8613-34e9043449dd": {"__data__": {"id_": "077679e8-f39e-40cf-8613-34e9043449dd", "embedding": null, "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5b8f2e7-ef11-455b-9206-21a45319ded8", "node_type": "4", "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "771ca9019ae0e16312ffa1325ac905eb878d51b161765e9572aa5d026976ee0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96b9d787-bdd7-46d8-bdca-85349c28bbe2", "node_type": "1", "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6fe43cc3273649b6000d1a7c751eee4a17d73f0243de67b53bc9f59338031d57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d1f7d63-434b-4a56-9783-54454ed95058", "node_type": "1", "metadata": {}, "hash": "e16043ebe83b2f730d2bb17d90f528ba22e80ccb882cccad99e9b9421bb413eb", "class_name": "RelatedNodeInfo"}}, "hash": "37874a0110216c6761895b264d5a9759bd28dad0f7f9b00914c5fb54358b403d", "text": "Ejemplo. La siguiente f\u00f3rmula permite convertir un valor de temperatura entre grados \nFarenheit (f) y grados C elcius (c):    5c (f 32)9= \u2212             \nEscrib ir un programa interactivo con u n men\u00fa para realizar la conversi\u00f3n en ambos casos:  \n  \nInstrumentaci\u00f3n  \n \nVariables  \n c:  temperatura en \u00b0C  \n f:  temperatura en \u00b0F  \n x: opci\u00f3n seleccionada  \n \nPython Programaci\u00f3n", "start_char_idx": 1481, "end_char_idx": 1859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d1f7d63-434b-4a56-9783-54454ed95058": {"__data__": {"id_": "8d1f7d63-434b-4a56-9783-54454ed95058", "embedding": null, "metadata": {"page_label": "150", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e7dd01f-57c2-465d-90da-b79959e0c07a", "node_type": "4", "metadata": {"page_label": "150", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0359425f1bae283ceee08b6e3a1f97288b048a42dd8e0fd8295646d86c5518d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "077679e8-f39e-40cf-8613-34e9043449dd", "node_type": "1", "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "37874a0110216c6761895b264d5a9759bd28dad0f7f9b00914c5fb54358b403d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd94f597-0eee-4b67-9a2e-ac591b254220", "node_type": "1", "metadata": {}, "hash": "6adb1ba9d577700159edba9e10740dbc20366bb34e00c4d76a39d66bd9b27779", "class_name": "RelatedNodeInfo"}}, "hash": "e16043ebe83b2f730d2bb17d90f528ba22e80ccb882cccad99e9b9421bb413eb", "text": "150 \n \nPrograma  \n \n#Conversi\u00f3n de temperaturas  \nwhile True: \n    print('1) Convertir F a C')  \n    print('2) Convertir C a F')  \n    print('3) Salir')  \n    x=input ('Elija una opci\u00f3n ')  \n    if x=='1': \n        f=int (input('Ingrese grados F '))  \n        c=5/9*(f- 32) \n        print(c)  \n    elif x=='2': \n        c=int (input('I ngrese grados C '))  \n        f=9/5*c+32;  \n        print(f)  \n    elif x=='3': \n        print('Adi\u00f3s')  \n     break  \n \nNote el uso del  ciclo while con la condici\u00f3n T rue que lo mantiene activo, y  la instrucci\u00f3n \nbreak para terminar el ciclo.  \n \nPrueba del programa  \n>>>  \n1) Convertir F a C  \n2) Convertir C a F  \n3) Salir  \nElija una opci\u00f3n 1  \nIngrese grados F 220  \n104.44444444444444  \n \n1) Convertir F a C  \n2) Convertir C a F  \n3) Salir  \nElija una opci\u00f3n 2 \nIngrese grados C 42  \n107.60000000000001  \n 1) Convertir F a C  \n2) Convertir C a F  \n3) Salir  \nElija una opci\u00f3n 3 \nAdi\u00f3s \n>>> \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd94f597-0eee-4b67-9a2e-ac591b254220": {"__data__": {"id_": "bd94f597-0eee-4b67-9a2e-ac591b254220", "embedding": null, "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1eaba30c-1b5a-45b9-8fae-ed76cef6f5a1", "node_type": "4", "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "57d611531cf0ab14d5ab549bc34f287f0542ca7e99c575e61d1634503fd93f7f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d1f7d63-434b-4a56-9783-54454ed95058", "node_type": "1", "metadata": {"page_label": "150", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e16043ebe83b2f730d2bb17d90f528ba22e80ccb882cccad99e9b9421bb413eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "910a0527-ce94-482b-a0f0-959c52cab568", "node_type": "1", "metadata": {}, "hash": "d12d094d86e368a2e31373b22d22e9ca9b1ead3eb5144ea2f4f7730938784a53", "class_name": "RelatedNodeInfo"}}, "hash": "6adb1ba9d577700159edba9e10740dbc20366bb34e00c4d76a39d66bd9b27779", "text": "151 \n \nEjemplo:  La siguiente f\u00f3rmula del inter \u00e9s compuesto relaciona la cantidad de dep\u00f3sitos , el \nvalor mensual constante de cada dep\u00f3sito, y el inter\u00e9s pactado al invertir el dinero en una \ncuenta.  Se requiere escribir un programa interactivo con un men\u00fa para su utilizaci\u00f3n \n \n  n(1 x) 1APx\uf8ee\uf8f9+\u2212=\uf8ef\uf8fa\n\uf8f0\uf8fb,  en donde  \n A: Valor acumulado,       \nP: Valor de cada dep\u00f3sito mensual  \n n: Cantidad de dep\u00f3sitos mensuales    \nx: Tasa de inter\u00e9s mensual  \n \n Soluci\u00f3n \n  Se escribir\u00e1 un programa con un men\u00fa para calcular al guno de los valores de:  A, P, n  \n \nPrograma  \n \n#F\u00f3rmula del inter\u00e9s compuesto  \nfrom math import * \nwhile True: \n    print('1) Valor acumulado')  \n    print('2) Dep\u00f3sito mensual')  \n    print('3) N\u00famero de dep\u00f3sitos')  \n    print('4) Salir')  \n    opc= input('Elija una opci\u00f3n: ')  \n    if opc=='1': \n        p=float( input('Valor del dep\u00f3sito mensual: '))  \n        n=int (input('N\u00famero de dep\u00f3sitos mensuales: '))  \n        x=float( input('Inter\u00e9s anual en porcentaje: '))  \n        m=0.01*x/12  \n        a=p*((1+m)**n- 1)/m \n        print('Valor acumulado: ',a) \n    elif opc=='2': \n        a=float( input('Valor acumulado: '))  \n        n=int (input('N\u00famero de dep\u00f3sitos mensuales: '))  \n        x=float( input('Inter\u00e9s anual en porcentaje: '))  \n        m=0.01*x/12;  \n        p=a*m/((1+m)**n- 1); \n        pri nt('Cuota mensual: ',", "start_char_idx": 0, "end_char_idx": 1363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "910a0527-ce94-482b-a0f0-959c52cab568": {"__data__": {"id_": "910a0527-ce94-482b-a0f0-959c52cab568", "embedding": null, "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1eaba30c-1b5a-45b9-8fae-ed76cef6f5a1", "node_type": "4", "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "57d611531cf0ab14d5ab549bc34f287f0542ca7e99c575e61d1634503fd93f7f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd94f597-0eee-4b67-9a2e-ac591b254220", "node_type": "1", "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6adb1ba9d577700159edba9e10740dbc20366bb34e00c4d76a39d66bd9b27779", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "588825c6-b4cc-4a72-9b8e-bf60c8e702dc", "node_type": "1", "metadata": {}, "hash": "f970bb10b3c0b73c101c116e48c2328cf49eaf2ac4ef905569071effebf38529", "class_name": "RelatedNodeInfo"}}, "hash": "d12d094d86e368a2e31373b22d22e9ca9b1ead3eb5144ea2f4f7730938784a53", "text": "pri nt('Cuota mensual: ',p)  \n    elif opc=='3': \n        a=float( input('Valor acumulado: '))  \n        p=float( input('Valor del dep\u00f3sito mensual: '))  \n        x=float( input('Inter\u00e9s anual en porcentaje: '))  \n        m=0.01*x/12;  \n        n=log(a*m/p+1)/log(1+m);  \n        print('Numero de dep\u00f3sitos: ',n)  \n    elif opc=='4':  \n        print('Adi\u00f3s')  \n        break  \nPython Programaci\u00f3n", "start_char_idx": 1338, "end_char_idx": 1734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "588825c6-b4cc-4a72-9b8e-bf60c8e702dc": {"__data__": {"id_": "588825c6-b4cc-4a72-9b8e-bf60c8e702dc", "embedding": null, "metadata": {"page_label": "152", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a6b3dea-a28b-4946-acca-276eeda39edd", "node_type": "4", "metadata": {"page_label": "152", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "faf70c66e193ef35b65800b013cefe29759be4a42cc94691c63f9f5d4694d4d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "910a0527-ce94-482b-a0f0-959c52cab568", "node_type": "1", "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d12d094d86e368a2e31373b22d22e9ca9b1ead3eb5144ea2f4f7730938784a53", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebaf7165-9e36-4b3a-8ff3-478627f070c6", "node_type": "1", "metadata": {}, "hash": "62622e125ba360c7f76f651c63e4a393e69f3b2782bac92f48d0b6076bbf2480", "class_name": "RelatedNodeInfo"}}, "hash": "f970bb10b3c0b73c101c116e48c2328cf49eaf2ac4ef905569071effebf38529", "text": "152 \n \nPrueba del programa  \n>>>  \n1) Valor acumulado  \n2) Dep\u00f3sito mensual  \n3) N\u00famero de dep\u00f3sitos  \n4) Salir  \nElija una opci\u00f3n: 1 \nValor del dep\u00f3sito mensual: 200 \nN\u00famero de dep\u00f3sitos mensuales: 120  \nInter\u00e9s anual en porcentaje: 0.04  \nValor acumulado:  24047.662469781626 \n \n1) Valor acumulado  \n2) Dep\u00f3sito mensual  \n3) N\u00famero de dep\u00f3sitos  \n4) Salir  \nElija una opci\u00f3n: 2 \nValor acumulado: 25000  \nN\u00famero de dep\u00f3sitos mensuales: 200 \nInter\u00e9s anual en porcentaje: 0.04  \nCuota mensual:  124.58587961001214  \n \n1) Valor acumulado  \n2) Dep\u00f3sito mensual  \n3) N\u00famero de dep\u00f3sitos  \n4) Salir  \nElija una opci\u00f3n: 3 \nValor acumulado: 25000  \nValor del dep\u00f3sito mensual: 200  \nInter\u00e9s anual en porcentaje: 0.04  \nNumero de dep\u00f3sitos:  124.74238345344854  \n \n1) Valor acumulado  \n2) Dep\u00f3sito mensual  \n3) N\u00famero de dep\u00f3sitos  \n4) Salir  \nElija una opci\u00f3n: 4 \nAdi\u00f3s \n>>>\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 887, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebaf7165-9e36-4b3a-8ff3-478627f070c6": {"__data__": {"id_": "ebaf7165-9e36-4b3a-8ff3-478627f070c6", "embedding": null, "metadata": {"page_label": "153", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23e82263-d8ae-4313-9ef9-ad0e362e3a4c", "node_type": "4", "metadata": {"page_label": "153", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "87d08954a4635f34c2459eaf2d0e4ad86e9fb401e96cd5914ad0d12345a654bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "588825c6-b4cc-4a72-9b8e-bf60c8e702dc", "node_type": "1", "metadata": {"page_label": "152", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f970bb10b3c0b73c101c116e48c2328cf49eaf2ac4ef905569071effebf38529", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4764cc15-e199-440b-9d13-442af4555fc7", "node_type": "1", "metadata": {}, "hash": "e2604eb4d6742b45db06def4d66e1a78e632b2bcde307564375e5c363f448eb7", "class_name": "RelatedNodeInfo"}}, "hash": "62622e125ba360c7f76f651c63e4a393e69f3b2782bac92f48d0b6076bbf2480", "text": "153 \n \n5.13.1 Ejercicios de programaci\u00f3n con men\u00fa  \n \nPara cada ejercicio escriba y pruebe un programa en la ventana de edici\u00f3n de Python.  \n \n1. La suma de los t\u00e9rminos de una sucesi\u00f3n aritm\u00e9tica est\u00e1 dada por  \n ns (a u)2= + ,  en donde   \n    s:  Suma de los t\u00e9rminos,    \n    n:  Cantidad de t\u00e9rminos  \n    a:  Primer t\u00e9rmino de la sucesi\u00f3n,   \n    u:  \u00daltimo t\u00e9rmino de la sucesi\u00f3n \n \nEscriba un programa con un men\u00fa que permita calcular: s, n, a, u dados los otros 3 datos.  \n \nMen\u00fa  \n1) Suma de t\u00e9rminos  \n2) Cantidad de t\u00e9rminos  \n3) Primer t\u00e9rmino \n  4) \u00daltimo t\u00e9rmino  \n 5) Salir  \n 2.  El precio de una pizza depende de su tama\u00f1o seg\u00fan la siguiente tabl a:  \n \n            Tama\u00f1o         Precio  \n \nPeque\u00f1a  $5 \nMediana $8 \nGrande   $12 \n \nCada ingrediente adicional cuesta $1.5.  Escriba un programa interactivo con un men\u00fa para elegir el tama\u00f1o de la pizza, indicar la cantidad de ingredientes adicionales y mostrar \nel valor a pagar.  \n \nMen\u00fa  \n1) Pizza peque\u00f1a  \n2) Pizza mediana  3) Pizza grande  \n   4) Salir  \n \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1054, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4764cc15-e199-440b-9d13-442af4555fc7": {"__data__": {"id_": "4764cc15-e199-440b-9d13-442af4555fc7", "embedding": null, "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2cf115d-cbc9-44e9-8da0-a96e31a62eae", "node_type": "4", "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2bdb95febb1fbd840d64b51442c4c1f4ac48329fa4135357f9de103c3f4cfd03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebaf7165-9e36-4b3a-8ff3-478627f070c6", "node_type": "1", "metadata": {"page_label": "153", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "62622e125ba360c7f76f651c63e4a393e69f3b2782bac92f48d0b6076bbf2480", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcb7246a-9d5e-4fb9-a68d-5bafe0be78b1", "node_type": "1", "metadata": {}, "hash": "a7c74e2da819bc1d012ce2625731916edad804ca0159a42ecd84d0b7aae4c9c2", "class_name": "RelatedNodeInfo"}}, "hash": "e2604eb4d6742b45db06def4d66e1a78e632b2bcde307564375e5c363f448eb7", "text": "154 \n \n6 Creaci \u00f3n de f unciones  \n \nEn general las funciones  en los lenguajes de programaci\u00f3n son  conjunto s de instrucciones \nque se escriben separadamente y que realizan alguna tarea especificada. Las funciones \npueden usarse directament e en la ventana interactiva, o desde programas, o integrarlas en \nun m\u00f2dulo especial a manera de librer\u00eca para organizar el desarrollo de un proyecto de \nprogramaci\u00f3n.  \n \nEsta estrategia de dividir la  resoluci\u00f3n de un problema en m\u00f2dulos y funciones es parte de \nla metodolog\u00eda denominada Programaci\u00f2n Modular  que es importante para resolver \nproblemas grandes o complejos.  \n \nLa Programaci\u00f2n Modular facilita el dise\u00f1o, construcci\u00f3n , prueba e integraci\u00f3n de los \ncomponentes de un programa.   \n \nEl mecanismo usual para trasmitir datos a las funciones  es mediante una lista de variables \nque se denominan par\u00e1metros. Las funciones normalmente son dise\u00f1adas para entregar \nresultados.  \n \n6.1 Declaraci\u00f3n de una funci\u00f3n  \n \n def nombre(par\u00e1metros):  \n       instrucciones  \n \nnombre :          Es la identificaci\u00f3n de la funci\u00f3n \npar\u00e1metros:    Son variables que reciben los datos que entran a la funci\u00f3n.  \ninstrucciones:           Se incluyen en la funci\u00f3n para producir resultados  \n \nLas instrucciones incluidas en la funci\u00f3n deben estar encolumnadas como en las otras \nestructuras de control.  \n \nSi la funci\u00f3n entrega resultados, debe usarse una instrucci\u00f3n  especial  para retorno de \nresultados:  \n \n return variable  \n \nvariable:  es la identificaci\u00f3n de la  variable que contiene el resultado. Tambi\u00e9n se  \n                puede entregar un resultado directamente.  \n \nUna funci\u00f3n puede entregar m\u00e0s de un resultado en una lista : \n \n return [variable,variable,...]  \n \n \nUna funci\u00f3n puede definirse en la ventana interactiva o en la ventana de edici\u00f3n. En el \nsegundo  caso, l a funci\u00f3n debe almacenarse en un archivo. El nombre del archivo puede \nser igual o diferente al nombre asignado a la funci\u00f3n en su definici\u00f2n .", "start_char_idx": 0, "end_char_idx": 1980, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcb7246a-9d5e-4fb9-a68d-5bafe0be78b1": {"__data__": {"id_": "dcb7246a-9d5e-4fb9-a68d-5bafe0be78b1", "embedding": null, "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2cf115d-cbc9-44e9-8da0-a96e31a62eae", "node_type": "4", "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2bdb95febb1fbd840d64b51442c4c1f4ac48329fa4135357f9de103c3f4cfd03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4764cc15-e199-440b-9d13-442af4555fc7", "node_type": "1", "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2604eb4d6742b45db06def4d66e1a78e632b2bcde307564375e5c363f448eb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4636c9ae-2489-4a5b-aabe-d30b08377e43", "node_type": "1", "metadata": {}, "hash": "5059cd2043b2a5a0502cbdce0608204499e70994853977b171fca922246f9579", "class_name": "RelatedNodeInfo"}}, "hash": "a7c74e2da819bc1d012ce2625731916edad804ca0159a42ecd84d0b7aae4c9c2", "text": "El archivo \nalmacenado consituye un m\u00f3dulo. Para usar  la funci\u00f3n debe importarse el m\u00f3dulo que \ncontiene a la funci\u00f3n .  Un m\u00f3dulo puede incluir m\u00e1s de una funci\u00f3n.  \nPython Programaci\u00f3n", "start_char_idx": 1981, "end_char_idx": 2168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4636c9ae-2489-4a5b-aabe-d30b08377e43": {"__data__": {"id_": "4636c9ae-2489-4a5b-aabe-d30b08377e43", "embedding": null, "metadata": {"page_label": "155", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4424dd13-f9c3-4566-b6f1-1efbf04d9e7a", "node_type": "4", "metadata": {"page_label": "155", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ad58f4ece13ac033b859fc3c6a3ea19a58b6bdfc84480edde0464aa904ea1336", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcb7246a-9d5e-4fb9-a68d-5bafe0be78b1", "node_type": "1", "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a7c74e2da819bc1d012ce2625731916edad804ca0159a42ecd84d0b7aae4c9c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "334fc59a-750c-4ffe-b29a-d2070f4c4fdc", "node_type": "1", "metadata": {}, "hash": "b1a125a1d29dc154ac67372e6493a09cbb2df462aa765ff09c399c49cc54cf7a", "class_name": "RelatedNodeInfo"}}, "hash": "5059cd2043b2a5a0502cbdce0608204499e70994853977b171fca922246f9579", "text": "155 \n \nEjemplo:  Escribir en la ventana interactiva la siguiente funci\u00f3n matem\u00e1tica:  \n                 2y f(x) 2x 1= = +       \n \nDefin ici\u00f2n en la ventana inte ractiva  \n \n>>>  def f(x): \n         y=2*x**2 + 1  \n         return y \n \nLa funci\u00f3n est\u00e1 disponible para su uso inmediato:  \n \n>>> f(2)  \n9 \n>>> y=2*f(3)+1  \n>>> y \n39 \n \nFunciones de una l\u00ednea  \n \nSi una funci\u00f3n tiene una forma simple, puede escribirse en forma abreviada en una l\u00ednea \n \n>>> def f(x): return 2*x**2+1  \n \nSe la puede usar igual que la definici\u00f3n anterior  \n \n>>> f(2)  \n9 \n Una funci\u00f3n para despejar la pantalla  \n >>> def cls():print('\\ n'*40) \n \nUso: \n \n>>> cls()  \n \n \nEn el siguiente ejemplo, l a funci\u00f3n es creada en la ventana de ed ici\u00f3n y se almacena \nseparadamente en un archivo con un nombre . Este objeto constituye un m\u00f3dulo. El \nnombre del m\u00f3dulo puede coincidir o puede ser diferente al  nombre de la funci \u00f3n.  \n \nInstrumentaci\u00f3n  \nNombre de la funci\u00f3n:   f \nNombre del m\u00f3dulo:    funci\u00f3n  \n \n \ndef f(x): \n    y=2*x**2 + 1  \n    return y \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1053, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "334fc59a-750c-4ffe-b29a-d2070f4c4fdc": {"__data__": {"id_": "334fc59a-750c-4ffe-b29a-d2070f4c4fdc", "embedding": null, "metadata": {"page_label": "156", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d189ee29-7b6f-4b98-afa4-291dd4e073d0", "node_type": "4", "metadata": {"page_label": "156", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d3b93c73486f72c5802ae5949d65d457710594f8371d10dce281b08b7f18fbad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4636c9ae-2489-4a5b-aabe-d30b08377e43", "node_type": "1", "metadata": {"page_label": "155", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5059cd2043b2a5a0502cbdce0608204499e70994853977b171fca922246f9579", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7dec049-8f94-439a-8339-b7237f79ba33", "node_type": "1", "metadata": {}, "hash": "3f8600d40382b2d3f00ef46f32f0c1a33ebdd68505d7ab885ebb58c3a8781b83", "class_name": "RelatedNodeInfo"}}, "hash": "b1a125a1d29dc154ac67372e6493a09cbb2df462aa765ff09c399c49cc54cf7a", "text": "156 \n \nPara usarla, debe importarse el m\u00f3dulo  \n \n>>> from funci\u00f3n import f \n>>> y=f(2)  \n>>> y \n 9 \n \nNOTA.  Los nombres en el lenguaje P ython admiten  tildes y la letra \u00f1  \n \n \nLas funciones  pueden  escribirse junto al programa que las  usan. En este caso, no se \nrequiere importar el m\u00f3dulo. Es una buena idea hacerlo para probar funciones nuevas que est\u00e1n siendo desarrolladas.  \n \nEjemplo.  \n \ndef f(x): \n    y=2*x**2 + 1  \n    return y \n \n#Programa que usa la funci\u00f3n f  \nfor i in range(5):  \n    y=f(i)  \n    print(i,y)  \n \n \nPrueba del programa  \n \nLa ejecuci\u00f3n del programa se activa desde la ventana de edici\u00f3n \n \n>>>  \n0 1 \n1 3 \n2 9 \n3 19 \n4 33 \n>>>  \nUn m\u00f3dulo puede incluir varias funciones . Estos m\u00f3dulos pueden considerarse librer\u00edas . \n Ejemplo.   Defina un m\u00f3dulo con el nombre funciones  para almacenar las funciones  \n  f(x)=2x\n2+1 \n  g(x)=3x3+5 \n \ndef f(x): \n    y=2*x**2 + 1  \n    return y \ndef g(x): \n    y=3*x**3 + 5  \n    return y \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 978, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7dec049-8f94-439a-8339-b7237f79ba33": {"__data__": {"id_": "f7dec049-8f94-439a-8339-b7237f79ba33", "embedding": null, "metadata": {"page_label": "157", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "868ec625-74ea-4462-8d1d-a280cbee093a", "node_type": "4", "metadata": {"page_label": "157", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "df1cfe4973b3136d76ed6c68fe31ef747b01781f4b1c8e3584f73fdc9edd42b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "334fc59a-750c-4ffe-b29a-d2070f4c4fdc", "node_type": "1", "metadata": {"page_label": "156", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b1a125a1d29dc154ac67372e6493a09cbb2df462aa765ff09c399c49cc54cf7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63a5ba90-391e-4bd9-a517-5da8299f17b8", "node_type": "1", "metadata": {}, "hash": "1a12479db3e0be1a4fa737330a8ff1ba41cd071a217c83a2e28db3f021764819", "class_name": "RelatedNodeInfo"}}, "hash": "3f8600d40382b2d3f00ef46f32f0c1a33ebdd68505d7ab885ebb58c3a8781b83", "text": "157 \n \n \n \nPara usar las funciones en la ventana interactiva debe importar el m\u00f3dulo  \n \n>>> from funciones  import* \n>>> f(3)  \n19 \n>>> g(4)  \n197 \n>>> \n \nLos programas que requieran usar las funciones pero que se escriben separadamente de \nlas definiciones de las funciones, deben importar el m\u00f3dulo  \n \n#Programa que usa el m\u00f3dulo funciones \nfrom funciones import* \nfor i in range(5):  \n    y=f(i)  \n    print(i,y)  \n \n Prueba del programa  \n>>>  \n0 1 \n1 3 2 9 3 19 \n4 33 \n>>> \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63a5ba90-391e-4bd9-a517-5da8299f17b8": {"__data__": {"id_": "63a5ba90-391e-4bd9-a517-5da8299f17b8", "embedding": null, "metadata": {"page_label": "158", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a61cd69f-4267-4d1b-8b0e-681dc64e8338", "node_type": "4", "metadata": {"page_label": "158", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64339566d366e0d5863603d085323f16aa36d3587baad03cd04b910fde8bbbb7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7dec049-8f94-439a-8339-b7237f79ba33", "node_type": "1", "metadata": {"page_label": "157", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3f8600d40382b2d3f00ef46f32f0c1a33ebdd68505d7ab885ebb58c3a8781b83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "967b27a6-3a14-4439-95b8-53e80d4f3823", "node_type": "1", "metadata": {}, "hash": "dbaef84e254d4e9e262f4cb7581c6acf44afe61f80e8416bb77f82500579f7b0", "class_name": "RelatedNodeInfo"}}, "hash": "1a12479db3e0be1a4fa737330a8ff1ba41cd071a217c83a2e28db3f021764819", "text": "158 \n \nEjemplo. Defina un m\u00f3dulo (librer\u00eda) con el nombre geometr\u00eda que contenga funciones \ncon algunas  f\u00f3rmulas de la geometr\u00eda b\u00e1si ca para calcular \u00e1rea y volumen. Incluya \nf\u00f3rmulas para el c\u00edrculo, sector de c\u00edrculo, segmento de c\u00edrculo, esfera, cilindro y cono.  \n \nfrom math import* \ndef circulo(r):  \n    s=pi*r**2  \n    return s \n \ndef sector(r,a):  \n    s=pi*r**2*a  \n    return s \n \ndef segmento(r,a):  \n    s=r**2*(pi*a- 0.5*sin(a))  \n    return s \n \ndef esfera(r):  \n    s=4*pi*r**2  \n    v=4*pi*r**3/3  \n    return [s,v] \n \ndef cilindro(r,h):  \n    s=2*pi*r*(r+h)  \n    v=pi*r**2*h  \n    return [s,v] \n \ndef cono(r,h):  \n    g=sqrt(h**2+r**2)  \n    s=pi*r*g+pi*r**2  \n    v=pi*r**2*h/3  \n    return [s,v] \n \nPara usar las func iones desarrolladas , debe importar se el m\u00f3dul o en la ventana interactiva \no en alg\u00fan programa.   \n \nEjemplo.   Usar en la ventana interactiva el m\u00f3dulo geometr\u00eda con las funciones  \n \n>>> from geometria  import* \n>>> circulo(2)  \n12.566370614359172  \n>>> s=circulo(2)  \n>>> s \n12.566370614359172  \n>>> cilindro(4,5)  \n(226.1946710584651, 251.32741228718345)  \n>>> [s,v]=cilindro(4,5)  \n>>> s \n226.1946710584651  \n>>> v \n251.32741228718345  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "967b27a6-3a14-4439-95b8-53e80d4f3823": {"__data__": {"id_": "967b27a6-3a14-4439-95b8-53e80d4f3823", "embedding": null, "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74b23be7-e109-4669-ae9f-1cbfb86c2a96", "node_type": "4", "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4746af8785a8cbbdfc306c2131e10925dc3779648d923068a3da33284854401c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63a5ba90-391e-4bd9-a517-5da8299f17b8", "node_type": "1", "metadata": {"page_label": "158", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1a12479db3e0be1a4fa737330a8ff1ba41cd071a217c83a2e28db3f021764819", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d3c028e-f142-4b05-9734-79f650fbec26", "node_type": "1", "metadata": {}, "hash": "462f871b9e62428a470b90264be13a4f70ce0a8969179db16e2808b311172195", "class_name": "RelatedNodeInfo"}}, "hash": "dbaef84e254d4e9e262f4cb7581c6acf44afe61f80e8416bb77f82500579f7b0", "text": "159 \n \nNota: Los nombres de las variables o par\u00e1metros que se escriben para llamar a una \nfunci\u00f3n pueden ser  diferentes respecto a los nombres usados al definir la funci\u00f3n .  \n \n6.2 Par\u00e1metros empaquetados \n \nLos par\u00e1metros  se pueden enviar a una funci\u00f3n empaquetados  en una lista. En este \ncaso, el nombre de la lista debe estar precedido con un asterisco.  \n Ejemplo  \n \n>>> from geometria  import* \n>>> d=[4,5]  \n>>> [s,v]=cilindro(*d)       Los datos van empaquetados en  la lista d  \n>>> s \n226.1946710584651  \n>>> v \n251.32741228718345  \n \nEl uso de par\u00e1metros empaquetados permite operar dentro de la funci\u00f3n con datos de tipo \narbitrario:  \n \ndef fun(*entra):  \n    x = entra[0]  \n    for e in entra:  \n        x=x+e    #El operador + act\u00faa seg\u00fan el tipo de datos \n    return x \n >>> from fun import* \n>>> fun(5)  \n10 \n>>> fun([3,6,4])  \n[3, 6, 4, 3, 6, 4]  \n>>> fun('abc')  \n'abcabc'  \n>>> fun(['abc',35])  \n['abc', 35, 'abc', 35]  \n \n \n6.3 Par\u00e1metros por omisi\u00f3n  \n \nEs posible asignar valores a los par\u00e1metros  para el  caso que no vengan con alg\u00fan valor al \nser llamada la funci\u00f3n. Esto significa que una funci\u00f3n puede ser llamada con  menos \npar\u00e1metros que los que se especifican en  la definici\u00f3n .", "start_char_idx": 0, "end_char_idx": 1215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d3c028e-f142-4b05-9734-79f650fbec26": {"__data__": {"id_": "0d3c028e-f142-4b05-9734-79f650fbec26", "embedding": null, "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74b23be7-e109-4669-ae9f-1cbfb86c2a96", "node_type": "4", "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4746af8785a8cbbdfc306c2131e10925dc3779648d923068a3da33284854401c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "967b27a6-3a14-4439-95b8-53e80d4f3823", "node_type": "1", "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dbaef84e254d4e9e262f4cb7581c6acf44afe61f80e8416bb77f82500579f7b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8446aabe-ac27-4b3a-99e7-bffe09d5c25e", "node_type": "1", "metadata": {}, "hash": "d07edd3f09ec926a43cd61879421d8b2c1f27ec6285312630aa410aa01266b7a", "class_name": "RelatedNodeInfo"}}, "hash": "462f871b9e62428a470b90264be13a4f70ce0a8969179db16e2808b311172195", "text": "Ejemplo  \n \n def fun(a,b=0):   El segundo par\u00e1m etro se define por omisi\u00f3n \n \n Al llamarla con  fun(3,5) se asigna  3   al par\u00e1metro  a  y  5   al par\u00e1metro  b  \n \n Al llamarla con  fun(3)    se asigna  3   al par\u00e1metro  a  y  0   al par\u00e1metro  b \nPython Programaci\u00f3n", "start_char_idx": 1219, "end_char_idx": 1486, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8446aabe-ac27-4b3a-99e7-bffe09d5c25e": {"__data__": {"id_": "8446aabe-ac27-4b3a-99e7-bffe09d5c25e", "embedding": null, "metadata": {"page_label": "160", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35380de1-3534-460e-b57b-8a03885b1ebc", "node_type": "4", "metadata": {"page_label": "160", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4adf55bf14981ed1e64fb6d14c59dc721e22abf7e90da4a87ac66955017c116e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d3c028e-f142-4b05-9734-79f650fbec26", "node_type": "1", "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "462f871b9e62428a470b90264be13a4f70ce0a8969179db16e2808b311172195", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "988ef22a-7d04-48e8-b63e-9e45f3051278", "node_type": "1", "metadata": {}, "hash": "6b601ab11060742ecbddc60ca8959656f225a9cb4fbd7e55c09db3654d9fe618", "class_name": "RelatedNodeInfo"}}, "hash": "d07edd3f09ec926a43cd61879421d8b2c1f27ec6285312630aa410aa01266b7a", "text": "160 \n \nEjempl o.  Escribir  una funci\u00f3n que reciba un n\u00famero y determine si es un n\u00famero primo. \nEl resultado que entrega la funci\u00f3n ser\u00e1 un valor l\u00f3gico seg\u00fan corresponda.   \n \nJunto a la funci\u00f3n escribir  un programa que liste los n\u00fameros primos existentes en un \nrango especificado  \n \nSoluci\u00f3n \n Si el programa se escribe junto con la funci\u00f3n, primero debe escribirse la funci\u00f3n y  \n despu\u00e9s el programa. En este caso, el programa no necesita importar la funci\u00f3n  \n que lo antecede.  \n \nVariables  \n n:  n\u00famero para probar si es primo  \n c:  conteo de n\u00fameros divisores en la funci\u00f3n \n a,b: rango de b\u00fasqueda de n\u00famero primos \n \nLa funci\u00f3n entrega un resultado l\u00f3gico: True  o False \n \n#funci\u00f3n primo  \ndef primo(n):  \n    c=0 \n    for i in range(1,n+1):  \n         if  n%i==0: \n             c=c+1  \n    if c>2: \n        return False  \n    else: \n        return True  \n \n#Programa que lista primos en un rango \na=int(input('Desde: '))  \nb=int(input('Hasta: '))  \nfor n in range(a,b+1):  \n      if primo(n):  \n            print( 'N\u00famero primo: ',n)  \n \n \nPrueba del programa  \n>>>  \nDesde: 20 \nHasta: 40 \nN\u00famero primo:  23  \nN\u00famero primo:  29  \nN\u00famero primo:  31  \nN\u00famero primo:  37  \n \nNota: Las instrucciones de prueba se las  ha escrito junto a la funci\u00f3n. Esta es una buena \npr\u00e1ctica para desarrollar funciones. Despu\u00e9s se puede almacenar la funci\u00f3n \nseparadam ente para que pueda ser importada desde cualquier  programa o desde la \nventana interactiva \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "988ef22a-7d04-48e8-b63e-9e45f3051278": {"__data__": {"id_": "988ef22a-7d04-48e8-b63e-9e45f3051278", "embedding": null, "metadata": {"page_label": "161", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be13b912-d1da-4fde-b513-8d3025a4b454", "node_type": "4", "metadata": {"page_label": "161", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0eb75ca732c356e6fbaba20cad9cc813e347a848e5fa1e89a513676c43f05c8f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8446aabe-ac27-4b3a-99e7-bffe09d5c25e", "node_type": "1", "metadata": {"page_label": "160", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d07edd3f09ec926a43cd61879421d8b2c1f27ec6285312630aa410aa01266b7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80959e95-602a-4534-97ca-b9fe3f7b6407", "node_type": "1", "metadata": {}, "hash": "67b121a416482f5abebc31429ab6f31859973a126c39b5df58c5f933c9e02a9c", "class_name": "RelatedNodeInfo"}}, "hash": "6b601ab11060742ecbddc60ca8959656f225a9cb4fbd7e55c09db3654d9fe618", "text": "161 \n \nPara el siguiente ejemplo se almacenar\u00e1 la funci\u00f3n  primo separadamente para que est\u00e9 \ndisponible para otros  programas o para que pueda usarse desde la ventana interact iva. La \nfunci\u00f3n primo ser\u00e1 almacenada co n el mismo nombre: primo. Con este nombre deber\u00e1 \nser importada. Cuando el programa se escribe junto a la funci\u00f3n no es necesario importar.  \n \n#funci\u00f3n primo  \ndef primo(n):  \n    c=0 \n    for i in range(1,n+1):  \n         i f n%i==0: \n             c=c+1  \n    if c>2: \n        return False  \n    else:  \n        return True  \n \nPara acceder a la funci\u00f3n, el programa debe importar  la funci\u00f3n  primo  \n \n#Programa que lista primos en un rango \nfrom primo import primo \na=int(input('Desde: '))  \nb=int(input('Hasta: '))  \nfor n in range(a,b+1):  \n    if primo(n):  \n        print('N\u00famero primo: ',n)  \n \nLos resultados de una prueba son iguales a los del ejemplo anterior  \n \nEjemplo. Escribir  otro programa para usar  la funci\u00f3n primo.  Encuentre  parejas de \nn\u00fameros primos cuya suma sea igual a un n\u00famero ingresado al inicio en el programa.  \n \n#Programa que encuentra parejas de primos \nfrom primo import primo \nn=int(input('Ingrese un entero positivo: '))  \nfor i in range(n):  \n    for j in range(n): \n        if primo(i) and primo(j) and i+j==n: \n            print( 'Pareja de primos: ',i,j)  \n \nPrueba del programa  \n>>>  \nIngrese un entero positivo: 16 \nPareja de primos:  3 13  \nPareja de primos:  5 11  \nPareja de primos:  11 5  \nPareja de primos:  13 3  \n Si no se desean par ejas repetidas, se pued e modifi car el inicio del rango del ciclo interno:  \n \n \nfor j in range(i,n):  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80959e95-602a-4534-97ca-b9fe3f7b6407": {"__data__": {"id_": "80959e95-602a-4534-97ca-b9fe3f7b6407", "embedding": null, "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15abc1b8-e52c-4d8e-aee8-3886bee9417e", "node_type": "4", "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec205c9ea7abe890e0111d52687c8c6cfad05380f28b6b947fef8616435ac847", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "988ef22a-7d04-48e8-b63e-9e45f3051278", "node_type": "1", "metadata": {"page_label": "161", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6b601ab11060742ecbddc60ca8959656f225a9cb4fbd7e55c09db3654d9fe618", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36b86b4f-55a8-42bb-98d0-bbbd6f6776db", "node_type": "1", "metadata": {}, "hash": "0f2cb3ae7225f90a2e58a4c167ef2dd17c8576b3f4ef9e94136ee2c44ed602cf", "class_name": "RelatedNodeInfo"}}, "hash": "67b121a416482f5abebc31429ab6f31859973a126c39b5df58c5f933c9e02a9c", "text": "162 \n \n6.4 Par\u00e1metros por valor y par\u00e1metros por referencia \n \nLas variables simples son trasmitidas a una funci \u00f3n \u201cpor valor \u201d. Esto significa que en \nPython las funciones  usan una copia del par\u00e1metro ingresado. De esta manera,  el \ncontenido de la variable ingresada, aunque sea cambiado dentro de la funci\u00f3n, no modifica \nal valor de la variable que ingres\u00f3  como par\u00e1metro.   \n \nEjemplo.    \ndef fun(x): \n    x=x**2    La funci\u00f3n modifica el par\u00e1metro x que recibe el dato  \n    y=2*x+1  \n    return y  \n \nUso de la funci\u00f3n  \n \n>>> from fun import* \n>>> s=5 \n>>> y=fun(s) >>> print(y)  \n51 \n>>> print(s)    La variable enviada  s   no ha sido modificada \n5 \n>>>  \n \nEsta manera de tran smitir par\u00e1metros es natural, sin embargo en cap\u00edtulos posteriores se \ndescribir\u00e1 otro mecanismo de tran smisi\u00f3n de par\u00e1metros  denominado  \u201cpor referencia\u201d, \nutilizado con par\u00e1metros de tipo estructurado. En este caso, el par\u00e1metro de la funci\u00f3n utiliza la misma direcci\u00f3n de la variable con la que se llama a la funci\u00f3n, por lo tanto, si la \nfunci\u00f3n modifica componentes  del par\u00e1metro, estos cambios afectan a la variable en el \nsitio de la llamada a la funci\u00f3n.  \n \nEjemplo.  \n \ndef funp(t): \n    r=max(t)     La funci\u00f3n encuentra el mayor valor del par\u00e1metro  t  \n    t[0]=-1    La funci\u00f3n modifica un elemento del par\u00e1metro  t  \n    return r \n \nUso de la funci\u00f3n : Se le env\u00eda un par\u00e1metro de tipo estructurado denominado lista . Las \nlistas permiten agrupar datos escribi\u00e9ndolos entre corchetes. Se revisar\u00e1n en otro cap\u00edtulo.", "start_char_idx": 0, "end_char_idx": 1525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36b86b4f-55a8-42bb-98d0-bbbd6f6776db": {"__data__": {"id_": "36b86b4f-55a8-42bb-98d0-bbbd6f6776db", "embedding": null, "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15abc1b8-e52c-4d8e-aee8-3886bee9417e", "node_type": "4", "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec205c9ea7abe890e0111d52687c8c6cfad05380f28b6b947fef8616435ac847", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80959e95-602a-4534-97ca-b9fe3f7b6407", "node_type": "1", "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "67b121a416482f5abebc31429ab6f31859973a126c39b5df58c5f933c9e02a9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d56cd29-f7e9-40ac-b5af-c14139405961", "node_type": "1", "metadata": {}, "hash": "4d7184fa077ded27b9ea68f643bcf83273b0bc122287a43f67e9032185a75262", "class_name": "RelatedNodeInfo"}}, "hash": "0f2cb3ae7225f90a2e58a4c167ef2dd17c8576b3f4ef9e94136ee2c44ed602cf", "text": "Se revisar\u00e1n en otro cap\u00edtulo.  \n \n>>> from funp import* \n>>> s=[8 ,3,9,4,7] \n>>> r=funp (s) \n>>> print(r)  \n9 >>> print(s)  \n[-1, 3, 9, 4, 7]   La variable enviada  s   ha sido modificada  \n \nPara evitar este efecto, dentro de la funci\u00f3n debe crearse en forma expl\u00edcita una copia del par\u00e1metro de entrada como se ver\u00e1 posteriormente.  \nPython Programaci\u00f3n", "start_char_idx": 1495, "end_char_idx": 1851, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d56cd29-f7e9-40ac-b5af-c14139405961": {"__data__": {"id_": "8d56cd29-f7e9-40ac-b5af-c14139405961", "embedding": null, "metadata": {"page_label": "163", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "736d6892-2b96-422c-a160-9b121fafabd1", "node_type": "4", "metadata": {"page_label": "163", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e94bdc96bbb0f357977b19fd28a2d0615d7903b13be9bd6501acabdd8607503a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36b86b4f-55a8-42bb-98d0-bbbd6f6776db", "node_type": "1", "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0f2cb3ae7225f90a2e58a4c167ef2dd17c8576b3f4ef9e94136ee2c44ed602cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "473f3fa4-50b9-4d45-ba53-05bccba36a90", "node_type": "1", "metadata": {}, "hash": "cda73641e6548e1556e6544a688ab101d95c6713091a618df96a9d034efe054a", "class_name": "RelatedNodeInfo"}}, "hash": "4d7184fa077ded27b9ea68f643bcf83273b0bc122287a43f67e9032185a75262", "text": "163 \n \n6.5 Espacio  de las variables d e programas y funciones  \n \nLas variables creadas en los programas s e pueden acceder  fuera del programa, en la \nventana interactiva. En cambio, las variables definidas dentro de una funci\u00f3n son locales, \nes decir  no s e pueden acceder  fuera de la funci\u00f3n . La funci\u00f3n normalmente solo se puede \ncomunicar mediante par\u00e1metros y mediante los resultados entregados.  \n \nEjemplo.   Realizar una prueba nueva del programa anterior que busca  los n\u00fameros primos \nen un rango especificado. El programa debe ser ejecutado desde la v entana de edici\u00f3n \ncon la opci\u00f3n  run  o con la tecla funcional  F5 \n \n \n#funci\u00f3n primo  \ndef primo(n):  \n    c=0 \n    for i in range(1,n+1):  \n        if n%i==0: \n            c=c+1  \n    if c>2: \n        return False  \n    else:  \n        return True  \n \n#Programa que lista primos en un rango \na=int(input('Desde: '))  \nb=int(input('Hasta: '))  \nfor n in range(a,b+1):  \n    if primo(n):  \n        print('N\u00famero primo: ',n)  \n \n \n>>>  \nDesde: 20 \nHasta: 40 \nN\u00famero primo:  23  \nN\u00famero primo:  29  \nN\u00famero primo:  31  \nN\u00famero primo:  37  \n>>> a \n20 \n>>> b \n40 \n>>> c \n \nNameError: name 'c' is not defined  \n \nSe puede observar que los  contenidos de las variables a, b creadas en  el programa son \nvisibles  en la ventana interactiva. Por otra parte, ni en el programa, ni desde la ventana \ninteractiva se puede acceder  a la v ariable  c  que es creada dentro de la funci\u00f3n.  \n \nNota: Si el programa es ejecutado desde la ventana interactiva con la instrucci\u00f3n   import  \nno se tiene acceso a las variables del espacio del programa.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1624, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "473f3fa4-50b9-4d45-ba53-05bccba36a90": {"__data__": {"id_": "473f3fa4-50b9-4d45-ba53-05bccba36a90", "embedding": null, "metadata": {"page_label": "164", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26e57395-6c49-4723-a8b8-4b5734f39f98", "node_type": "4", "metadata": {"page_label": "164", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1016a654c50987a8f83c901bab148932e4ee7609bd7b622edd74e1020a937aea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d56cd29-f7e9-40ac-b5af-c14139405961", "node_type": "1", "metadata": {"page_label": "163", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4d7184fa077ded27b9ea68f643bcf83273b0bc122287a43f67e9032185a75262", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e730f6f2-ced1-4c05-867e-289539715639", "node_type": "1", "metadata": {}, "hash": "f5fe37ca51f670a4188c364fd238b4e6a21b4104c53c4838417d59cc48f2ffe9", "class_name": "RelatedNodeInfo"}}, "hash": "cda73641e6548e1556e6544a688ab101d95c6713091a618df96a9d034efe054a", "text": "164 \n \nNota: Si un m\u00f3dulo tiene instrucciones para acceder a otros m\u00f3dulos, entonces al \nimportarlo tambi\u00e9n se tiene acceso a esos m\u00f3dulos.  \n Ejemplo.  \nfrom math import* \ndef calcular(x):  \n    y=exp(x)  \n    return y \n \n>>> from calcular import*  Permite acceder tambi\u00e9n al m\u00f3dulo math  \n>>> r=cos(2)  \n>>> t=calcular(5)  \n \n \n6.6 Declaraci\u00f3n de variables gl obales  \n \nCon la declaraci\u00f3n   \n \n global v1,v2, ... \n \nEs posible hacer que l os progr amas pueden acce der a las variables v1, v2, ... creadas \ndentro de una funci\u00f3n . Tambi\u00e9n se tendr\u00e1 acceso a estas variables desde la ventana \ninteractiva.  \n \nEjemplo.  \n \ndef fun(x): \n    t=2*x  \n    y=t+5  \n    return y \n \n#Programa que usa fun  \nx=3 \nr=fun(x)  \nprint(r) \nprint(t)  \n \nPrueba del programa  \n \n>>>  \n11 \nNameError: name 't' is not defined    Error a l intentar imprimir t \n \nEl programa no tiene acceso a la variable  t  creada en la funci\u00f3n  y por lo tanto, local  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e730f6f2-ced1-4c05-867e-289539715639": {"__data__": {"id_": "e730f6f2-ced1-4c05-867e-289539715639", "embedding": null, "metadata": {"page_label": "165", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ba8ce27-5617-406e-9ff2-e9a4abf4ae94", "node_type": "4", "metadata": {"page_label": "165", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fc5947320504c19754383254cde6e4ef118bc97743f72b5a70800a72b7cce209", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "473f3fa4-50b9-4d45-ba53-05bccba36a90", "node_type": "1", "metadata": {"page_label": "164", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cda73641e6548e1556e6544a688ab101d95c6713091a618df96a9d034efe054a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d565c92c-89cd-4c27-b890-e7dab579a0d9", "node_type": "1", "metadata": {}, "hash": "393d663229be00be573f021626ed0cfb0ed350d1bd3c51d334b83002cc3601ac", "class_name": "RelatedNodeInfo"}}, "hash": "f5fe37ca51f670a4188c364fd238b4e6a21b4104c53c4838417d59cc48f2ffe9", "text": "165 \n \nEn la siguiente prueba se declara  t  dentro de la funci\u00f3n como variable global  \n \n \ndef fun(x): \n    global t \n    t=2*x  \n    y=t+5  \n    return y \n \n#Programa que usa fun  \nx=3 r=fun(x)  \nprint(r) \nprint(t)  \n \nPrueba del progr ama \n>>>  \n11 \n6    El programa puede imprimir el contenido de la variable   t \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 338, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d565c92c-89cd-4c27-b890-e7dab579a0d9": {"__data__": {"id_": "d565c92c-89cd-4c27-b890-e7dab579a0d9", "embedding": null, "metadata": {"page_label": "166", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "676b9552-94f4-4fcb-a980-953013d5451e", "node_type": "4", "metadata": {"page_label": "166", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9fce99c22f8c7f80dc2af0353d8498f24058a4f5cb100b73301e236d71b0a2b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e730f6f2-ced1-4c05-867e-289539715639", "node_type": "1", "metadata": {"page_label": "165", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f5fe37ca51f670a4188c364fd238b4e6a21b4104c53c4838417d59cc48f2ffe9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98340ff5-2980-4641-b4fe-74d15f7af169", "node_type": "1", "metadata": {}, "hash": "630ea4f2fef5c1ec8de4364e7c7a80fc4e4f7d4417c9b3d379d9599ac5fd7e93", "class_name": "RelatedNodeInfo"}}, "hash": "393d663229be00be573f021626ed0cfb0ed350d1bd3c51d334b83002cc3601ac", "text": "166 \n \n6.7 Funciones sin par\u00e1metros  \n \nNo es obligaci\u00f3n que las funciones reciban o entregue n valores. En el siguiente ejemplo, \nuna funci\u00f3n solamente muestra una lista de mensajes.  \n \ndef menu(): \n    print('1) Ingresar dato')  \n    print( '2) Mostrar resultado' ) \n    print('3) Salir')  \n  \nEsta funci\u00f3n se la almacen\u00f3 en un m\u00f3dulo con el nombre menues y se la puede importar \npara su uso en la ventana interactiva o desde un programa:  \n \n>>> from menues import* \n>>> menu()  \n1) Ingresar dato  \n2) Mostrar resultado  \n3) Salir  \n>>> \n \n \n6.8 Expresiones lambda  \n \nEs una manera de definir en una l\u00ednea,  expresiones con par\u00e1metros . Esta definici\u00f3n act \u00faa \nen forma similar a una funci\u00f3n, con la siguiente sintaxis:  \n \n e = lambda par\u00e1metros:  expresi\u00f3n  \n Ejemplos.  \n \nDefinir un polinomio  \n \n>>> pol=lambda x,y: 2*x*y -x+y+1 \n>>> pol(2,3)  \n14  \nDefinir una operaci\u00f3n sobre una lista (el estudio de listas se har\u00e1 en el siguiente cap\u00edtulo)  \n \n>>> total=lambda s: 3*sum(s)+1        \n>>> x=[2,3,5,6]  \n>>> total(x)  \n49 \n \nDe manera equivalente se las puede definir como func iones abreviadas de una l\u00ednea:  \n \n>>> def pol(x,y):return 2*x*y-x+y+1 \n>>> def total(s):return 3*sum(s)+1  \n \nEl uso y resultados son id\u00e9nticos a las definiciones como expresiones lambda  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1298, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98340ff5-2980-4641-b4fe-74d15f7af169": {"__data__": {"id_": "98340ff5-2980-4641-b4fe-74d15f7af169", "embedding": null, "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4db85410-ddec-466b-be97-5a57627b64c1", "node_type": "4", "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "34fc624002fd9963f4ff626871b8baaa810cdce2aacf0110368fa619053b5bf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d565c92c-89cd-4c27-b890-e7dab579a0d9", "node_type": "1", "metadata": {"page_label": "166", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "393d663229be00be573f021626ed0cfb0ed350d1bd3c51d334b83002cc3601ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f235132-4845-471e-8601-c918c935a41a", "node_type": "1", "metadata": {}, "hash": "a92ef72bf074788ab8a439d66f51c714b54fe6db52abbaeac28ee674fe0d3b78", "class_name": "RelatedNodeInfo"}}, "hash": "630ea4f2fef5c1ec8de4364e7c7a80fc4e4f7d4417c9b3d379d9599ac5fd7e93", "text": "167 \n \n6.9 Funciones recursivas   \n \nUna funci\u00f3n puede llamarse a si misma. Estas funciones se denominan recursivas. El uso \nde la recurs\u00f3n es una t\u00e9cnica \u00fatil  en programaci\u00f3n para resolver algunos problemas  en \nsustituci\u00f3n de los m\u00e9todos iterativos  con for o while . La recursi\u00f3n construye la soluci\u00f3n \nllam\u00e1ndose a si misma, usualmente mediante una estructura  if . \n \nLa recursi\u00f3n realiza un ciclo internamente, por lo tanto, la programaci\u00f3n ya no requier e \nescribir ciclos.  Sin embargo, la recursi\u00f3n debe usarse con precauci\u00f3n pues puede ser \ncostosa en tiempo computacional especialmente si cada llamada genera m\u00e1s de una \nllamada a la misma funci\u00f3n.  Adicionalmente, los lenguajes de programaci\u00f3n tienen un \nl\u00edmite m\u00e1ximo para las llamadas recursivas.  \n \nEjemplo.  Escribir  una funci\u00f3n para sumar los cubos de los primeros n n\u00fameros naturales.  \n  sc(n) = 1\n3 + 23 + 33 + ... + (n -1)3 + n3 \n \nLa manera usual de interpretar esta suma es mediante una repetici\u00f3n en la cual en cada \nciclo se agrega un nuevo t\u00e9rmino, como se muestra a continuaci\u00f3n : \n \n \ndef sc(n): \n    r=0 \n    for i in range(1,n+1):  \n        r=r+i**3  \n    return r \n  \nOtra manera de interpretar esta suma es mediante una definici\u00f3n recurrente:  \n \nSi sc(n) es la suma:  1\n3 + 23 + 33 + ... + (n -1)3 + n3 \n \nEntonces  sc(n-1) es: 13 + 23 + 33 + ... + (n -1)3  \n Y se puede escribir:  \n \n sc(n) = sc(n -1) + n\n3  \n \nEsta definici\u00f3n requiere una regla para que la invocaci\u00f3n no continue indefinidamente \nhacia atr\u00e1s.", "start_char_idx": 0, "end_char_idx": 1499, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f235132-4845-471e-8601-c918c935a41a": {"__data__": {"id_": "5f235132-4845-471e-8601-c918c935a41a", "embedding": null, "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4db85410-ddec-466b-be97-5a57627b64c1", "node_type": "4", "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "34fc624002fd9963f4ff626871b8baaa810cdce2aacf0110368fa619053b5bf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98340ff5-2980-4641-b4fe-74d15f7af169", "node_type": "1", "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "630ea4f2fef5c1ec8de4364e7c7a80fc4e4f7d4417c9b3d379d9599ac5fd7e93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d772ac8c-fca1-452e-8731-8d25d3a8fb2a", "node_type": "1", "metadata": {}, "hash": "8d730f0952db5d0591b21c9e074eaff96274707fa6a635fc291339e4927b71d6", "class_name": "RelatedNodeInfo"}}, "hash": "a92ef72bf074788ab8a439d66f51c714b54fe6db52abbaeac28ee674fe0d3b78", "text": "Entonces, la definici\u00f3n c ompleta es: \n \n  \n                    3sc(n 1) n , n 1sc(n)\n1, n 1\uf8f1\u2212+ >\uf8f4=\uf8f2= \uf8f4\uf8f3 \n \nEsta regla  se puede aplicar  manualmente  como en el siguiete caso:  \n \nsc(4) = sc(3) + 43 = sc(2) + 33 + 43 = sc(1) + 23 + 33 + 43 = 1 + 23 + 33 + 43 = 100 \n \nEl lenguaje Python permite traducir e instrumentar funciones recursivas.  \nPython Programaci\u00f3n", "start_char_idx": 1500, "end_char_idx": 1863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d772ac8c-fca1-452e-8731-8d25d3a8fb2a": {"__data__": {"id_": "d772ac8c-fca1-452e-8731-8d25d3a8fb2a", "embedding": null, "metadata": {"page_label": "168", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c677def-e81b-4720-a3eb-004672271098", "node_type": "4", "metadata": {"page_label": "168", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7e9a9635a7045e22c1fe249ea1e186027f5f55387ca482d69badd7945f05c82e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f235132-4845-471e-8601-c918c935a41a", "node_type": "1", "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a92ef72bf074788ab8a439d66f51c714b54fe6db52abbaeac28ee674fe0d3b78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9024ec31-5e4e-4119-8c8a-3a667ac30e12", "node_type": "1", "metadata": {}, "hash": "d660079a42ca6a876e7dbb9bc4cdcb25db957b0a9f12d2bdbbbc8268a4aefc30", "class_name": "RelatedNodeInfo"}}, "hash": "8d730f0952db5d0591b21c9e074eaff96274707fa6a635fc291339e4927b71d6", "text": "168 \n \nEjemplo.   Escribir  en Python una funci\u00f3n recursiva para calcular la suma de los cubos de \nlos primeros n n\u00fameros naturales  usando la definici\u00f3n anterior .  \n \nSe la almacenar\u00e1 en un m\u00f3dulo con el mismo nombre \n \ndef sc(n): \n    if n>1: \n        r=sc(n- 1)+n**3 \n    else: \n        r=1  \n    return r \n \n \nPrueba de las funciones. Ambas versiones  producen el mismo resultado  \n \n>>> from sc import sc \n>>> r=sc(4) \n>>> r \n100 \n \nNOTA: La recursi\u00f3n es realizada internamente por el traductor mediante llamadas \nrecurrentes de manera similar a su aplicaci\u00f3n manual.  El lenguaje Python tiene un l\u00edmite \npara las llamadas recursivas internas. En la versi\u00f3n 3.4.1 para este ejemplo es cercano a \n1000.  \n Ejemplo.   Escribir  una funci\u00f3n recursiva  para contar en cuantos intentos se puede \nadivinar el n\u00famero de un dado.  \n \nfrom random import * \ndef adivina(intento):  \n    n=randint(1,6)  \n    x=int( input('Adivina el n\u00famero: '))  \n    if x!=n: \n        print( 'Fallaste: intenta otra vez')  \n        intento=intento+1  \n        adivina(intento)  \n    else:  \n        print( 'Acertaste en ',intento)  \n \n Prueba desde la ventana interactiva \n \n>>> from adivina import adivina \n>>> adivina(1)      Se inicia la funci\u00f3n en el intento 1  \nAdivina el n\u00famero: 5 \nFallaste: intenta otra vez  \nAdivina el n\u00famero: 4 \nFallaste: intenta otra vez  \nAdivina el n\u00famero: 6 \nAcertaste en  3  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9024ec31-5e4e-4119-8c8a-3a667ac30e12": {"__data__": {"id_": "9024ec31-5e4e-4119-8c8a-3a667ac30e12", "embedding": null, "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8321bb81-a9fa-458d-8e0c-1580cd9c12da", "node_type": "4", "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "20279d24431f5252bafb2cc90f1f29f6f7769fce72df01829eecb140b02a4a64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d772ac8c-fca1-452e-8731-8d25d3a8fb2a", "node_type": "1", "metadata": {"page_label": "168", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8d730f0952db5d0591b21c9e074eaff96274707fa6a635fc291339e4927b71d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54cac05c-97d6-46b0-8a95-dff9966f9af8", "node_type": "1", "metadata": {}, "hash": "cbdd8a3a8ed5185b3e66676c8ab8f7026dbcd4ca444393d9d29765fc69c65a33", "class_name": "RelatedNodeInfo"}}, "hash": "d660079a42ca6a876e7dbb9bc4cdcb25db957b0a9f12d2bdbbbc8268a4aefc30", "text": "169 \n \nEjemplo.   Escribir  una funci\u00f3n recursiva con el nombre fib para obtener el n -\u00e9simo t\u00e9rmino de \nla secuencia de Fibonnaci .  \n n: 1,  2,  3,  4,  5,  6,   7,   8,  9,  . . . \n fib(n):  1,  1,  2,  3,  5,  8,  13, 21, 34,  . . . \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  fib  \n \nEn la secuencia se puede observar que cada t\u00e9rmino de fib(n) es igual a la suma de los \ndos t\u00e9rminos anteriores: fib(n) = fib(n -2) + fib(n -1) para n>2. Mientras que el resultado es \nfib(n) = 1  para  n=1   y  n=2 . \n  \n \ndef fib(n): \n    if n==1 or n==2: \n        return 1 \n    else:  \n        return fib(n-2)+fib(n- 1) \n \n \nPrueba de la funci\u00f3n en la ventana interactiva \n \n>>> from fib import fib \n>>> fib(6)  \n8 \n>>> fib(2)  \n1 \n>>> fib(9)  \n34 \n>>> fib(25)  \n75025 \n \nEn este ejemplo, la recursi\u00f3n es muy costosa computacionalmente pues cada llamada a la \nfunci\u00f3n produce dos nuevas llamadas recurrentes  y la secuencia de llamadas se abre en \nramificaciones r\u00e1pidamente. S e llega muy pronto al l\u00edmite m\u00e1ximo de llamadas recursivas \npermitidas . La ejecuci\u00f3n es  ineficiente  pues cada llamada requiere tiempo computacional  \n Ejemplo.", "start_char_idx": 0, "end_char_idx": 1132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54cac05c-97d6-46b0-8a95-dff9966f9af8": {"__data__": {"id_": "54cac05c-97d6-46b0-8a95-dff9966f9af8", "embedding": null, "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8321bb81-a9fa-458d-8e0c-1580cd9c12da", "node_type": "4", "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "20279d24431f5252bafb2cc90f1f29f6f7769fce72df01829eecb140b02a4a64", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9024ec31-5e4e-4119-8c8a-3a667ac30e12", "node_type": "1", "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d660079a42ca6a876e7dbb9bc4cdcb25db957b0a9f12d2bdbbbc8268a4aefc30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f4ecb7b-4939-485d-8304-ac382b15faab", "node_type": "1", "metadata": {}, "hash": "05edd0bc0ee90833a4e3ff32d83104b4dde047c565b5781d14d9cdf253ef1e32", "class_name": "RelatedNodeInfo"}}, "hash": "cbdd8a3a8ed5185b3e66676c8ab8f7026dbcd4ca444393d9d29765fc69c65a33", "text": "fib(6)  = fib(4) + fib(5)  \n = fib(2) + fib(3) + fib(3) + fib(4)  \n = 1 + fib(1) + fib(2) + fib(1) + fib(2) + fib(2) + fib(3)  \n = 1 + 1 + 1 + 1 + 1 + 1 + fib(1) + fib(2)  \n = 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1  \n = 8 \n La recursi\u00f3n debe ser usada con precauci\u00f3n y debe evitar se cuando la funci\u00f3n genera m\u00e1s \nde una llamada a si misma en cada invocaci\u00f3n, como en el ejemplo anterior:  \nPython Programaci\u00f3n", "start_char_idx": 1137, "end_char_idx": 1538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f4ecb7b-4939-485d-8304-ac382b15faab": {"__data__": {"id_": "1f4ecb7b-4939-485d-8304-ac382b15faab", "embedding": null, "metadata": {"page_label": "170", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "951fc487-535a-40de-9f76-903860959e0e", "node_type": "4", "metadata": {"page_label": "170", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4575129ed7a8b80badd4e66b50ff9d2f481a415b852d6c0a26954e3ff5b10f61", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54cac05c-97d6-46b0-8a95-dff9966f9af8", "node_type": "1", "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cbdd8a3a8ed5185b3e66676c8ab8f7026dbcd4ca444393d9d29765fc69c65a33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "907d563a-d3b1-4bf3-a550-33bb2bc6db10", "node_type": "1", "metadata": {}, "hash": "c232b7ff00166c9b78a4ba64fd15d9219a6305dad3698d315582a0427237f577", "class_name": "RelatedNodeInfo"}}, "hash": "05edd0bc0ee90833a4e3ff32d83104b4dde047c565b5781d14d9cdf253ef1e32", "text": "170 \n \n6.10 Funciones generadoras  \n \nUna funci\u00f3n generadora es una funci\u00f3n especial para producir una secuencia de valores  \n  \nPara entender este concepto se desarrolla un ejemplo. Suponer que se necesita una lista \nde los cubos de los n\u00fameros naturales  \n \nLa siguiente es una funci\u00f3n elemental t\u00edpica que recibe un entero y entrega su cubo. Estas funciones se limitan a entregar solamente un valor : \n \ndef cubo(n):  \n    c=n**3 \n    return c \n \n \nLa funci\u00f3n se puede llamar dentro de una instrucci\u00f3n de repetici\u00f3n para obtener sucesivamente cada resultado:  \n \n \nfrom cubo import cubo \nfor n in range(5):  \n    c=cubo(n)  \n    print(c)  \n \nPrueba del programa  \n \n>>>  \n0 \n1 \n8 \n27 \n64 \n \n \nUna manera diferente de enfocar la soluci\u00f3n para este peque\u00f1o problema es producir \ndentro de la funci\u00f3n la lista de valores para que sean entregados uno a la vez sin \nnecesidad de llamar a la funci\u00f3n dentro de una repetici\u00f3n. Este dispositivo se denomina \nfunci\u00f3n gener adora  \n Una funci\u00f3n generadora usa la palabra especial yield para entregar uno por uno  los \nvalores de la secuencia. Mediante la funci\u00f3n especial  next   o el operador  in   se pueden \nsolicitar sucesivamente cada valor de la secuencia.  \n \nEjemplo.  Defina una fun ci\u00f3n generadora para producir la secuencia de n cubos  \n \n \ndef cubo(n):  \n    for i in range(n): \n        c=i**3  \n        yield c \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "907d563a-d3b1-4bf3-a550-33bb2bc6db10": {"__data__": {"id_": "907d563a-d3b1-4bf3-a550-33bb2bc6db10", "embedding": null, "metadata": {"page_label": "171", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "927f55fe-fb86-41c6-a7b7-4408f528bc4a", "node_type": "4", "metadata": {"page_label": "171", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "32b28752e7b35e6638d888f3988bd41a8ad8d4dcbf47b62cd3bc630d87c8f6a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f4ecb7b-4939-485d-8304-ac382b15faab", "node_type": "1", "metadata": {"page_label": "170", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "05edd0bc0ee90833a4e3ff32d83104b4dde047c565b5781d14d9cdf253ef1e32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd6d881c-32b7-4c64-83a0-e81166b0f80b", "node_type": "1", "metadata": {}, "hash": "62c86c0a3b3f4e128b8f752137e4f25d78ac8de72e0b7295e205b13ba9a5acee", "class_name": "RelatedNodeInfo"}}, "hash": "c232b7ff00166c9b78a4ba64fd15d9219a6305dad3698d315582a0427237f577", "text": "171 \n \nActivaci\u00f3n de la funci\u00f3n generadora de cubos en la ventana interactiva  \n \n>>> from cubo import cubo \n>>> c=cubo(5)        Inicia el g enerador \n>>> print(next(c))        La funci\u00f3n  next solicita el siguiente valor  \n0 \n>>> print(next(c))  \n1 \n>>> print(next(c))  \n8 \n>>> print(next(c))  \n27 \n>>> print(next(c))  \n64 \n>>> print(next(c))  \n \nStopIteration  \n \nUn programa para obtener cada valor de la secuencia creada por la funci\u00f3n generadora \ncubo usando  next  \n \nfrom cubo import cubo \nc=cubo(5)  \nfor i in range(5):  \n    print( next(c))  \n  \n \nPrueba del programa  \n>>>  \n0 \n1 \n8 \n27 \n64 \n>>>  \nTambi\u00e9n se puede solicitar cada valor mediante el operador in que impl\u00edcitamente usa  \nnext  para obtener el siguiente valor de la secuencia.  \n \nfrom cubo import cubo \nfor c in cubo(5):  \n    print(c)  \n  \n \nPrueba del programa  \n>>>  \n0 \n1 \n8 \n27 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 878, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd6d881c-32b7-4c64-83a0-e81166b0f80b": {"__data__": {"id_": "bd6d881c-32b7-4c64-83a0-e81166b0f80b", "embedding": null, "metadata": {"page_label": "172", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2588cbf9-e66d-4b40-bfae-702491cb7ada", "node_type": "4", "metadata": {"page_label": "172", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "289e6bf2c5fb54d45924492a5d360ebb4fc02b17cf8ba0abb56b28cbb31e1fdf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "907d563a-d3b1-4bf3-a550-33bb2bc6db10", "node_type": "1", "metadata": {"page_label": "171", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c232b7ff00166c9b78a4ba64fd15d9219a6305dad3698d315582a0427237f577", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c00245d0-89ed-48f6-933d-60850a2f9379", "node_type": "1", "metadata": {}, "hash": "00de9a1f3ec59c873b99f01438fb67d7b9599f10189adc3251bd1c18a7383995", "class_name": "RelatedNodeInfo"}}, "hash": "62c86c0a3b3f4e128b8f752137e4f25d78ac8de72e0b7295e205b13ba9a5acee", "text": "172 \n \n64 \n>>>  \n \nLos generadores act\u00faan de manera diferente a las funciones normales. Una funci\u00f3n \nnormal es llamada para entregar cada resultado. Esta llamada puede estar dentro de una \nrepetici\u00f3n para obtener el resultado. Por otra parte, la funci\u00f3n generadora produce una \nsecuencia pero solo entrega un valor a la vez y debe ser activada sucesivamente en forma expl\u00edcita con  next  o en forma impl\u00edcita con el operador in para obtener cada uno de los \nsiguientes valores.  \n \n \n6.10.1 Generadores infinitos  \n \nEl concepto de funci\u00f3n generadora permite definir generadores infinitos  \n Ejemplo.  Definici\u00f3n de un generador infinito de cubos:  \n \ndef cubo(): \n    n=0 \n    while True: \n        c=n**3  \n        yield c \n        n=n+1  \n \nEl siguiente programa usa el generador infinito con next  para generar  10  cubos:  \n \nfrom cubo import cubo \nc=cubo()  \nfor i in range(10):  \n    print(next(c))  \n \nPrueba del program a \n>>>  \n0 \n1 \n8 \n27 \n64 125 \n216 \n343 512 \n729 \n>>>  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c00245d0-89ed-48f6-933d-60850a2f9379": {"__data__": {"id_": "c00245d0-89ed-48f6-933d-60850a2f9379", "embedding": null, "metadata": {"page_label": "173", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd2418f7-60e5-4300-b325-ba3c4dda6cde", "node_type": "4", "metadata": {"page_label": "173", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "19505a6efdbd9eb784071cb40eb322dccbb986a985b7f44600d4ef74d95b9597", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd6d881c-32b7-4c64-83a0-e81166b0f80b", "node_type": "1", "metadata": {"page_label": "172", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "62c86c0a3b3f4e128b8f752137e4f25d78ac8de72e0b7295e205b13ba9a5acee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "136f3582-d527-4b99-b8b4-e9ba6df2d145", "node_type": "1", "metadata": {}, "hash": "2abb8ec2a0aa40572f5541b7c80faed008dada227c1b03b0fbdb3501636aa538", "class_name": "RelatedNodeInfo"}}, "hash": "00de9a1f3ec59c873b99f01438fb67d7b9599f10189adc3251bd1c18a7383995", "text": "173 \n \nUn programa que usa el generador infinito con  in  necesita interrumpir la secuencia:  \n \nfrom cubo import cubo \nfor c in cubo(): \n    print(c)  \n    if c>300: \n        break  \n \nPrueba del programa  \n>>>  \n0 \n1 \n8 \n27 \n64 \n125 \n216 \n343 \n \nDesde la ventana interactiva  \n>>> from cubo import cubo \n>>> for c in cubo(): \n   print(c)  \n0 \n1 \n8 \n27 \n64 125 \n216 \n343 512 \n729   Se necesita interrumpir la secuencia infinita presionando las teclas Ctrl C \n. . . \n \n \nEjemplo.  Generador infinito de n\u00fameros primos  \n \ndef primo():  \n    n=0 \n    while True:  \n        n=n+1  \n        c=0  \n        for  d in range(2,n):  \n            if n%d==0: \n                c=c+1  \n        if c==0: \n            yield n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "136f3582-d527-4b99-b8b4-e9ba6df2d145": {"__data__": {"id_": "136f3582-d527-4b99-b8b4-e9ba6df2d145", "embedding": null, "metadata": {"page_label": "174", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46aadfe0-72a4-4f6f-867b-0e358162a0af", "node_type": "4", "metadata": {"page_label": "174", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "90a716455e1caf2d69c8060b3ef90f17bccb429dce7331d6b29d8a005429bd4d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c00245d0-89ed-48f6-933d-60850a2f9379", "node_type": "1", "metadata": {"page_label": "173", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "00de9a1f3ec59c873b99f01438fb67d7b9599f10189adc3251bd1c18a7383995", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b47bbf2-4366-4d5a-b4c4-b58de030deb2", "node_type": "1", "metadata": {}, "hash": "5735d2741699a9b628dfdbbe72a281adf7cffbc396c11b7be5c92926a51a8cff", "class_name": "RelatedNodeInfo"}}, "hash": "2abb8ec2a0aa40572f5541b7c80faed008dada227c1b03b0fbdb3501636aa538", "text": "174 \n \nEl siguiente programa usa next  para generar 10 n\u00fameros primos  \n \nfrom primo import primo \nc=primo()  \nfor i in range(10):  \n    print(next(c))  \n \n>>>  \n1 \n2 \n3 \n5 \n7 \n11 \n13 \n17 \n19 \n23 \n>>> \n \nEl siguiente programa que usa el generador infinito con  in  necesita interrumpir la \nsecuencia:  \n \nfrom primo import primo \nfor c in primo():  \n    print(c)  \n    if c>10: \n        break \n \n>>>  \n1 \n2 \n3 \n5 \n7 \n11 \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 442, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b47bbf2-4366-4d5a-b4c4-b58de030deb2": {"__data__": {"id_": "7b47bbf2-4366-4d5a-b4c4-b58de030deb2", "embedding": null, "metadata": {"page_label": "175", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e00d473d-1435-4e1d-87b6-0a6377c162b6", "node_type": "4", "metadata": {"page_label": "175", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "49ec9c5830e167ad56069c9e5c79f8f9b3b5cfb5ef45371be2e53c82ba086257", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "136f3582-d527-4b99-b8b4-e9ba6df2d145", "node_type": "1", "metadata": {"page_label": "174", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2abb8ec2a0aa40572f5541b7c80faed008dada227c1b03b0fbdb3501636aa538", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55ba10d5-d705-4655-a190-55e0d0fdff9d", "node_type": "1", "metadata": {}, "hash": "e46c28b8453c7a5dbaba33537750514d2cfde47768aa8e640b620ac53c52878d", "class_name": "RelatedNodeInfo"}}, "hash": "5735d2741699a9b628dfdbbe72a281adf7cffbc396c11b7be5c92926a51a8cff", "text": "175 \n \nEjemplo.  Generador infinito de la secuencia de Fibonacci  \n \n \ndef fib(): \n    a, b = -1, 1 \n    while True:  \n        c = a + b  \n        yield c \n        a, b = b, c  \n \n \n \nfrom fib import fib \nc=fib() \nfor i in range(7):  \n    print(next(c))  \n \n>>>  \n0 \n1 \n1 \n2 \n3 \n5 \n8 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 304, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55ba10d5-d705-4655-a190-55e0d0fdff9d": {"__data__": {"id_": "55ba10d5-d705-4655-a190-55e0d0fdff9d", "embedding": null, "metadata": {"page_label": "176", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "647dac79-9d62-45a7-ba36-aa2f3d82b010", "node_type": "4", "metadata": {"page_label": "176", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1ceb045de85f3fb10b867e93f6de6979d92af1436fd2ada4367bef2b8d6b7d71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b47bbf2-4366-4d5a-b4c4-b58de030deb2", "node_type": "1", "metadata": {"page_label": "175", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5735d2741699a9b628dfdbbe72a281adf7cffbc396c11b7be5c92926a51a8cff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b9ad4620-c076-475e-b769-72638b04786d", "node_type": "1", "metadata": {}, "hash": "515bc35401182963fbc530308c42478a8834f6baabfefa2427c97d490b60ba17", "class_name": "RelatedNodeInfo"}}, "hash": "e46c28b8453c7a5dbaba33537750514d2cfde47768aa8e640b620ac53c52878d", "text": "176 \n \n6.10.2 Interrupci\u00f3n de un ciclo doble  \n \nUna funci\u00f3n generadora permite definir un dispositivo para interru mpir de manera elegante \nun ciclo doble:  \n \nEjemplo.  Suponer que se desea encontrar  el primer  caso  en el que  los va lores  i, j  \ncumplen la condici\u00f3n :  \n \n   2i3 + 3j2  es divisible para 7,  para  i,j = 1,2,3,. . .,9  \n \nEn el siguiente programa, l a instrucci\u00f3n  break solamente interrumpe  las repeticiones del \nciclo en el que se ejecuta la instrucci\u00f3n break, en este caso el c iclo interno:  \n \n \nfor i in range(1,10):  \n    for j in range(1,10): \n        n=2*i**3+3*j**2  \n        if n%7==0: \n            print(i,j,n)  \n   break \n \nPrueba del programa  \n>>>  \n1 2 14 \n2 2 28 \n4 2 140 \n7 7 833 \n8 2 1036  \n9 2 1470  \n>>> \n \nLa estrategia para salir de ambos c iclos es convertirlos en un solo ciclo. Para esto se \nescribe una funci\u00f3n generadora  que produce una nueva pareja de \u00edndices  i,j cada vez \nque es llamada la funci\u00f3n.  En este caso, la instrucci\u00f3n  break al interrumpir un ciclo, es \nequivalente a interrumpir lo s dos ciclos incluidos en el programa anterior.  \n \n \ndef rango_doble(n,m):  \n    for i in range(1,n): \n        for j in range(1,m):  \n            yield [i,j] \n \nfor i,j in rango_doble(10,10):  \n    n=2*i**3+3*j**2  \n    if n%7==0: \n        print(i,j,n)  \n        break  \n \n \nPrueba del programa  \n>>>  \n1 2 14 \n>>> \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1387, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9ad4620-c076-475e-b769-72638b04786d": {"__data__": {"id_": "b9ad4620-c076-475e-b769-72638b04786d", "embedding": null, "metadata": {"page_label": "177", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "231c945a-3016-4654-a3ee-222898759a01", "node_type": "4", "metadata": {"page_label": "177", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "20cb61111b1343528375de8806189256792f6500c70992b8c587d5cf5cacb6a2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55ba10d5-d705-4655-a190-55e0d0fdff9d", "node_type": "1", "metadata": {"page_label": "176", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e46c28b8453c7a5dbaba33537750514d2cfde47768aa8e640b620ac53c52878d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d62bee3-358e-4f37-9f83-6d9e6a1414da", "node_type": "1", "metadata": {}, "hash": "936ef62d3e04b4c1bdb5f67e1d56c1954069ce325387ced840b7985155b04665", "class_name": "RelatedNodeInfo"}}, "hash": "515bc35401182963fbc530308c42478a8834f6baabfefa2427c97d490b60ba17", "text": "177 \n \n6.11 Funciones con par\u00e1metros de tipo funci\u00f3n \n \nPara algunas aplicaciones, especialmente matem\u00e1ticas, es \u00fatil enviar una funci\u00f3n como \npar\u00e1metro para otra funci\u00f3n.  \n \nEjemplo.  Defina una funci\u00f3n para sumar  n  ordenadas de una funci\u00f3n  f(x)  para valores \nde  x  espaciados regularmente en el intervalo cerrado  [a, b] \n                              \nDatos \nf:      Funci\u00f3n (ingresa como par\u00e1metro)  \na,b:  L\u00edmites \nn:     Cantidad de puntos  (mayor que 1)  \n \nResultado  \ns:     Suma de  orden adas  \n \nF\u00f3rmula para calcular el espaciamiento entre los valores de x : \nbahn1\u2212=\u2212 \n             \n def suma(f,a,b,n):  \n           h=(b- a)/(n-1) \n           s=0  \n            for i in range(n):  \n                s=s+f(a+i*h)  \n            return s \n \n  \nPrueba: Calcul ar la suma 20 de ordenadas de f(x)=x sen(x)   para valores de x espaciado s \nen forma regular en el intervalo [0, 2] : \n \n >>> from math import* \n >>> from suma import* \n >>> def f(x): \n   y=x*sin(x)  \n   return y \n >>> s=suma(f,0,2,20)  \n >>> s \n 17.4550914 19917455\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d62bee3-358e-4f37-9f83-6d9e6a1414da": {"__data__": {"id_": "3d62bee3-358e-4f37-9f83-6d9e6a1414da", "embedding": null, "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c53a4db-8aec-4871-a5ff-392ea1fd2fdc", "node_type": "4", "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "02eba75a9d89109b4ea29236a9e4503a204a8d4243b7afd3cb28f6c1bebc6769", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9ad4620-c076-475e-b769-72638b04786d", "node_type": "1", "metadata": {"page_label": "177", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "515bc35401182963fbc530308c42478a8834f6baabfefa2427c97d490b60ba17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88c4f7ce-bba2-47be-9d87-d09e8aa7c859", "node_type": "1", "metadata": {}, "hash": "ba329cd029932bdff8a18e5b108f28b8e08978a3fce0b83ef6e6b12d47e1c3d1", "class_name": "RelatedNodeInfo"}}, "hash": "936ef62d3e04b4c1bdb5f67e1d56c1954069ce325387ced840b7985155b04665", "text": "178 \n \n6.12 Sugerencias generales para programar  con funciones  \n \nLa realizaci\u00f3n de cada m\u00f3dulo, programa  o funci\u00f3n comprende cuatro etapas: analizar, \ndise\u00f1ar, instrumentar y probar . Si todas son realizadas  por una misma persona, \u00e9sta debe  \nponer alg\u00fan cui dado en la doc umentaci\u00f3n pues pueden quedar vac\u00edos al no requerir  los \ndetalles que deber\u00eda agregar los para comunicar se con  otra persona.  \n Algunas sugerencias para escribir programas y funciones:  \n \na) Dibuje un diagrama o describa una jerarqu\u00eda con los componentes que integrar\u00e1n su \nproyecto. Planifique y documente el desarrollo de cada programa y cada funci\u00f3n. As\u00edgne \nnombres a los componentes, defina objetivos, los nombres de variables y las restricciones.  \n \nb) Al inicio de cada programa o funci\u00f3n escriba un t \u00edtulo y una breve descripci\u00f3n . \n \nc) Cada vez que realice una modifi caci\u00f3n , guarde una copia de la versi\u00f3n anterior con un \nnombre que la identifique.  Escriba unas  l\u00edneas indicando cual es la modificaci\u00f3n . Realice y \ndocumente una modificaci\u00f3n a la vez y reali ce las pruebas  respectivas.  \n \nd) Si es posible, c ompare los resultados obtenidos  con resultados conocidos.  \n \ne) Realice pruebas con peque\u00f1os grupos de datos antes de tratar casos grandes.  \n f) Escriba separadamente cada funci\u00f3n . Junto a la funci\u00f3n escriba algunas l\u00edneas para \nrealizar las pruebas necesarias  de la funci\u00f3n . Despu\u00e9s puede eliminar las l\u00edneas de \nprueba. Finalmente junte en una librer\u00eda com\u00fan las funciones que ya han sido probadas . \n \ng) Prefiera escribir funciones en lugar de programas. Los datos par a los programas deben \ntener un tipo espec\u00edfico , mientras que los par\u00e1metros de las  funciones  pueden recibir datos \nde diferente tipo, por lo tanto no est\u00e1n atadas a un solo tipo de datos como ocurre en los \nprogramas.", "start_char_idx": 0, "end_char_idx": 1813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88c4f7ce-bba2-47be-9d87-d09e8aa7c859": {"__data__": {"id_": "88c4f7ce-bba2-47be-9d87-d09e8aa7c859", "embedding": null, "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c53a4db-8aec-4871-a5ff-392ea1fd2fdc", "node_type": "4", "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "02eba75a9d89109b4ea29236a9e4503a204a8d4243b7afd3cb28f6c1bebc6769", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d62bee3-358e-4f37-9f83-6d9e6a1414da", "node_type": "1", "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "936ef62d3e04b4c1bdb5f67e1d56c1954069ce325387ced840b7985155b04665", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b23d0ed-0ff4-42d1-a4d7-8808cade4aab", "node_type": "1", "metadata": {}, "hash": "e0b31c1dff49f354609827d4c7afb4b2992e87b7c25d45e6d014da36f66e9d2e", "class_name": "RelatedNodeInfo"}}, "hash": "ba329cd029932bdff8a18e5b108f28b8e08978a3fce0b83ef6e6b12d47e1c3d1", "text": "h) Aproveche la ventana interactiva de Python para probar su codificaci\u00f3n y desarrollar \nprototipos mediante algoritmos simples. En una etapa posterior puede mejorar la eficiencia usando algoritmos m\u00e1s elaborados.  \nPython Programaci\u00f3n", "start_char_idx": 1817, "end_char_idx": 2052, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b23d0ed-0ff4-42d1-a4d7-8808cade4aab": {"__data__": {"id_": "4b23d0ed-0ff4-42d1-a4d7-8808cade4aab", "embedding": null, "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6", "node_type": "4", "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "646dadcc54970704f1416008f1eaab5d802db8cd3cec298fdedd34a3c28cc991", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88c4f7ce-bba2-47be-9d87-d09e8aa7c859", "node_type": "1", "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ba329cd029932bdff8a18e5b108f28b8e08978a3fce0b83ef6e6b12d47e1c3d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "287dbd85-80e1-46ed-9fe5-d1d948df310d", "node_type": "1", "metadata": {}, "hash": "940a777e498f43861b363e701ba0a1ec23be696848c8d6937be8959135bd538b", "class_name": "RelatedNodeInfo"}}, "hash": "e0b31c1dff49f354609827d4c7afb4b2992e87b7c25d45e6d014da36f66e9d2e", "text": "179 \n \n6.13 Ejercicios de programaci\u00f3n con funciones  \n \n1. Escriba una funci\u00f3n  conteo(n)  que entregue la c antidad de divisores enteros positivos \nque tiene un n\u00famero entero dado n. Escriba un programa de prueba que use la funci\u00f3n escrita para encontrar cual n\u00famero entre 1 y 100 tiene m\u00e1s divisores enteros.  \n \n2. Escriba un programa de prueba que use la funci\u00f3n pr imo y encuentre dos n\u00fameros \nenteros aleatorios menores que 100 tales que su suma sea tambi\u00e9n un n\u00famero primo.  \n \n3. Escriba una funci\u00f3n perfecto(n) que determine si un n\u00famero entero dado n es un \nn\u00famero perfecto. Un n\u00famero perfecto debe ser igual a la suma de todos sus divisores \nenteros menores que el valor del n\u00famero.  \nEjemplo: 28 = 1 + 2 + 4 + 7 + 14 \nEscriba un programa de prueba que use la funci\u00f3n escrita y encuentre los n\u00fameros \nperfectos entre 1 y 1000 \n \n4. Escriba una funci\u00f3n sumad (n) que entregue la suma de las cifras de un n\u00famero dado n. \nCon esta funci\u00f3n escriba un programa que genere 10 n\u00fameros aleatorios entre 1 y 100 y \nencuentre cual de ellos tiene la mayor suma de sus cifras.  \n \n5. Escriba una funci\u00f3n cuad(n)  que determine si el cuadrado de un n\u00famero natural n dado, \nes igual a la suma de los primeros n n\u00fameros impares.  \nEj.   6\n2  = 1+3+5+7+9+11  \nEscriba un programa de prueba que ingrese un dato desde el teclado, use la funci\u00f3n y \nmuestre el resultado en la pantalla.  \n \n6.", "start_char_idx": 0, "end_char_idx": 1385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "287dbd85-80e1-46ed-9fe5-d1d948df310d": {"__data__": {"id_": "287dbd85-80e1-46ed-9fe5-d1d948df310d", "embedding": null, "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6", "node_type": "4", "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "646dadcc54970704f1416008f1eaab5d802db8cd3cec298fdedd34a3c28cc991", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b23d0ed-0ff4-42d1-a4d7-8808cade4aab", "node_type": "1", "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e0b31c1dff49f354609827d4c7afb4b2992e87b7c25d45e6d014da36f66e9d2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1682e6c6-1c29-4c98-923a-fec3b7def77a", "node_type": "1", "metadata": {}, "hash": "3a650fec16c161ab288f06ca9e5a6cecf62cbff1011e039d8e07cbd9a112e250", "class_name": "RelatedNodeInfo"}}, "hash": "940a777e498f43861b363e701ba0a1ec23be696848c8d6937be8959135bd538b", "text": "6. Escriba una funci\u00f3n secuencia1(n)  que entregue el n -\u00e9simo t\u00e9rmino de la siguiente \nsecuencia, en la cual cada t\u00e9rmino, a partir del tercero se obtiene sumando los dos anteriores: 1, 1, 2, 3, 5, 8, 13, 21, ....  Escriba un programa de prueba que ingrese un dato \ndesde el teclado use la funci\u00f3n  y muestre el resultado en la pantalla.  \n 7. Escriba una funci\u00f3n secuencia2(n)  que entregue el n -\u00e9simo t\u00e9rmino de la siguiente \nsecuencia, en la cual cada t\u00e9rmino, a partir del cuarto se obtiene sumando los tres \nanteriores: 1, 1, 1, 3, 5, 9, 17, 31, 57, .... . Escriba un programa de prueba que ingrese un \ndato desde el teclado, use la funci\u00f3n y muestre el resultado en la pantalla.  \n \n8. Escriba una funci\u00f3n sim(x)  que reciba un entero y determine si es sim\u00e9trico, es decir si \nlos d\u00edgitos opuestos alrededor del cent ro son iguales. Escriba un programa de prueba que \ngenere n\u00fameros aleatorios entre 1 y 10000 hasta obtener un n\u00famero que sea sim\u00e9trico \n \n9. Escriba una funci\u00f3n  alfin(n)  que entregue como resultado la cantidad de veces que \ndebe lanzarse un dado hasta que salg a un n\u00famero n dado como par\u00e1metro.  Escriba un \nprograma de prueba que ingrese un dato desde el teclado, use la funci\u00f3n y muestre el \nresultado en la pantalla.  \n \n10. Escriba una funci\u00f3n conteo(x)  que determine la cantidad de t\u00e9rminos que deben \nsumarse de la s erie: 1*2*3 + 2*3*4 + 3*4*5 + 4*5*6+....... hasta que la suma exceda a un \nvalor x dado.", "start_char_idx": 1383, "end_char_idx": 2823, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1682e6c6-1c29-4c98-923a-fec3b7def77a": {"__data__": {"id_": "1682e6c6-1c29-4c98-923a-fec3b7def77a", "embedding": null, "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6", "node_type": "4", "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "646dadcc54970704f1416008f1eaab5d802db8cd3cec298fdedd34a3c28cc991", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "287dbd85-80e1-46ed-9fe5-d1d948df310d", "node_type": "1", "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "940a777e498f43861b363e701ba0a1ec23be696848c8d6937be8959135bd538b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a4ea91c-9b8b-4bac-b7aa-1de55352dc20", "node_type": "1", "metadata": {}, "hash": "f0c36fc7880cb02771488a3236e8cf903bb143f9c5bcd5236bd24e3d2d1b00c5", "class_name": "RelatedNodeInfo"}}, "hash": "3a650fec16c161ab288f06ca9e5a6cecf62cbff1011e039d8e07cbd9a112e250", "text": "Escriba un programa de prueba que genere un n\u00famero aleatorio para x entre \n1 y 1000, use la funci\u00f3n y muestre el resultado en la pantalla.  \n \nPython Programaci\u00f3n", "start_char_idx": 2825, "end_char_idx": 2987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a4ea91c-9b8b-4bac-b7aa-1de55352dc20": {"__data__": {"id_": "6a4ea91c-9b8b-4bac-b7aa-1de55352dc20", "embedding": null, "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e3fb751-0d15-4903-9e4e-1bc5ede4516f", "node_type": "4", "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5cbd7616dbcf7a17746490e4dc15f650f472b202dac3d31e8fb83a840788760c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1682e6c6-1c29-4c98-923a-fec3b7def77a", "node_type": "1", "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3a650fec16c161ab288f06ca9e5a6cecf62cbff1011e039d8e07cbd9a112e250", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60d75214-f758-485c-b701-c50276e498a8", "node_type": "1", "metadata": {}, "hash": "3c00c0b1f0d1220fcc45842136d7a1b768d4595146d2086cd1da8717e0528587", "class_name": "RelatedNodeInfo"}}, "hash": "f0c36fc7880cb02771488a3236e8cf903bb143f9c5bcd5236bd24e3d2d1b00c5", "text": "180 \n \n11. Escriba una funci\u00f3n fact (n) que reciba un numero entero n y devuelva su factorial. \nEscriba un programa de prueba que genere un n\u00famero aleatorio entero k entre 1 y  10. U se \nla funci\u00f3n y muestre la suma de los factoriales de los primeros k n\u00fameros naturales  \n \n12. Escriba una funci\u00f3n sumad iv(n) que reciba un n\u00famero entero n y devuelva la suma de \nsus divisores.  Escriba un programa de prueba que ingrese un dato desde el teclado, use \nla funci\u00f3n y muestre el resultado en la pantalla  \n \n13. Escriba una librer\u00eda o m\u00f3dulo con el nombre convert ir que contenga dos funciones:  \n      [r,t]=polar(x, y)           Recibe las coordenadas cartesianas   x,y  y entrega las  \n                                          coordenadas polares   r, t  \n      [x,y]=cartesiana(r, t)     Recibe las coordenadas polares r, t y entrega las \n                                           coordenadas cartesianas  x, y  \nFormulaci\u00f3n: 22r x y ,    t arctan(y / x),      x r cos(t),    y r sen(t)= += = =  \nEscriba un programa con un men\u00fa que tenga tres opciones en un ciclo interactivo:  \n1) Convertir a p olares \n2) Convertir a cartes ianas  \n3) Salir  \nSeg\u00fan la opci\u00f3n elegida, el programa pide los datos, llama a la funci\u00f3n respectiva y \nmuestra en pantalla los resultados.  \n \n14. El siguiente es un algoritmo para generar un n\u00famero aleatorio entero (seudo aleatorio)  \n1) Dado un n\u00famero entero  x   \n2) Sume los cuadrados de los d\u00edgitos del n\u00famero. Este resultado es el n\u00famero \naleatorio  \na) Escriba una funci\u00f3n c=aleatorio(x)  que entregue el resultado producido.  \nb) Escriba un programa que lea un valor inicial para x y llame a la funci\u00f3n aleatorio  \nrepetidamente, en viando como nuevo dato, el resultado que entrega la funci\u00f3n.", "start_char_idx": 0, "end_char_idx": 1734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60d75214-f758-485c-b701-c50276e498a8": {"__data__": {"id_": "60d75214-f758-485c-b701-c50276e498a8", "embedding": null, "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e3fb751-0d15-4903-9e4e-1bc5ede4516f", "node_type": "4", "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5cbd7616dbcf7a17746490e4dc15f650f472b202dac3d31e8fb83a840788760c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a4ea91c-9b8b-4bac-b7aa-1de55352dc20", "node_type": "1", "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f0c36fc7880cb02771488a3236e8cf903bb143f9c5bcd5236bd24e3d2d1b00c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c19f5608-8058-4780-90ce-4fde10f3fba0", "node_type": "1", "metadata": {}, "hash": "be984e09ad5a3a6de3c558d110ceec37ea6a6ec9760f87d60da085d52e3b7e88", "class_name": "RelatedNodeInfo"}}, "hash": "3c00c0b1f0d1220fcc45842136d7a1b768d4595146d2086cd1da8717e0528587", "text": "Determine cuantas veces hay que llamar a la funci\u00f3n aleatorio  hasta que el \nresultado sea igual a alg\u00fan valor que ya sali\u00f3 anteriormente. Esta cantidad se denomina longitud de la secuencia aleator ia \n \n15. La siguiente definici\u00f3n recursiva produce el m\u00e1ximo com\u00fan divisor entre dos n\u00fameros \nenteros  positivos . Escriba y pruebe una funci\u00f3n con esta definici\u00f3n \n   \n   \n                     mcd(a b,b), a b\nmcd(a,b) mcd(a,b - a), b a\na, a b\u2212>\uf8f1\n\uf8f4= > \uf8f2\n\uf8f4= \uf8f3 \n \n16. Analice la siguiente definici\u00f3n recursiva para determinar cuantos  d\u00edgitos tiene un \nn\u00famero entero. Escriba y pruebe una funci\u00f3n. Note el uso de la divisi\u00f3n entera:  // \n   \n                  nd( n//10 ), n 10nd(n)1, n 1 0\u2265 \uf8f1=\uf8f2< \uf8f3 \n \n17. Escriba una funci\u00f3n recursiva para obtener la cantidad de d\u00edgitos impares que contiene \nun n\u00famero entero positivo.  \n \n18. Escriba una funci\u00f3n recursiva para calcular la suma de los  n  primeros t\u00e9rminos de la \nserie:  \n S(n) = 1 -  1/2 + 1/3 -  1/4 + 1/5 -  1/6 + ...  \n \nPython Programaci\u00f3n", "start_char_idx": 1736, "end_char_idx": 2731, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c19f5608-8058-4780-90ce-4fde10f3fba0": {"__data__": {"id_": "c19f5608-8058-4780-90ce-4fde10f3fba0", "embedding": null, "metadata": {"page_label": "181", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78469b53-3988-49f5-9492-5eec75c8cd52", "node_type": "4", "metadata": {"page_label": "181", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1d087e1d806ed438a7bd820e407d79eaa0a2e875a9d2b9e62f9804f8d075c71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60d75214-f758-485c-b701-c50276e498a8", "node_type": "1", "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3c00c0b1f0d1220fcc45842136d7a1b768d4595146d2086cd1da8717e0528587", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad3a6e7a-00b0-4a81-95d2-986596737ba9", "node_type": "1", "metadata": {}, "hash": "fa87827140a63bb45e8eca5dfceb3ec6f34129182fbb50883c29b0d00dfce01e", "class_name": "RelatedNodeInfo"}}, "hash": "be984e09ad5a3a6de3c558d110ceec37ea6a6ec9760f87d60da085d52e3b7e88", "text": "181 \n \n19. Escriba una funci\u00f3n recursiva para calcular combinaciones de n\u00fameros con la \ndefinici\u00f3n :     \n  C(m,n) = C(m -1, n-1) + C(m -1, n) \nSabiendo que:    C(m, n)=1,   si    n=0   \u00f3   n=m \n    C(m, n)=m,  si   n=1   \u00f3   n=m-1 \n \n20. Escriba una funcion generadora y un programa de prueba para obtener la secuencia \nde Ulam que reciba un valor inicial y entregue sucesivamente los valores de l a secuencia . \n \nEscriba un programa de prueba para generar la secuencia con  next  y otro programa con  \nin \n \n21. Los n\u00fameros triangulares  f(n) tienen la regla de formaci\u00f3n descrita con el siguiente \ngrafico para n=1, 2, 3, 4, 5, ...  \n \n \nEscriba una funci\u00f3n que reciba un valor de  n  y entregue el resultado  f(n) \n \na) Use una forma normal para la funci\u00f3n mediante un ciclo  \nb) Use una forma recursiva para la funci\u00f3n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 845, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad3a6e7a-00b0-4a81-95d2-986596737ba9": {"__data__": {"id_": "ad3a6e7a-00b0-4a81-95d2-986596737ba9", "embedding": null, "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff727822-c671-4f15-8803-baf4aaf4e5b4", "node_type": "4", "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9cdf68cbc1f198936b73ecbd913eda1708d4f1e97408220ce66ec6576f9f0213", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c19f5608-8058-4780-90ce-4fde10f3fba0", "node_type": "1", "metadata": {"page_label": "181", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "be984e09ad5a3a6de3c558d110ceec37ea6a6ec9760f87d60da085d52e3b7e88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6d382dc-cfac-452d-b043-f5e370e42830", "node_type": "1", "metadata": {}, "hash": "cb14196ae1c6e1dbb6ba56b3765dcfdc58957e10b8f3f953fd4f2c7a302a4949", "class_name": "RelatedNodeInfo"}}, "hash": "fa87827140a63bb45e8eca5dfceb3ec6f34129182fbb50883c29b0d00dfce01e", "text": "182 \n \n7 Tipos de datos estructurados  \n \nAdem\u00e1s de los tipos de datos b\u00e1sicos revisados en las secciones  anteriores , Python  \nadmite estructuras de datos denominadas  colecciones que permiten agrupar datos , los \ncuales  pueden ser de tipo s diferentes . Estos  datos estructurados o colecciones  son: \nListas, Tuplas , Cadenas de caracteres (strings) , Diccionarios  y Conjuntos .  Los tipos \nde datos estructurados se pueden combinar y formar tipos de datos compuestos.   \n \nUn caso muy importante del tipo lista, son lo s arreglos. Los arreglos son listas de una o \nm\u00e1s dimensiones cuyos elementos son del mismo tipo ( usualmente num\u00e9rico)  y su \nmanejo se define y  realiza con los operadores y funciones de la librer\u00eda NumPy  de gran \nimportancia para aplicaciones matem\u00e1ticas. Los arreglos son el soporte para el manejo \ncomputacional de los vectores y matrices.  \n \nLas estructuras de datos en el len guaje Python son tipos de datos  din\u00e1mic os, es decir \nque pueden extenderse o modificarse en forma interactiva y durante  la ejecuci\u00f3n  de \nprogramas.   \n \nEste cap\u00edtulo es muy importante incluyendo el estudio de las librer\u00edas especiales disponibles en Python para  operar con este tipo de datos.  \n Una de las propiedades m\u00e1s \u00fatiles del lenguaje Python  es la facilidad para el manejo de \nlos componentes de algunas estructuras de datos (listas, arreglos, cadenas de caracteres \ny tuplas) mediante una notaci\u00f3n especial de los \u00edndices que permite referirse o extraer \nparte del contenido de la estructura. Esta propiedad se denomina \u201cslicing\u201d  (rebanar). La \nsintaxis es simple y elegante y ser\u00e1 revisada mediante ejemplos  y aplicaciones  \n \n \n7.1 Listas \n \nLas listas constituyen el tipo de datos estructurado m\u00e1s importante, vers\u00e1til y com\u00fan de Python.  Una lista es una colecci\u00f3n de datos que pueden tener diferente tipo.", "start_char_idx": 0, "end_char_idx": 1838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6d382dc-cfac-452d-b043-f5e370e42830": {"__data__": {"id_": "a6d382dc-cfac-452d-b043-f5e370e42830", "embedding": null, "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff727822-c671-4f15-8803-baf4aaf4e5b4", "node_type": "4", "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9cdf68cbc1f198936b73ecbd913eda1708d4f1e97408220ce66ec6576f9f0213", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad3a6e7a-00b0-4a81-95d2-986596737ba9", "node_type": "1", "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fa87827140a63bb45e8eca5dfceb3ec6f34129182fbb50883c29b0d00dfce01e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97e8f0ee-ecf2-453f-bdec-db0a8ef2eda7", "node_type": "1", "metadata": {}, "hash": "ffbea9d95bd4c846e4ee82b464dc10883daaab9e69055215516e44da617a89b1", "class_name": "RelatedNodeInfo"}}, "hash": "cb14196ae1c6e1dbb6ba56b3765dcfdc58957e10b8f3f953fd4f2c7a302a4949", "text": "Una lista es una colecci\u00f3n de datos que pueden tener diferente tipo. Los datos se \nescriben entre corchetes, separados por comas :  \n \n[dato, dato, dato, ..., dato]  \n Una lista es una estructura de datos din\u00e1mina cuyos componentes se pueden modificar . \n \nLas celdas son numeradas desde cero .  El primer  componente o primera celda, tiene \n\u00edndice  0.  El segundo componente, o segunda celda, tiene \u00edndice 1 , etc. \n \nSe puede acceder a los componentes de una lista mediante un \u00edndice entre corchetes .  \n \nPython es muy flexible en la notaci\u00f3n de \u00edndices para manejo de los componentes. Esta \npropiedad se denomina \u201cslicing\u201d  (rebanar) y se la revisa en los ejemplos . \n En la notaci\u00f3n de \u00edndices, s e puede especificar el ac ceso  a varios elementos o \ncomponentes mediante un rango para el \u00edndice. El rango no incluye el extremo derecho \nespecificado. Al es  \nPython Programaci\u00f3n", "start_char_idx": 1770, "end_char_idx": 2653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97e8f0ee-ecf2-453f-bdec-db0a8ef2eda7": {"__data__": {"id_": "97e8f0ee-ecf2-453f-bdec-db0a8ef2eda7", "embedding": null, "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3cceb3e4-e03b-4d2f-acad-d4d731c33097", "node_type": "4", "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e12c8514910d1b3e14d2265919aa5261725eda561b0390010df7a14276e44ada", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6d382dc-cfac-452d-b043-f5e370e42830", "node_type": "1", "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cb14196ae1c6e1dbb6ba56b3765dcfdc58957e10b8f3f953fd4f2c7a302a4949", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7f8f349-31be-41d4-ad98-f07372011122", "node_type": "1", "metadata": {}, "hash": "d4291bce854de9dfe24477b9fb9ffb081eababf3eec25d8ce0aa46615d3ddff7", "class_name": "RelatedNodeInfo"}}, "hash": "ffbea9d95bd4c846e4ee82b464dc10883daaab9e69055215516e44da617a89b1", "text": "183 \n \nEjemplos .  Creaci\u00f3n en la ventana interactiva de una lista con 5 componentes, algunos de \ntipos diferentes:  \n \n>>> x = [' abc',  73,  5.28,  ' rs',  50] \n \nLa representaci\u00f3n visual de la lista se puede describir con el siguiente gr\u00e1fico en el que los \ncomponentes se almacenan en celdas de memoria numeradas desde cero : \n \n'abc' 73 5.28 'rs' 50 \n      0           1          2          3         4  \n \nEjemplos de especificaci\u00f3n de \u00edndices para manejo de los componentes de la lista. Si se \nespecifica un elemento, el resultado es un valor. Si se especifica mediante un rango,  el \nresultado tambi\u00e9n es una lista.", "start_char_idx": 0, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7f8f349-31be-41d4-ad98-f07372011122": {"__data__": {"id_": "c7f8f349-31be-41d4-ad98-f07372011122", "embedding": null, "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3cceb3e4-e03b-4d2f-acad-d4d731c33097", "node_type": "4", "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e12c8514910d1b3e14d2265919aa5261725eda561b0390010df7a14276e44ada", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97e8f0ee-ecf2-453f-bdec-db0a8ef2eda7", "node_type": "1", "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ffbea9d95bd4c846e4ee82b464dc10883daaab9e69055215516e44da617a89b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed7933e3-8acf-4139-822e-af7064f84e4e", "node_type": "1", "metadata": {}, "hash": "087628df9a0c5ecf4d59b3797604c9e81ff5f55082d398257f62a01ef7321877", "class_name": "RelatedNodeInfo"}}, "hash": "d4291bce854de9dfe24477b9fb9ffb081eababf3eec25d8ce0aa46615d3ddff7", "text": "Si se especifica mediante un rango,  el \nresultado tambi\u00e9n es una lista.  \n \n>>> x[0]          Componente 0 (ubicad o en la celda 0 ) \n'abc'          (es el primer componente o primera celda)  \n \n>>> x[2]          Componente 2 (ubicado en la celda 2 ) \n5.28          (es el tercer componente o tercera celda)  \n \n>>> x[1:4]            Componentes desde 1  hasta el 3  (celdas 1 a 3)  \n[73, 5.28, 'rs']              (con el rango no se incluye el extremo final)  \n \n>>> x[1]  \n45     El resultado es un elemento  \n \n>>> x[1:2]     \n[45]     El resultado es una lista \n \n>>> x[6]     El \u00edndice fuera de rango produce un error  \nIndexError: list index out of range  \n \n>>> x[2:]            Componentes  2 hasta el final (celda 2  hasta el final)  \n[5.28, 'rs', 50 ]         los resultados tambi\u00e9n son  listas  \n \n>>> x[:4]           Componenetes desde el primero hasta el 3  \n['abc', 73, 5.28, 'rs']     (el rango no incluye el extrem o final)  \n \n>>> x[0:5:2]     Todos los componentes en celdas pares  \n['abc', 5.28, 50 ]   El tercer \u00edndice es el incremento de n\u00famero de celda \n \n>>> x[-1]          Es el \u00faltimo componente (componente 4 ) \n50 \n \n>>> x[-2]          Pen\u00faltimo componen te (componente 3 ) \n'rs' \n \n>>> x[-3]    Antepen\u00faltimo componente (componente 2) \n5.28 \n \n>>> x[-4] \n73 \n \nPython Programaci\u00f3n", "start_char_idx": 551, "end_char_idx": 1860, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed7933e3-8acf-4139-822e-af7064f84e4e": {"__data__": {"id_": "ed7933e3-8acf-4139-822e-af7064f84e4e", "embedding": null, "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "440b35dc-6c25-4d4a-a181-fdcd65a40e99", "node_type": "4", "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59c5023c014afd42efd372071e742c284816d0e4cd5beb8c42a7e3d2ef8aeeaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7f8f349-31be-41d4-ad98-f07372011122", "node_type": "1", "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4291bce854de9dfe24477b9fb9ffb081eababf3eec25d8ce0aa46615d3ddff7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2f1b73a-db4d-4501-9999-f106c68da956", "node_type": "1", "metadata": {}, "hash": "524b30c237ff40ee23a4cbacc4c06a999272e9c02b380317b60f6b91c81c1997", "class_name": "RelatedNodeInfo"}}, "hash": "087628df9a0c5ecf4d59b3797604c9e81ff5f55082d398257f62a01ef7321877", "text": "184 \n \n>>> x[:- 3]          Componentes desde el primero hasta el  -4 \n['abc', 73]           (el rango no incluye el extremo final)  \n \n>>> x[-2:]          Componentes desde el pen\u00faltimo hasta el final  \n['rs', 50 ] \n \n>>> x[:- 1]          Todos los componentes menos el \u00faltimo \n['abc', 73, 5.28, 'rs']         (el rango no incluye el extremo final)  \n \n>>> x[1]=45                        Los componentes de una lista  se pueden modificar  \n>>> x \n['abc', 45, 5.28, 'rs', 5 0]      La lista fue modificada \n \n>>> x=[20,40,50,30,70,65,80,90,35]  \n>>> x[0:9:2]     El tercer \u00edndice indica el incremento (cada dos \n[20, 50, 70, 80, 35]   elementos)  \n \n>>> x[0:- 1:2] \n[20, 50, 70, 80]  \n \n>>> x[:9:2]  \n[20, 50, 70, 80, 35]  \n >>> x[::2]  \n[20, 50, 70, 80, 35]  \n >>> x[::3]  \n[20, 30, 80]  \n \n>>> x[::- 1]    Esta notaci\u00f3n  especial  invierte la lista  \n[35, 90, 80, 65, 70, 30, 50, 40, 20] \n \n \nListas anidadas.", "start_char_idx": 0, "end_char_idx": 911, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2f1b73a-db4d-4501-9999-f106c68da956": {"__data__": {"id_": "f2f1b73a-db4d-4501-9999-f106c68da956", "embedding": null, "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "440b35dc-6c25-4d4a-a181-fdcd65a40e99", "node_type": "4", "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59c5023c014afd42efd372071e742c284816d0e4cd5beb8c42a7e3d2ef8aeeaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed7933e3-8acf-4139-822e-af7064f84e4e", "node_type": "1", "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "087628df9a0c5ecf4d59b3797604c9e81ff5f55082d398257f62a01ef7321877", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db1be5c9-d172-4d11-9523-790e5978c2e8", "node_type": "1", "metadata": {}, "hash": "9304a1eef212fd2b4ec14e9d9da5b536a79a0cdec888e801eb420302c0b96f0f", "class_name": "RelatedNodeInfo"}}, "hash": "524b30c237ff40ee23a4cbacc4c06a999272e9c02b380317b60f6b91c81c1997", "text": "Una lista puede incluir componentes  de tipo lista \n \n>>> x=[123,'Algebra',[50,70],5,73.25] >>> x[0]  \n123 \n \n>>> x[1]  \n'Algebra'  \n \n>>> x[2]  \n[50, 70]  \n \n>>> x[2][1]     Se requiere un segundo \u00edndice para referirse \n70     al contenido del componente de tipo lista \n \n>>> x[2][1]=75    Se pueden modificar componentes de la lista \n>>> x \n[123, 'Algebra', [50, 75], 5, 73.25] \nPython Programaci\u00f3n", "start_char_idx": 912, "end_char_idx": 1312, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db1be5c9-d172-4d11-9523-790e5978c2e8": {"__data__": {"id_": "db1be5c9-d172-4d11-9523-790e5978c2e8", "embedding": null, "metadata": {"page_label": "185", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "69617976-9e63-4711-84fb-dd4cd43037c3", "node_type": "4", "metadata": {"page_label": "185", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "79cb0eb06fba9f9e3639d612ff51810a66e2b3cf83c73c26a571f300b2a0b51c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2f1b73a-db4d-4501-9999-f106c68da956", "node_type": "1", "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "524b30c237ff40ee23a4cbacc4c06a999272e9c02b380317b60f6b91c81c1997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b98ffe7-21f2-4397-9125-77fb3a968dd6", "node_type": "1", "metadata": {}, "hash": "4a992ef4195b7dc606482b623deae8788b286707bf8e37bc2fae075cf4252adf", "class_name": "RelatedNodeInfo"}}, "hash": "9304a1eef212fd2b4ec14e9d9da5b536a79a0cdec888e801eb420302c0b96f0f", "text": "185 \n \n \n>>> x[3]=[40,80]  \n>>> x \n[123, 'Algebra', [50, 75], [40, 80], 73.25]  \n  \n>>> t=[[123,'Mar\u00eda',50.2],[234,'Juan',24.2]]  \n \n>>> t[1]  \n[234, 'Juan ', 24.2]  \n >>> t[1][2]  \n24.2 \n \nDeclaraci\u00f3n de una l ista vac\u00eda  \n \n>>> x=[]     La lista  x  no contiene elementos  \n \n \nListas mul tidimensionales: Una lista puede organizarse  en m \u00e1s niveles   \n \n>>> x=[[[23,45],['abc',42]],35]  \n>>> x[0]  \n[[23, 45], ['abc', 42]]  \n \n>>> x[1]  \n35 \n \n>>> x[0][0]  \n[23, 45]  \n \n>>> x[0][0][1]    Se requiere un tercer \u00edndice para manejar el  \n45     contenido de menor nivel  \n \n>>> x[0][1][0]  \n'abc' \n >>> x[0][1][0]='rstu'  \n>>> x \n[[[23, 45], ['rstu', 42]], 35]  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 686, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b98ffe7-21f2-4397-9125-77fb3a968dd6": {"__data__": {"id_": "4b98ffe7-21f2-4397-9125-77fb3a968dd6", "embedding": null, "metadata": {"page_label": "186", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2431477d-c450-408a-8c73-1bc4855d6fee", "node_type": "4", "metadata": {"page_label": "186", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c60ebf10ef8f4a46dbf6801b374162dd43bf03e2d968a8d3a6c0a26550c35a43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db1be5c9-d172-4d11-9523-790e5978c2e8", "node_type": "1", "metadata": {"page_label": "185", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9304a1eef212fd2b4ec14e9d9da5b536a79a0cdec888e801eb420302c0b96f0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb41bab9-f4e3-491c-9a4a-6d7d9ae97e1e", "node_type": "1", "metadata": {}, "hash": "cdd77da8049a651638a84f026419a204d9cc70389dd0f44842e7f5555ab542ae", "class_name": "RelatedNodeInfo"}}, "hash": "4a992ef4195b7dc606482b623deae8788b286707bf8e37bc2fae075cf4252adf", "text": "186 \n \nAlgunas funciones comunes para manejo de listas (num\u00e9ricas)  \n \nEstas funciones est\u00e1n en la librer\u00eda est\u00e1ndar residente en memoria al cargar Python  \n >>> x=[20,30,45,50,30]  \n \n>>> len(x)    longitud o cantidad de elementos en una lista \n5 \n >>> max(x)    El mayor valor   (listas num\u00e8ricas)  \n50 \n \n>>> min(x)    El menor valor   (listas num\u00e8ricas)  \n20 \n \n>>> sum(x)    Suma de componentes   (listas num\u00e8ricas)   \n175 \n \n>>> x=[20,30,45,50,'abc',30]  \n \n>>> len(x)    Longitud o cantidad de elementos en la lista \n6     (los componentes pueden ser de cualquier tipo)  \n >>> max(x)    Error: max, min solo aplicables con listas num\u00e8ricas \n \nTypeError: unorderable types: str() > int()  \n \n>>> sum(x)    Error: sum solo aplicable a listas num\u00e9ricas \n \nTypeError: unsupported operand type(s) for +: 'int' and 'str'  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 847, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb41bab9-f4e3-491c-9a4a-6d7d9ae97e1e": {"__data__": {"id_": "fb41bab9-f4e3-491c-9a4a-6d7d9ae97e1e", "embedding": null, "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6afc202-65d7-4e86-817e-ccdfb43d41a4", "node_type": "4", "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9bcbf47c7f492c0a861fd04aa054a0efbff2a8f16420c088aa8df43710233464", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b98ffe7-21f2-4397-9125-77fb3a968dd6", "node_type": "1", "metadata": {"page_label": "186", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4a992ef4195b7dc606482b623deae8788b286707bf8e37bc2fae075cf4252adf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d6d02be-865f-4be3-9c0b-a967fa96c027", "node_type": "1", "metadata": {}, "hash": "d32298f32510ea765c8479cec644bb6c631d00b517a34794c9ae2cc3e25402d2", "class_name": "RelatedNodeInfo"}}, "hash": "cdd77da8049a651638a84f026419a204d9cc70389dd0f44842e7f5555ab542ae", "text": "187 \n \nFunciones y  operadores especiales para manejo de listas  \n \nEn esta secci\u00f3n se establecen instrumentos adicionales  para manejo de listas y sus \naplicaciones . La mayor\u00eda son aplicables a listas num\u00e9ricas. Sin embargo, muchas \noperaciones se pueden aplicar a listas con elementos de tipos diferentes.  \n Python dispone de dispositivos denominados Clases (se puede entender una clase como \nlibrer\u00eda) que contienen funciones definidas para ciertas aplicaciones. Estas funciones \ntambi\u00e9n se denomina n m\u00e9todos.  \n La clase (librer\u00eda) para manejo de listas se denomina list y es residente en la Python, por \nlo que no se necesita importarla.  \n \nAl crear una variable u objeto de tipo lista se  tiene acceso a las funciones o m\u00e9todos \ndefinidos en la clase y se los usa con la siguiente notaci\u00f3n:  \n \nobjeto. funci\u00f3n \n \n \nEn el cuadro se muestran algun as funciones  de la clase  list para manejo de listas. Su \naplicaci\u00f3n se describir\u00e1 mediante ejemplos.", "start_char_idx": 0, "end_char_idx": 959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d6d02be-865f-4be3-9c0b-a967fa96c027": {"__data__": {"id_": "2d6d02be-865f-4be3-9c0b-a967fa96c027", "embedding": null, "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6afc202-65d7-4e86-817e-ccdfb43d41a4", "node_type": "4", "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9bcbf47c7f492c0a861fd04aa054a0efbff2a8f16420c088aa8df43710233464", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb41bab9-f4e3-491c-9a4a-6d7d9ae97e1e", "node_type": "1", "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cdd77da8049a651638a84f026419a204d9cc70389dd0f44842e7f5555ab542ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edf9786f-3a7f-46c9-9a14-2957f33b0594", "node_type": "1", "metadata": {}, "hash": "d251f455a9570ec91fe28180ed7b29420ee42a14c7bb306dbc1b13f68cfb892d", "class_name": "RelatedNodeInfo"}}, "hash": "d32298f32510ea765c8479cec644bb6c631d00b517a34794c9ae2cc3e25402d2", "text": "Su \naplicaci\u00f3n se describir\u00e1 mediante ejemplos.  \n  \nSean   x: objeto (o variable) de tipo lista    \n e: un elemento  \n \nFunci\u00f3n  Resultado  \nx.append(e)   Agrega a la lista x el elemento e \nx.insert(i,e)  Inserta e en la posici\u00f3n  i de la lista x \nx.count(e)  Conteo de instancias de e en la lista  x \nx.remove(e)  Elimina e l primer elemento  e de la lista x \nx.pop(i)  Entrega el elemento en la posici\u00f3n  i en la lista y lo elimina  \nx.index(e)  Entrega la posici\u00f3n del primer elemento e en x \nx.sort()  Ordena x en forma creciente  \nx.reverse()  Invierte la lista x \nx.clear()  Vaciar la  lista x \nx.copy()  Entrega una copia de una lista de un nivel  \n Algunas de estas funciones producen un error  de tipo ValueError  si no se usan \napropiadamente \n \nOperadores para manejo de  listas  \n \nSe diponen de otras funciones y operadores para manejo de listas.   Algunos  operadores:  \n \n+  Operador de c oncatenaci\u00f3n de listas  \n*  Operador de reproducci\u00f3n de listas \nin      Operador de inclusi\u00f3n  \nnot in \n \ndel  Elimina elementos de una lista especificando el \u00edndice \n \nPython Programaci\u00f3n", "start_char_idx": 912, "end_char_idx": 2005, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edf9786f-3a7f-46c9-9a14-2957f33b0594": {"__data__": {"id_": "edf9786f-3a7f-46c9-9a14-2957f33b0594", "embedding": null, "metadata": {"page_label": "188", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79de4572-9a0f-4c42-945a-52be174aaebb", "node_type": "4", "metadata": {"page_label": "188", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5c91227ab395c285105da541d9aa0e70981ede99cf8063f7b4dc8c3f9973d1d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d6d02be-865f-4be3-9c0b-a967fa96c027", "node_type": "1", "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d32298f32510ea765c8479cec644bb6c631d00b517a34794c9ae2cc3e25402d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b33f3e0-713c-4b81-9ba9-6221d2653a1c", "node_type": "1", "metadata": {}, "hash": "16679cab3af1bc7217e886dc483a45ddcb98a43e78bce0d9bfdb4339e2d6b10e", "class_name": "RelatedNodeInfo"}}, "hash": "d251f455a9570ec91fe28180ed7b29420ee42a14c7bb306dbc1b13f68cfb892d", "text": "188 \n \n>>> x=[34,56,75,56,43]  \n>>> x.append(28)     Agregar elem ento con valor 28 \n>>> x \n[34, 56, 75, 56, 43, 28]  \n \n>>> x.insert(2,62)     Insertar 62 en la posici\u00f3n  2 \n>>> x \n[34, 56, 62, 75, 56, 43, 28]  \n>>> n=x.count(56)  \n>>> n \n2 \n>>> x.remove(75)  \n>>> x \n[34, 56, 62, 56, 43, 28]  \n \n>>> k=x.index(56)  \n>>> k \n1 \n>>> x.reverse()  \n>>> x \n[28, 43, 56, 62, 56, 34]  \n \n>>> x.clear()     Elimina la lista  \n>>> x \n[]      Lista vac\u00eda. Son dos corchetes juntos  \n \n>>> x=[3,7,8,2,8,5,4,6]  \n>>> 9 in x     Determinar si un elemento est\u00e1 en una lista \nFalse \n>>> 8 in x    Si el elemento est\u00e1 en la lista el resultado es  True  \nTrue \n>>> x.index(8)     En este caso se puede determinar su posici\u00f3n en la lista \n2 \n>>> e=x.pop(6)    Entrega  el elemento en la posici\u00f3n 6 y lo elimina de la lista \n>>> e \n4 \n>>> x \n[3, 7, 8, 2, 8, 5, 6]  \n \nPara prevenir errores al usar algunas  funciones, se debe usar el operador   in \n \nEjemplo. Remover un elemento  si est\u00e1 en la lista \n >>> x=[3,7,8,2,8,5,4,6]  \n>>> if 9 in x: \n x.remove(9)  \n \n>>> x     La lista no es modificada y no se produjo un error  \n[3,7,8,2,8,5,4,6]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b33f3e0-713c-4b81-9ba9-6221d2653a1c": {"__data__": {"id_": "5b33f3e0-713c-4b81-9ba9-6221d2653a1c", "embedding": null, "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2acd36c1-147f-4735-a297-b5d53d8bebfd", "node_type": "4", "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b07013c321f95d29f0b9641147e99723e69c35b9580a1d59e3cc85b49ec5d2cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edf9786f-3a7f-46c9-9a14-2957f33b0594", "node_type": "1", "metadata": {"page_label": "188", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d251f455a9570ec91fe28180ed7b29420ee42a14c7bb306dbc1b13f68cfb892d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "414b3f97-23ea-4463-bcba-6a8b83ca79fe", "node_type": "1", "metadata": {}, "hash": "4fd94242e516f7163ea8b8e627e115cf26ae46bb2c3ad95e5576a3e512fb2f11", "class_name": "RelatedNodeInfo"}}, "hash": "16679cab3af1bc7217e886dc483a45ddcb98a43e78bce0d9bfdb4339e2d6b10e", "text": "189 \n \nSi no se hace esta validaci\u00f3n y se intenta eliminar un elemento que no est\u00e1 en la lista se \ngenera un error de ejecuci\u00f3n:  ValueError  \n \nOrdenamiento de listas: sort \n \n>>> x=[34,56,75,56,43]  \n>>> x.sort()  \n>>> x \n[34, 43, 56, 56, 75]  \n \n>>> x=['Qu\u00edmica','Algebra','F\u00edsica','Biolog\u00eda']  \n>>> x.sort()  \n>>> x \n['Algebra', 'Biolog\u00eda', 'F\u00edsica', 'Qu\u00edmica']  \n >>> x=[23,'Algebra','Biolog\u00eda',73,45] >>> x.sort()           No se pueden ordenar tipos diferentes   \nTypeError: unorderable types: str() < int()  \n >>> t = [[7, 3], [3, 6], [9, 8],[5,  4]]  Ordena el primer componente  \n>>> t.sort() \n>>> t \n[[3, 6], [5, 4], [7, 3], [9, 8]]  \n >>> a = [[7, 'Algebra'], [3, 'F\u00edsica'], [9, 'Qu\u00edmica']]  \n>>> a.sort()  \n>>> a \n[[3, 'F\u00edsica'], [7, 'Algebra'], [9, 'Qu\u00edmica']]  \n \nEl operador  +   es una alternativa a la funci\u00f3n append para concatenar l istas \n \n>>> x=[5,3,5,2]  \n>>> x=x+[9,3]      \n>>> x \n[5, 3, 5, 2, 9, 3]  \n >>> a=[27,'abc',4.5]  \n>>> b=[3.2,73,'rt',35]  \n>>> c=a+b     \n>>> c \n[27, 'abc', 4.5, 3.2, 73, 'rt', 35]  \n \nAlgunos  m\u00e9todos se aplican igualmente a listas con elementos de diferente tipo  \n >>> x=[23,5.27,'lunes',49]  \n >>> x.append('martes')  \n>>> x \n[23, 5.", "start_char_idx": 0, "end_char_idx": 1191, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "414b3f97-23ea-4463-bcba-6a8b83ca79fe": {"__data__": {"id_": "414b3f97-23ea-4463-bcba-6a8b83ca79fe", "embedding": null, "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2acd36c1-147f-4735-a297-b5d53d8bebfd", "node_type": "4", "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b07013c321f95d29f0b9641147e99723e69c35b9580a1d59e3cc85b49ec5d2cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b33f3e0-713c-4b81-9ba9-6221d2653a1c", "node_type": "1", "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "16679cab3af1bc7217e886dc483a45ddcb98a43e78bce0d9bfdb4339e2d6b10e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3327450c-5dd0-4930-bed3-70d62f6175e3", "node_type": "1", "metadata": {}, "hash": "59bcb482a2ac0409e4f5a6b6abaae866ec2faf3e2b9204b82341c5a7e15e4d40", "class_name": "RelatedNodeInfo"}}, "hash": "4fd94242e516f7163ea8b8e627e115cf26ae46bb2c3ad95e5576a3e512fb2f11", "text": "append('martes')  \n>>> x \n[23, 5.27, 'lunes', 49, 'martes']  \nPython Programaci\u00f3n", "start_char_idx": 1158, "end_char_idx": 1239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3327450c-5dd0-4930-bed3-70d62f6175e3": {"__data__": {"id_": "3327450c-5dd0-4930-bed3-70d62f6175e3", "embedding": null, "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae90fb7b-cbdb-4b27-a9c9-6349770aede6", "node_type": "4", "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "35491e10283e5cc752ae2e23d30585db70d5c6395b731f0876c606bafab75fa1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "414b3f97-23ea-4463-bcba-6a8b83ca79fe", "node_type": "1", "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4fd94242e516f7163ea8b8e627e115cf26ae46bb2c3ad95e5576a3e512fb2f11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0bff575-e1db-477d-854e-a2880dca6f00", "node_type": "1", "metadata": {}, "hash": "87fb561d15c03e71631c0e93b7778a1b95133c521e57a03a6b3cdf9987835940", "class_name": "RelatedNodeInfo"}}, "hash": "59bcb482a2ac0409e4f5a6b6abaae866ec2faf3e2b9204b82341c5a7e15e4d40", "text": "190 \n \n>>> x.remove('lunes')     \n>>> x \n[23, 5.27, 49, 'martes']  \n \n>>> x.index('martes')  \n3 \n >>> x=x+['jueves']  \n>>> x \n[23, 5.27, 49, 'martes', 'jueves']  \n \nReproducci\u00f3n de listas con *  \n \n>>> x=[2,5.1,'lunes']  \n>>> r=2*x      Reproduce la lista dos veces   \n>>> r \n[2, 5.1, 'lunes', 2, 5.1, 'lunes']  \n \nUn operador especial para eliminar elementos de una lista mediante el \u00edndice:  del \n \n>>> x=[3,4,9,7,2,9,6]  \n>>> del x[3]       Elimina el elemento en la celda 3 \n>>> x \n[3, 4, 9, 2, 9, 6]  \n>>> del x[-1]     Elimin a el \u00faltimo elemento  \n>>> x \n[3, 4, 9, 2, 9]  \n \n>>> x=[23, 5.27, 'lunes', 49, 'martes']   \n>>> del x[2]      Elimina el elemento en la celda 2  \n>>> x \n[23, 5.27, 49, 'martes']  \n \n>>> x=[3,4,9,7,2,9,6]  \n>>> del x[2:5]     Elimina celdas en un rango \n>>> x \n[3, 4, 9, 6]  \n \nUna funci\u00f3n para formar par ejas entre dos listas:  zip  \n \n>>> c=[101,231,725]  \n>>> m=['Algebra','F\u00edsica','Qu\u00edmica'] \n>>> p=zip(c,m)  \n>>> list(p)  \n[(101, 'Algebra'), (231, 'F\u00edsica'), (725,", "start_char_idx": 0, "end_char_idx": 1002, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0bff575-e1db-477d-854e-a2880dca6f00": {"__data__": {"id_": "b0bff575-e1db-477d-854e-a2880dca6f00", "embedding": null, "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae90fb7b-cbdb-4b27-a9c9-6349770aede6", "node_type": "4", "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "35491e10283e5cc752ae2e23d30585db70d5c6395b731f0876c606bafab75fa1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3327450c-5dd0-4930-bed3-70d62f6175e3", "node_type": "1", "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59bcb482a2ac0409e4f5a6b6abaae866ec2faf3e2b9204b82341c5a7e15e4d40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae1e8883-74b1-49af-a29b-592161315eeb", "node_type": "1", "metadata": {}, "hash": "f539d498565bf5041a71b75251ccd69128e9b428c2667c59e1125e3282e42d34", "class_name": "RelatedNodeInfo"}}, "hash": "87fb561d15c03e71631c0e93b7778a1b95133c521e57a03a6b3cdf9987835940", "text": "'Algebra'), (231, 'F\u00edsica'), (725, 'Qu\u00edmica')]  \n \nUna funci\u00f3n para construir listas por mapeo:  map \n \n>>> def cubo(x):return x**3   Funci\u00f3n para calcular un cubo   \n>>> c=map(cubo, range(5))  \nPython Programaci\u00f3n", "start_char_idx": 968, "end_char_idx": 1182, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae1e8883-74b1-49af-a29b-592161315eeb": {"__data__": {"id_": "ae1e8883-74b1-49af-a29b-592161315eeb", "embedding": null, "metadata": {"page_label": "191", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2af79f01-202c-4357-b77e-07594328f382", "node_type": "4", "metadata": {"page_label": "191", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "436565a8baf54f8100d3df41804443f722a65fc9a85922ea33536194de5aa40d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0bff575-e1db-477d-854e-a2880dca6f00", "node_type": "1", "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "87fb561d15c03e71631c0e93b7778a1b95133c521e57a03a6b3cdf9987835940", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "972d1ec1-5bbd-40b5-b8bf-48cc286e427d", "node_type": "1", "metadata": {}, "hash": "709a977a4cb80085994dbf3d5a47c9b815e1d3e6a11eb9d3aa5d21133fabc05c", "class_name": "RelatedNodeInfo"}}, "hash": "f539d498565bf5041a71b75251ccd69128e9b428c2667c59e1125e3282e42d34", "text": "191 \n \n>>> s=list(c)  \n>>> s \n[0, 1, 8, 27, 64]  \n \nUna funci\u00f3n para construir listas mediante un filtro:  filter  \n \n>>> def par(x):ret urn x%2==0   Funci\u00f3n para detectar n\u00famero par  \n>>> x=[3,6,7,8,10,5]  \n>>> t=filter(par,x)  \n>>> list(t) \n[6, 8, 10]  \n \nVersiones m\u00e1s simples equivalentes a  map  y  filter  se indican a continuaci\u00f3n \n \nConstrucci\u00f3n declarativa de listas num\u00e9ricas \n Las listas num\u00e9ric as pueden c rearse mediante declaraciones , interactivas o en programas  \n \nMediante declaraciones impl\u00edcitas  \n \n>>> u=range (5)     Con la funci\u00f3n range  \n>>> x=list(u)  \n>>> x \n[0, 1, 2, 3, 4]  \n>>> x=list( range(5))     Directamente  \n>>> x \n[0, 1, 2, 3, 4]  \n \n>>> c=[i for i in range(5)]    Crea una lista num\u00e9rica  \n>>> c \n[0, 1, 2, 3, 4]  \n \n>>> c=[[i] for i in range(5)]    Crea una lista de listas  \n>>> c \n[[0], [1], [2], [3], [4]]  \n \nDeclaraci\u00f3n  equivalente a la construcci\u00f3n de listas con  map \n \n>>> def cubo(x):return x**3 \n>>> c=[cubo(i) for i in range(5)]  \n \n>>> c \n[0, 1, 8, 27, 64]  \n \nDeclaraci\u00f3n equivalente a la construcci\u00f3n de listas con  filter  \n \n>>> x=[3,6,7,8,10,5]     Filtra elementos pares de una lista \n>>> p=[t for  t in x if t%2==0] \n>>> p \n[6, 8, 10]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "972d1ec1-5bbd-40b5-b8bf-48cc286e427d": {"__data__": {"id_": "972d1ec1-5bbd-40b5-b8bf-48cc286e427d", "embedding": null, "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ea0e739-4e3f-4b7d-a18d-7ce5a5b0d341", "node_type": "4", "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77de6ee51b9f72d3ef9134167499c9fb827092dcc02902e2a7def98383b4a40f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae1e8883-74b1-49af-a29b-592161315eeb", "node_type": "1", "metadata": {"page_label": "191", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f539d498565bf5041a71b75251ccd69128e9b428c2667c59e1125e3282e42d34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d234832f-b8cd-4a67-b3cb-32e7c72be6f4", "node_type": "1", "metadata": {}, "hash": "71023b37d6757bf1591fe70769bd2405149eabb2f1762743672accb36e13128f", "class_name": "RelatedNodeInfo"}}, "hash": "709a977a4cb80085994dbf3d5a47c9b815e1d3e6a11eb9d3aa5d21133fabc05c", "text": "192 \n \nCrear un a lista de 10 elementos con ceros  \n \n>>> x=[0 for  i in range(10)]  \n>>> x \n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  \n \nCrear un a lista  con 8 n\u00fameros aleatorios de una cifra \n \n>>> from random import*  \n>>> x=[randint(0,9) for i in range(8)] \n>>> x \n[0, 9, 8, 2, 6, 6, 1, 2]  \nCrear cuatro  listas, cada una con  cinco n\u00fameros aleatorios de una cifra \n \n>>> a=[[randint(0,9) for j in range(5)] for i in range(4)]  \n>>> a \n[[3, 4, 5, 2, 7], [2, 8, 4, 8, 1], [6, 1, 6, 6, 8], [0, 3, 0, 4, 1]]  \n \nMediante declaraciones expl\u00edcitas  \n \n>>> x=[]       definici\u00f3n de una lista vac\u00eda  \n>>> for i in range(5):    Crea una lista num\u00e9rica  \n x.append(i)  \n>>> x \n[0, 1, 2, 3, 4]  \n >>> x=[]  \n>>> for i in range(5):   Crea una lista de listas  con nos.", "start_char_idx": 0, "end_char_idx": 753, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d234832f-b8cd-4a67-b3cb-32e7c72be6f4": {"__data__": {"id_": "d234832f-b8cd-4a67-b3cb-32e7c72be6f4", "embedding": null, "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ea0e739-4e3f-4b7d-a18d-7ce5a5b0d341", "node_type": "4", "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77de6ee51b9f72d3ef9134167499c9fb827092dcc02902e2a7def98383b4a40f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "972d1ec1-5bbd-40b5-b8bf-48cc286e427d", "node_type": "1", "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "709a977a4cb80085994dbf3d5a47c9b815e1d3e6a11eb9d3aa5d21133fabc05c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19ca25ba-35e3-48fa-a38d-57c33eacf87a", "node_type": "1", "metadata": {}, "hash": "9479a09342f173eadc2bfd98dfc59dd2350bea82e6b2b31cf55794fe906731f7", "class_name": "RelatedNodeInfo"}}, "hash": "71023b37d6757bf1591fe70769bd2405149eabb2f1762743672accb36e13128f", "text": "naturales\n x.append([i])  \n>>> x \n[[0], [1], [2], [3], [4]]  \n \n>>> a=[]  \n>>> for i in range(5):   Crear una lista de listas vac\u00edas  \n a=a+[[]]  \n>>> a \n[[], [], [], [], []]     \n \nLlenar una lista con listas de 3 componentes conteniendo n\u00fameros aleatorios de una cifra  \n \n>>> from random import* \n>>> a=[]      Inicia  la lista \n>>> for i in range(4): \n f=[]     Inicia una fila  \n for j in range(3):  \n  f=f+[randint(0,9)]   Llena la fila  \n a=a+[f]    Agrega la fila a la lista del primer nivel  \n>>> a \n[[7, 2, 8], [5, 1, 0], [5, 8, 9], [0, 8, 3]]  \nPython Programaci\u00f3n", "start_char_idx": 754, "end_char_idx": 1329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19ca25ba-35e3-48fa-a38d-57c33eacf87a": {"__data__": {"id_": "19ca25ba-35e3-48fa-a38d-57c33eacf87a", "embedding": null, "metadata": {"page_label": "193", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cfc8cd4e-9865-4349-8ee8-85262b2b3493", "node_type": "4", "metadata": {"page_label": "193", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "919534ed912616e66adf00c86951b0d5e6a52d3823d43aa3ca29ab04e8494590", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d234832f-b8cd-4a67-b3cb-32e7c72be6f4", "node_type": "1", "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "71023b37d6757bf1591fe70769bd2405149eabb2f1762743672accb36e13128f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b39579a8-676f-4a44-9f42-d4a8fc22c828", "node_type": "1", "metadata": {}, "hash": "2305b72cf1fbb65275df31afff8900d87fb2d365534456080bc236dd512183c0", "class_name": "RelatedNodeInfo"}}, "hash": "9479a09342f173eadc2bfd98dfc59dd2350bea82e6b2b31cf55794fe906731f7", "text": "193 \n \nSe pueden crear listas pero sin especificar a\u00fan ni los valores ni su tipo  \n \n>>> x=[]      Se inici a como una lista vac\u00eda \n>>> for i in range(5): \n x=x+[None]  \n \n>>> x \n[None, None, None, None, None]  \n \nSe puede usar el operador   +  para agregar elementos, en lugar de append \n \n>>> x=[]       Se inicia como una lista vac\u00eda \n>>> for i in range(5):    Crea una lista num\u00e9rica  \n x=x+[i]     conteniendo enteros  \n>>> x \n[0, 1, 2, 3, 4]  \n \nUna lista de listas con varios componentes  \n \n>>> s=[] \n>>> for i in range(5):  \n      e=[i,3*i,i**2]  \n      s=s+[e]  \n>>> s \n[[0, 0, 0], [1, 3, 1], [2, 6, 4], [3, 9, 9], [4, 12, 16]]  \n \nEl operador   +  o la funci\u00f3n  append se pued en usarse para concatenar listas \n \n>>> a=[2,5,7,6]  \n>>> b=[9,8,4]  \n>>> c=a+b      Concatenaci\u00f3n de listas  \n>>> c \n[2, 5, 7, 6, 9, 8, 4]      \n \n>>> c=a+[b]        \n>>> c \n[2, 5, 7, 6, [9, 8, 4]]  \n \n \n>>> c=[a]+[b]       \n>>> c \n[[2, 5, 7, 6], [9, 8, 4]]  \n \n \nEnumeraci\u00f3n de listas:  enumerate  \n \nEntrega una lista indexada  \n >>> d=['lunes','martes','mi\u00e9rcoles','jueves','viernes']  \n>>> list(enumerate (d)) \n[(0, 'lunes'), (1, 'martes'), (2, 'mi\u00e9rcoles'), (3, 'jueves'), (4, 'viernes')]  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b39579a8-676f-4a44-9f42-d4a8fc22c828": {"__data__": {"id_": "b39579a8-676f-4a44-9f42-d4a8fc22c828", "embedding": null, "metadata": {"page_label": "194", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a63978ce-2ced-4ef3-bb25-8d63b9d59e85", "node_type": "4", "metadata": {"page_label": "194", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44490d763068bfbbedd012fe883b9c8e1b434a28ad78c321e8fa429828875a01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19ca25ba-35e3-48fa-a38d-57c33eacf87a", "node_type": "1", "metadata": {"page_label": "193", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9479a09342f173eadc2bfd98dfc59dd2350bea82e6b2b31cf55794fe906731f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bcc46ff-ed3e-4d14-8706-86add0f9a474", "node_type": "1", "metadata": {}, "hash": "60c08103179cfe878a79b50c58b3183e483a8c742efd5b71af42e72935535450", "class_name": "RelatedNodeInfo"}}, "hash": "2305b72cf1fbb65275df31afff8900d87fb2d365534456080bc236dd512183c0", "text": "194 \n \nEsta instrucci\u00f3n es \u00fatil  para iterar sobre una lista si se desea agregar  el \u00edndice : \n \n>>> d=['lunes','martes','mi\u00e9rcoles','jueves','viernes']  \n >>> for i,e in enumerate(d):  \n print(i,e)  \n0 lunes \n1 martes  \n2 mi\u00e9rcoles  \n3 jueves  \n4 viernes  \n \nEl uso de enumerate es equivalente a recorrer la lista con un \u00edndice  \n \n>>> for i in range(len(d)):  \n print(i,d[i])  \n \n0 lunes \n1 martes  \n2 mi\u00e9rcoles  \n3 jueves  \n4 viernes  \n \n \nNombres de listas vinculados  \n \nAl asignar el nombre de una lista a otro nombre, ambos se refieren a las mismas celdas , \nes decir comparten la misma direcci\u00f3n de memoria por lo que al modificar componentes, \nestos cambios afectan a ambas variables.  \n \n>>> x=[20,30,50]  \n>>> u=x    Los nombres  x , u  se refieren a las mismas celdas \n>>> x[1]=40  \n>>> u     La variable  u   contiene los mismos valores que  x  \n[20, 40, 50]  \n \nSi se desea que la lista u  tenga una copia de la lista x  con celdas propias, puede crear   \nceldas para  u   y asig nar los valores de  x ,  o usar la funci\u00f3n  copy( )   como en el ejemplo \nsiguiente . Tambi\u00e9n se puede usar la notaci\u00f3n especial con  dos puntos para obtener una \ncopia de la lista.  \n \n>>> x=[20,30,50]     \n>>> u=x.copy()    La variable  u   tiene una copia de  x   en otras  celdas \n>>> x[1]=40     (aplicable solamente a listas de un nivel)  \n>>> u \n[20, 30, 50]  \n>>> u=x[:]     Esta notaci\u00f3n especial act\u00faa igual que  u=x.copy()  \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bcc46ff-ed3e-4d14-8706-86add0f9a474": {"__data__": {"id_": "3bcc46ff-ed3e-4d14-8706-86add0f9a474", "embedding": null, "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e3703f3-a66e-406c-8ebe-9bea03626ea0", "node_type": "4", "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3d361b5bd9eca7d02b17379942fc3defb084e432a5a62d76e9b3a97e48382221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b39579a8-676f-4a44-9f42-d4a8fc22c828", "node_type": "1", "metadata": {"page_label": "194", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2305b72cf1fbb65275df31afff8900d87fb2d365534456080bc236dd512183c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "351e95c2-0f3e-4dfb-be04-306c533d030e", "node_type": "1", "metadata": {}, "hash": "3a7ff39f53f43db35e4705192648e2837ada27ffd6aecb7b138855499eb09157", "class_name": "RelatedNodeInfo"}}, "hash": "60c08103179cfe878a79b50c58b3183e483a8c742efd5b71af42e72935535450", "text": "195 \n \nSalida de listas formateada \n \nPara mostrar listas en pantalla se puede especificar la salida como se describe en el \nsiguiente ejemplo. Se muestra un vector sin formatear y el mismo vector con su salida \nformateada indicando la cantidad de decimales:  \n \n>>> x=[1/3,2/5,3/7,4/3]  \n \n>>> print(x) \n[0.3333333333333333, 0.4, 0.42857142857142855, 1.3333333333333333]  \n \n>>> print([float('%6.4f'  % x[i]) for i in range(len(x))]) \n[0.3333, 0.4, 0.4286, 1.3333]  \n  \nEvaluaci\u00f3n de expresiones l\u00f3gicas \n \nPython evalua las expresiones l\u00f3gicas en modo \u201cshort circuit\u201d . Est o significa que la \nexpresi\u00f3n l\u00f3gica se eval\u00faa \u00fanicamente hasta donde sea necesario y suficiente para \ndeterminar el valor l\u00f3gico resultante.  \n Ejemplo.  El siguiente programa producir\u00e1 un error de \u00edndice fuera de rango:  \n \nlista=[30,50,20,40]      #En las celdas: 0, 1, 2, 3  \nfor i in range(len(lista)):  \n    if lista[i]<50 and lista[i+1]>10:  #Necesita evaluar lista[4]  \n        print(lista[i])  \n \nIndexError: list index out of range  \n \nEjemplo.  Pero el sigui ente programa no produce el error de \u00edndice fuera de rango:  \n \nlista=[30,50,20,40]  \nfor i in range(len(lista)):  \n    if lista[i]<20 and lista[i+1]>10:  #No necesita evaluar lista[4]   \n        print(lista[i])  \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 1270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "351e95c2-0f3e-4dfb-be04-306c533d030e": {"__data__": {"id_": "351e95c2-0f3e-4dfb-be04-306c533d030e", "embedding": null, "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e3703f3-a66e-406c-8ebe-9bea03626ea0", "node_type": "4", "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3d361b5bd9eca7d02b17379942fc3defb084e432a5a62d76e9b3a97e48382221", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bcc46ff-ed3e-4d14-8706-86add0f9a474", "node_type": "1", "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "60c08103179cfe878a79b50c58b3183e483a8c742efd5b71af42e72935535450", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68c3c8c6-4ea3-45d5-99fc-40aaab314f6b", "node_type": "1", "metadata": {}, "hash": "4433c37de0ac0f7e5e50f023238259a1e727b37c645ccd8d52216c545c401963", "class_name": "RelatedNodeInfo"}}, "hash": "3a7ff39f53f43db35e4705192648e2837ada27ffd6aecb7b138855499eb09157", "text": "El siguiente programa tampoco produce error  de \u00edndice fuera de rango:  \n \nlista=[30,50,20,40]  \nfor i in range(len(lista)):  \n    if lista[i]<50 or lista[i+1]>10:   #No necesita evaluar lista[4]  \n        print(lista[i])  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1272, "end_char_idx": 1519, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68c3c8c6-4ea3-45d5-99fc-40aaab314f6b": {"__data__": {"id_": "68c3c8c6-4ea3-45d5-99fc-40aaab314f6b", "embedding": null, "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b610df1c-d621-4259-ae4e-a5f71651de7c", "node_type": "4", "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b0ba1f14630a67225d785b6791c59c5d49d9b6ef52552df4344d57b379444033", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "351e95c2-0f3e-4dfb-be04-306c533d030e", "node_type": "1", "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3a7ff39f53f43db35e4705192648e2837ada27ffd6aecb7b138855499eb09157", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "087a35b9-5c3e-4ef3-b50c-076537fecaab", "node_type": "1", "metadata": {}, "hash": "dc41949455e9eeb5d50ef94887161a7ec92b1df97d8ad293c62d438e0dbbe4d3", "class_name": "RelatedNodeInfo"}}, "hash": "4433c37de0ac0f7e5e50f023238259a1e727b37c645ccd8d52216c545c401963", "text": "196 \n \n7.1.1 Programaci\u00f3n de iteraciones con tipos de datos estructurados  \n \nLas iteraciones , repeticiones o ciclos son procedimientos  fundamentales para resolver \nproblemas en computaci\u00f3n, especialmente cuando se las usa para recorrer o iterar sobre \ncolecciones de datos.  \n \nEn esta secci\u00f3n se proponen algunas sugerencias para plantear mejor  el uso de \niteraciones con el objetivo de que la programaci\u00f3n sea m\u00e1s clara y eficiente.   En general, \nel usuario debe tratar de reducir el uso de variables y concentrarse en los objetos \nimportantes del problema que trata de resolver.  \n \nPara desarrollar la idea anter ior, supondremos que se tiene una variable cursos de tipo \nlista conteniendo los c\u00f3digos  de las materias que ofrece una instituci\u00f3n educativa. Cada \nelemento de esta lista debe ser procesado. Por simplicidad, simplemente se lo imprimir\u00e1.  \n \n \nLa manera cl\u00e1sica que usan algunos programadores para iterar o recorrer una estructura \nde datos iterable (listas, arreglos, cadenas, etc)  es definiendo un \u00edndice y control\u00e1ndolo en \nforma expl\u00edcita como se muestra a continuaci\u00f3n : \n \ncursos = [203,305,728]  \nn=len(cursos)  \ni=0 \nwhile i<n: \n    c=cursos[i]  \n    print(c)  \n    i=i+1  \n \nEl \u00edndice es una variable adicional que hay que atender pero lo que realmente interesa son \nlos componentes de la lista \n \n \nUna mejor manera de iterar sobre los elementos de la lista es dejar que la instrucci\u00f3n for \ncontrole el \u00edndice. Los valores para el \u00edndice son generados con la funci\u00f3n range : \ncursos = [203,305,728]  \nfor i in range(len(cursos)):  \n    c=cursos[i]  \n    print(c)  \n \nIgualmente se utiliza un \u00edndice, pero al menos ya no es neces ario controlarlo de forma \nexpl\u00edcita.", "start_char_idx": 0, "end_char_idx": 1700, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "087a35b9-5c3e-4ef3-b50c-076537fecaab": {"__data__": {"id_": "087a35b9-5c3e-4ef3-b50c-076537fecaab", "embedding": null, "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b610df1c-d621-4259-ae4e-a5f71651de7c", "node_type": "4", "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b0ba1f14630a67225d785b6791c59c5d49d9b6ef52552df4344d57b379444033", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68c3c8c6-4ea3-45d5-99fc-40aaab314f6b", "node_type": "1", "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4433c37de0ac0f7e5e50f023238259a1e727b37c645ccd8d52216c545c401963", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fab605a4-80b5-4d27-b008-aa3c8a8a63b5", "node_type": "1", "metadata": {}, "hash": "c1088f71f9ae249e721e5fbe8543b4a63cb7c29db31005abaf6dc0b27de9e6e8", "class_name": "RelatedNodeInfo"}}, "hash": "dc41949455e9eeb5d50ef94887161a7ec92b1df97d8ad293c62d438e0dbbe4d3", "text": "Existe una manera m\u00e1s clara para iterar sobre los elementos de una lista, aplicable \ntambi\u00e9n a otras estructuras de datos que ser\u00e1n revisadas en las siguientes secciones: arreglos, cadenas de caracteres, tuplas, conjuntos , etc.  Consiste en acc eder directamente \na los elementos, sin necesidad de l \u00edndice, como se indica a continuaci\u00f3n \nPython Programaci\u00f3n", "start_char_idx": 1707, "end_char_idx": 2066, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fab605a4-80b5-4d27-b008-aa3c8a8a63b5": {"__data__": {"id_": "fab605a4-80b5-4d27-b008-aa3c8a8a63b5", "embedding": null, "metadata": {"page_label": "197", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98e352b0-8871-4a5b-a12b-59ddf6d9681b", "node_type": "4", "metadata": {"page_label": "197", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9058f2430896fafe0fa793d8ce66d360d5a917f26d4807d69d85692d472e2171", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "087a35b9-5c3e-4ef3-b50c-076537fecaab", "node_type": "1", "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dc41949455e9eeb5d50ef94887161a7ec92b1df97d8ad293c62d438e0dbbe4d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a9be596-184b-4145-a896-806c9142f13e", "node_type": "1", "metadata": {}, "hash": "3580816e51df0cd22c51579139dc0e657fc6d5ccab35f1db922d470fe2f84f56", "class_name": "RelatedNodeInfo"}}, "hash": "c1088f71f9ae249e721e5fbe8543b4a63cb7c29db31005abaf6dc0b27de9e6e8", "text": "197 \n \ncursos = [203,305,728]  \nfor c in cursos: \n    print(c)  \n \n203 \n305 \n728 \n \nEsta repetici\u00f3n evita el uso de variables adicionales o \u00edndices y permite concentrar la \natenci\u00f3n en lo que realmente importa:   los componentes de la lista.  \n Los objetos sobre los cuales se puede iterar  se llaman  iterables, por ejemplo, una lista es \nun objeto iterable .  El proceso de recorrer la lista se llama iterar.  \n \nLa funci\u00f3n  range  es el iterador  el cual genera la secuencia de valores para iterar. La \ninstrucci\u00f3n  for  es el dispositivo para iterar.  \n \nEl m\u00e9todo de iterar por contenido, tambi\u00e9n es aplicable a listas de m\u00e1s niveles . Suponer \nque cada elemento de la lista de cursos tiene dos componentes:  c\u00f3digo y n\u00famero de \nestudiantes. Para listar o procesar los componentes se puede escribir  \n \ncursos=[[203,25],[305,38],[728,30]]  \nfor c,n in cursos: \n    print(c,n)  \n  \n203 25 \n305 38 \n728 30 \n \nPrecauci\u00f3n: En el caso de datos estructurados , recorrer por \u00edndice o por contenido no es  \nequivalente si la estructura de datos contiene elementos repetidos. Se muestra un ejemplo:  \n \nlista=[10,30,20,30,20]  \nfor i in range(len(lista)):      Recorrido por \u00edndice      \n    print(i,lista[i])  \n     \n0 10 \n1 30 \n2 20 \n3 30 \n4 20 \n \nlista=[10,30,20,30,20]  \nfor e in lista:       Recorrido por contenido  \n    i=lista.index(e)  \n    print(i,e)  \n \n0 10         La funci\u00f3n  index examina la  \n1 30         posici\u00f3n de la primera coincidencia  \n2 20          \n1 30 \n2 20         (index  es aplica ble a listas ) \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1543, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a9be596-184b-4145-a896-806c9142f13e": {"__data__": {"id_": "6a9be596-184b-4145-a896-806c9142f13e", "embedding": null, "metadata": {"page_label": "198", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4ae5df7-08c1-4b91-8aef-d0810b16b6e0", "node_type": "4", "metadata": {"page_label": "198", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e724036e7984785fc1c6cc10887b03c9df5b604e16d41f8682582eddc47b31ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fab605a4-80b5-4d27-b008-aa3c8a8a63b5", "node_type": "1", "metadata": {"page_label": "197", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1088f71f9ae249e721e5fbe8543b4a63cb7c29db31005abaf6dc0b27de9e6e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4be47621-3c46-4b2e-9d82-79201cba5e3a", "node_type": "1", "metadata": {}, "hash": "86cbf8c928c3647a3649c1d934d0d0e4e9dc59b6ab3a76732ac50c621e0efc19", "class_name": "RelatedNodeInfo"}}, "hash": "3580816e51df0cd22c51579139dc0e657fc6d5ccab35f1db922d470fe2f84f56", "text": "198 \n \n7.1.2 Tran smisi\u00f3n de par\u00e1metros de tipo estructurado  \n \nLos par\u00e1metros de tipo estructurado (listas, arreglos, cadenas de caracteres, etc.) son \ntransmitidos a las funciones  \u201cpor referencia\u201d . Esto significa que si la funci\u00f3n modifica e l \ncontenido de la variable de ent rada, este cambio modifica al contenido de la variable que \ningres\u00f3 a la funci\u00f3n. Para evitar este efecto que luce extra\u00f1o, en la funci\u00f3n debe crearse \nen forma expl\u00edcita una copia del par\u00e1metro de entrada.  \n \nEjemplo.  \n \ndef fun(t): \n    for i in range(len(t)):  \n        t[i]=t[i]+1           La funci\u00f3n modifica al par\u00e1metro de entrada  \n    return t            \n \n \nUso de la funci\u00f3n  \n \n \n>>> from fun import* \n>>> s=[3,5,6,8]  \n>>> r=fun(s)  \n>>> print(r)  \n[4, 6, 7, 9]  \n>>> print(s)  \n[4, 6, 7, 9]     La lista  s   tambi\u00e9n ha sido modificada \n \nPara evitar que se modifique el par\u00e1metro de entrada, dentro de la funci\u00f3n debe crearse \nuna copia de la variable.  \n \nEjemplo.  \n \ndef fun(t): \n    u=t.copy()    Se crea una copia del par\u00e1metro de entrada \n    for i in range(len(u )): \n        u [i]=u[i]+1   La funci\u00f3n modifica a la copia del par\u00e1metro  \n    return u \n \n \nUso de la funci\u00f3n  \n \n>>> from fun import* \n>>> s=[3,5,6,8]      \n>>> r=fun(s) \n>>> print(r ) \n[4, 6, 7, 9]  \n>>> print(s ) \n[3, 5, 6, 8 ]     La lista s   no fue modificada  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4be47621-3c46-4b2e-9d82-79201cba5e3a": {"__data__": {"id_": "4be47621-3c46-4b2e-9d82-79201cba5e3a", "embedding": null, "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dab5f6ea-e576-47ec-8ddd-3c273022c160", "node_type": "4", "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1964cbc58507970641f77572f0b57640f1f77e327f6b57ae8296b90bc18bb6ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a9be596-184b-4145-a896-806c9142f13e", "node_type": "1", "metadata": {"page_label": "198", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3580816e51df0cd22c51579139dc0e657fc6d5ccab35f1db922d470fe2f84f56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5afc08fa-cf06-4247-9baa-95880c2e9349", "node_type": "1", "metadata": {}, "hash": "563f8847f33240c5f3f9fcb225042c9663e3049fd2b4807cdcefd4a92e8e9eca", "class_name": "RelatedNodeInfo"}}, "hash": "86cbf8c928c3647a3649c1d934d0d0e4e9dc59b6ab3a76732ac50c621e0efc19", "text": "199 \n \n7.2 Arreglos  unidimensionales (v ectores)  \n \nLos arreglos son listas de una o m\u00e1s dimensiones cuyos elementos son del mismo tipo \n(usualmente num\u00e9rico) .  S u manejo se realiza principalmente con los operadores y \nfunciones de la librer\u00eda NumPy .  \n \nNumPy es una librer\u00eda de soporte para aplicacio nes en \u00e1lgebra lineal, estad\u00edstica y otras \n\u00e1reas de las matem\u00e1ticas e ingenier\u00eda.  En esta librer\u00eda, los objetos  fundamentales son los \narreglos (listas num\u00e9ricas). Existe una gran cantidad de funciones para manejo de arreglos. Su uso se describir\u00e1 mediante ejemplos . \n \nUn vector o arreglo de una dimensi\u00f3n es una lista con datos del mismo tipo (usualmente \nnum\u00e9rico) .  Una matriz o arreglo de dos dimensiones es una lista c uyos elementos son \nlistas que tienen la misma longitud y contienen elementos del mismo tipo (usualmente \nnum\u00e9rico).  Se pueden tambi\u00e9n definir y operar arreglos multidimensionales.  \n \nEn esta secci\u00f3n se revisa la notaci\u00f3n, \u00edndices, operadores y funciones para arreglos \nunidimensionales (vectores).  El manejo de aplicaciones con listas y arreglos de dos o m\u00e0s \ndimensiones se revisar \u00e1 en otra secci\u00f3n . El manejo de los \u00edndices admite formas \nespeciales y su utilizaci\u00f3n  se denomina \u201cslicing\u201d  \n \nPara definir  arreglos  se usa l a palabra especial  array( )  \n \n>>> from numpy import*    Cargar la librer\u00eda NumPy \n>>> x=array([30 ,40,90,70,80])   Declaraci\u00f3n de un arreglo  \n \nLos arreglos se almacenan en celdas numeradas desde cero, y sus componentes se \nmanejan mediante \u00edndices, como las listas comunes: S u representaci\u00f3n visual  es igual.", "start_char_idx": 0, "end_char_idx": 1588, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5afc08fa-cf06-4247-9baa-95880c2e9349": {"__data__": {"id_": "5afc08fa-cf06-4247-9baa-95880c2e9349", "embedding": null, "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dab5f6ea-e576-47ec-8ddd-3c273022c160", "node_type": "4", "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1964cbc58507970641f77572f0b57640f1f77e327f6b57ae8296b90bc18bb6ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4be47621-3c46-4b2e-9d82-79201cba5e3a", "node_type": "1", "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "86cbf8c928c3647a3649c1d934d0d0e4e9dc59b6ab3a76732ac50c621e0efc19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e560fca-46f5-47e6-b69c-311b289f55ac", "node_type": "1", "metadata": {}, "hash": "261887ab3d63f4e5fdc863f3684f76f3e8c181698fd4f22fd6a01d57c4eb2d6b", "class_name": "RelatedNodeInfo"}}, "hash": "563f8847f33240c5f3f9fcb225042c9663e3049fd2b4807cdcefd4a92e8e9eca", "text": "30 40 90 70 80 \n      0         1         2         3         4  \n \nEn el ejemplo anterior, l a librer\u00eda  Num Py  fu\u00e9 cargada con la instrucci\u00f3n \n \n>>> from numpy import* \n \nEsta declaraci\u00f3n permite usar las funciones de forma directa y simple como en el ejemplo.  \n \n>>> x=array([30 ,40,90,70,80]) \n Un inconveniente con esta notaci\u00f3n es que en algunos casos entra en conflicto con otras \nfunciones con el mismo nombre de la librer\u00eda est\u00e1ndar de Python o de otras librer\u00edas.   \n \nDebido a esto, se prefiere cargar las librer\u00edas asign \u00e1ndolas una identificaci\u00f3n propia, Esta \nidentificaci\u00f3n deber\u00e1 entonces asociarse al uso de los recursos de la librer\u00eda. En el caso de \nla librer\u00eda Num Py, la costumbre es referirse a ella con la siguiente declaraci\u00f3n:  \n >>> import numpy as np \n \n \nPython Programaci\u00f3n", "start_char_idx": 1593, "end_char_idx": 2397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e560fca-46f5-47e6-b69c-311b289f55ac": {"__data__": {"id_": "7e560fca-46f5-47e6-b69c-311b289f55ac", "embedding": null, "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62bb7310-e8e6-4632-9be2-70857f57a398", "node_type": "4", "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c36947ebfae9171e6e4d5042ab996d8b93e01857877ad19be09d382911dec618", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5afc08fa-cf06-4247-9baa-95880c2e9349", "node_type": "1", "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "563f8847f33240c5f3f9fcb225042c9663e3049fd2b4807cdcefd4a92e8e9eca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb75a462-9982-40c7-aed8-ce0e3861cb78", "node_type": "1", "metadata": {}, "hash": "27c8477d34fb6a01a36f5e2ce31000b092b9fabad45400b4f6647b2b01d1836e", "class_name": "RelatedNodeInfo"}}, "hash": "261887ab3d63f4e5fdc863f3684f76f3e8c181698fd4f22fd6a01d57c4eb2d6b", "text": "200 \n \nAhora, todas las definiciones y funciones deben escribirse con la identificaci\u00f3n  np.  \n \n>>> x=np.array([30 ,40,90,70,80]) \n En los siguientes ejemplos se supondr\u00e1 que la librer\u00eda Num Py ha sido cargada con esta \nidentificaci\u00f3 n propia.  \n \n \n\u00cdndices y \u201cslicing\u201d para arreglos unidimensionales  \n Para referirse a los componentes de un arreglo se requiere un \u00edndice entre corchetes. El \nuso de \u201cslicing\u201d facilita el man ejeo de por ciones del arreglo.  Similar a las listas.  \n \n>>> x=np.array([30 ,40,90,70,80]) \n >>> x[2]          Componente 2 (ubicado en la celda 2 ) \n90          (es el tercer componente o tercera celda)  \n \n>>> x[1:4]            Componentes desde 1  hasta el 3  (celdas 1 a 3)  \narray([40 , 90, 70])            (el rango no incluye el extremo final)  \n \n>>> print(x[1:4])    Para no visualizar el nombre del arreglo \n[40 90 70] \n \n>>> x[2:]            Componentes  2 hasta el final (celda 2  hasta el final)  \narray([90 , 70, 80])          \n >>> x[:4]           Componentes desde el primero hasta el 3  \narray([30 , 40, 90, 70])    (el rango no incluye el extremo final)  \n >>> x[0:5:2]     Todos l os componentes en celdas pares .", "start_char_idx": 0, "end_char_idx": 1162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb75a462-9982-40c7-aed8-ce0e3861cb78": {"__data__": {"id_": "eb75a462-9982-40c7-aed8-ce0e3861cb78", "embedding": null, "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62bb7310-e8e6-4632-9be2-70857f57a398", "node_type": "4", "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c36947ebfae9171e6e4d5042ab996d8b93e01857877ad19be09d382911dec618", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e560fca-46f5-47e6-b69c-311b289f55ac", "node_type": "1", "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "261887ab3d63f4e5fdc863f3684f76f3e8c181698fd4f22fd6a01d57c4eb2d6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80d564d7-7efb-411d-a5bd-16b2ded177e8", "node_type": "1", "metadata": {}, "hash": "95834f78b517230cabc839e9dc5856865cc6377e614e5f2d88a352d7a2cfcae8", "class_name": "RelatedNodeInfo"}}, "hash": "27c8477d34fb6a01a36f5e2ce31000b092b9fabad45400b4f6647b2b01d1836e", "text": "El tercer  \narray([30, 90, 80])   \u00edndice es el incremento de n\u00famero de celda  \n \n>>> x[-1]          Es el \u00faltimo componente (componente 4 ) \n80 \n \n>>> x[-2]          Pen\u00faltimo componen te (componente 3 ) \n70 \n \n>>> x[-3] \n90 \n \n>>> x[:- 1]          Todos los componentes menos el \u00faltimo \narray([30 , 40, 90, 70])        (el rango no incluye el extremo final)  \n >>> x[:- 3]          Componentes desde el primero hasta el  -4 \narray([30 , 40])         (el rango no incluye el extremo final)  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1163, "end_char_idx": 1678, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80d564d7-7efb-411d-a5bd-16b2ded177e8": {"__data__": {"id_": "80d564d7-7efb-411d-a5bd-16b2ded177e8", "embedding": null, "metadata": {"page_label": "201", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "054805d1-7565-47be-abcb-828b80865677", "node_type": "4", "metadata": {"page_label": "201", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9b3a6c9e6236768b17157ff433c752e0a592cb24bac412794ece3054f9d1cb1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb75a462-9982-40c7-aed8-ce0e3861cb78", "node_type": "1", "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "27c8477d34fb6a01a36f5e2ce31000b092b9fabad45400b4f6647b2b01d1836e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1443802d-703e-4488-9450-795a686ef6d6", "node_type": "1", "metadata": {}, "hash": "178c5b56aeeb37a297d1c1abcada2792a63e5e0fb6c687be628dab3138b33b9b", "class_name": "RelatedNodeInfo"}}, "hash": "95834f78b517230cabc839e9dc5856865cc6377e614e5f2d88a352d7a2cfcae8", "text": "201 \n \n>>> x[-2:]          Componentes desde el pen\u00faltimo hasta el final  \narray([70 , 80]) \n \n>>> x[::2]     Todos los  componentes en celdas pares  \narray([30 , 90, 80]) \n \n>>> x[1::2]     Todos los  compone ntes en celdas impares \narray([40 , 70]) \n \n>>> x=np.array([30 ,40,90,70,80]) \n>>> x[::- 1]    Esta notaci\u00f3n  especial  invierte el arreglo  \narray([80, 70, 90, 40, 30])  \n \n>>> x=np.array([30,40,90,70,80])  La notaci\u00f3n de \u00edndices es \u00fatil en asignaci\u00f3n \n>>> x[:3]=90  \n>>> x \narray([90, 90, 90, 70, 80])  \n \n>>> x[1:3]=20  \n>>> x \narray([90, 20, 20, 70, 80])  \n \nLos arreglos admiten el uso de los operadores de pertenencia  \n \n>>> x=np.array([3,4,9,7,2,9,6])  \n>>> 7 in x \nTrue \n>>> 8 in x \nFalse \n \n \nLos arreglos admiten el uso de algunas  funciones comunes de la librer\u00eda est\u00e1ndar  para \nlistas , pero es preferible usar las funciones  propias de NumPy como se describir\u00e1 \nposteriormente.  \n \n>>> x=np.array([3,4,9,7,2,9,6])  \n>>> max(x) \n9 \n>>> sum(x) \n40 \n>>> len(x) \n7 \n \nLos arreglos no admiten el uso de las funciones especiales de manejo de listas . Numpy \ntiene funciones propias  como se ver\u00e1 m\u00e1s adelante  \n \n>>> x=np.array([5,3,7,8])   Definici\u00f3n de un arreglo  \n>>> x.append(6)     No se puede usar append \nAttributeError: 'numpy.ndarray' object has no attribute 'append'  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1443802d-703e-4488-9450-795a686ef6d6": {"__data__": {"id_": "1443802d-703e-4488-9450-795a686ef6d6", "embedding": null, "metadata": {"page_label": "202", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63c34568-9f8b-4829-b7c5-94684a0d9b43", "node_type": "4", "metadata": {"page_label": "202", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d203a0989229080968e1240bfcf4ed8d0572125deb27cff85f49f1c3f55932a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80d564d7-7efb-411d-a5bd-16b2ded177e8", "node_type": "1", "metadata": {"page_label": "201", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "95834f78b517230cabc839e9dc5856865cc6377e614e5f2d88a352d7a2cfcae8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75f10b70-80ac-450c-a225-2b6d89198338", "node_type": "1", "metadata": {}, "hash": "d8df7dd9173313263c3b807f1ede0b09ab8fc925457161d66fbbba8370059bab", "class_name": "RelatedNodeInfo"}}, "hash": "178c5b56aeeb37a297d1c1abcada2792a63e5e0fb6c687be628dab3138b33b9b", "text": "202 \n \n>>> del x[2]     No se pueden usar del  \nValueError: cannot delete array elements  \n \n>>> x.index(7)     No se pueden usar index  \nAttributeError: 'numpy.ndarray' object has no attribute 'index'  \n \n>>> x.remove(7)     No se pueden usar remove  \n \nAttributeError: 'numpy.ndarray' object has no attribute 'remove'  \n \n \nPara agregar o eliminar componentes de un ar reglo se lo puede convertir a lista, realizar la \noperaci\u00f3n, y convertirlo nuevamente a arreglo. Una mejor opci\u00f3n es usar funciones \nespeciales de Numpy  como se ver\u00e1n  m\u00e1s adelante.  \n \n>>> x=np.array([5,3,7,8])   Definici\u00f3n de un arreglo  \n>>> x=list(x)     Convert ir a lista \n>>> x.append(6)     Agregar componente a la lista \n>>> x=np.array(x)     Convertir a arreglo \n \n \nComparaci \u00f3n de operaciones con arreglos  y con listas \n Los operadores act\u00faan de manera diferente con arreglos y con listas. Se debe tener \nalguna precauci\u00f3 n en su uso.  \n \nOperaciones con arreglos \n \n>>> a=np.array([3,5])        Definici\u00f3n de un arreglo \n>>> a \narray([3, 5])  \n>>> a=a+4          El operador + suma el valor a cada elemento \n>>> a \narray([7, 9])  \n \n>>> a=np.array([3,5])  \n>>> a=a+[4]          Igual  resultado. E l valor puede estar en [ ] o ( )  \n>>> a \narray([7, 9])  \n \n>>> a=np.array([3,5])  \n>>> a=a+[4,6]         Suma en forma correspondiente  \n>>> a \narray([ 7, 11])     \n>>> print(a)          Omite la palabra array en la salida    \n[3 5] \n \n>>> a=np.array([3,5])  \n>>> a \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75f10b70-80ac-450c-a225-2b6d89198338": {"__data__": {"id_": "75f10b70-80ac-450c-a225-2b6d89198338", "embedding": null, "metadata": {"page_label": "203", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "429b62e8-53b3-43f3-bb3e-fd2811fb84bd", "node_type": "4", "metadata": {"page_label": "203", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "df141accf41c9ceb117a681da0edf9d0ce890c0d326c4327e418995d614945fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1443802d-703e-4488-9450-795a686ef6d6", "node_type": "1", "metadata": {"page_label": "202", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "178c5b56aeeb37a297d1c1abcada2792a63e5e0fb6c687be628dab3138b33b9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfce92e8-faa7-4f04-bede-cda7b2b923b4", "node_type": "1", "metadata": {}, "hash": "0a8654c1ed1bd10f6143d07f416fb3626e18a512775ea7d337eb98a928007f73", "class_name": "RelatedNodeInfo"}}, "hash": "d8df7dd9173313263c3b807f1ede0b09ab8fc925457161d66fbbba8370059bab", "text": "203 \n \narray([3, 5]) \n>>> 2*a     El operador *  se aplica a cada elemento \narray([ 6, 10])  \n \n Operaciones con listas \n \n>>> b=[3,5]      Definici\u00f3n de una lista \n>>> b=b+[4]      El  operador + realiza concatenaci\u00f3n  \n>>> b \n[3, 5, 4]  \n>>> b=b+4      Error de concatenaci\u00f3n . Debe usar [ ]  \nTypeError  \n \n>>> b=[3,5]  \n>>> b=b+[4,6]     El  operador +  realiza concatenaci\u00f3n  \n>>> b \n[3, 5, 4, 6]  \n \n>>> b=[3,5]  \n>>> b=2*b      El  operador  * duplica la lista  \n>>> b \n[3, 5, 3, 5]  \n  \nDefinici\u00f3n de arreglos mediante declaracion es impl\u00edcitas  \n \n>>> x=np.array(ran ge(5)) \n>>> x \narray([0, 1, 2, 3, 4])  \n \n>>> x=np.array([i for i in range(6)]) \n>>> x \narray([0, 1, 2, 3, 4, 5])  \n >>> x=np.array([t for t in x if t%2==0])      Se incluyen n\u00fameros pares  \n>>> x \narray([0, 2, 4])  \n \n>>> y=x**2+1      Se puede operar con el arreglo \n>>> y \narray([17,  5, 37])  \n \n>>> u=2*np.cos(x)     Numpy incluye las funciones matem\u00e1ticas  \n>>> u \narray([ 2. , -0.83229367, -1.30728724])  \n \n>>> x=np.array([3,5,7,8])  \n>>> t=np.log(x)     Note el uso de la identificaci\u00f3n  .np \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1099, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfce92e8-faa7-4f04-bede-cda7b2b923b4": {"__data__": {"id_": "dfce92e8-faa7-4f04-bede-cda7b2b923b4", "embedding": null, "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22945e50-65ff-4ab4-a5d2-5f18d390fe9d", "node_type": "4", "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9efa20f113a5a3ee2521cba7c9f0effb046594c2db204563928053ea7596992e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75f10b70-80ac-450c-a225-2b6d89198338", "node_type": "1", "metadata": {"page_label": "203", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8df7dd9173313263c3b807f1ede0b09ab8fc925457161d66fbbba8370059bab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17242412-8b6e-4519-bfcd-e3af8fb6248b", "node_type": "1", "metadata": {}, "hash": "ae525bc6e78544b37c39f50097cf3b5b7a35fada52d551b103b52b0c376a0e76", "class_name": "RelatedNodeInfo"}}, "hash": "0a8654c1ed1bd10f6143d07f416fb3626e18a512775ea7d337eb98a928007f73", "text": "204 \n \n>>> t \narray([ 1.09861229,  1.60943791,  1.94591015,  2.07944154])  \n \nConstrucci\u00f3n de un arreglo de n \u00fameros aleatorios  \n >>> from random import*  \n>>> c=np.array([randint(0,9) for i in range(5)])  \n>>> c \narray([9, 2, 6, 3, 5])  \n  \nLa librer\u00eda NumPy  tambi\u00e9n tiene un m\u00f3dulo con el nombre random  con algunas fun ciones \npara generar n\u00fameros aleatorios .  \n \n>>> np.random.rand()  \n0.5827165211251494  \n \n>>> np.random.randint(0,9)       l  \n3 \n \nNota. La funci\u00f3n  randint  de NumPy no incluye al valor final del rango  \n \n \nFunciones especiales de Numpy para declarar rangos de arreglos  \n  \n>>> x=np.arange(5)      La funci\u00f3n rango de Numpy  \n>>> x \narray([0, 1, 2, 3, 4])  \n \n>>> x=np.arange(1,10,2)     Se puede indicar el inicio, final  \n>>> x       e incremento  \narray([1, 3, 5, 7, 9])  \n >>> x=np.arange(1,2,0.2)     Admite valores con decimales  \n>>> x \narray([ 1. ,  1.2,  1.4,  1.6,  1.8]) \n \n>>> 2*x+1       Se puede operar con el arreglo \narray([ 3. ,  3.4,  3.8,  4.2,  4.6]) \n \n>>> x=np.linspace(10,20,5)    Genera 5 n\u00fameros equiespaciados  \n>>> x       entre 10 y 20  \narray([ 10. ,  12.5,  15. ,  17.5,  20. ])", "start_char_idx": 0, "end_char_idx": 1138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17242412-8b6e-4519-bfcd-e3af8fb6248b": {"__data__": {"id_": "17242412-8b6e-4519-bfcd-e3af8fb6248b", "embedding": null, "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22945e50-65ff-4ab4-a5d2-5f18d390fe9d", "node_type": "4", "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9efa20f113a5a3ee2521cba7c9f0effb046594c2db204563928053ea7596992e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfce92e8-faa7-4f04-bede-cda7b2b923b4", "node_type": "1", "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0a8654c1ed1bd10f6143d07f416fb3626e18a512775ea7d337eb98a928007f73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fa06638-286a-4c40-b305-67125034c341", "node_type": "1", "metadata": {}, "hash": "7ababcecdf0262effb14e3a727b7979d015d5925f39a813f2c4078b694cb59b0", "class_name": "RelatedNodeInfo"}}, "hash": "ae525bc6e78544b37c39f50097cf3b5b7a35fada52d551b103b52b0c376a0e76", "text": ">>> x=np.linspace(0.1,0.3,6)    Genera 6 n\u00fameros equiespaciados  \n>>> x       entre 0.1 y 0.3  \narray([ 0.1 ,  0.14,  0.18,  0.22,  0.26,  0.3 ])  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1143, "end_char_idx": 1314, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fa06638-286a-4c40-b305-67125034c341": {"__data__": {"id_": "4fa06638-286a-4c40-b305-67125034c341", "embedding": null, "metadata": {"page_label": "205", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01ffeb69-8745-40ab-aed2-7145a918765c", "node_type": "4", "metadata": {"page_label": "205", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8aa1aace45e583b06eb387fe2ee7972e57baa7ca833314028667fff073a68519", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17242412-8b6e-4519-bfcd-e3af8fb6248b", "node_type": "1", "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae525bc6e78544b37c39f50097cf3b5b7a35fada52d551b103b52b0c376a0e76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10b033e3-2f3f-4154-97c0-f4f9b3c63a9c", "node_type": "1", "metadata": {}, "hash": "a7a1bb08e72a2da6d1cc0d29af612fad15b94ed16238a2139d03556c86eb74ed", "class_name": "RelatedNodeInfo"}}, "hash": "7ababcecdf0262effb14e3a727b7979d015d5925f39a813f2c4078b694cb59b0", "text": "205 \n \nUna funci\u00f3n para poner l\u00edmites a los valores de un arreglo: clip  \n \n>>> a=np.array([2,9,30,10,5,7,8,9,3,20,8,4])  \n \n>>> b=np.clip(a,4,9)      Los valores fuera del rango son recortados  \n>>> b \narray([4, 9, 9, 9, 5, 7, 8, 9, 4, 9, 8, 4])  \n \n \nAlgunas funciones matem\u00e1ticas de NumPy para arreglos  \n \n>>> x=np.array([3,4,9,7,2,9,6])   Declaraci\u00f3n de un arreglo (vector)  \n>>> np.prod(x)      Producto de los componentes  \n81648 \n \n>>> np.argmax(x)      \u00cdndice del mayor valor  \n2 \n >>> np.argmin(x)      \u00cdndice del menor valor  \n4 \n \n>>> np.mean(x)      Media aritm\u00e9tica  \n5.7142857142857144  \n >>> np.average(x)      Media aritm\u00e9tica  \n5.7142857142857144  \n >>> np.average(x,weights=[1,2,1,1,3,1,2])  Media aritm\u00e9tica ponderada  \n4.9090909090909092  \n >>> np.std(x)      Desviaci\u00f3n est\u00e1ndar  \n2.6029810226126568  \n \n>>> np.median(x)      Mediana \n6.0 \n \n>>> np.sum(x)      Suma de componentes  \n40 \n \n>>> np.cumsum(x)     Suma acumulada  (el resultado es un arreglo)  \narray([ 3,  7, 16, 23, 25, 34, 40], dtype=int32)  \n \n>>> s=np.cumsum(x)      \n>>> print(s)       Para visualizar mejor el resultado  \n[ 3  7 16 23 25 34 40]  \n >>> x=np.sort(x)      Ordenamiento del arreglo \n>>> print(x) \n[2 3 4 6 7 9 9]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1238, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10b033e3-2f3f-4154-97c0-f4f9b3c63a9c": {"__data__": {"id_": "10b033e3-2f3f-4154-97c0-f4f9b3c63a9c", "embedding": null, "metadata": {"page_label": "206", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9e24ebb-33af-4eb0-8630-f9b3c6113f8d", "node_type": "4", "metadata": {"page_label": "206", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "85c8837a05552b8b924def46fb0e1e2216aeabc650abf632496e6995fa16ab0f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fa06638-286a-4c40-b305-67125034c341", "node_type": "1", "metadata": {"page_label": "205", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7ababcecdf0262effb14e3a727b7979d015d5925f39a813f2c4078b694cb59b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3722b8c6-b4fa-48e7-8e52-375cef16c6b6", "node_type": "1", "metadata": {}, "hash": "e00b1c8cfa56e3ff4daabc4f6df9308292a5fadb7e74bbca66cda5c7a79efa60", "class_name": "RelatedNodeInfo"}}, "hash": "a7a1bb08e72a2da6d1cc0d29af612fad15b94ed16238a2139d03556c86eb74ed", "text": "206 \n \n>>> x=np.array([3,4,9,7,2,9,6])  \n \n>>> np.diff(x)     Diferencias finitas (restas sucesivas)  \narray([ 1,  5, - 2, -5,  7, - 3]) \n \n>>> np.diff(diff(x))  \narray([  4,  - 7,  -3,  12, - 10]) \n >>> np.diff(diff(diff(x)))  \narray([- 11,   4,  15, - 22]) \n \n \nFormas especiales de selecci \u00f3n de elementos de los arreglos  \n \nLos arreglos admiten formas especiales para selecionar los componentes . Estas formas \nespeciales no est\u00e1n  disponibles para manejo de las  listas. Estos dispositivos permiten \nconstruir expresiones compactas para el manejo de porciones de los arreglos.  \n \n>>> a=np.array([10,14,25,50])  \n \n>>> e=a>20      Expresi\u00f3n l\u00f3gica para seleccionar elementos \n>>> print(e)      (elementos con valor mayor a 20)  \n[False False  True  True]   Los resultados son valores l\u00f3gicos \n \n>>> np.sum(e)     Los valor es l\u00f3gicos se pueden sumar  \n2 \n>>> print(a[e])     Los valores l\u00f3gicos act\u00faan como \u00edndices  \n[25 50] \n \n>>> np.sum(a[e])     Sumar los elementos con valor mayor a 20 \n75 \n \n>>> np.sum(a[a>20])    Forma abreviada compacta pero legible  \n75 \n \n \nUso  de la funci\u00f3n extract  para seleccionar elementos de un arreglo \n \n>>> a=np.array([10,14,25,50])  \n \n>>> u=np.extract(a>20,a)  \n>>> u \narray([25, 50])  \n \n>>> s=np.sum(np.extract(a>20,a))  \n>>> print(s)  \n75 \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3722b8c6-b4fa-48e7-8e52-375cef16c6b6": {"__data__": {"id_": "3722b8c6-b4fa-48e7-8e52-375cef16c6b6", "embedding": null, "metadata": {"page_label": "207", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed35f918-e951-4f10-80c2-487dd199812f", "node_type": "4", "metadata": {"page_label": "207", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7ee62fb580cbca255b7cca2f59bf7431a786ebf2654b0a06f555ad20286e555a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10b033e3-2f3f-4154-97c0-f4f9b3c63a9c", "node_type": "1", "metadata": {"page_label": "206", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a7a1bb08e72a2da6d1cc0d29af612fad15b94ed16238a2139d03556c86eb74ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "466ac213-a696-40e5-85da-f7ca6cef08cd", "node_type": "1", "metadata": {}, "hash": "278b39f3d966e8c3e47264b5da7f925f993c403b5d90bbdddcb1788c276ad839", "class_name": "RelatedNodeInfo"}}, "hash": "e00b1c8cfa56e3ff4daabc4f6df9308292a5fadb7e74bbca66cda5c7a79efa60", "text": "207 \n \nSe pueden usar directamente \u00edndices para seleccionar elementos  \n \n>>> e=[0,2,1,1]      \n>>> print(a[e])  \n[10 25 14 14]  \n \n>>> print(a[ [0,2,1,1]])    Equivalente  \n[10 25 14 14]  \n \n>>> np.sum(a[e])  \n63 \n \n \nUn arreglo puede usarse para seleccionar elementos de otro arreglo  \n \n>>> a=np.array([3,5,7,4,8])  \n>>> b=np.array([2,5,4,7,9])  \n \n>>> np.sum(a[b>4])  \n17 \n \n>>> list(a[b==a])  \n[5] \n \n>>> np.average(a[b%2==0])  \n5.0 \n \n>>> c=np.array(['Si','Si','No','No','Si'])  \n \n>>> np.sum(b[c=='Si'])  \n16 \n \n \nFunciones para seleccionar elementos con los cuantificadores l\u00f3gicos \n \n \n>>> x=np.array([4,3,6,7,3])  \n \n>>> np.any(x>5)      El resultado es verdadero si al menos uno cumple la condici\u00f3n \nTrue \n >>> np.all(x>5)          El resultado es verdadero si todos cumplen la condici\u00f3n \nFalse \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 830, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "466ac213-a696-40e5-85da-f7ca6cef08cd": {"__data__": {"id_": "466ac213-a696-40e5-85da-f7ca6cef08cd", "embedding": null, "metadata": {"page_label": "208", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c3808861-e9a4-4c2d-a47e-0b988cb8fb8a", "node_type": "4", "metadata": {"page_label": "208", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9d9b83b7e086193b7424c51f78b77d0d974c1bb4b7ec01596cfa6501395f0eaa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3722b8c6-b4fa-48e7-8e52-375cef16c6b6", "node_type": "1", "metadata": {"page_label": "207", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e00b1c8cfa56e3ff4daabc4f6df9308292a5fadb7e74bbca66cda5c7a79efa60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3735c379-c49f-40f5-83b1-7ba7c246c269", "node_type": "1", "metadata": {}, "hash": "3c9bff22a5b5c2f991ce8f0f3cce34a92d1ae87532f413d5f38e7235f24d3bf3", "class_name": "RelatedNodeInfo"}}, "hash": "278b39f3d966e8c3e47264b5da7f925f993c403b5d90bbdddcb1788c276ad839", "text": "208 \n \nLa funci\u00f3n especial  where de NumPy  para seleccionar elementos de arreglos \n \n>>> x=np.array([23,45,38,27,62])  \n \n>>> e=np.where(x>30)    El resultado es un arreglo de \u00ecndices  \n>>> print(e)  \n(array([1, 2, 4], dtype=int32),)  \n \n>>> r=x[e]      Elementos seleccionados  \n>>> print(r)  \n[45 38 62]  \n \n>>> np.sum(r)     Sumar los elementos con valor mayor a 30 \n145 \n >>> np.sum(x[ np.where(x>30)])   Forma abreviada compacta pero legible  \n145 \n \n \n>>> np.sum(x[ np.where(x%2==0)])  Sumar los elementos con valor par  \n100 \n \n>>> print(x[ np.where(x>40)])   Mostrar los elementos con valor mayor a 40 \n[45 62] \n \n \n \nLa funci\u00f3n where es un dispositivo muy \u00fatil para s ustituir valores de arreglos  usando la \nsintaxis :  where(condi ci\u00f3n, x, y) .   \n \nLos valores que cumplen la condici\u00f3n son sustituidos por  el valor de x. Los otros son \nsustituidos por  el valor de y \n \n>>> a=np.array([3,5,7,4,8])     \n \n>>> e=np.where(a>4,0,9)    Cada valor de  a   que es mayor que 4 se  \n>>> e      sustituye por 0 , los otros por  9 \narray([9, 0, 0, 9, 0])    El resultado es un arreglo \n \n>>> s=np.where(a%2==0,'Si','No')  Cada valor de  a   que es n\u00famero par se  \n>>> print(s)      sustituye por \u2018Si\u2019, los otros por  \u2018No\u2019 \n['No' 'No' 'No' 'Si' 'Si']  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3735c379-c49f-40f5-83b1-7ba7c246c269": {"__data__": {"id_": "3735c379-c49f-40f5-83b1-7ba7c246c269", "embedding": null, "metadata": {"page_label": "209", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02dbfccb-f987-4023-8bc6-54b85e13748b", "node_type": "4", "metadata": {"page_label": "209", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b775ed611636807a9ab883678b53b2b48f049deed074e21dd187f12550bb033a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "466ac213-a696-40e5-85da-f7ca6cef08cd", "node_type": "1", "metadata": {"page_label": "208", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "278b39f3d966e8c3e47264b5da7f925f993c403b5d90bbdddcb1788c276ad839", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d035b07a-039a-4d05-8fc4-a0918e3e749e", "node_type": "1", "metadata": {}, "hash": "eee272c77d9e79eb5d23998e1d1530cdc23b4fcf932edd30522a8524cc8f3497", "class_name": "RelatedNodeInfo"}}, "hash": "3c9bff22a5b5c2f991ce8f0f3cce34a92d1ae87532f413d5f38e7235f24d3bf3", "text": "209 \n \nEl uso de la librer\u00eda NumPy admite una notaci\u00f3n reducida,  propia de la notaci\u00f3n orientada \na objetos que se revisar\u00e1 en un cap\u00edtulo posterior.  \n \n>>> x=np.array([3,4,9,7,2,9,6])  \n \n>>> np.sum( x)     Notaci\u00f3n com\u00fan  \n40 \n \n>>> x.sum()      Notaci\u00f3n reducida  \n40 \n \n>>> x=np.array([23,45,38,27,62])  \n \n>>> np.sum(x[np.where(x>40)])  \n107  \n>>> x[np.where(x>40)].sum()    Notaci\u00f3n reducida  \n107 \n \n>>> p=np.argmax(x)  \n>>> p \n4 \n \n>>> p=x.argmax()      Notaci\u00f3n reducida  \n>>> p \n4  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d035b07a-039a-4d05-8fc4-a0918e3e749e": {"__data__": {"id_": "d035b07a-039a-4d05-8fc4-a0918e3e749e", "embedding": null, "metadata": {"page_label": "210", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e8b53ff-c46b-49b7-b973-8d2ffbf353c5", "node_type": "4", "metadata": {"page_label": "210", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "22436370198dd58ac79b29d0c1642aa1a16e7251c08e6b82418be147f6182b40", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3735c379-c49f-40f5-83b1-7ba7c246c269", "node_type": "1", "metadata": {"page_label": "209", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3c9bff22a5b5c2f991ce8f0f3cce34a92d1ae87532f413d5f38e7235f24d3bf3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f46be61b-c4ad-4ea0-a997-dea51688aaa1", "node_type": "1", "metadata": {}, "hash": "250ff1a20c9665421acfed870f888684ebf128cf3f7e2f53d16f60624e3c84bb", "class_name": "RelatedNodeInfo"}}, "hash": "eee272c77d9e79eb5d23998e1d1530cdc23b4fcf932edd30522a8524cc8f3497", "text": "210 \n \nFunciones con operaciones  \u201ctipo conjunto\u201d con arreglos  \n \n>>> a=np.array([2,4,6])     Los operandos pueden ser listas \n>>> b=np.array([4,5,2,7,5 ]) \n \n>>> np.union1d(a,b)     Uni\u00f3n \narray([2, 4, 5, 6, 7])  \n \n>>> np.intersect1d(a,b)     Intersecci\u00f3n \narray([2, 4])  \n \n>>> c=np.array([2,5,3,4,2,7,5])   Eliminar elementos repetidos  \n>>> np.unique(c ) \narray([2, 3, 4, 5, 7])  \n \n \n \nFunciones de NumPy para modificar la estructura de arreglos  \n \nEstas funciones permiten el manejo din\u00e1mico de los arreglos unidimensionales , similar a \nlas listas.  \n \n>>> x=np.array([5,3,7,8])   Definici\u00f3n de un arreglo  \n>>> x \narray([5, 3, 7, 8])  \n \n>>> x=np.concatenate([x,[6]])   Concatenar arreglos \n>>> x \narray([5, 3, 7, 8, 6])  \n \n>>> x=np.concatenate([x,[9,4]])  \n>>> x \narray([5, 3, 7, 8, 6, 9, 4])  \n \n>>> x=np.delete(x,2)    Eliminar elementos de arreglos de una  \n>>> x      posici\u00f3n especificada \narray([5, 3, 8, 6, 9, 4])  \n \n>>> x=np.insert(x,1,[7])    Insertar arreglos en una posici\u00f3n dada  \n>>> x \narray([5, 7, 3, 8, 6, 9, 4])  \n \n>>> x=np.insert(x,4,[2,0])  \n>>> x \narray([5, 7, 3, 8, 2, 0, 6, 9, 4])  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f46be61b-c4ad-4ea0-a997-dea51688aaa1": {"__data__": {"id_": "f46be61b-c4ad-4ea0-a997-dea51688aaa1", "embedding": null, "metadata": {"page_label": "211", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0532feb-46a9-4966-bd11-8f553287d210", "node_type": "4", "metadata": {"page_label": "211", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f3cc194f1ae125373df3198ca298f7b643b2aca4e2dbc6c1d2b97616089ba2aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d035b07a-039a-4d05-8fc4-a0918e3e749e", "node_type": "1", "metadata": {"page_label": "210", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eee272c77d9e79eb5d23998e1d1530cdc23b4fcf932edd30522a8524cc8f3497", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "00cbf6cb-dabc-4bf9-b2b8-23b32416f82b", "node_type": "1", "metadata": {}, "hash": "cedb5d87d76f2b35a6de34f2b2ac4f7423114158d67a92691d0db31096877333", "class_name": "RelatedNodeInfo"}}, "hash": "250ff1a20c9665421acfed870f888684ebf128cf3f7e2f53d16f60624e3c84bb", "text": "211 \n \n \n>>> a=np.array([10,20,30])    Concatenar arreglos \n>>> b=np.array([50,70])  \n \n>>> c=np.concatenate([a,b])  \n>>> c  \narray([10, 20, 30, 50, 70])  \n \n \n>>> t=np.array([40,80])     Agregar un arreglo al final de otro \n>>> c=np.append(c,t)  \n>>> c \narray([10, 20, 30, 50, 70, 40, 80])  \n \n \nUna funci\u00f3n para rodar (girar) un arreglo sobre si mismo: roll  \n \n>>> x=[10,20,30,40,50,60,70]  \n>>> np.roll(x,2)        Puede elegirse la cantidad de posiciones a rotar  \narray([60, 70, 10, 20, 30, 40, 50])  \n \n \nFunci\u00f3n para replicar arreglos, similar al uso del asterisco en listas: tile  \n \n>>> x=np.array([2,4,6])  \n>>> u=np.tile(x,2)  \n>>> u \narray([2, 4, 6, 2, 4, 6])  \n>>> x=[2,4,6]  \n>>> x*2 \n[2, 4, 6, 2, 4, 6]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 740, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "00cbf6cb-dabc-4bf9-b2b8-23b32416f82b": {"__data__": {"id_": "00cbf6cb-dabc-4bf9-b2b8-23b32416f82b", "embedding": null, "metadata": {"page_label": "212", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03d59791-d271-44e7-97b8-8f5a3c8eb884", "node_type": "4", "metadata": {"page_label": "212", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2bc1fea2158cb3f3fc689911b3980882681f886524144ce7dafbad2221c238b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f46be61b-c4ad-4ea0-a997-dea51688aaa1", "node_type": "1", "metadata": {"page_label": "211", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "250ff1a20c9665421acfed870f888684ebf128cf3f7e2f53d16f60624e3c84bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c04ef9ff-7a98-452c-a2ae-595f428e2a28", "node_type": "1", "metadata": {}, "hash": "29d5d6640589b255bc8752103dd944ffaa5a72b8e0f3eccc49ebc63c0d21fb21", "class_name": "RelatedNodeInfo"}}, "hash": "cedb5d87d76f2b35a6de34f2b2ac4f7423114158d67a92691d0db31096877333", "text": "212 \n \n7.2.1 Resoluci\u00f3n de problemas con arreglos unidimensionales (vectores)  \n \nEn esta secci\u00f3n se desarrollar\u00e1n programas y funciones de  aplicaci\u00f3n con arreglos \nunidimensionales (vectores). L os programas y  funciones ser\u00e1n escrit os en la ventana de \nedici\u00f3n de Python. Las pruebas  se realizan en la ventana interactiva o desde programas. \nAlgunos ejemplos tambi\u00e9n pueden usarse con listas que contienen datos de otros tipos.  \n \nAlgunos ejemplos son triviales y pudieran resolverse directamente haciendo uso de las \nfunciones disponibles en las libr er\u00edas de Python.  El objetivo de programar soluciones \npropias es desarrollar la l\u00f3gic a de la construcci\u00f3n de algoritmos mediante c\u00f3digo Python y \nposteriormente extenderlas  a problemas nuevos o m\u00e0s complejos.   \n \nEjemplo. Para este ejemplo inicial se escribe un programa  para almacenar datos en una  \nlista num\u00e8rica  y despu\u00e9s sumar los componente s con valor par de la lista . Se usar\u00e1n \n\u00fanicamente instrucciones b\u00e0sicas del lenguaje Python.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n n: cantidad de datos  \n x: contendr\u00e1 cada dato ingresado (entero)  \n v: lista que conte ndr\u00e1 los datos que son ingresados por lectura  \n s: es la suma de los componentes con valor par  \n \nPrograma  \n \n# Programa para sumar valores pares de una lista  \nn=int(input('Cantidad de elementos: '))  \nv=[] \nfor i in range(n):  \n    x=int( input('Ingrese siguiente dato: '))  \n    v=v+[x]  \ns=0 for e in v: \n    if e%2==0: \n        s=s+e  \nprint('La suma es: ',s)  \n  \nPrueba del programa  \n \nCantidad de elementos: 5  \nIngrese siguiente dato: 23  \nIngrese siguiente dato: 24  \nIngrese siguiente dato: 30  \nIngrese siguiente dato: 25  \nIngrese siguiente dato: 44  \nLa suma es:  98  \n \nSoluci\u00f3n directa c on las funciones de Python para listas num\u00e9ricas:  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c04ef9ff-7a98-452c-a2ae-595f428e2a28": {"__data__": {"id_": "c04ef9ff-7a98-452c-a2ae-595f428e2a28", "embedding": null, "metadata": {"page_label": "213", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49b8b73d-f71a-44f2-895b-eca6efcae1ea", "node_type": "4", "metadata": {"page_label": "213", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "26c5520d217e99fc4e2a56c7d10121587f75f95bc66820b5133aa4baba76c7b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "00cbf6cb-dabc-4bf9-b2b8-23b32416f82b", "node_type": "1", "metadata": {"page_label": "212", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cedb5d87d76f2b35a6de34f2b2ac4f7423114158d67a92691d0db31096877333", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f313318-b0e1-43b6-92f3-9f27f3ab6ec2", "node_type": "1", "metadata": {}, "hash": "1ba73f741c39258e6b8ab2aa203e3e7e7ea9bb6294589f0da1ea6895c113f0e6", "class_name": "RelatedNodeInfo"}}, "hash": "29d5d6640589b255bc8752103dd944ffaa5a72b8e0f3eccc49ebc63c0d21fb21", "text": "213 \n \n \n>>> v=[23,24,30,25,44]  \n>>> sum(e for e in v if e%2==0) \n98 \n \nSoluci\u00f3n directa con las funciones de NumPy  para arreglos:  \n \n>>> from numpy import* \n>>> v=array([23,24,30,25,44])  \n>>> s=sum(v[where(v%2==0)])  \n>>> print(s) \n98 \n \nEjemplo.  Escrib ir una funci\u00f3n para sumar los componentes con valor par de un a lista .  \n El programa del ejemplo anterior se lo reescribe como una funci\u00f3n.  \n \nInstrumentaci\u00f3n  \n \nNombre de la funci\u00f3n: sumap  \n \nVariables  \nv: lista con los n\u00fameros que in gresan a la funci\u00f3n \ns: suma de los componentes del vector  con valor par  \n \ndef sumap(v):  \n    s=0 \n    for e in v: \n        if e%2==0: \n            s=s+e  \n    return s \n \n \n \nPrueba de la funci\u00f3n desde la ventana interactiva  \n \n>>> from sumap import* \n>>> v=[23,42,12,34,25]  \n>>> s=sumap(v)  \n>>> s \n88 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f313318-b0e1-43b6-92f3-9f27f3ab6ec2": {"__data__": {"id_": "6f313318-b0e1-43b6-92f3-9f27f3ab6ec2", "embedding": null, "metadata": {"page_label": "214", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd34b269-ad1a-4131-aec7-646647516eed", "node_type": "4", "metadata": {"page_label": "214", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b1314c9254f9327fae560a8f0e1452da73887ab51ad12e06440677b582102dff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c04ef9ff-7a98-452c-a2ae-595f428e2a28", "node_type": "1", "metadata": {"page_label": "213", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "29d5d6640589b255bc8752103dd944ffaa5a72b8e0f3eccc49ebc63c0d21fb21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd8625e0-bd18-4dd5-a096-b45e53b553aa", "node_type": "1", "metadata": {}, "hash": "a0fe11045bf6e494a6cefb90478f53721049410c1ab4ecca6b4a5b719c917df2", "class_name": "RelatedNodeInfo"}}, "hash": "1ba73f741c39258e6b8ab2aa203e3e7e7ea9bb6294589f0da1ea6895c113f0e6", "text": "214 \n \nEjemplo. Escrib ir un programa  para eliminar los elementos repetidos de un a lista \nnum\u00e8rica \n Instrumentaci\u00f3n  \n Variables  \n n: cantidad de datos  \n x: contendr\u00e1 cada dato ingresado  \n v: vector que contendr\u00e1 los datos \n u: vector con e lementos diferentes  \n \nEste es un algoritmo muy importante y debe darle atenci\u00f3n a su instrumentaci\u00f3n primero \ncomo programa y despu\u00e9s como funci\u00f3n.  \n \nEn la soluci\u00f3n, se toma cada elemento de la lista   v  y se lo traslada a otr a lista   u \nverificando que no ha ya sido agregado anteriormente.  \n \n \nPrograma  \n \n#Eliminar elementos repetidos de un a lista num\u00e9rica  \nn=int(input('Cuantos elementos: ' )) \nv=[] \nfor i in range(n):  \n    x=int( input('Ingrese el siguiente elemento: '))  \n    v=v+[x]  \nprint('Lista original: ',v)  \nu=[] \nfor e in v: \n    if e not in u: \n        u=u+[e]  \nprint('Lista depurada: ',u)  \n \n \nPrueba del programa  \n \n>>> \nCuantos elementos: 6  \nIngrese siguiente elemento: 7 \nIngrese siguiente elemento: 8 \nIngrese siguiente elemento: 7 \nIngrese siguiente elemento: 9 \nIngrese siguiente elemento: 6 \nIngrese siguiente elemento: 8 \n \nLista original:  [7, 8, 7, 9, 6, 8]  \nLista depurada:  [7, 8, 9, 6]  \n \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd8625e0-bd18-4dd5-a096-b45e53b553aa": {"__data__": {"id_": "dd8625e0-bd18-4dd5-a096-b45e53b553aa", "embedding": null, "metadata": {"page_label": "215", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a781c9e-7989-4e9a-9451-f4683ba993ad", "node_type": "4", "metadata": {"page_label": "215", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59c22ff5a86913a8647e77ced0b3b52ab731abaaa990b1bd8ba79bc846ac03fc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f313318-b0e1-43b6-92f3-9f27f3ab6ec2", "node_type": "1", "metadata": {"page_label": "214", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1ba73f741c39258e6b8ab2aa203e3e7e7ea9bb6294589f0da1ea6895c113f0e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e0f93f7-e7bb-46dc-a684-f7c4951339de", "node_type": "1", "metadata": {}, "hash": "77f67805a70b678c2c9c51b0716cf9e53854110e3876bb120b00240c002a6318", "class_name": "RelatedNodeInfo"}}, "hash": "a0fe11045bf6e494a6cefb90478f53721049410c1ab4ecca6b4a5b719c917df2", "text": "215 \n \nSoluci\u00f3n directa con las funciones de Python.  Primero se convierte la lista en un conjunto \ny por definici\u00f3n se eliminan elementos repetidos.  Finalmente se transforma nuevamente el \nconjunto a una lista:  \n \n>>> x=x=[7, 8, 7, 9, 6, 8]  \n>>> s=set(x)     El conjunto elimina elementos repetidos  \n>>> x=list( s)     \n>>> x \n[8, 9, 6, 7]  \n \nNOTA.   El manejo de conjuntos, sus funciones y operadores se revisar\u00e1 en una secci\u00f3n \nposterior.  \n Ejemplo.  Escribir una funci\u00f3n que reciba una lista y elimine los elementos repetidos.  \n \nEl programa del ejemplo anterior se lo escribe nuevamente como una funci\u00f3n.  \n \nInstrumentaci\u00f3n  \nNombre de la funci\u00f3n:  norep  \n \nVariables  \n v:  lista con los datos  que entran a la funci\u00f3n \n u:  lista  resultante con elementos diferentes  \n \n \n#funci\u00f3n para eliminar elementos repetidos de una lista  \ndef norep(v):  \n    u=[]  \n    for e in v: \n        if e not in u: \n           u=u+[e] \n    return u \n \n \nUso de la funci \u00f3n en la ventana interactiva \n \n>>> from norep import * \n>>> x=[2,3,5,3,6,2,7]  \n>>> y=norep(x)  \n>>> y \n[2, 3, 5, 6, 7]  \n \nNOTA.  Python no requiere que en la funci\u00f3n se especifique el tipo de par\u00e1metros de \nentrada, por tanto la funci\u00f3n puede ser usada con datos de diferente tipo, suponiendo que es aplicable a ese tipo de datos,  como en el siguiente ejemplo:  \n \n>>> from norep import * \n>>> x=['abc',37,'abc',47,37]  \n>>> u=norep(x)  \n>>> u \n['abc', 37, 47]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e0f93f7-e7bb-46dc-a684-f7c4951339de": {"__data__": {"id_": "6e0f93f7-e7bb-46dc-a684-f7c4951339de", "embedding": null, "metadata": {"page_label": "216", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86a464f5-11e2-49e8-99e4-19922e429fbd", "node_type": "4", "metadata": {"page_label": "216", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0ae6e9c2b9997cb1d9bdb53b2541b8be7cd6de88ff5593f2af1b60d59529e314", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd8625e0-bd18-4dd5-a096-b45e53b553aa", "node_type": "1", "metadata": {"page_label": "215", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a0fe11045bf6e494a6cefb90478f53721049410c1ab4ecca6b4a5b719c917df2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f86073d6-b4a7-47b5-bc00-bdf57c2d2197", "node_type": "1", "metadata": {}, "hash": "36317928d59b1c3767a7e99feff50dab3b1d4aba77aaa8076fe284df15753940", "class_name": "RelatedNodeInfo"}}, "hash": "77f67805a70b678c2c9c51b0716cf9e53854110e3876bb120b00240c002a6318", "text": "216 \n \n \nUna conclusi\u00f3n importante es que en Python se prefiere estructurar la s soluciones \nmediante funciones  en lugar  de programas. En las funciones no se requiere especificar ni \nla cantidad ni el tipo de datos de la estructura que ingresa como par\u00e1metro. Las funciones \nson m\u00e1s generales y cons tituyen instrumentos computacionales \u00fatiles para resolver \nproblemas desde la ventana interactiva o desde programas que llaman a estas funciones . \n \n \n \nEjemplo .  Una funci\u00f3n para encontrar el mayor valor de una  lista num\u00e9rica y su \u00edndice  \n \nInstrumentaci\u00f3n  \n \nLa estrategia consiste en iniciar  la varia ble de salida r , con primer elemento de la lista \nnum\u00e9rica. Mediante un ciclo se compara cada uno de los otros elementos con el valor \nasignado a r. En cada comparaci\u00f3n si el elemento tiene un valor m ayor, se actualiza el \nvalor de r  y tambi\u00e9n se actualiza la posici\u00f3n o \u00edndice de este elemento.  \n \nNombre de la funci\u00f3n:  vectmax \n \nVariables  \n v: lista num\u00e9rica  con los datos que entran a la funci\u00f3n \n r, p el mayor valor de v  y su \u00edndice. Son los resultados entregados  \n \ndef vectmax(v):  \n    n=len(v)  \n    r=v[0]  \n    p=0 \n    for i in range(1,n): \n        if v[i]>r: \n            r=v[i]  \n            p=i  \n    return [r,p] \n \n \nPrueba de la funci\u00f3n  \n \n>>> from vectmax import * \n>>> x=[11, 5, 18, 16, 14, 11, 13, 3, 18, 16]  \n>>> [r,p]=vectmax(x)  \n>>> r \n18 \n>>> p \n2 \n \n \nSoluci\u00f3n directa con las funciones de Python para listas  \n \n>>> x=[11, 5, 18, 16, 14, 11, 13, 3, 18, 16]  \n>>> r=max(x)  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1545, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f86073d6-b4a7-47b5-bc00-bdf57c2d2197": {"__data__": {"id_": "f86073d6-b4a7-47b5-bc00-bdf57c2d2197", "embedding": null, "metadata": {"page_label": "217", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "919bcfa5-8ae1-4da9-88cf-6ac8fff7ff93", "node_type": "4", "metadata": {"page_label": "217", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fc6e6841e30ca314e3731d2ea70b73ffe6668000936c0d31e2612e330065b1ed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e0f93f7-e7bb-46dc-a684-f7c4951339de", "node_type": "1", "metadata": {"page_label": "216", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77f67805a70b678c2c9c51b0716cf9e53854110e3876bb120b00240c002a6318", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16dfa3c0-7d58-4196-8150-e7bb14b41751", "node_type": "1", "metadata": {}, "hash": "b8a2711d7f0a538eb77922b38a29691be5f37470e10eb5a594a87fa73b28c646", "class_name": "RelatedNodeInfo"}}, "hash": "36317928d59b1c3767a7e99feff50dab3b1d4aba77aaa8076fe284df15753940", "text": "217 \n \n>>> r \n18 \n>>> p=x.index(r)  \n>>> p \n2 \n>>> p=x.index(max(x))    Directamente  \n>>> p \n2 \n \nEjemplo. Escribir en la ventana interactiva una funci\u00f3n que entregue el mayor valor y el \nmenor valor de una lista num\u00e9rica:  \n \n>>> def fm(x): return [min(x), max(x)] \n \n>>> x=[3,5,2,9,6]  \n>>> [a,b]=fm(x)  \n>>> a \n2 \n>>> b \n9 \n En los ejemplos anteriores se han desarrollado algunos programas y funciones para \nmanejo de listas. Adicionalmente se han des crito soluciones abreviadas usando las \nfacilidades disponibles en el  lenguaje Python.   \n \n \n \nSe recomienda usar soluciones basada en los operadores y funciones especiales de un \nlenguaje despu\u00e9s que se haya desarrollado la capacidad para programar usando \n\u00fanicamente las instrucciones b\u00e1sicas del lenguaje y  unas pocas funciones necesarias.  \n \nEsta pr\u00e1ctica permite  desarroll ar el pensamiento algor\u00edtmico y la habilidad para programar \nsoluciones  propias y no depender  de los recursos existentes en un lenguaje computac ional \nparticular.  Adicionalmente, esta experiencia permite enfrentar problemas nuevos para los \nque el lenguaje no provee instrumentos computacionales directos.  Finalmente, esta \nexperiencia facilita el cambio a otros lenguajes de programaci\u00f3n   \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1261, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16dfa3c0-7d58-4196-8150-e7bb14b41751": {"__data__": {"id_": "16dfa3c0-7d58-4196-8150-e7bb14b41751", "embedding": null, "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "723898d6-727b-4197-bcd4-d33eb3c4d0d1", "node_type": "4", "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2d0b3aa5a0b3dd0b8ce8af8c3f57c79d65accd86bb150bca9ba3b21105d6fe5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f86073d6-b4a7-47b5-bc00-bdf57c2d2197", "node_type": "1", "metadata": {"page_label": "217", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "36317928d59b1c3767a7e99feff50dab3b1d4aba77aaa8076fe284df15753940", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb57a945-b9f1-4cde-b300-efc9092b8c95", "node_type": "1", "metadata": {}, "hash": "c1a9bc3189d52af9ac99145d712580cac256b4eb45875e2a9320645616733f4c", "class_name": "RelatedNodeInfo"}}, "hash": "b8a2711d7f0a538eb77922b38a29691be5f37470e10eb5a594a87fa73b28c646", "text": "218 \n \nEl siguie nte es un ejemplo adicional para resaltar  lo expresado en el recuadro anterior . \n \n Ejemplo.  Escribir una funci\u00f3n para ordenar una lista de palabras en f orma creciente \nusando como criterio la longitud de las palabras \n \nLa siguiente es una posible soluci\u00f3n mediante  funciones y operadores disponibles en \nPython para operar con  listas  cuyo uso fue descrito en secciones anteriores.  \n \nInstrumentaci\u00f3n  \nFunci\u00f3n:   sort _len     entrega  una lista de palabras ordenadas por su longitud  \n \nVariables  \n x: lista de palabras  \n v: lista de longitudes de las palabras.  \n u: lista de pares (longitud, palabra). Usa la funci\u00f3n zip  \n h: pares con tipo list para ordenar con  sort por el primer componente  \n s: lista de las palabras ordenadas (segundo componente de los pares h ) \n \ndef sort_len(x):  \n    v=[]  \n    for p in x: \n        v=v+[len(p)]  \n    u=zip(v,x)  \n    h=list(u)  \n    h.sort()  \n    s=[]  \n    for i in range(len(h)):  \n        s=s+[h[i][1]]  \n    return s \n \nPrueba de la funci\u00f3n desde la ventana interactiva  \n \n>>> from sort_len import sort_len  \n>>> x=['A lgebra','F\u00edsica','Programaci\u00f3n','Lenguajes','Ingl\u00e9s','Qu\u00edmica','Biolog\u00eda']  \n>>> s=sort_len(x)  \n>>> print(s)  \n['F\u00edsica','Ingl\u00e9s','Algebra','Qu\u00edmica','Biolog\u00eda','Lenguajes','Programaci\u00f3n']  \n \n \nAlgunos  detalles de la soluci\u00f3n propuesta quedan ocultos al usuario detr\u00e1s de las \nfunciones Python utilizadas. Estas soluciones dependen del lenguaje particular, pero no \nest\u00e1 bien definido el algoritmo usado, por lo que no se pudiera trasladar a otro lenguaje.  \n \nLa siguiente es una soluci\u00f3n  m\u00e1s clara y l\u00f3gica para el mismo pr oblema anterior.", "start_char_idx": 0, "end_char_idx": 1650, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb57a945-b9f1-4cde-b300-efc9092b8c95": {"__data__": {"id_": "cb57a945-b9f1-4cde-b300-efc9092b8c95", "embedding": null, "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "723898d6-727b-4197-bcd4-d33eb3c4d0d1", "node_type": "4", "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2d0b3aa5a0b3dd0b8ce8af8c3f57c79d65accd86bb150bca9ba3b21105d6fe5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16dfa3c0-7d58-4196-8150-e7bb14b41751", "node_type": "1", "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b8a2711d7f0a538eb77922b38a29691be5f37470e10eb5a594a87fa73b28c646", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d876fe8e-7670-4bb0-ace3-451600f332c6", "node_type": "1", "metadata": {}, "hash": "d53c1358962960cb7b0d19860fcce79be065b2550e42c20746725b707ea15bcb", "class_name": "RelatedNodeInfo"}}, "hash": "c1a9bc3189d52af9ac99145d712580cac256b4eb45875e2a9320645616733f4c", "text": "Es el tipo \nde soluci\u00f3n que deben intentar los usuarios hasta que hayan desarrollado su habilidad para construir algoritmos y programar. Para este ejemplo, la soluci\u00f3n propuesta es m\u00e1s \nsimple de entender y adem\u00e1s se usan menos variables y m enos funciones especiales  del \nlenguaje.  \nPython Programaci\u00f3n", "start_char_idx": 1651, "end_char_idx": 1956, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d876fe8e-7670-4bb0-ace3-451600f332c6": {"__data__": {"id_": "d876fe8e-7670-4bb0-ace3-451600f332c6", "embedding": null, "metadata": {"page_label": "219", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed7a3cf0-b3e1-4f95-a76e-1b1087c73729", "node_type": "4", "metadata": {"page_label": "219", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "37024e6545ff58e8501a958e236ee94cb0af4cfc7ee6dde69690a5486d556d2a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb57a945-b9f1-4cde-b300-efc9092b8c95", "node_type": "1", "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1a9bc3189d52af9ac99145d712580cac256b4eb45875e2a9320645616733f4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb11df46-9d69-408f-878a-f4d03678ebfb", "node_type": "1", "metadata": {}, "hash": "869229fb48cbcb05c5c30471b315a235f37984c0ec645ecbc3f18700cebbd8d1", "class_name": "RelatedNodeInfo"}}, "hash": "d53c1358962960cb7b0d19860fcce79be065b2550e42c20746725b707ea15bcb", "text": "219 \n \nEjemplo.  Escribir una funci\u00f3n para ordenar una lista de palabras en f orma creciente \nusando como criterio la longitud de las palabras \n \nInstrumentaci\u00f3n  \nFunci\u00f3n:   sort _len      Entrega una lista de palabras ordenadas por su longitud  \n \nVariables  \n x: lista de palabras  \n longx : lista con las longitudes de las palabras de la lista   \n \nIdea propuesta  \n \nSe construye una lista con las longitudes de las palabras incluidas en la lista de entrada  x. \n \nEn un ciclo, l a longitud de cada palabra es comparada con la longitud de las restantes \npalabras  de izquierda a derecha. Cada vez que se encuentra una longitud menor, se \nintercambian las longitudes de tal manera que el mayor  valor de longitud ir\u00e1 avanzando a \nla derecha. Paralelamente se intercambian las palabras mant eniendo la correspondencia \ncon las longitudes . \n \nAl finalizar, la lista de longitudes  estar\u00e1 ordenada en forma creciente, y las palabras de la \nlista tambi\u00e9n estar\u00e1n colocadas en este orden.  \n  \ndef sort_len(x):  \n    longx=[] \n    for p in x: \n        l ongx=longx+[len(p)]   #lista de longitudes  \n \n    for i in range(len(x)-1): \n        for j in range(i+1,len(x)):  \n            if longx[i]>longx[j]: \n                l ongx[i],longx[j]=l ongx[j],long x[i] \n                x[i],x[j]=x[j],x[i]  \n    return x \n \n \n \nPrueba de la funci\u00f3n desde la ventana interactiva  \n \n>>> from sort_len import sort_len  \n>>> x=['Algebra','F\u00edsica','Programaci\u00f3n','Lenguajes','Ingl\u00e9s','Qu\u00edmica','Biolog\u00eda']  \n>>> s=sort_len(x)  \n>>> print(s)  \n['F\u00edsica','Ingl\u00e9s','Algebra','Qu\u00edmica','Biol og\u00eda','Lenguajes','Programaci\u00f3n']  \n \n \n \nNOTA.   Observe  el uso de la asignaci\u00f3n que intercambia el contenido de dos variables.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1726, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb11df46-9d69-408f-878a-f4d03678ebfb": {"__data__": {"id_": "bb11df46-9d69-408f-878a-f4d03678ebfb", "embedding": null, "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c8e2c75-96a7-4a1f-8423-349d4cdb04f7", "node_type": "4", "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8eb798e3e77acedc40355232fe522baff1b0c87bda1f78e08ca6fe4a3a260375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d876fe8e-7670-4bb0-ace3-451600f332c6", "node_type": "1", "metadata": {"page_label": "219", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d53c1358962960cb7b0d19860fcce79be065b2550e42c20746725b707ea15bcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f4098c4-5b4a-4dc2-ba39-8a1a97254423", "node_type": "1", "metadata": {}, "hash": "488b4b31edd83d21e593712b5de4832f8e792a20631aab2a6c28876f6426ad28", "class_name": "RelatedNodeInfo"}}, "hash": "869229fb48cbcb05c5c30471b315a235f37984c0ec645ecbc3f18700cebbd8d1", "text": "220 \n \nEjemplo. Una funcion para ordenar un a lista  en forma creciente  \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  orden  \n \nVariables  \n x:  Lista c on los datos que entran a la funcion  \n      La misma variable contiene la lista ordenada resultante  \n \nLa soluci\u00f3n se basa en el ejemplo anterior. Cada elemento de x  es comparado con los \nrestantes elementos. Cada vez que se encuentra un elemento con menor valor, se \nintercambian estos elementos, de tal manera que el mayor valor ir\u00e1 avanzando hacia la \nderecha.  Al finalizar, la lista estar\u00e1 ordenada en forma creciente. Debido a que la \nrepresentaci\u00f3n interna de los caracteres tiene una representaci\u00f3n mediante c\u00f3digos \nordenados, esta funci\u00f3n puede usarse tambi\u00e9n con caracteres o cadenas de caracteres  \n \ndef orden(x):  \n    for i in range(len(x)-1): \n        for j in range(i+1,len(x)):  \n            if x[i]>x[j]: \n                x[i],x[j]=x[j],x[i]  \n    return x \n \n \nPrueba de la funci\u00f3n en la ventana interactiva  \n \n>>> from orden import orden \n>>> x=[2,5,6,9,3,4,5]  \n>>> v=orden (x) \n>>> v \n[2, 3, 4, 5, 5, 6, 9]  \n>>> x=['r','t','u','a','c']  \n>>> v=orden (x) \n>>> v \n['a', 'c', 'r', 't', 'u']  \n>>> x=['arte','algebra','banco','artesano','cabos','base']  \n>>> v=orden (x) \n>>> v \n['algebra', 'arte', 'artesano', 'banco', 'base', 'cabos']  \n Pregunta para investigar: Si la lista tiene longitud  n, determine la cantidad total de ciclos \nque se realizan en la funci\u00f3n, para ordenarla.", "start_char_idx": 0, "end_char_idx": 1459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f4098c4-5b4a-4dc2-ba39-8a1a97254423": {"__data__": {"id_": "0f4098c4-5b4a-4dc2-ba39-8a1a97254423", "embedding": null, "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c8e2c75-96a7-4a1f-8423-349d4cdb04f7", "node_type": "4", "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8eb798e3e77acedc40355232fe522baff1b0c87bda1f78e08ca6fe4a3a260375", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb11df46-9d69-408f-878a-f4d03678ebfb", "node_type": "1", "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "869229fb48cbcb05c5c30471b315a235f37984c0ec645ecbc3f18700cebbd8d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14bac667-5be9-4f9c-afea-e9367da2e9e2", "node_type": "1", "metadata": {}, "hash": "b5cbeef856f26306e72f3c2e0ee1096b0efa943d7422650c51f7b275905a5f34", "class_name": "RelatedNodeInfo"}}, "hash": "488b4b31edd83d21e593712b5de4832f8e792a20631aab2a6c28876f6426ad28", "text": "Soluci\u00f3n directa con  la funci\u00f3n sort de Python para ordenar listas \n \n>>> x=[2,5,6,9,3,4,5]  \n>>> x.sort() \n>>> x \n[2, 3, 4, 5, 5, 6, 9]  \nPython Programaci\u00f3n", "start_char_idx": 1466, "end_char_idx": 1625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14bac667-5be9-4f9c-afea-e9367da2e9e2": {"__data__": {"id_": "14bac667-5be9-4f9c-afea-e9367da2e9e2", "embedding": null, "metadata": {"page_label": "221", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11a27966-c5fa-4fa0-b714-2b408fb268c4", "node_type": "4", "metadata": {"page_label": "221", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4762f92cec19cbc36927d29b41c4b1e94211df500ac08c75a8879a9e6a234d23", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f4098c4-5b4a-4dc2-ba39-8a1a97254423", "node_type": "1", "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "488b4b31edd83d21e593712b5de4832f8e792a20631aab2a6c28876f6426ad28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f325d036-8aa6-4707-8d73-3f44d2598b02", "node_type": "1", "metadata": {}, "hash": "1a9c4ff0ac6258c86f7fed8998736b6ad551ade5c9747a36b4caa3c133e74742", "class_name": "RelatedNodeInfo"}}, "hash": "b5cbeef856f26306e72f3c2e0ee1096b0efa943d7422650c51f7b275905a5f34", "text": "221 \n \nEjemplo. Otro m \u00e9todo para ordenar una lista  en forma creciente  \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  ordena  \n \nVariables  \n x:  Lista con los datos  que entran a la funcion  \n      La misma variable contiene la lista ordenada resultante  \n p:  Posici\u00f3n del elemento con el menor valor en cada sublista de izquierda a  \n      derecha  \n \nIdea propuesta  \n \nExisten muchos algoritmos para ordenar una lista. En esta propuesta, la instrumentaci\u00f3n \nse fundamenta en la siguiente idea:   Se busca a la derecha de cada elemento x[i] cual \nes el elemento x[j] con el menor valor,  j=i+1, i+2, .., n.  Al finalizar cada b\u00f9squeda \nse intercambian los elementos x[i] y x[j]. Al comple tar este proceso con todos los \nelementos  x[i]   de izquierda a derecha, la lista quedar\u00e1 ordenada en forma creciente.  \n \ndef ordena(x):  \n    n=len(x)  \n    for i in range(n-1): \n        t=x[i]  \n        p=i  \n        for  j in range(i+1,n):  \n            if x[j]<t:  \n                t=x[j]  \n                p=j  \n        x[i],x[p]=x[p],x[i]  \n    return x \n  \nPrueba de la funci\u00f3n en la ventana interactiva  \n \n>>> from ordena import ordena \n>>> x=[2,5,6,9,3,4,5]  \n>>> v=ordena(x)  \n>>> v \n[2, 3, 4, 5, 5, 6, 9]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f325d036-8aa6-4707-8d73-3f44d2598b02": {"__data__": {"id_": "f325d036-8aa6-4707-8d73-3f44d2598b02", "embedding": null, "metadata": {"page_label": "222", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45731b8e-d3ab-44af-b57e-bcd47ba218d4", "node_type": "4", "metadata": {"page_label": "222", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "302ab8dbe7b158080413b7908942849afc4432fd2754ff3599de7423adbc6abb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14bac667-5be9-4f9c-afea-e9367da2e9e2", "node_type": "1", "metadata": {"page_label": "221", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b5cbeef856f26306e72f3c2e0ee1096b0efa943d7422650c51f7b275905a5f34", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44a642ca-5f4d-450b-aa56-96f83dbe44ee", "node_type": "1", "metadata": {}, "hash": "d4065954dc975cd2023464bff0cc8c5194b65aa6e1e3c1de31725799f349f1c3", "class_name": "RelatedNodeInfo"}}, "hash": "1a9c4ff0ac6258c86f7fed8998736b6ad551ade5c9747a36b4caa3c133e74742", "text": "222 \n \nEjemplo.  Escribir  una func i\u00f3n para generar un a lista  con n\u00fameros aleatorios enteros en un \nrango especificado \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n: vectrandint  \n Par\u00e1metros:  n, a, b   longitud del vector y extremos del rango  \n Resultado:  v  vector con los n\u00fameros aleatorios \n \nLa funci \u00f3n usa la funci\u00f3n randint del m\u00f3dulo random  \n  \nfrom random import* \ndef vectrandint(n,a,b):  \n    v=[]  \n    for i in range(n): \n        v=v+[randint(a,b)]  \n    return v \n \nPrueba de la funci\u00f3n:   Almacene en una lista 10 resultados de lanzamientos de un dado \n \n>>> from vectrandint import vectrandint  \n>>> x=vectrandint(10,1,6)  \n>>> x \n[2, 1, 1, 3, 2, 4, 2, 6, 3, 6]         El vector resultante puede incluir    \n             elementos repetidos  \n \nLa lista se la puede generar directamente mediante una declaraci\u00f3n impl\u00edcita:  \n \n>>> from random import* \n>>> x=[randint(1,6) for i in range(10)]  \n>>> x \n[1, 5, 6, 1, 5, 5, 4, 5, 2, 3]  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 979, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44a642ca-5f4d-450b-aa56-96f83dbe44ee": {"__data__": {"id_": "44a642ca-5f4d-450b-aa56-96f83dbe44ee", "embedding": null, "metadata": {"page_label": "223", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "af1daf9c-13fd-420e-a5ce-5f2590840fc8", "node_type": "4", "metadata": {"page_label": "223", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "403f178dbd56e6e8098d49132901053bc751473269781ca6c068c6dc725e89d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f325d036-8aa6-4707-8d73-3f44d2598b02", "node_type": "1", "metadata": {"page_label": "222", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1a9c4ff0ac6258c86f7fed8998736b6ad551ade5c9747a36b4caa3c133e74742", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d65b4d95-5baa-438e-90d2-c7d20e297346", "node_type": "1", "metadata": {}, "hash": "890dedb515e1c300907c9934d7dd85de08e6792cb76a658e7af3ffadbd96e8aa", "class_name": "RelatedNodeInfo"}}, "hash": "d4065954dc975cd2023464bff0cc8c5194b65aa6e1e3c1de31725799f349f1c3", "text": "223 \n \nEjemplo.  Crear una funci\u00f3n para generar una muestra aleatoria  de tama\u00f1o m con enteros \ntomada de una poblaci\u00f3n de tama\u00f1o n.  Una muestra aleatoria es una lista de n\u00fameros \naleatorios pero sin conten er resultados repetidos.  \n \nInstrumentaci\u00f3n  \nNombre de la funci\u00f3n: muestra  \nPar\u00e1metro s: n, m \nResultado:  v  vector con los componentes de la muestra aleatoria  \n \nIdea propuesta \n \nMientras el vector de resultados no est \u00e9 lleno, agregar cada n\u00famero aleatorio al vector \nverificando que no haya sido incluido.  \n \n \n#Generar una muestra aleatoria  \nfrom random import* \ndef muestra(n,m):  \n    v=[]  \n    while len(v)<m: \n        x=randint(1,n)  \n        if x not in v: \n            v=v+[x]  \n    return v \n \n \nPrueba de la funci\u00f3n desde la ventana interactiva  \n \n>>> from muestra import muestra \n>>> v=muestra(20,10)  \n>>> v \n[8, 11, 19, 1, 7, 15, 17, 3, 5, 4]  \n \nEl resultado es una lista con  n\u00fameros elegidos aleatoriamente y sin repeticiones.  \n \nCada vez que se pr uebe este programa se obtendr\u00e1 una nueva muestra aleatoria.  \n \n \nSoluci\u00f3n directa con l a funci\u00f3n sample de la librer\u00eca  random   \n \n>>> from random import* \n>>> p=list(range(20))       genera la lista:  [0, 1, 2, . . ., 19]  \n>>> v=sample(p,5)                   muestra aleatoria de tama\u00f1o 5 \n>>> v        tomada de la lista  p  \n[6, 0, 9, 11, 19]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d65b4d95-5baa-438e-90d2-c7d20e297346": {"__data__": {"id_": "d65b4d95-5baa-438e-90d2-c7d20e297346", "embedding": null, "metadata": {"page_label": "224", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8161c0f7-bae4-4f74-8e44-b0feec1d9aa5", "node_type": "4", "metadata": {"page_label": "224", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dce317fe43970de896fcf054fcc78266e782dee7a6a5fd7d7ae708c2317baaa1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44a642ca-5f4d-450b-aa56-96f83dbe44ee", "node_type": "1", "metadata": {"page_label": "223", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4065954dc975cd2023464bff0cc8c5194b65aa6e1e3c1de31725799f349f1c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edac6333-acb3-4bce-a091-e4a6f9242b82", "node_type": "1", "metadata": {}, "hash": "13309adfa1cfc7e6d021b2a19b8c4e8b9bb97416865de4ec9283d7bad11620bc", "class_name": "RelatedNodeInfo"}}, "hash": "890dedb515e1c300907c9934d7dd85de08e6792cb76a658e7af3ffadbd96e8aa", "text": "224 \n \nEjemplo. La secuencia de Ulam es una sucesi\u00f3n de n\u00fameros naturales generados a partir \nde un dato inicial con la siguiente definici\u00f3n.  \n \nx /2,   x parx3x 1,   x impar\uf8f1=\uf8f2+\uf8f3,    x  es un n\u00famero natural  \n \nAplicando recurrentemente esta deficini\u00f3n, siempre se llegar\u00e1 finalmente al n\u00famero  1  \n \nAs\u00ed, s i el valor inicial es x=12, los valores sucesivos ser\u00e1n:   6,  3,  10,  5,  16,  8,  4,  2,  1 \n Escribir un programa que lea un n\u00famero y muestr e la secuencia pero en orden inver so. \n Variables  \n  n: valor inicial para la secuencia.  n  es modificado con la regla indicada  \n  u: lista con los n\u00fameros de la secuencia de Ulam invertida \n \nCada nuevo elemento de la secuencia ser\u00e1 agregado a la izquierda en una lista u. La lista \nresultante contendr\u00e1 los elementos ubicados en el orden inverso, es decir la secuencia de \nlos n\u00fameros de Ulam comenzar\u00e1 desde  1  hasta llegar al valor inicial.  \n \nPrograma  \n \n#secuencia de Ulam invertida  \nn=int(input('Ingrese un entero positivo: '))  \nu=[] \nwhile n>1: \n    if n%2==0: \n        n=n// 2 \n    else:  \n        n=3*n+1  \n    u=[n]+u  #la lista crece hacia la izquierda  \nprint(u)  \n     \n \nPrueba del programa  \n>>>  \nIngrese un entero positivo: 12 \n[1, 2, 4, 8, 16, 5, 10, 3, 6]      \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edac6333-acb3-4bce-a091-e4a6f9242b82": {"__data__": {"id_": "edac6333-acb3-4bce-a091-e4a6f9242b82", "embedding": null, "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efcffdde-f36f-4e9e-bddf-ae80245a8198", "node_type": "4", "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bc8fee9229325ec80f4b97aad5abd51f8dc99fb6fdf0142946f5091225e69d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d65b4d95-5baa-438e-90d2-c7d20e297346", "node_type": "1", "metadata": {"page_label": "224", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "890dedb515e1c300907c9934d7dd85de08e6792cb76a658e7af3ffadbd96e8aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55bd21b0-52e6-4c44-9d50-f2aa44230fdd", "node_type": "1", "metadata": {}, "hash": "f5c1ee35b119a4f24b41a986a1243c4c3358bf1dd3a7508305b3064434c5b025", "class_name": "RelatedNodeInfo"}}, "hash": "13309adfa1cfc7e6d021b2a19b8c4e8b9bb97416865de4ec9283d7bad11620bc", "text": "225 \n \nEjemplo.   Obteng a el conteo de f recuencias para los sigu ientes 40 datos de una muestra \ncorrespondientes al tiempo que se utiliz\u00f3 para atender a las personas en una estaci\u00f3n:  \n \n3.1    4.9    2.8    3.6    4.5    3.5    2.8    4.1  \n2.9    2.1    3.7    4.1    2.7    4.2    3.5    3.7  \n3.8    2.2    4.4    2.9    5.1    1.8    2.5    6.2  \n2.5    3.6    5.6    4.8    3.6    6.1    5.1    3.9  \n4.3    5.7    4.7    4.6    5.1    4.9    4.2    3.1  \n \nLos datos ser\u00e1n distribuidos en 6 intervalos o cl ases con la siguiente definici\u00f3n :  \n \n[1, 2), [2, 3), [3, 4), [4, 5), [5, 6), [6, 7)   \n \nInstrumentaci\u00f3n  \n \nVariables  \n x:  lista con los datos observados \n c:  lista de listas con los intervalos de las clases  \n f:   arreglo de conteos  de datos en cada clase  \n Se definir\u00e1 una funci\u00f3n con el nombre frecu encia para realizar el conteo de datos en cada \nclase . Las clases son una lista cuyos componentes son listas con los extremos de clase:  \n \nc=[[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]  \n \nEn un programa escrito junto a la funci\u00f3n se defin en los datos y se imprim en los resultados .", "start_char_idx": 0, "end_char_idx": 1109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55bd21b0-52e6-4c44-9d50-f2aa44230fdd": {"__data__": {"id_": "55bd21b0-52e6-4c44-9d50-f2aa44230fdd", "embedding": null, "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efcffdde-f36f-4e9e-bddf-ae80245a8198", "node_type": "4", "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bc8fee9229325ec80f4b97aad5abd51f8dc99fb6fdf0142946f5091225e69d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edac6333-acb3-4bce-a091-e4a6f9242b82", "node_type": "1", "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13309adfa1cfc7e6d021b2a19b8c4e8b9bb97416865de4ec9283d7bad11620bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c265080-48c8-47c3-ae41-5b2344ed721f", "node_type": "1", "metadata": {}, "hash": "06e08614734e82c5958864fcfdde59601865d3ccf4aa8e9df5b4d6b4b421f5b9", "class_name": "RelatedNodeInfo"}}, "hash": "f5c1ee35b119a4f24b41a986a1243c4c3358bf1dd3a7508305b3064434c5b025", "text": "Si las pruebas se hicieran desde la ventana interactiva, habr\u00eda que repetir cada vez el ingreso de los datos  \n \n \nfrom numpy import* \ndef frecuencia(c,x):  \n    f=zeros(len(c))  #Arreglo de conteos iniciado con ceros \n    for e in x: \n        for j in range(len(c)): \n            if e>=c[j][0] and e<c[j][1]:  \n                f[j]=f[j]+1  \n    return f \n \n c=[[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]  \n x=[3.1, 4.9, 2.8, 3.6, 4.5, 3.5, 2.8, 4.1, \n    2.9,  2.1, 3.7, 4.1, 2.7, 4.2, 3.5, 3.7, \n    3.8,  2.2, 4.4, 2.9, 5.1, 1.8, 2.5, 6.2, \n    2.5,  3.6, 5.6, 4.8, 3.6, 6.1, 5.1, 3.9, \n    4.3,  5.7, 4.7, 4.6, 5.1, 4.9, 4.2, 3.1] \n \nf=frecuencia(c,x)  \nprint('Conteo de frecuencia por clase')  \nprint(f)  \n \n \nPrueba del programa  \n \n>>>  \nConteo de frecuencia por clase  \n[ 1.   9.  11.  12.   5.   2.] \nPython Programaci\u00f3n", "start_char_idx": 1111, "end_char_idx": 1934, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c265080-48c8-47c3-ae41-5b2344ed721f": {"__data__": {"id_": "7c265080-48c8-47c3-ae41-5b2344ed721f", "embedding": null, "metadata": {"page_label": "226", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "467109dc-adce-46de-b6d0-1e3e187a1952", "node_type": "4", "metadata": {"page_label": "226", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "279095e321d4e8668faf8c861f236e17dbd4b0ebdb15b7e29cbfc3003306a8b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55bd21b0-52e6-4c44-9d50-f2aa44230fdd", "node_type": "1", "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f5c1ee35b119a4f24b41a986a1243c4c3358bf1dd3a7508305b3064434c5b025", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bebbd227-7cf4-4315-9470-608799b025a1", "node_type": "1", "metadata": {}, "hash": "19b012e9117aee1dc6f0a86bf6b6cd6de4142b9a8125d3f1682de849ed5bd643", "class_name": "RelatedNodeInfo"}}, "hash": "06e08614734e82c5958864fcfdde59601865d3ccf4aa8e9df5b4d6b4b421f5b9", "text": "226 \n \nEjemplo.  Realice el conteo de frecuencia de 200 datos con distribuci\u00f3n Normal o \nGaussiana con media 5  y desviaci\u00f3n est\u00e1ndar 2 . Grafique el resultado mediante barras.  \n \nLas clases se definen en la prueba y los datos son obtenidos con la funci\u00f3n gauss  de la \nlibrer\u00eda random.  \n \n \nfrom numpy import* \ndef frecuencia(c,x):  \n    f=zeros(len(c))  #Arreglo de conteos iniciado con ceros \n    for e in x: \n        for  j in range(len(c)): \n            if e>=c[j][0]  and e<c[j][1]:  \n                f[j]=f[j]+1  \n    return f \n \ndef barras(f):  \n    for e in f: \n        print('%4d '%(e ),e*'*') \n \nfrom random import* \nc=[[-2,-1],[-1,0],[0,1],[1,2],[2,3],[3,4],  \n   [4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11]]  \nx=[] \nfor i in range(200):  \n    x=x+[gauss(5,2)]  \nf=frecuencia(c,x)  \nprint('Conteo de frecuencia por clase')  \nprint(f)  \nprint('Diagrama de barras')  \nbarras(f)  \n \n \n Prueba del programa  \n>>>  \nConteo de frecuencia por clase  \n[  0.   2.   6.   8.  18.  29.  39.  44.  30.  16.   5.   1.   1.]  \nDiagrama de barras  \n    0   \n    2  **  \n    6  ******  \n    8  ********  \n   18  ******************  \n   29  ***************************** \n   39  ***************************************  \n   44  ********************************************  \n   30  ****************************** \n   16  ****************  \n    5  *****  \n    1  *  \n    1  *  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1394, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bebbd227-7cf4-4315-9470-608799b025a1": {"__data__": {"id_": "bebbd227-7cf4-4315-9470-608799b025a1", "embedding": null, "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b24b4691-204e-488f-8954-80157048208f", "node_type": "4", "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "75623dc34eba95d0eb0972d8a2ae34c2d83ce7d1681c4905a2bb5ea7c23bc18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c265080-48c8-47c3-ae41-5b2344ed721f", "node_type": "1", "metadata": {"page_label": "226", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "06e08614734e82c5958864fcfdde59601865d3ccf4aa8e9df5b4d6b4b421f5b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c014fda-4e27-482e-9932-7e348f1f8b82", "node_type": "1", "metadata": {}, "hash": "0f33ed0aa3dd2a6c974845466d79a022d67d60dee4fac9c1530712dc689ae912", "class_name": "RelatedNodeInfo"}}, "hash": "19b012e9117aee1dc6f0a86bf6b6cd6de4142b9a8125d3f1682de849ed5bd643", "text": "227 \n \n7.2.2 Ejercicios de programaci \u00f3n con arreglos unidimensionales  (vectores)  \n \nAlgunos problemas tambi\u00e9n pueden ser resueltos con listas y funciones para su mmanejo  \n \n1. Una persona tiene una lista con los precios de n art\u00edculos y dispone de una cierta \ncantidad de di nero. Escriba un programa para leer estos datos y almacenarlos en un \nvector:  \n \na) Muestre los numeros de los art\u00edculos que puede comprar  \nb) Para cada art\u00edculo cuyo precio es menor que la cantidad de dinero disponible, determine \ncuantas unidades puede compra r \n \n2. Lea una lista de los pesos de las n cajas en un contenedor. Determine cuantas cajas \ntienen el peso mayor al peso promedio del grupo.  \n \n3. Lea una lista de los pesos de los  n objetos en una bodega. Determine cual es el rango \nde los pesos de estos objet os. \n 4. Una bodega contiene n paquetes numerados en forma natural. Para una inspecci\u00f3n se \ndebe tomar una muestra aleatoria del 10%  de los paquetes. Escriba un programa para \nelegir la muestra. La muestra no debe contener elementos repetidos.  \n \n5. Para la ins pecci\u00f3n de los m paquetes de una bodega se han elegido a m inspectores. \nRealice aleatoriamente la asignaci\u00f3n de tal manera que cada inspector se le asigne la \nrevisi\u00f3n de un solo paquete.  \n \n6. Para la inspecci\u00f3n de los m  contenedores de una bodega se han elegido a m/2  \ninspectores. Realice aleatoriamente la asignaci\u00f3n de tal manera que cada inspector se le \nasigne la revisi\u00f3n de dos contenedores. No se puede asignar un contenedor m\u00e1s de una vez. \n \n7. Escriba un programa para leer un vector con n\u00fameros enteros de una cifra. Luego \ngenere un n\u00famero aleatorio de una cifra.", "start_char_idx": 0, "end_char_idx": 1654, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c014fda-4e27-482e-9932-7e348f1f8b82": {"__data__": {"id_": "2c014fda-4e27-482e-9932-7e348f1f8b82", "embedding": null, "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b24b4691-204e-488f-8954-80157048208f", "node_type": "4", "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "75623dc34eba95d0eb0972d8a2ae34c2d83ce7d1681c4905a2bb5ea7c23bc18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bebbd227-7cf4-4315-9470-608799b025a1", "node_type": "1", "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "19b012e9117aee1dc6f0a86bf6b6cd6de4142b9a8125d3f1682de849ed5bd643", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9063840e-929e-430d-81fd-6fead2dbfb60", "node_type": "1", "metadata": {}, "hash": "d8d5b7fd617610dcdc0fbb9264d4a21bd5e0acc06d64ea4ede9675d3b92d4f87", "class_name": "RelatedNodeInfo"}}, "hash": "0f33ed0aa3dd2a6c974845466d79a022d67d60dee4fac9c1530712dc689ae912", "text": "Luego \ngenere un n\u00famero aleatorio de una cifra. Entonces, elimine del vector todos los n\u00fameros \ncuyo valor sea menor al n\u00famero aleatorio. Muestre el vector resultante.  \n \n8. Lea la lista de los n\u00fameros de identificaci\u00f3n de los estudiantes que est\u00e1n  inscritos en la \nmaterial A, y otra lista con los estudiantes que est\u00e1n inscritos en la materia B.  \n \na) Encuentre cuantos estudiantes est\u00e1n inscritos en la materia A y tambi\u00e9n en la materia B  \nb) Encuentre los estudiantes que est\u00e1n inscritos en la materia A pero no en la materia B  \n 9. Se tiene la lista de los c\u00f3digos de las cajas en la bodega A y una lista de los c\u00f3digos de \nlas cajas en la bodega B. Adem\u00e1s se tiene una lista con los c\u00f3digos de las cajas que \ndeben ser inspeccionadas. Determine cuantas cajas ser\u00e1n inspeccionadas en cada \nbodega.  \n \n10. Almacene en un vector X  las abscisas y en un vector Y  las ordenadas de un conjunto \nde puntos en un plano. Ambos vectores son ingresados como datos. Suponga que estos \npuntos representan los v\u00e9rtices de un pol\u00edgono. Determine el per\u00edmetro del pol\u00edgono.  Use \nla f\u00f3rmula para calcular la distancia entre cada par de puntos :  \n22\ni1 i i1 i d (x x ) (y y )++= \u2212+\u2212  \nPython Programaci\u00f3n", "start_char_idx": 1607, "end_char_idx": 2808, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9063840e-929e-430d-81fd-6fead2dbfb60": {"__data__": {"id_": "9063840e-929e-430d-81fd-6fead2dbfb60", "embedding": null, "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24628a93-89b4-4a78-8715-5bdeb750b3f5", "node_type": "4", "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c62b20b18836196edef5f477bb8ad3863c762057847c7b9c1e1d1e70f12f6424", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c014fda-4e27-482e-9932-7e348f1f8b82", "node_type": "1", "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0f33ed0aa3dd2a6c974845466d79a022d67d60dee4fac9c1530712dc689ae912", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3303123-bd43-4e35-8c77-37ec057126ea", "node_type": "1", "metadata": {}, "hash": "e08c562c7f97854d9f9d965ef1b5a1cde673eef7fb9346bd5cc1f1f37059f06f", "class_name": "RelatedNodeInfo"}}, "hash": "d8d5b7fd617610dcdc0fbb9264d4a21bd5e0acc06d64ea4ede9675d3b92d4f87", "text": "228 \n \n11. Almacene en un vector X  las abscisas y en un vector Y  las ordenadas de un conjunto \nde puntos en un plano. Ambos vectore s son ingresados como datos. Determine cual es el \npunto m\u00e1s alejado del origen. Use la f\u00f3rmula de la distancia.   22\nii d xy= +  \n \n12. El c\u00e1lculo del \u00e1rea de un pol\u00edgono arbitrario, dadas las coordenadas de sus v\u00e9rtices \n (x1, y1)(x2, y2), ..., (x n, yn) se lo puede hacer con la siguiente f\u00f3rmula:  \n \n      Area= [(x 1+x2)(y1-y2) + (x 2+x3)(y2-y3)+ ... +(x n-1+xn-2)(yn-1-yn-2) + (x n+x1)(yn-y1)]/2 \n \nEscriba un programa para leer en vectores los valores de las abscisas y ordenadas de los \nv\u00e9rtices. Calcule y muestre el valor del \u00e1rea con la f\u00f3rmula anterior . \n \n13. Para simular los saltos de  n   ranas en una pista de longitud  m   metros  se usar\u00e1 un \nvector de  n   elementos que inicialmente contiene ceros. Use un ciclo para agregar a cada \nrana un n\u00famero aleator io que puede ser  0 , 1 o 2 metros.  Repita este ciclo hasta que \nalguna rana llegue al final de la pista. Muestre en cual turno alguna rana lleg\u00f3 al final de la pista.  \n \n14.  En un proceso electoral se tienen anotados los n  votos para aprobar una moci\u00f3n. \nCada voto tiene el n\u00famero de identificaci\u00f3n del elector (n\u00fameros enteros del 1 al n) y un \nn\u00famero que representa su decisi\u00f3n: 1 si es a favor, 0 si es en contra, cualquier otro \nn\u00famero es nulo.", "start_char_idx": 0, "end_char_idx": 1366, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3303123-bd43-4e35-8c77-37ec057126ea": {"__data__": {"id_": "f3303123-bd43-4e35-8c77-37ec057126ea", "embedding": null, "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24628a93-89b4-4a78-8715-5bdeb750b3f5", "node_type": "4", "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c62b20b18836196edef5f477bb8ad3863c762057847c7b9c1e1d1e70f12f6424", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9063840e-929e-430d-81fd-6fead2dbfb60", "node_type": "1", "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8d5b7fd617610dcdc0fbb9264d4a21bd5e0acc06d64ea4ede9675d3b92d4f87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4c9f495-a482-40fe-8d09-446b24a70cfc", "node_type": "1", "metadata": {}, "hash": "f24a3265dcb434f6dbf8161e9bf48836556e3d40e27fa611b68d7c9d3ee8146d", "class_name": "RelatedNodeInfo"}}, "hash": "e08c562c7f97854d9f9d965ef1b5a1cde673eef7fb9346bd5cc1f1f37059f06f", "text": "Escriba un programa que lea los n datos conteniendo el n\u00famero del \nelector (no suponga que est\u00e1n ordenados) y su voto. Coloque los n\u00fameros de \nidentificaci\u00f3n en tres listas: votantes a favor, votantes en contra y votantes nulos. \nFinalmente busque y muestre si hay n\u00fameros de identificaci\u00f3n de electores que est\u00e1n en \nm\u00e1s de una lista.  \n \n15. Se tiene como dato la cantidad de boletos disponibles para un concierto. Escriba un \nprograma para organizar la venta en l\u00ednea. Cada fan debe presentar su c\u00e9dula de \nidentidad.  El programa debe leer y agregar a un vector el n\u00famero de c\u00e9dula. E n caso de \nque el n\u00famero de c\u00e9dula ya est\u00e9 en el vector, muestre un mensaje rechazando la venta de \nboletos. Si la venta se realiza, lea la cantidad de boletos que se compra (no debe ser \nmayor a 4) y reste de la cantidad disponible. Cuando esta cantidad lleg ue a cero, muestre \nun mensaje y finalice el programa.  \n \n16. Escriba dos versiones de una funci\u00f3n para gener ar un vector de  n  n\u00fameros \naleatorios enteros en el rango desde  a  hasta   b.  \n \na) En la primera versi\u00f3n la funci\u00f3n no requiere controlar que hayan n \u00fameros repetidos en \nel vector que entrega  \n \nb) En la segunda versi\u00f3n la funci\u00f3n debe entregar el vector pero sin n\u00fameros repetidos. La \nfunci\u00f3n tembi\u00e9n deber\u00eda verificar que la cantidad de n\u00fameros enteros en el rango  desde  a   \nhasta  b ,  no sea menor  a  n, caso contrario debe entregar un vector nulo.  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 1367, "end_char_idx": 2821, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4c9f495-a482-40fe-8d09-446b24a70cfc": {"__data__": {"id_": "c4c9f495-a482-40fe-8d09-446b24a70cfc", "embedding": null, "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "20773f74-3832-4dce-b7ca-88124e2b09ec", "node_type": "4", "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "145c6289fca9bf328ed5a6ae42473cb0a1b2735738b4e14d6f68bad745389dfb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3303123-bd43-4e35-8c77-37ec057126ea", "node_type": "1", "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e08c562c7f97854d9f9d965ef1b5a1cde673eef7fb9346bd5cc1f1f37059f06f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1f04976-61f9-4fb4-bbbd-84f9b3e2bf7d", "node_type": "1", "metadata": {}, "hash": "d16d33337753b5d217ad921eeb3f86aaf1ed6f3f7998ffa8d1732284b6233cc5", "class_name": "RelatedNodeInfo"}}, "hash": "f24a3265dcb434f6dbf8161e9bf48836556e3d40e27fa611b68d7c9d3ee8146d", "text": "229 \n \n17. Escriba un programa con un men\u00fa para registrar estudiantes en uno de los dos \nparalelos de una materia mediante las opciones indicadas a continuaci\u00f3n. Cada paralelo \ndebe ser representado mediante un a lista. \n 1) Registrar  \n        Lea el numero del paralelo elegido (1 o 2), luego lea el c\u00f3digo del  \n                estudiante y agr\u00e9guelo a la lista  correspondiente  \n2) Consultar  \n                Lea el c\u00f3digo del estudiante, b\u00fasquelo en l as listas  y muestre el  \n                paralelo en el que est\u00e1 registrado \n \n3) Eliminar  \n                Lea el c\u00f3digo del estudiante. B\u00fasquelo y el\u00edm\u00ednelo de la lista s i est\u00e1 registrado   \n4) Salir  \n \n18. En una escuela de f\u00fatbol se inscriben  n jugadores identificados con su n\u00famero e n la \nlista de asistencia y un c\u00f3digo que identifica su habilidad  1: portero, 2: defensa, 3: \nmediocampista, 4: delantero. Este dato debe ser ingresado y validado.  \n Escriba un algoritmo para ayudar al entrenador a formar dos equipos de 11 jugadores \nelegidos aleatoriamente. Cada equipo debe contener 1  portero, 4 defensas, 2 \nmediocampistas y 4 delanteros. Cada jugador no puede pertenecer a m\u00e1s de un equipo. \nSuponga que en la lista hay suficientes jugadores para elegir.  \n \n19. Escriba un programa para organizar los 32 equipos participantes en un campeonato en \n8 grupos de 4 equipos. La elecci\u00f3n de los equipos debe ser aleatoria pero c ada grupo \ndebe tener un equipo fijo que debe ser un dato inicial . Los equipos no pueden asignarse \nm\u00e1s de una vez en los grupos.  \n \n20.", "start_char_idx": 0, "end_char_idx": 1539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1f04976-61f9-4fb4-bbbd-84f9b3e2bf7d": {"__data__": {"id_": "f1f04976-61f9-4fb4-bbbd-84f9b3e2bf7d", "embedding": null, "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "20773f74-3832-4dce-b7ca-88124e2b09ec", "node_type": "4", "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "145c6289fca9bf328ed5a6ae42473cb0a1b2735738b4e14d6f68bad745389dfb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4c9f495-a482-40fe-8d09-446b24a70cfc", "node_type": "1", "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f24a3265dcb434f6dbf8161e9bf48836556e3d40e27fa611b68d7c9d3ee8146d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e3b3f5c-ce19-4d68-aaaf-cb7c92711160", "node_type": "1", "metadata": {}, "hash": "a334a3dfedaf6ea09688eca81b1baac49bdd19731f4ca41ff563b62955275eb1", "class_name": "RelatedNodeInfo"}}, "hash": "d16d33337753b5d217ad921eeb3f86aaf1ed6f3f7998ffa8d1732284b6233cc5", "text": "20. Escriba una funci\u00f3n  divisores(n)  que entregue una lista  conteniendo todos los \ndivisores enteros positivos que tiene un n\u00famero entero dado n. Escriba un programa de \nprueba que use la funci\u00f3n escrita para encontrar para cada n\u00famero entero en el rango [a, \nb], sus divisores enteros \n \n21. Escriba una funci\u00f3n primos(p)  que reciba una lista p y entregue otra lista q \nconteniendo los elementos de p  que son n\u00fameros primos.  \n \n22. La operaci\u00f3n  xor en el sistema binario produce el siguiente resultado  \n \nm k m xor k \n0 0 0 \n0 1 1 \n1 0 1 \n1 1 0 \n \nEsta operaci\u00f3n se usa para encriptar mensajes en binario en los cuales  m  representa el \nmensaje,  k  la clave para encriptar el mensaje, y  e  el mensaje encriptado.  \n \nEjemplo.  Mensaje que se env\u00eda:  m = 11011001  \n                 Cl ave:  k  =  01100011  \n      Mensaje encriptado:  e  =  10111010 \n \nPython Programaci\u00f3n", "start_char_idx": 1536, "end_char_idx": 2420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e3b3f5c-ce19-4d68-aaaf-cb7c92711160": {"__data__": {"id_": "2e3b3f5c-ce19-4d68-aaaf-cb7c92711160", "embedding": null, "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5c529ba-e85b-46b6-9b29-b183a883d36a", "node_type": "4", "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "73f48a6892db1a7d3026f1db774f2fb143239c0d566499c992fbf6ef8bae866a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1f04976-61f9-4fb4-bbbd-84f9b3e2bf7d", "node_type": "1", "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d16d33337753b5d217ad921eeb3f86aaf1ed6f3f7998ffa8d1732284b6233cc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "779811c3-8732-4547-8be3-2cdef1062d85", "node_type": "1", "metadata": {}, "hash": "176095f28b4ffbc80929313da2bdec38c1ef8c170cd6009cb97f98483abf064a", "class_name": "RelatedNodeInfo"}}, "hash": "a334a3dfedaf6ea09688eca81b1baac49bdd19731f4ca41ff563b62955275eb1", "text": "230 \n \nEl receptor del mensaje encriptado, aplicando la misma clave puede conocer el mensaje:  \n \nEjemplo.  Mensaje encriptado:   e  =  10111010  \n             Clave:     k  =  01100011  \n      Mensaje reci bido:  m = 11011001 \n \nEscriba una funci\u00f3n que reciba un vector conteniendo n\u00fameros en el sistema binario y \nentregue otro vector conteniendo los n\u00fameros binarios con la operaci\u00f3n xor. Esta funci\u00f3n \nse usar\u00e1 para encriptar un mensaje y para conocer el menaje e nviado. La funci\u00f3n debe \nvalidar que los vectores contengan n\u00fameros binarios, caso contrario, el resultado es un \nvector nulo.  \n \n23. Escriba un a funci\u00f3n rango(v,a,b)  que reciba un vector v , y determine cuantos \nelementos est\u00e1n en el rango [a, b]  \n \n24. Escriba una funci\u00f3n que reciba un vector y entregue como resultado otro vector \nconteniendo los mismos elementos del vector ingresado pero con las elementos ubicados aleatoriamente en otro orden \n \nEjm.  Entra  [3, 7, 6, 2, 9, 8],  sale  [6 , 8, 3, 2, 7, 9] \n \nEscriba un programa que llene un vector de n  n\u00fameros aleatorios de una cifra. El \nprograma debe enviar el vector a la funci\u00f3n creada y recibir otro vector. El programa debe \ndeterminar cuantos n\u00fameros coinciden en la misma posici\u00f3n en ambos vectores \n \n25. Las listas A  y B tienen n componentes enteros, mientras que la lista C tiene n pares \nordenados (x\u2208 A, y\u2208B).  \nDetermine si la correspondencia definida por C es inyectiva y sobreyectiva  \n 26. Escriba una funci\u00f3n sumacum(x)  que recibe un vector y entrega otro vector con la \nsuma acumulada de l primer  vector.", "start_char_idx": 0, "end_char_idx": 1558, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "779811c3-8732-4547-8be3-2cdef1062d85": {"__data__": {"id_": "779811c3-8732-4547-8be3-2cdef1062d85", "embedding": null, "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5c529ba-e85b-46b6-9b29-b183a883d36a", "node_type": "4", "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "73f48a6892db1a7d3026f1db774f2fb143239c0d566499c992fbf6ef8bae866a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e3b3f5c-ce19-4d68-aaaf-cb7c92711160", "node_type": "1", "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a334a3dfedaf6ea09688eca81b1baac49bdd19731f4ca41ff563b62955275eb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "333a0ee6-07d8-45ac-9cc4-4b7775f5e007", "node_type": "1", "metadata": {}, "hash": "08c69f702cd5983a2cd3fc8be584cc02d83cceeeb12c139495c441a941057e14", "class_name": "RelatedNodeInfo"}}, "hash": "176095f28b4ffbc80929313da2bdec38c1ef8c170cd6009cb97f98483abf064a", "text": "Compare con la funci\u00f3n cumsum de NumPy  \n>>> x=[2,5, 8,20,10]  \n>>> s=sumacum(x)  \n>>> s \n[2,7,15,35,45]  \n \n27. Para estimar la cantidad de personas asistentes a una marcha convocada por un \npol\u00edtico local, se ha dividido la zona de la marcha en n celdas. A cada celda se le asigna un \nn\u00famero aleatorio que puede ser 1, 2, 3, 4 o 5 que representa la cantidad posible de \npersonas ubicadas en cada lugar.  Escriba un programa para realizar esta estimaci\u00f3n. \nMuestre cuantas celdas conten\u00edan 1, 2, 3, 4 y 5 personas, y el total de asistentes.  \n \n28. Un grupo de n personas debe el egir a su representante. Ser\u00e1 elegida  la persona que \ntenga  m\u00e1s de la mitad de los votos, caso contrario se debe repetir la votaci\u00f3n. Cada \npersona es identificada con un n\u00famero entero entre 1 y n,  y cualquier persona pueden ser \nelegida. Luego de realizar l a votaci\u00f3n, se debe realizar el conteo de los votos y validar si \nes necesario realizar una nueva votaci\u00f3n.  \n \nPython Programaci\u00f3n", "start_char_idx": 1560, "end_char_idx": 2534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "333a0ee6-07d8-45ac-9cc4-4b7775f5e007": {"__data__": {"id_": "333a0ee6-07d8-45ac-9cc4-4b7775f5e007", "embedding": null, "metadata": {"page_label": "231", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4a778863-12fc-4482-b6d1-80447c68e03b", "node_type": "4", "metadata": {"page_label": "231", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dfe3fd9afe7c19f70fe0f60a6289f02f2ee7bae30796babccb720190ebce6db4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "779811c3-8732-4547-8be3-2cdef1062d85", "node_type": "1", "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "176095f28b4ffbc80929313da2bdec38c1ef8c170cd6009cb97f98483abf064a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab9e8e01-946c-4c79-84de-70e60554f5ef", "node_type": "1", "metadata": {}, "hash": "e002333bad25e0fc926a3f4de66daf95f983450475efdd4b506857dadfb90d30", "class_name": "RelatedNodeInfo"}}, "hash": "08c69f702cd5983a2cd3fc8be584cc02d83cceeeb12c139495c441a941057e14", "text": "231 \n \n29. El sistema de vigilancia del transporte p\u00fablico entrega una lista de longitud n con el \nc\u00f3digo de placa de los veh\u00edculos que invaden el carril ex clusivo de este sistema de \ntransporte de pasajeros . La lista puede contener c\u00f3digos repetidos que corresponden a \nveh\u00edculos que cometieron esta infracci\u00f3n m\u00e1s de una vez. La multa por una infracci\u00f3n es \n$100, por dos infracciones el valor se duplica, por tres se triplica, etc.  Escriba un programa \nque lea la lista de c\u00f3digos y muestre para cada uno, la cantidad de infracciones cometidas y el total de la multa a pagar.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 605, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab9e8e01-946c-4c79-84de-70e60554f5ef": {"__data__": {"id_": "ab9e8e01-946c-4c79-84de-70e60554f5ef", "embedding": null, "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2513f373-5131-4fd1-b7a1-dce1995590c6", "node_type": "4", "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aa5b4ab9b0d88bc4ccc1572bfee9bef575291fcee201e6f88fd4f98bf828514c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "333a0ee6-07d8-45ac-9cc4-4b7775f5e007", "node_type": "1", "metadata": {"page_label": "231", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "08c69f702cd5983a2cd3fc8be584cc02d83cceeeb12c139495c441a941057e14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "159ea16a-86eb-4b76-bf4c-fd5e15ae30b5", "node_type": "1", "metadata": {}, "hash": "5966ec599915a299dc1a0749ed6ffcc90885fbd8f185a3855466baece97ab4c8", "class_name": "RelatedNodeInfo"}}, "hash": "e002333bad25e0fc926a3f4de66daf95f983450475efdd4b506857dadfb90d30", "text": "232 \n \n7.3 Cadenas de caracteres (strings)  \n \nUna cadena de caracteres o string, es una colecci\u00f3n de caracteres que se escriben entre \ncomillas simples o comillas dobles:  \n \n 'caracteres'   \n\"caracteres\"  \n \nLas cadenas de caracteres tambi\u00e9n se pueden indexar  pero los componentes de una \ncadena de caracteres no se pueden modificar  mediante una asignaci\u00f3n . Pytho n dispone \nde funciones especiales para modificar el contenido de las cadenas de caracteres.  \n \nLas celdas son numeradas desde cero .  El primer  car\u00e1cter, o primera celda, tiene \u00edndice \n0.  El segundo car\u00e1cter, o segunda celda, tiene \u00edndice 1, etc.  \n \nSe puede ac ceder a los caracteres de una cadena mediante un indice entre corchetes.  \nSe puede acceder a varios caracteres o componentes mediante un  rango para el \u00edndice.  \nEl rango  no incluye el extremo derecho especificado.  \n \nEjemplos .", "start_char_idx": 0, "end_char_idx": 867, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "159ea16a-86eb-4b76-bf4c-fd5e15ae30b5": {"__data__": {"id_": "159ea16a-86eb-4b76-bf4c-fd5e15ae30b5", "embedding": null, "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2513f373-5131-4fd1-b7a1-dce1995590c6", "node_type": "4", "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aa5b4ab9b0d88bc4ccc1572bfee9bef575291fcee201e6f88fd4f98bf828514c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab9e8e01-946c-4c79-84de-70e60554f5ef", "node_type": "1", "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e002333bad25e0fc926a3f4de66daf95f983450475efdd4b506857dadfb90d30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25a62417-125e-461d-a7c7-b8a3c40d4f68", "node_type": "1", "metadata": {}, "hash": "a1ab1ea673bd1f43b7626675195d9b5af128561107d0bae889d4a1af683bcd5d", "class_name": "RelatedNodeInfo"}}, "hash": "5966ec599915a299dc1a0749ed6ffcc90885fbd8f185a3855466baece97ab4c8", "text": "Ejemplos . \n \n>>> x='programa'    es la definci \u00f3n de una cadena de caracteres  \n \nLa representaci\u00f3n de una cadena en celdas de memoria numeradas desde cero  es similar \na una lista:  \n \n'p' 'r' 'o' 'g' 'r' 'a' 'm' 'a' \n               0      1       2       3       4       5        6       7  \n \nManejo de \u00edndices con cadenas y listas de cadenas  \n \n>>> x[0]     el primer car\u00e1cter  o primera celda (es la celda 0 ) \n'p' \n \n>>> x[:4]     los caracteres desde la celda 0  hasta la celda 3  \n'prog'     (el rango no incluye el \u00faltimo)  \n >>> x[3:6]     los caracteres en las celdas  3   a  5 \n'gra' \n \n>>> x[-1]    el \u00faltimo car\u00e1cter  \n'a' \n \n>>> x[-2:]    los dos \u00faltimos caracteres \n'ma' \n >>> x[:- 1]    todos los caracteres menos el \u00faltimo \n'program'     (en el rango no se incluye el extremo final)  \n \n \nPython Programaci\u00f3n", "start_char_idx": 857, "end_char_idx": 1685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25a62417-125e-461d-a7c7-b8a3c40d4f68": {"__data__": {"id_": "25a62417-125e-461d-a7c7-b8a3c40d4f68", "embedding": null, "metadata": {"page_label": "233", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35e2f20c-6fba-46a9-9259-4e7811b44377", "node_type": "4", "metadata": {"page_label": "233", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "83e264808088532d32e521eca3390983197942a1b55be4aac5684c419bce17ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "159ea16a-86eb-4b76-bf4c-fd5e15ae30b5", "node_type": "1", "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5966ec599915a299dc1a0749ed6ffcc90885fbd8f185a3855466baece97ab4c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab533df3-0d3d-4b93-b0c5-3b5749bfd368", "node_type": "1", "metadata": {}, "hash": "b3040ca64219d87ea6aa10e3f93130b50cdafc15382b4f0f2e7b8aab69a52f21", "class_name": "RelatedNodeInfo"}}, "hash": "a1ab1ea673bd1f43b7626675195d9b5af128561107d0bae889d4a1af683bcd5d", "text": "233 \n \n>>> x[1]= 'u'   Error:  no se pueden modificar los componentes  \nTypeError: 'str' object does not support item assignment   \n \n>>> x[8]     Error:  \u00edndice fuera de rango  \nIndexError:  string index out of range \n >>> x[::2]     Caracteres en celdas pares \n'porm' \n>>> x[1::2]     Caracteres en celdas impares \n'rgaa' \n>>> x=''     Un car\u00e1cter nulo son dos comillas juntas  \n >>> x='programa'    Notaci\u00f3n especial para invertir la cadena  \n>>> x[::- 1] \n'amargorp'  \n >>> p='programa'  \n>>> p[3]  \n'g' >>> p[3:]  \n'grama' \n>>> p[:3]  \n'pro' \n>>> p[-2:] \n'ma' \n>>> p[3:- 1] \n'gram' \n>>> p[1:4]  \n'rog' \n \n>>> t=['mar\u00eda', 'juan', 'anita', 'luis']   Lista de cadenas  \n>>> t[:2]  \n['mar\u00eda', 'juan']  \n>>> t[1:3]  \n['juan', 'anita']  \n>>> t[2:]  \n['anita', 'luis']  \n>>> t[2][1:]  \n'nita' \n>>> t[1]       Cadena en la posici\u00f3n 1  \n'juan' \n>>> t[1][- 1]      El \u00faltimo car\u00e1cter de la cadena 1  \n'n' \n>>> t[-1]      \u00daltima cadena de la lista \n'luis' \n>>> t[-1][-1]     \u00daltimo car\u00e1cter de la \u00faltima cadena  \n's' \n>>> t[2][1: -2] \n'ni' \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1054, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab533df3-0d3d-4b93-b0c5-3b5749bfd368": {"__data__": {"id_": "ab533df3-0d3d-4b93-b0c5-3b5749bfd368", "embedding": null, "metadata": {"page_label": "234", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5af93b52-0c9e-4335-ad63-9a50d9606584", "node_type": "4", "metadata": {"page_label": "234", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "edc1eaf5e251056972ebc5c4976c1c4389bd822ed6e83839cd480b90976b5c43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25a62417-125e-461d-a7c7-b8a3c40d4f68", "node_type": "1", "metadata": {"page_label": "233", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a1ab1ea673bd1f43b7626675195d9b5af128561107d0bae889d4a1af683bcd5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b6eded0-5a20-4b49-b2c8-912adc4cb434", "node_type": "1", "metadata": {}, "hash": "226ba64d2969b7b757086a2b3fff669c60f3e4e88452a8309503e20c53f15882", "class_name": "RelatedNodeInfo"}}, "hash": "b3040ca64219d87ea6aa10e3f93130b50cdafc15382b4f0f2e7b8aab69a52f21", "text": "234 \n \n \nCadenas de caracteres constantes \n \nLa clase string  (se puede entender una clase como librer\u00eda)  contiene cadenas de \ncaracteres constantes que pueden ser de utilidad como referencia en algunas \naplicaciones.  Para acceder a las definiciones de la  clase se  debe importarla con el nombre  \nstring .  \n La siguiente es la lista de constantes disponibles:  \n \n    ascii_letters  = 'abcdefghijklmnopq rstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'  \n    ascii_lowercase = 'abcdefghijklmnopqrstuvwxyz'  \n    ascii_uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'  \n    digits  = '0123456789'  \n    hexdigits  = '0123456789abcdefABCDEF'  \n    octdigits  = '01234567'  \n    printable  = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTU...  \n    punctuation  = '!\"#$%& \\'()*+, -./:;<=>?@[\\ \\]^_`{|}~'  \n    whitespace = ' \\t\\n\\r\\x0b\\x0c' \n \nEjemplo.  \n \n>>> from string import* \n>>> x=digits  \n>>> x \n'0123456789'  \n \n \nM\u00e9todos , operadores y funciones  para caden as de caracteres de la clase str  \n \nLa clase  str (se puede entender como librer\u00eda) de Python contiene m\u00e9todos (funciones) \npara manejo de cadenas de caracteres . Esta clase es residente y no necesita \nimportarse para usarla. Al crear una variable u objeto de t ipo cadena de caracteres se \ntiene acceso a las funciones o m\u00e9todos definidos en la clase str  y se los usa con la \nsiguiente notaci\u00f3n:   objeto.m\u00e9todo \n \nEn Python, las listas son inmutables, esto significa que no pueden modificarse sus \ncomponente mediante una asignaci\u00f3n directa como en las listas, pero existen funciones \nque  facilitan el manejo de este tipo de datos.  \n \nLa clase str  contiene una gran cantidad de funciones o m\u00e9todos para operar con cadenas \nde caracteres. Algunos m\u00e9todos disponibles en  esta clase:  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b6eded0-5a20-4b49-b2c8-912adc4cb434": {"__data__": {"id_": "6b6eded0-5a20-4b49-b2c8-912adc4cb434", "embedding": null, "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f439fd7-3e60-4448-8fff-6bef29fdd82f", "node_type": "4", "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66e1203c470d997924788fabd608f64c9181447f529aca90f62b4022b5b91658", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab533df3-0d3d-4b93-b0c5-3b5749bfd368", "node_type": "1", "metadata": {"page_label": "234", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b3040ca64219d87ea6aa10e3f93130b50cdafc15382b4f0f2e7b8aab69a52f21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "295eba58-3367-4c42-a4b3-eaf19974c164", "node_type": "1", "metadata": {}, "hash": "b9a803ea1b2f1f4946d3624616602190f94649224b5746cb3251efd5e6677b26", "class_name": "RelatedNodeInfo"}}, "hash": "226ba64d2969b7b757086a2b3fff669c60f3e4e88452a8309503e20c53f15882", "text": "235 \n \nSea  s : objeto de tipo cadena de caracteres   \n \nM\u00e9todo  Resultado  \ns.capitalize()  Cadena con la primera letra may\u00fascula y las dem\u00e1s \nmin\u00fasculas  \ns.center(n,c)  Cadena centrada en n espacios. El relleno es un car\u00e1cter \nopcional c  \ns.count(t,a,b)  Cantidad de o currencias de la subcadena t en la cadena s. \nOpcionalmente se puede indicar el rango de b\u00fasqueda: a,b  \ns.find(t,a,b)  Menor \u00edndice de la subcadena t en s. Se puede indicar el \nrango de b\u00fasqueda: a,  b,  si no lo encuentra retorna - 1 \ns.isalpha()  Retorna True si todos los caracteres son alfab\u00e9ticos  \ns.isdigit()  Retorna True si todos los caracteres son d\u00edgitos  \ns.islower()  Retorna True si todos los caracteres son min\u00fasculas  \ns.isupper()  Retorna True si todos los caracteres son may\u00fasculas  \ns.ljust(n,c)  Cadena jus tificada a la izquierda en n espacios.  \nEl relleno es un car\u00e1cter opcional  c \ns.lower()  Cadena convertida a min\u00fasculas  \ns.replace(t,r,n)  Cadena con la subcadena t r eemplazada por la subcadena \nr. Opcional se puede indicar la cantidad de reemplazos  n \ns.rfind(t,a,b)  Mayor \u00edndice de la subcadena t en s. Opci \u00f3n se puede \nindicar rango de b\u00fasqueda: a,b. Si no encuentra retorna - 1 \ns.rjust(n,c)  Cadena justificada a la derecha en n espacios. El relleno \nes un car\u00e1cter opcional c  \ns.split(c)  Entrega  una lista cuyos componentes son las palabras de s  \nseparadas con un car\u00e1cter  c \ns.lstrip()  Cadena con espacios a la izquierda eliminados . Se puede \nespecificar el car\u00e1cter a eliminarse si no son los espacios.", "start_char_idx": 0, "end_char_idx": 1525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "295eba58-3367-4c42-a4b3-eaf19974c164": {"__data__": {"id_": "295eba58-3367-4c42-a4b3-eaf19974c164", "embedding": null, "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f439fd7-3e60-4448-8fff-6bef29fdd82f", "node_type": "4", "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66e1203c470d997924788fabd608f64c9181447f529aca90f62b4022b5b91658", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b6eded0-5a20-4b49-b2c8-912adc4cb434", "node_type": "1", "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "226ba64d2969b7b757086a2b3fff669c60f3e4e88452a8309503e20c53f15882", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b4afadc-aaf3-4999-aa89-1afccf9e038a", "node_type": "1", "metadata": {}, "hash": "2a93b8213bb2e5d05e361c03be3874e3d9f1fee3a7b12b455316a1a377ae05ea", "class_name": "RelatedNodeInfo"}}, "hash": "b9a803ea1b2f1f4946d3624616602190f94649224b5746cb3251efd5e6677b26", "text": "s.rstrip()  Cadena con espacios a la derecha eliminados . Se pued e \nespecificar el car\u00e1cter a eliminarse si no son los espacios.  \ns.strip()  Cadena con los espacios a la derecha e izquierda \neliminados . Se puede especificar el car\u00e1cter a eliminarse.  \ns.upper()  Cadena convertida a may\u00fasculas  \ns.startswith(t,a,b)  Resultado v erdadero si  s  comienza con la subcadena   t \nOpcionalmente se puede indicar el rango de b\u00fasqueda: a,b \ns.endswith(t,a,b)  Resultado verdadero si  s  termina con la subcadena  t \ns.join(t)  Entrega una cadena concatenada de cadenas incluidas en \nt: cadena, lis ta, tupla, conjunto, separadas por la cadena s  \n \nFunciones y operadores adicionales  \n \nlen(s)      Funci\u00f3n para determinar la cantidad de caracteres en la cadena s  \n+      Operador de c oncatenaci\u00f3n de cadenas  \nin,  not in      Operador es de inclusi\u00f3n o pertenen cia \n str      Convierte un objeto a cadena de caracteres  \n \nPython Programaci\u00f3n", "start_char_idx": 1528, "end_char_idx": 2472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b4afadc-aaf3-4999-aa89-1afccf9e038a": {"__data__": {"id_": "8b4afadc-aaf3-4999-aa89-1afccf9e038a", "embedding": null, "metadata": {"page_label": "236", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0573a59b-a199-44f9-b6d0-a8a9ba7622e3", "node_type": "4", "metadata": {"page_label": "236", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a1157fe515f6f5a1dfc42fba8e3e5e2122d64de70aff796fc3a1b8befbcf376", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "295eba58-3367-4c42-a4b3-eaf19974c164", "node_type": "1", "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b9a803ea1b2f1f4946d3624616602190f94649224b5746cb3251efd5e6677b26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3dde61e-26bb-4960-99cc-569d2c7b89ba", "node_type": "1", "metadata": {}, "hash": "9b39e0c290170b490ffed3337c3ace9f3d4030e370823c2175baf4590a7a03a1", "class_name": "RelatedNodeInfo"}}, "hash": "2a93b8213bb2e5d05e361c03be3874e3d9f1fee3a7b12b455316a1a377ae05ea", "text": "236 \n \nFunciones especiales para cadenas  \n \n>>> s='esta es una prueba ' \n>>> s.count('e')     Conteo de coincidencias  del car\u00e1cter 'e' \n3 \n>>> s.capitalize()     Cambia a may\u00fascula el car\u00e1cter inicial  \n'Esta es un a prueba'    (la cadena original no es modificada)  \n \n>>> s.find('ta')     B\u00fasqueda del \u00edndice de una coincidencia  \n2 \n >>> s.replace('e','E')    Reemplazo de subcadenas en una cadena  \n'Esta Es una pruEb a'   (la cadena original no es modificada)  \n \n>>> s.upper()     Cambiar a may\u00fasculas)  \n'ESTA ES UNA PRUEB A'   (la cadena original no es modificada)  \n>>> m='programa'      \n>>> s=m.replace('a','')    Eliminar todas las ocurrencias de la letra  \u2018a\u2019 \n \n>>> s  \n'progrm'  \n>>> s=m.replace('a','',1)   Eliminar la primera ocurrencia de la letra  \u2018a\u2019  \n>>> s      (la cadena original no es modificada)  \n'progrma'  \n>>> s=m[:4]+m[5:]     Eliminar el car\u00e1cter en la celda 4  \n>>> s \n'progama'  \n \n>>> s=m[1:]      Eliminar  el primer car\u00e1cter  \n>>> s \n'rograma'  \n>>> s=m[:- 1]     Eliminar  el \u00faltimo car\u00e1cter  \n>>> s \n'program'  \n \n>>> m='e sta es una prueba'  \n>>> s=m.replace(' ','')    Eliminar los espacios en blanco de la cadena \n>>> s       Los espacios ' '  son reemplazadoc  \n'estaesunaprueba'     por un car\u00e1cter nulo  '' \n \n>>> s='     abc'      \n>>> t=s.lstrip()     Elimina es pacios a la izquierda  \n>>> t \n'abc' \n \n>>> s='     abc       '    \n>>> t=s.strip()     Elimina espacios en ambos lados \n>>> t \n'abc' \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1466, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3dde61e-26bb-4960-99cc-569d2c7b89ba": {"__data__": {"id_": "b3dde61e-26bb-4960-99cc-569d2c7b89ba", "embedding": null, "metadata": {"page_label": "237", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8915eeaf-e9d0-4442-87a6-fe3105a45a2e", "node_type": "4", "metadata": {"page_label": "237", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fe59da218b9ac56708ba5d2600422ee6110c0db748495f5665d41093056f0a9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b4afadc-aaf3-4999-aa89-1afccf9e038a", "node_type": "1", "metadata": {"page_label": "236", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a93b8213bb2e5d05e361c03be3874e3d9f1fee3a7b12b455316a1a377ae05ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bfdc513-885f-4c91-9fe5-0a9f34b658c2", "node_type": "1", "metadata": {}, "hash": "2a4b090ac92a3a834d73b4dc9c509d101a1e5485b4a1a70b8dc4636ff27f117e", "class_name": "RelatedNodeInfo"}}, "hash": "9b39e0c290170b490ffed3337c3ace9f3d4030e370823c2175baf4590a7a03a1", "text": "237 \n \n>>> s='abc'                 \n>>> t=s.rjust(10)         Ajusta la cadena a la derecha en 10 columnas  \n>>> t \n'       abc'  \n \n>>> m='python'  \n>>> m.rstrip('n')          Elimina subcadena a la derecha  \n'pytho' \n>>> m.rstrip('hon')  \n'pyt' \n >>> s='mar\u00eda,juan,anita,luis'     \n>>> t=s.split(',')     Convierte una cadena en una lista \n>>> t \n['mar\u00eda', ' juan', 'anita', ' luis']  \n \n>>> u='www.espol.edu.ec'  \n>>> s=u.split('.')  \n>>> s \n['www', 'espol', 'edu', 'ec']  \n \n \n>>> s='programa'      \n>>> '-'.join(s)     Inserta separadores entre caracteres  \n'p-r-o-g-r-a-m-a' \n \n>>> t=['esta','es','una','prueba']   \n>>> u='##'.join(t)     Inserta separadores entre cadenas  \n>>> u      de una lista \n'esta##es## una##prueba'  \n \n>>> t=['esta','es','una','prueba']  Se puede usar para convertir una  \n>>> f=' '.join(t)     lista d e cadenas en una frase  \n>>> f      Es la operaci\u00f3n opuesta a   f.split(' ') \n'esta es una prueba'  \n \n>>> t=f.split(' ')  \n>>> t \n['esta', 'es', 'una', 'prueba']  \n >>> u='www.espol.edu.ec'     \n>>> u.endswith('ec')    Detecta subcadena al final  \nTrue \n >>> u.startswith('www')    Detecta subcadena al inicio \nTrue \n >>> len(s)      Longitud de la cadena  \n18 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1218, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bfdc513-885f-4c91-9fe5-0a9f34b658c2": {"__data__": {"id_": "3bfdc513-885f-4c91-9fe5-0a9f34b658c2", "embedding": null, "metadata": {"page_label": "238", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95221215-1051-4590-9fdd-1a93c200a4a6", "node_type": "4", "metadata": {"page_label": "238", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3edafe869fdc09e79d5977455c805db571543b6ba7966f7c8e429e2ea34d6a99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3dde61e-26bb-4960-99cc-569d2c7b89ba", "node_type": "1", "metadata": {"page_label": "237", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9b39e0c290170b490ffed3337c3ace9f3d4030e370823c2175baf4590a7a03a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95b47f51-545b-4c30-9eff-9a720115d30f", "node_type": "1", "metadata": {}, "hash": "b4fce4e4a38d78910c408b81d5d2bc77023bd94dbebf19b66943fcb837eab6fa", "class_name": "RelatedNodeInfo"}}, "hash": "2a4b090ac92a3a834d73b4dc9c509d101a1e5485b4a1a70b8dc4636ff27f117e", "text": "238 \n \ns='programa'  \n>>> 'gra' in s    Operador de pertenencia    \nTrue \n>>> s=s+' Python'    Concatenaci\u00f3n de cadenas  \n>>> s \n'programa Python'  \n>>> s='programa'  \n>>> c=ord(s[0])    Representaci\u00f3n en c\u00f3digo ASCII de un car\u00e1cter  \n>>> c \n112 \n>>> t=chr(112)    Representaci\u00f3n de un c\u00f3digo ASCII como car\u00e1cter  \n>>> t \n'p' \n \n>>> x=675  \n>>> str(x)     Conversi\u00f3n de un entero  a cadena \n'675' \n >>> x=[34,56,79]  \n>>> str(x) \n'[34, 56, 79]'  \n \n>>> s='programa'     Construcci\u00f3n de una lista desde una cadena \n>>> list(s) \n['p', 'r', 'o', 'g', 'r', 'a', 'm', 'a']  \n \n>>> x='abc'      \n>>> y='abde'      Uso de operadores relacionales  \n>>> r=x<y      La comparaci\u00f3n es car\u00e1cter con car\u00e1cter  \n>>> r      en el orden alfab\u00e9tico \nTrue \n \n \nObservaci\u00f3n:  el resultado de  x[:-1]  no es igual a  x.rstrip()  \n \nLos resultados son iguales s i el car\u00e1cter final es  la marca de  fin de linea  ' \\n'   \n >>> x=['lunes','martes','mi\u00e9rcoles'] \n>>> x[-1] \n'mi\u00e9rcoles'  \n>>> x[-1][-1] \n's' \n>>> x[-1][:-1]    Elimina un  car\u00e1cter a la derecha \n'mi\u00e9rcole'  \n>>> x[-1].rstrip()     No elimina caracteres a la derecha \n'mi\u00e9rcoles'  \n \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95b47f51-545b-4c30-9eff-9a720115d30f": {"__data__": {"id_": "95b47f51-545b-4c30-9eff-9a720115d30f", "embedding": null, "metadata": {"page_label": "239", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f2cc89e7-ff7c-4a53-8cd1-13588506bdd4", "node_type": "4", "metadata": {"page_label": "239", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "84e9c767e9c6661bd57c473f55a5450c67c0afb3a0cc8ac73aa7d601038cb496", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bfdc513-885f-4c91-9fe5-0a9f34b658c2", "node_type": "1", "metadata": {"page_label": "238", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a4b090ac92a3a834d73b4dc9c509d101a1e5485b4a1a70b8dc4636ff27f117e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b1464ee-6a50-43fe-b1a7-67b1464a355d", "node_type": "1", "metadata": {}, "hash": "bf29c95d890ceba7d20cf346608585ff61c220ee9d3725d094f48d24129c0914", "class_name": "RelatedNodeInfo"}}, "hash": "b4fce4e4a38d78910c408b81d5d2bc77023bd94dbebf19b66943fcb837eab6fa", "text": "239 \n \n>>> x=['lunes','martes','mi\u00e9rcoles  '] \n>>> x[-1][:-1]    Elimina un  espacio a la derecha  \n'mi\u00e9rcoles '        \n>>> x[-1].rstrip()     Elimina todos  los espacio a la derecha  \n'mi\u00e9rcoles'  \n \n>>> x=['lunes','martes','mi\u00e9rcoles\\ n'] \n>>> x[-1] \n'mi\u00e9rcoles\\ n' \n>>> x[-1][-1]     \n'\\n' \n>>> x[-1][:-1]    Elimina el car\u00e1cter  '\\n' a la derecha  \n'mi\u00e9rcoles'  \n>>> x[-1].rstrip()     Elimina el car\u00e1cter  '\\n' a la derecha  \n'mi\u00e9rcoles'  \n \n \nTambi\u00e9n se puede eliminar el car \u00e1cter  '\\n' a la derecha reemplaz\u00e1ndolo por un car\u00e1cter \nnulo:  \n \n>>> x=['lunes','martes','mi\u00e9rcoles\\ n'] \n>>> x[-1].replace('\\ n','') \n'mi\u00e9rcoles'  \n \n        \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 664, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b1464ee-6a50-43fe-b1a7-67b1464a355d": {"__data__": {"id_": "6b1464ee-6a50-43fe-b1a7-67b1464a355d", "embedding": null, "metadata": {"page_label": "240", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "419cf36b-7e26-4a8a-9f6b-13a136668953", "node_type": "4", "metadata": {"page_label": "240", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ca8b7b0e32e11f849ffe77bf82aae26ce187b2f98cd7bfb47b6b963192b3037b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95b47f51-545b-4c30-9eff-9a720115d30f", "node_type": "1", "metadata": {"page_label": "239", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b4fce4e4a38d78910c408b81d5d2bc77023bd94dbebf19b66943fcb837eab6fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dcae77f-a07f-4fe6-a551-2261a7f3ab6f", "node_type": "1", "metadata": {}, "hash": "effa5074c0057d6a644d53ca9ff62932e5628273f57c9cd51259e877f3a86a81", "class_name": "RelatedNodeInfo"}}, "hash": "bf29c95d890ceba7d20cf346608585ff61c220ee9d3725d094f48d24129c0914", "text": "240 \n \n7.3.1 Resoluci\u00f3n de problemas con cadenas de caracteres \n \nEjemplo.  Escribir  un programa que lea una cadena y la muestre con los caracteres \nubicados  en orden inverso \n \nInstrumentaci\u00f3n  \nLos caractere s de la cadena ingresada son colocados en otra cadena, inicialmente \nvac\u00eda, agreg\u00e1ndolos de derecha a izquierda  \n \n  \n#Invertir una frase  \ns=input( 'Ingrese una frase: ')  \nt='' \nfor c in s: \n    t=c+t \nprint(t)  \n \n \nPrueba del programa  \n>>>  \nIngrese una frase:  Esta es una prueba \nabeurp anu se atsE  \n \n \n \nEjemplo.  Reescribir el programa de la soluci\u00f3n del ejemplo anterior como una funci\u00f3n \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  strinvertir  \n Par\u00e1metro:  s  cadena  \n Resultado:  t  cadena invertida  \n \n  \ndef strinvertir(s):  \n    t=''  \n    for c in s: \n        t=c +t \n    return t \n \n \nPrueba de la funci\u00f3n en la ventana interactiva  \n \n>>> from strinvertir import strinvertir  \n>>> x='Esta es una prueba'  \n>>> y=strinvertir(x)  \n>>> y \n'abeurp anu se atsE'  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3dcae77f-a07f-4fe6-a551-2261a7f3ab6f": {"__data__": {"id_": "3dcae77f-a07f-4fe6-a551-2261a7f3ab6f", "embedding": null, "metadata": {"page_label": "241", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33e8e824-e1e8-40c5-b7b7-fce360b5fe47", "node_type": "4", "metadata": {"page_label": "241", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f4eb51644dc5834500c4816c0939e235f432eeaae7b91e0357ee97dbf0e7252e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b1464ee-6a50-43fe-b1a7-67b1464a355d", "node_type": "1", "metadata": {"page_label": "240", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf29c95d890ceba7d20cf346608585ff61c220ee9d3725d094f48d24129c0914", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fcf757d-6926-4ac7-bf8f-48b34dcb992f", "node_type": "1", "metadata": {}, "hash": "9a3ae940b5fcb68f3c4597cf91e8e79012b8e5ef13cf1baf99ce4a62359c3dce", "class_name": "RelatedNodeInfo"}}, "hash": "effa5074c0057d6a644d53ca9ff62932e5628273f57c9cd51259e877f3a86a81", "text": "241 \n \nM\u00e9todo directo para invertir un cadena de c aracteres usando  \u201cslicing\u201d  \n \n>>> x='Esta es una prueba'  \n>>> x[::- 1] \n'abeurp anu se atsE'  \n \n \nEjemplo. En la ventana interactiva resuelva el siguiente problema: Dada una frase, \ndetermine si es un pal\u00edndromo.  \n \nUn pal\u00edndromo es una frase que se puede leer igual  de izquierda a derecha o de derecha \na izquierda. Los espacios en blanco ni las tildes cuentan para esta definici\u00f3n , tampoco \nimporta si son may\u00fasculas o min\u00faculas  \n \nSoluci\u00f3n en la ventana interactiva  \n \n>>> s='Anita lava la tina '   Frase original  \n>>> s=s.upper()      Cambiar a may\u00fasculas  \n>>> s \n'ANITA LAVA LA TINA'  \n \n>>> s=s.replace(' ','')     Eliminar espacios \n>>> s \n'ANITALAVALATINA'  \n \n \n>>> t=s[::- 1]     Invertir la frase  \n>>> t \n'ANITALAVALATINA'  \n >>> s==t       Comparar ambas frases \nTrue        Se verifica que es un pal\u00edndromo  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 908, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fcf757d-6926-4ac7-bf8f-48b34dcb992f": {"__data__": {"id_": "1fcf757d-6926-4ac7-bf8f-48b34dcb992f", "embedding": null, "metadata": {"page_label": "242", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa59aa8d-1a9e-4b50-82e2-d619f90f4b9e", "node_type": "4", "metadata": {"page_label": "242", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8ce69568c03e8803a76f13e9d40bbfa6b497c60d1ab6479c426cfb366d1d5e0d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dcae77f-a07f-4fe6-a551-2261a7f3ab6f", "node_type": "1", "metadata": {"page_label": "241", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "effa5074c0057d6a644d53ca9ff62932e5628273f57c9cd51259e877f3a86a81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eed755e6-1557-4c7b-b898-104e6c0d7976", "node_type": "1", "metadata": {}, "hash": "99eeaaf423aa5cf9baadcee3f793ac4de867e8a897c8b566e7d5b8352c39e63b", "class_name": "RelatedNodeInfo"}}, "hash": "9a3ae940b5fcb68f3c4597cf91e8e79012b8e5ef13cf1baf99ce4a62359c3dce", "text": "242 \n \nEjemplo.  Leer una frase y mostrarla en criptada intercambiando parejas consecutivas de \ncaracteres  \n \ndef strcripto(s):  \n    r=''  \n    n=len(s)  \n    for i in range(0,n-1,2): \n        a=s[i]  \n        b=s[i+1]  \n        r=r+b+a  \n    if n%2!=0: \n        r=r+s[n- 1] \n    return r \n \n \nPrueba de la funci\u00f3n  \n \n>>> from strcripto  import strcripto  \n>>> s='programas'  \n>>> r=strcripto(s)  \n>>> r \n'rpgoarams'     Mensaje encriptado \n>>> t=strcripto(r)    La misma funci\u00f3n restaura el mensaje original  \n>>> t     ingresando el men saje encriptado \n'programas'  \n  \nEjemplo. Lea nombres que pueden tener diferente longitud y forme una lista con ellos . \nMuestre por cada nombre, la cantidad de veces que contiene la letra \u2018a\u2019  \n \n \n#Manejo de una lista de cadenas de caracteres  \nn=int(input('Cantidad de nombres : ')) \ns=[] \nfor i in range(n):  \n    x=input ('Ingrese nombre: ')  \n    s=s+[x]  \nfor x in s: \n    c=x.count('a')  \n    print(x,c)  \n \n \n>>>  \nCantidad de nombre: 3  \nIngrese nombre: doris \nIngrese nombre: anita  \nIngrese nombre: carmen  \ndoris 0 \nanita 2 \ncarmen 1  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eed755e6-1557-4c7b-b898-104e6c0d7976": {"__data__": {"id_": "eed755e6-1557-4c7b-b898-104e6c0d7976", "embedding": null, "metadata": {"page_label": "243", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e3b55aa-2cca-4505-8391-33dc53cde066", "node_type": "4", "metadata": {"page_label": "243", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1c1e34c51068600150ee9854d983257d72d874fcb4d8f3b5e5e99cf9882bb281", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fcf757d-6926-4ac7-bf8f-48b34dcb992f", "node_type": "1", "metadata": {"page_label": "242", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a3ae940b5fcb68f3c4597cf91e8e79012b8e5ef13cf1baf99ce4a62359c3dce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fef8e3f3-d3df-4b3b-89c5-535a3cfa1bde", "node_type": "1", "metadata": {}, "hash": "bcb02bd104682848a5cd2e00c16ae2976a09d1d99f36be59b688cf9ea2315055", "class_name": "RelatedNodeInfo"}}, "hash": "99eeaaf423aa5cf9baadcee3f793ac4de867e8a897c8b566e7d5b8352c39e63b", "text": "243 \n \n \nEjemplo.  Lea una lista de nombres.  Forme otra lista con  los nombres sin el car\u00e1cter ' a' \n \n \n#Manejo de una lista de cadenas de caracteres  \nn=int(input('Cantidad de nombres : ')) \ns=[] \nfor i in range(n):  \n    x=input ('Ingrese nombre: ')  \n    s=s+[x]  \nt=[] \nfor e in s: \n    if 'a' not in e: \n        t=t+[e ] \nprint(t)  \n \n>>>  \nCantidad de nombre s: 4 \nIngrese nombre: doris  \nIngrese nombre: anita  \nIngrese nombre: carmen  \nIngrese nombre: roxy \n['doris', 'roxy']  \n \n \nEjemplo.  Un \u201clipograma\u201d es un texto en el cual no debe incluirse a prop\u00f3sito cierta letra del \nalfabeto.  \n Escribir una funci\u00f3n con el nombre  lipovocal(frase)  que reciba una l\u00ednea de texto y retorne \ncomo respuesta la \u00fanica vocal que no ha sido utilizada, o un car\u00e1cter nulo en otros casos.  \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  lipovocal  \n Par\u00e1metro:  cadena de texto  \n Resultado:  vocal o un car\u00e1cter nulo  \n \nMediante un ciclo se determina si existe solamente una vocal que no est\u00e1 incluida en el \ntexto.  \n \nEste ejemplo muestra el poder del operador de pertenencia  in  para tomar valores de una \nlista en un ciclo  for  y como condicional en una decisi\u00f3n  if.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fef8e3f3-d3df-4b3b-89c5-535a3cfa1bde": {"__data__": {"id_": "fef8e3f3-d3df-4b3b-89c5-535a3cfa1bde", "embedding": null, "metadata": {"page_label": "244", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "908bf419-b077-4f43-94c6-a411f0319ab7", "node_type": "4", "metadata": {"page_label": "244", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "81bd2c729c498a08e20ed776b52373b932655eda1968273f7d2ee5691dfcc9cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eed755e6-1557-4c7b-b898-104e6c0d7976", "node_type": "1", "metadata": {"page_label": "243", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "99eeaaf423aa5cf9baadcee3f793ac4de867e8a897c8b566e7d5b8352c39e63b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "745e5ba6-8dae-4413-a033-8580938caab6", "node_type": "1", "metadata": {}, "hash": "0227af1f1e865f27d3b6cfcaac3b446cb0dcfb618f7030a42c10c66fef0776d0", "class_name": "RelatedNodeInfo"}}, "hash": "bcb02bd104682848a5cd2e00c16ae2976a09d1d99f36be59b688cf9ea2315055", "text": "244 \n \nFunci\u00f3n \n \ndef lipovocal(frase):  \n    c=0 \n    for vocal in ['a','e','i','o','u']:  \n        if vocal not in frase: \n            c=c+1  \n            v=vocal  \n    if c==1: \n        return  v \n    else:  \n        return ' ' \n \n \nPrueba  \n \n>>> from lipovocal import* \n>>> frase=' esta frase es una prueba' \n>>> v=lipovocal(frase)  \n>>> v \n' ' \n>>> frase=' esta frase es otra prueba' \n>>> v=lipovocal(frase)  \n>>> v \n'i' >>>  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "745e5ba6-8dae-4413-a033-8580938caab6": {"__data__": {"id_": "745e5ba6-8dae-4413-a033-8580938caab6", "embedding": null, "metadata": {"page_label": "245", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59b3eeb3-492f-4c93-97ea-978db88ce748", "node_type": "4", "metadata": {"page_label": "245", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "425e70ee88f560f3e11f805cb1167714e66b22d5fb2f2929fb3feeb27eeff935", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fef8e3f3-d3df-4b3b-89c5-535a3cfa1bde", "node_type": "1", "metadata": {"page_label": "244", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bcb02bd104682848a5cd2e00c16ae2976a09d1d99f36be59b688cf9ea2315055", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b11a52a6-2982-4f9e-9b2d-d82c01ddbde2", "node_type": "1", "metadata": {}, "hash": "8da55d8b61461126b81be0601528aa65fa02ca57c86221c8b94bb06f497f777e", "class_name": "RelatedNodeInfo"}}, "hash": "0227af1f1e865f27d3b6cfcaac3b446cb0dcfb618f7030a42c10c66fef0776d0", "text": "245 \n \nEjemplo.  Escribir  una funci\u00f3n de utilidad que reciba una cadena conteniendo n\u00fameros \nseparados por comas y los convierta en  una lista num\u00e9rica . \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  convnum  \n Par\u00e1metro:  c  cadena  \n Resultado:  x  lista num\u00e9rica   \n \nPython no facilita el ingreso directo de una lista num\u00e9rica pero provee suficientes \ndefiniciones para instrumentar una funci\u00f3n que permita resolver este problema.  \n \nEl dato ingresado es una cadena de caracteres con n\u00fameros separados por comas. La \nfunci\u00f3n  split la transforma a una lista de cadenas de caract eres, en la cual cada \nelemento es una subcadena conteniendo cada n\u00famero.  \n \nMediante un ciclo se convierte cada elemento a tipo entero con el tipo int (puede ser tipo \nreal escribiendo float en lugar de int) y se crea la lista num\u00e9rica para entregar.  \n \nFunci\u00f3n \n \n#Convertir lista de n\u00fameros de literal a num\u00e9rico  \ndef convnum(c):  \n    numc=c.split(',')  \n    x=[]  \n    for e in numc: \n        x=x+[int(e)]  \n    return x \n \n \nPrograma de prueba de la funci\u00f3n convnum  \n \n#Programa de prueba de convnum  \nfrom convnum import convnum \nc=input( 'Ingrese la lista de n\u00fameros: ')  \nx=convnum(c)  \ns=sum(x)  \nprint('Suma de los datos: ' ,s) \n \n \nPrueba del programa  \n \n>>>  \nIngrese la lista de n\u00fameros: 23,456,7,4375  \nSuma de los datos:  4861  \n>>> \n \nNOTA: Los datos son una l\u00ednea de texto la cual contiene n\u00fam eros separados por comas \npero son recibidos como una cadena de caracteres.  Esta funci\u00f3n es de utilidad para \ningreso de datos de prueba a programas escritos como una lista de n\u00fameros.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1610, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b11a52a6-2982-4f9e-9b2d-d82c01ddbde2": {"__data__": {"id_": "b11a52a6-2982-4f9e-9b2d-d82c01ddbde2", "embedding": null, "metadata": {"page_label": "246", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db0898e4-2de5-4074-ad34-45eed910c15a", "node_type": "4", "metadata": {"page_label": "246", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8a22b6121f69bf0f2fafc1d1ab44bde55f0ce61f30b7064483f36e34c75b7338", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "745e5ba6-8dae-4413-a033-8580938caab6", "node_type": "1", "metadata": {"page_label": "245", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0227af1f1e865f27d3b6cfcaac3b446cb0dcfb618f7030a42c10c66fef0776d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "721daa79-b006-4fa6-8019-4031bcda0670", "node_type": "1", "metadata": {}, "hash": "e1220240d7bc3b817f209cc9edb95f7481ad2ecd413cd7c70878664015811ca8", "class_name": "RelatedNodeInfo"}}, "hash": "8da55d8b61461126b81be0601528aa65fa02ca57c86221c8b94bb06f497f777e", "text": "246 \n \nEjemplo.  Escribir  una funci\u00f3n de utilidad que reciba una lista num\u00e9rica  y entregue una \ncadena de caracteres cuyos elementos son subcadenas conteniendo los n\u00fameros \nseparados por comas \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  convstr  \n Par\u00e1metro:  v  lista num\u00e9rica  \n Resultado:  s  cadena  \n Esta funci\u00f3n es inversa a la funci\u00f3n convnu m desarrollada en la secci\u00f3n anterior.  \n \nMediante un ciclo se convierte cada elemento num\u00e9rico a su representaci\u00f3n como cadena \ncon el tipo str. Se insertan c omas intermedias para separar las subcadenas.  \n \nFunci\u00f3n \n \n#Conversi\u00f3n de una lista num\u00e9rica  a una cadena  \ndef convstr(v):  \n    s=''  \n    for x in v: \n        s=s+str(x)+','  \n    return s[:-1]  #Elimina la coma al final  \n \n \nPrueba de las funciones convnum y convstr en la ventana interactiva \n \n>>> from convnum import convnum \n>>> c='23,37,56,48'  \n>>> v=convnum(c)  \n>>> v \n[23, 37, 56, 48]  \n \n>>> from convstr import convstr \n>>> v=[23, 37, 56, 48]  \n>>> x=convstr(v)  \n>>> x \n'23,37,56,48'  \n \n \nNOTA. Estas funciones puede n tener utilidad para almacenar y recuperar listas num\u00e9ricas \nque se almacenan como una linea de texto en un archiv o en disco . \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "721daa79-b006-4fa6-8019-4031bcda0670": {"__data__": {"id_": "721daa79-b006-4fa6-8019-4031bcda0670", "embedding": null, "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b05bf3da-7663-4beb-96b1-292c462f5907", "node_type": "4", "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ea532a59d86507f12da1f99eb2645ab6063cd57c7dfdc4e96756a026d6e0370b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b11a52a6-2982-4f9e-9b2d-d82c01ddbde2", "node_type": "1", "metadata": {"page_label": "246", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8da55d8b61461126b81be0601528aa65fa02ca57c86221c8b94bb06f497f777e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f0aed4d-0521-4208-a636-5a851616fb28", "node_type": "1", "metadata": {}, "hash": "870d9566c1f30cbb4129a5dbebf2262d7e5b36ec29c691387f0d250e57c8a300", "class_name": "RelatedNodeInfo"}}, "hash": "e1220240d7bc3b817f209cc9edb95f7481ad2ecd413cd7c70878664015811ca8", "text": "247 \n \n7.3.2 Ejercicios de programaci \u00f3n con cadenas de caracteres  \n \n1.  Escriba un programa que realice lo siguiente  \n     a) Lea una frase.  \n    b) Cuente y muestre cuantas vocales tiene la frase  \n    c) Lea una palabra, cuente y muestre cuantas veces la f rase contiene a la palabra  \n    d) Elimine todas las vocales que contiene la frase. Muestre la frase final  \n \n2.  Escriba un programa que lea una direcci\u00f3n de correo electr\u00f3nico con formato:   \n    usuario@dominio.tipo y muestre el c\u00f3digo del usuario si el tipo del dominio es  \n    \u2018com\u2019   \n 3.  Escriba un programa que lea una frase y enmasc\u00e1rela sustituyendo las vocales con \ns\u00edmbolos:  \u2018a\u2019 sustituya con \u2018*\u2019, \u2018e\u2019 con \u2018 -\u2019, \u2018i\u2019 con \u2018?\u2019, \u2018o\u2019 con \u2018&\u2019, \u2018u\u2019 con \u2019#\u2019 \nEscriba otro pr ograma que haga la sustituci\u00f3n inversa y restaure la frase original.  \n \n4.  Una cadena ADN es una linea de texto conteniendo una lista de los caracteres A, C, G, \nT en cualquier secuencia. Ejemplo. CCGAATCGTA  \n \nSe considera que cada par de caracteres consecut ivos est\u00e1 ordenado si el car\u00e1cter a la \nizquierda es alfab\u00e9ticamente menor o igual que el car\u00e1cter a la derecha.  \n Escriba un programa que reciba una cadena ADN y muestre cuantos pares de la cadena \nest\u00e1n ordenados. Verifique que la cadena tenga caracteres v\u00e1lidos, caso contrario, \nmuestre un mensaje.  \n \n5.  Rescriba un programa que reciba una palabra y desorden e las letras en forma aleatoria.", "start_char_idx": 0, "end_char_idx": 1410, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f0aed4d-0521-4208-a636-5a851616fb28": {"__data__": {"id_": "7f0aed4d-0521-4208-a636-5a851616fb28", "embedding": null, "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b05bf3da-7663-4beb-96b1-292c462f5907", "node_type": "4", "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ea532a59d86507f12da1f99eb2645ab6063cd57c7dfdc4e96756a026d6e0370b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "721daa79-b006-4fa6-8019-4031bcda0670", "node_type": "1", "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e1220240d7bc3b817f209cc9edb95f7481ad2ecd413cd7c70878664015811ca8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "285c509c-5545-4904-b531-e1f7b2459aad", "node_type": "1", "metadata": {}, "hash": "bc2229ee7090ae0492c22703d89ba6e7035a04ac5b3d19c86269461b2b9cd074", "class_name": "RelatedNodeInfo"}}, "hash": "870d9566c1f30cbb4129a5dbebf2262d7e5b36ec29c691387f0d250e57c8a300", "text": "Ejemplo: Recibe \u2018martes\u2019,  entrega \u2018remsta\u2019   (un ejemplo)  \n \nSugerencia: Para cada letra, seleccione aleatoriamente otra letra de la palabra con la que \nintercambiar\u00e1n posiciones, pero elim\u00ednela de la palabra para que no sea elegida otra vez.  \n 6.  Escriba un programa para jugar el juego del ahorcado entre una persona y el \ncomputador. Primero almacene una lista de palabras en un vector. Luego el computador \nselecciona una palabra aleatoriamente pero no la muestra. La persona trata en intentos \nsucesivos adivinar la palabra ingresando una letra en cada intento. El computado muestra \nlas letras que coinciden con la palabra seleccion ada, pero en cada fallo, muestra un \nmensaje que acerca a la paersona a ser ahorcado.  \n \n7. Un paso importante en la decodificaci\u00f3n de mensajes encriptados es encontrar algunas \nletras utilizadas. Para ello se debe determinar la frecuencia de los s\u00edmbolos usados y \nasociarlos a las letras del alfabeto. Por ejemplo, en el espa\u00f1ol la letra de mayor frecuencia \nes la letra e.  Escriba un programa que lea un mensaje y determine la frecuencia de cada \ns\u00edmbolo utilizado.  \n \n8. Escriba una funci\u00f3n codificar(x,k)  que reciba una cadena x  y una constante k  y \nentregue otra cadena con los caracteres desplazados k  posiciones en el alfabeto. k  puede \nser positivo para codificar o negativo para decodificar . Al exceder el final o el inicio del \nalbabeto, el desplazamiento debe continuar en el otro extremo.  \nPython Programaci\u00f3n", "start_char_idx": 1415, "end_char_idx": 2890, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "285c509c-5545-4904-b531-e1f7b2459aad": {"__data__": {"id_": "285c509c-5545-4904-b531-e1f7b2459aad", "embedding": null, "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3739abeb-95e9-401a-81f3-0094f7fbc856", "node_type": "4", "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f430c92a100373fc5346b58ca03d7ca53477c49e19f52d08475b52d623807430", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f0aed4d-0521-4208-a636-5a851616fb28", "node_type": "1", "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "870d9566c1f30cbb4129a5dbebf2262d7e5b36ec29c691387f0d250e57c8a300", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10b61b28-0530-46a5-98eb-5ad961745681", "node_type": "1", "metadata": {}, "hash": "92b654804a4321708921e285d70f5703c07b5912e7cd35f334404424ae931595", "class_name": "RelatedNodeInfo"}}, "hash": "bc2229ee7090ae0492c22703d89ba6e7035a04ac5b3d19c86269461b2b9cd074", "text": "248 \n \n9. Escriba una funci\u00f3n recursiva  que permita invertir una cadena de caracteres.  \n \n10.  En una expresi\u00f3n aritm\u00e9tica en notaci\u00f3n INFIX se escriben los operandos  (n\u00fameros)  \nseparados por un operador  aritm\u00e9tico conocido (+, \u2013 , *, /). \nEn una expresi\u00f3n aritm\u00e9tica en notaci\u00f3n POSTFIX, primero se escriben los operandos y \nluego el operador, como se muestra en los ejemplos.  \n \n            INFIX           POSTFIX  \n 2 + 3  2 3 + \n 9 \u2013 6  9 6 \u2013 \n 5 * 4  5 4 * \n 8 / 7  8 7 / \n \nSuponga que los operandos ari tm\u00e9ticos son n\u00fameros de una sola cifra.  \n \na) Escriba la funci\u00f3n infix que reciba una cadena de 3 caracteres y verifique que est\u00e1 \nbien escrita en notaci\u00f3n infix.  La funci\u00f3n devuelve 1 si es una cadena con la \nexpresi\u00f3n infix v\u00e1lida y 0 si no lo es.  \nb) Escrib a la funci\u00f3n postfix que reciba una cadena de 3 caracteres, previamente \nvalidada con la funci\u00f3n infix  y cambie la expresi\u00f3n de notaci\u00f3n INFIX a POSTFIX.  \nc)  Escriba un programa de prueba para verificar que las funci\u00f3nes producen resultados \ncorrectos.  \n \n11. Escriba una f unci\u00f3n  strsubpos (c,t)  que entregue  la posici\u00f3n inicial de todas las \nocurrencias de una subcadena t  en una cadena de caracteres  c, como se muestra en el \nejemplo:  \n \n>>> from strsubpos import strsubpos  \n>>> c='Cada proyecto tiene programas y compromisos'  \n>>> t='pro'  \n>>> v=strsubpos(c,t)  \n>>> v \n[6,  21,  36]  \n \n12. Escriba un programa que lea una lista de palabras y encuentre los anagramas \nexistentes en la lista. Dos palabras son anagramas si contienen las mismas letras aunque est\u00e9n en orden diferen te.", "start_char_idx": 0, "end_char_idx": 1582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10b61b28-0530-46a5-98eb-5ad961745681": {"__data__": {"id_": "10b61b28-0530-46a5-98eb-5ad961745681", "embedding": null, "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3739abeb-95e9-401a-81f3-0094f7fbc856", "node_type": "4", "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f430c92a100373fc5346b58ca03d7ca53477c49e19f52d08475b52d623807430", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "285c509c-5545-4904-b531-e1f7b2459aad", "node_type": "1", "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bc2229ee7090ae0492c22703d89ba6e7035a04ac5b3d19c86269461b2b9cd074", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69dd5448-d886-48b4-9d00-aaeec7a4ff3f", "node_type": "1", "metadata": {}, "hash": "234df5b6f5817765df548432bffbc87c664629ed60c8a595be2ff88cbf992c54", "class_name": "RelatedNodeInfo"}}, "hash": "92b654804a4321708921e285d70f5703c07b5912e7cd35f334404424ae931595", "text": "Ejemplo.  'roma' y 'mora'  \n \n13.  El siguiente dibujo  muestra de manera divertida la pronunciaci\u00f3n de cada letra del \nalfabeto en lenguaje japon\u00e9s  \n \n            \n \n \n Ejemplo. El nombre JUAN PEREZ  se \npronunci ar\u00eda zudokato nokushikura  \n \na) Escriba un programa que lea una frase en \nlenguaje espa\u00f1ol y muestre una l\u00ednea de texto \ncon la pronunciaci\u00f3n de cada letra en el \nlenguaje japon\u00e9s. Use los c\u00f2digos del cuadro \nadjunto y el ejemplo anterior como referencia.  \n \nb) Escriba un programa que lea una l\u00ednea de \ntexto con la pronunciaci\u00f3n en el lenguaje \njapon\u00e9s  y muestre la frase equivalenete en \nespa\u00f1ol . \n \n Python Programaci\u00f3n", "start_char_idx": 1584, "end_char_idx": 2226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69dd5448-d886-48b4-9d00-aaeec7a4ff3f": {"__data__": {"id_": "69dd5448-d886-48b4-9d00-aaeec7a4ff3f", "embedding": null, "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e9f7f13-c6e1-4161-93e2-c9deb9a083b8", "node_type": "4", "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dce7ab6c618772ae35493026438d10cf244690184e2502bb7407522235cc5f75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10b61b28-0530-46a5-98eb-5ad961745681", "node_type": "1", "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "92b654804a4321708921e285d70f5703c07b5912e7cd35f334404424ae931595", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c04d6e30-c6ef-435b-a908-cf1fbde7c7d3", "node_type": "1", "metadata": {}, "hash": "d56d8b34868dfe157f365ff922faeee54ff6b8150aecd99397655b85c6b261ff", "class_name": "RelatedNodeInfo"}}, "hash": "234df5b6f5817765df548432bffbc87c664629ed60c8a595be2ff88cbf992c54", "text": "249 \n \n14. Una palabra monovoc\u00e1lica contiene al menos dos veces la misma vocal repetida. \nEjemplo s. Presente, campana, comodoro  \n \na) Escriba una funci\u00f3n  monovocal   que retorne un valor l\u00f3gico que indique si  una palabra \nes o no monovoc\u00e1lica.  \n b) Escriba un programa que lea una frase con palabras separadas con un espacio en blanco y determine cuantas palabras monovoc\u00e1licas contiene.  \n \nNota. Use la funci\u00f3n  split de la librer\u00eda Python para convertir la frase en una lista de \ncadenas de texto:  \n \nf=input('Ingrese una frase: ')  \ns=f.split(' ')  \nn=len(s)     \n \n 15. Escriba un programa que lea una frase con palabras separadas por un espacio en \nblanco. Muestre la cantidad de vocales que contiene cada palabra  \n16. Una palabra polivoc\u00e1lica contiene las cinco vocales sin repetir.  \nEjemplos. Republicano, murci\u00e9lago, rumiadores.  \n a) Escriba una funci\u00f3n  poli vocal   que retorn e un valor l\u00f3gico que indique si  una palabra \nes o no polivoc\u00e1lica.  \n \nb) Escriba un programa que lea una frase con palabras separadas con un espacio en \nblanco y determine cuantas palabras polivoc\u00e1licas contiene.  \n \n17. El siguiente es el n\u00famero  \u03c0  con 200 d\u00edgitos:  \n \n\u03c0=3.141592653589793238462643383279502884197169399375105820974944\n592307816406286208998628034825342117067982148086513282306647093\n844609550582231725359408128481117450284102701938521105559644622\n948954930382  \n \nEscriba un programa que lea est e dato y determine la cantidad de veces que aparece cada \nuno de los d\u00edgitos decimales. Use un vector para almacenar los conteos de los d\u00edgitos.", "start_char_idx": 0, "end_char_idx": 1558, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c04d6e30-c6ef-435b-a908-cf1fbde7c7d3": {"__data__": {"id_": "c04d6e30-c6ef-435b-a908-cf1fbde7c7d3", "embedding": null, "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e9f7f13-c6e1-4161-93e2-c9deb9a083b8", "node_type": "4", "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dce7ab6c618772ae35493026438d10cf244690184e2502bb7407522235cc5f75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69dd5448-d886-48b4-9d00-aaeec7a4ff3f", "node_type": "1", "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "234df5b6f5817765df548432bffbc87c664629ed60c8a595be2ff88cbf992c54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7912deda-2c30-439c-8115-6ea69a08c26f", "node_type": "1", "metadata": {}, "hash": "900468bff2f0c623ad1a42fcdc50452dc0bc26da491462b356844c6f1124a806", "class_name": "RelatedNodeInfo"}}, "hash": "d56d8b34868dfe157f365ff922faeee54ff6b8150aecd99397655b85c6b261ff", "text": "Use un vector para almacenar los conteos de los d\u00edgitos.  \n Sugerencia: Lea el dato como una cadena de texto pero sin incluir el punto decimal. Use la \nfunci\u00f3n  list para convertir la cadena a una lista y el tipo  int para convertir cada car\u00e1cter a \nnum\u00e9rico   \n \n18. Para instrumentar un traductor elemental de lenguaje se leen dos listas de palabras. La \nprimera lista contiene n palabras en el lenguaje A y la segunda contiene n palabras en el \nlenguaje B.  \n Lea una frase del lenguaje A conteniendo palabras separadas por un espacio en blanco. \nMuestre la misma frase traducida al lenguaje B . \nPython Programaci\u00f3n", "start_char_idx": 1502, "end_char_idx": 2121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7912deda-2c30-439c-8115-6ea69a08c26f": {"__data__": {"id_": "7912deda-2c30-439c-8115-6ea69a08c26f", "embedding": null, "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a946f37-34f6-4223-8a66-05c10e2bdf03", "node_type": "4", "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a0688ee8da6f893861b86ab37fb6d8d26b7f16189287ed030dc1cde1739f9ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c04d6e30-c6ef-435b-a908-cf1fbde7c7d3", "node_type": "1", "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d56d8b34868dfe157f365ff922faeee54ff6b8150aecd99397655b85c6b261ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70489cc7-fa20-4fd6-b35c-c17b1264c4f8", "node_type": "1", "metadata": {}, "hash": "1d706a80a9597f9475abfef414ea3577da0fced7f52387f0b4071d708ff56e59", "class_name": "RelatedNodeInfo"}}, "hash": "900468bff2f0c623ad1a42fcdc50452dc0bc26da491462b356844c6f1124a806", "text": "250 \n \n7.4 Arreglos bidimensionales  (matrices)  \n \nEn la notaci\u00f3n  del lenguaje Python una matriz o arreg lo de dos dimensiones es una lista \ncuyos elementos tambi\u00e9n son  listas con igual longitud y con elementos del mismo tipo \n(num\u00e9rico).  Estos objetos, igual que los vectores  (arreglos unidimensionales) , son \nfundamentales en aplicaciones matem\u00e1ticas  y de ingenier\u00eda.   \n \nExisten m\u00f3dulos o librer\u00edas especiales para facilitar  operaciones con  vectores y matrices. \nLa librer\u00eda m\u00e1s conocido es la librer\u00eda N umPy usada como soporte para manejo de \nmatrices y aplicaciones en \u00e1lgebra lineal, estad\u00edstica y otras \u00e1reas de las matem\u00e1ticas.  Los \nejemplos desarrollados en esta secc\u00f3n usan arreglos de dos dimensiones (matrices). \nAlgunas aplicaciones pueden utilizadas con listas de dos dimensiones.  \n  \nSe puede asociar una matriz a un a representaci\u00f3n de un cuadro con datos organizados en \nfilas y columnas.  \n \nLas filas son horizontales y las columnas son verticales  \n \nEjemplos.", "start_char_idx": 0, "end_char_idx": 993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70489cc7-fa20-4fd6-b35c-c17b1264c4f8": {"__data__": {"id_": "70489cc7-fa20-4fd6-b35c-c17b1264c4f8", "embedding": null, "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a946f37-34f6-4223-8a66-05c10e2bdf03", "node_type": "4", "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a0688ee8da6f893861b86ab37fb6d8d26b7f16189287ed030dc1cde1739f9ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7912deda-2c30-439c-8115-6ea69a08c26f", "node_type": "1", "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "900468bff2f0c623ad1a42fcdc50452dc0bc26da491462b356844c6f1124a806", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "249639af-8d3e-4b31-ba31-b67b984a69b5", "node_type": "1", "metadata": {}, "hash": "2f5b3ef4bef86ff3cefc880a52a8668345b841b0798c0636039cbfed69659b29", "class_name": "RelatedNodeInfo"}}, "hash": "1d706a80a9597f9475abfef414ea3577da0fced7f52387f0b4071d708ff56e59", "text": "Escribir en Python la matriz  \n \n23 45 63\n72 81 91a56 64 37\n34 75 26\uf8ee\uf8f9\n\uf8ef\uf8fa\n\uf8ef\uf8fa=\uf8ef\uf8fa\n\uf8ef\uf8fa\n\uf8f0\uf8fb \n \nDefinici\u00f3n  como una lista de dos niveles  \n \n>>> a=[[23,45,63],[72,81,91],[56,64,37],[34,75,26]]    Es una li sta de listas \n>>> print(a)  \n[[23, 45, 63], [72, 81, 91], [56, 64, 37], [34, 75, 26]]  \n \nDefinici\u00f3n  como un arreglo de dos dimensiones (matriz)  con la librer\u00eda NumPy  \n >>> from numpy import* \n>>> a=array([[23,45,63],[72,81,91],[56,64,37],[34,75,26]])    Es un  arreglo  \n>>> a \narray([[23, 45, 63],         Los arreglos se visualizan mejor  \n       [72, 81, 91],         en su forma tabular  \n       [56, 64, 37],  \n       [34, 75, 26]])  \n \n>>> print(a)  \n[[23 45 63]  \n [72 81 91]     Al mostrar con print  se omit e la palabra array y las comas \n [56 64 37]  \n [34 75 26]]  \n  \nPython Programaci\u00f3n", "start_char_idx": 995, "end_char_idx": 1800, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "249639af-8d3e-4b31-ba31-b67b984a69b5": {"__data__": {"id_": "249639af-8d3e-4b31-ba31-b67b984a69b5", "embedding": null, "metadata": {"page_label": "251", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c93ed076-2f36-465b-bbf2-15c4c8411abd", "node_type": "4", "metadata": {"page_label": "251", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d58b952471d14650a6eb31184cc350c139c3667c749fda8be151202d44869c70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70489cc7-fa20-4fd6-b35c-c17b1264c4f8", "node_type": "1", "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1d706a80a9597f9475abfef414ea3577da0fced7f52387f0b4071d708ff56e59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b2d42b0-7767-4b0d-a2a8-6625642a30f7", "node_type": "1", "metadata": {}, "hash": "84dfb9dee11182e42eed4c60d3bbdaa48169575db256ba77aa0c4607c897329d", "class_name": "RelatedNodeInfo"}}, "hash": "2f5b3ef4bef86ff3cefc880a52a8668345b841b0798c0636039cbfed69659b29", "text": "251 \n \nLa representaci\u00f3n gr\u00e1fica  de un arreglo de dos dimensiones (matriz) en Num Py es un \ncuadro de celdas en dos dimensiones  con filas y columnas. Las filas son horizontales y las \ncolumnas son verticales , ambas numeradas desde 0  \n \n    0 23 45 63 \n    1 72 81 91 \n    2 56 64 37 \n      3 34 75 26 \n   0         1         2 \n \nEn el  ejemplo anterior, l a librer\u00eda  Num Py  fu\u00e9 cargada con la instrucci\u00f3n \n \n>>> from numpy import* \n \nEsta forma permite declarar las matrices y  usar las funciones  de NumPy  de forma directa y \nsimple como en el ejemplo:  \n \n>>> a=array([[23,45,63],[72,81,91],[56,64,37],[34,75,26]])  \n \nUn inconveniente con esta notaci\u00f3n es que en algunos casos  entra en conflicto con otras \nfunciones con el mismo nombre de la librer\u00eda est\u00e1ndar de Python o de otras librer\u00edas.  Por \nejemplo si se desea el m\u00e1ximo valor de la matriz y se escribe:  \n >>> max(a)  \nValueError  \n Se produce un error pues la funci\u00f3n  max  es asociada a la librer\u00eda est\u00e1ndar para listas \npero no es aplicable al formato de arreg los bidimensionales.  \n \nDebido a esto, se prefiere cargar las librer\u00edas asign \u00e1ndolas una identificaci\u00f3n propia, Esta \nidentificaci\u00f3n deber\u00e1 entonces asociarse al uso de los recursos de la librer\u00eda. En el caso de la librer\u00eda Num Py, la costumbre es referirse a ella con la siguiente declaraci\u00f3n:  \n \n>>> import numpy as np \n \nAhora, todas las definiciones y funciones deben escribirse con la notaci\u00f3n np.  \n \n>>> a=np.array([[23,45,63],[72,81,91],[56,64,37],[34,75,26]])  \n>>> np.max(a)  \n91  \n \nEste formato para usar la librer\u00eda NumPy ser\u00e1 usado en todos los ejemplos siguientes  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b2d42b0-7767-4b0d-a2a8-6625642a30f7": {"__data__": {"id_": "7b2d42b0-7767-4b0d-a2a8-6625642a30f7", "embedding": null, "metadata": {"page_label": "252", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "42a2db7e-7b6c-4763-bdc3-abd5eb04d5b9", "node_type": "4", "metadata": {"page_label": "252", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76e5ae32cb53aeb5b4fa69ad3e333f347a87cb0cd32c5b3a04d7a0e86fab4828", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "249639af-8d3e-4b31-ba31-b67b984a69b5", "node_type": "1", "metadata": {"page_label": "251", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2f5b3ef4bef86ff3cefc880a52a8668345b841b0798c0636039cbfed69659b29", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85666528-56a8-4480-84d0-72565b47fe96", "node_type": "1", "metadata": {}, "hash": "2b0341480aeb1bac148391badc21abefe7966b070f7bc6adf2de7a61c4cbd1ac", "class_name": "RelatedNodeInfo"}}, "hash": "84dfb9dee11182e42eed4c60d3bbdaa48169575db256ba77aa0c4607c897329d", "text": "252 \n \n\u00cdndices y \u201cslicing\u201d para matrices  \n \nPara referirse a los componentes de un arreglo se requieren dos \u00edndices y se puede usar \nla notaci\u00f3n  de \u00edndices separados entre corchetes , como en las listas bidimensionales :   \n \nNombre del arreglo[\u00edndice de fila][ \u00edndice de columna]   \n \nEs preferible usar la notaci\u00f3n  matem\u00e1tica com\u00fan de \u00edndices separados por comas:  \n \n Nombre del arreglo[\u00edndice de fila,\u00edndice de columna]  \n \nEsta segunda forma de \u00edndices no es factible para listas de dos o m\u00e1s niveles  \n \nEjemplos.  \n \n>>> a=np.array([[23,45,63],[72,81,91],[56,64,37],[34,75,26]])  \n>>> print(a)  \n[[23 45 63]  \n [72 81 91]            \n [56 64 37]  \n [34 75 26]]  \n \n>>> print(a[1,2])     Elemento en la f ila 1, columna 2  \n91 \n \nSe puede n manejar filas, col umnas o componentes individuales del arreglo. El uso de \n\u201cslicing\u201d  (rebanar) para los \u00edndices permite referirse con eficiencia a porciones del arreglo.  \n \n>>> a[1,:]        Fila 1 , todas las columnas  \narray([72, 81, 91])  \n >>> print(a[1,:])     Para omitir la pal abra  \u201c array\u201d \n[72 81 91]  \n >>> print(a[:,1:2])    Columna  1, todas las filas \n[[45] \n [81] \n [64] \n [75]] \n \n>>> print(a[:,1:])     Todas las filas de la col. 1 hasta el final  \n[[45 63]  \n [81 91] \n [64 37] \n [75 26]]  \n>>> print(a[2:,1:])    Submatriz inferior derecha    \n[[64 37] \n [75 26]]  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1362, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85666528-56a8-4480-84d0-72565b47fe96": {"__data__": {"id_": "85666528-56a8-4480-84d0-72565b47fe96", "embedding": null, "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1152c968-950d-43af-a35e-265bd4d0df81", "node_type": "4", "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4749d24ddf2374538789856b5b42c02589bf90e4f034d3f48232c202b588a7e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b2d42b0-7767-4b0d-a2a8-6625642a30f7", "node_type": "1", "metadata": {"page_label": "252", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "84dfb9dee11182e42eed4c60d3bbdaa48169575db256ba77aa0c4607c897329d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5af1c62b-fb2c-4d05-a97e-17e6372940d3", "node_type": "1", "metadata": {}, "hash": "e15fca7726a9c3e2530392153db8700246842d575438f34ce758ac22edb75789", "class_name": "RelatedNodeInfo"}}, "hash": "2b0341480aeb1bac148391badc21abefe7966b070f7bc6adf2de7a61c4cbd1ac", "text": "253 \n \n>>> print(a[::2,:])    Filas pares, todas las columnas  \n[[23 45 63]  \n [56 64 37]]   \n>>> print(a[1::2,:])    Filas impares, todas las columnas  \n[[72 81 91]  \n [34 75 26]]    \n \n>>> v=np.array([[3],[6],[7],[2],[8]]) Creaci\u00f3n de un vector columna  \n>>> print(v) \n[[3], \n [6], \n [7], \n [2], \n [8]] \n \n>>> a=np.array([[4,2,5],[2,8,4],[6,9,5]],dtype=float)     Se puede especificar  \n>>> print(a)         el tipo  \n[[ 4.,  2.,  5.],  \n [ 2.,  8.,  4.],  \n [ 6.,  9.,  5.]]", "start_char_idx": 0, "end_char_idx": 477, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5af1c62b-fb2c-4d05-a97e-17e6372940d3": {"__data__": {"id_": "5af1c62b-fb2c-4d05-a97e-17e6372940d3", "embedding": null, "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1152c968-950d-43af-a35e-265bd4d0df81", "node_type": "4", "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4749d24ddf2374538789856b5b42c02589bf90e4f034d3f48232c202b588a7e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85666528-56a8-4480-84d0-72565b47fe96", "node_type": "1", "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b0341480aeb1bac148391badc21abefe7966b070f7bc6adf2de7a61c4cbd1ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e91a175-cd81-4226-a6ee-bc3f7b0422c0", "node_type": "1", "metadata": {}, "hash": "85d182a79dcc85b68dcc78ac35d98fa0874c42f9ffd3093487a0991c69abbd9b", "class_name": "RelatedNodeInfo"}}, "hash": "e15fca7726a9c3e2530392153db8700246842d575438f34ce758ac22edb75789", "text": "],  \n [ 6.,  9.,  5.]]  \n>>> a=np.array([[4,2,5],[2,8,4],[6,9,5]],dtype=int)  \n>>> print(a)  \n[[4, 2, 5],  \n [2, 8, 4],  \n [6, 9, 5]]  \n>>> a=np.array([[4,2,5],[2,8,4],[6,9,5]],dtype=complex)  \n>>> print(a)  \n[[ 4.+0.j,  2.+0.j,  5.+0.j],  \n [ 2.+0.j,  8.+0.j,  4.+0.j],  \n [ 6.+0.j,  9.+0.j,  5.+0.j]]  \n>>> a=np.array([[0,2,0],[ -3,0,4],[0,0,3]],dtype= bool) \n>>> print(a) \n[[False,  True, False],  \n [ True, False,  True],  \n [False, False,  True]]  \n \nSi no se especifica el tipo, este se asigna seg\u00fan el contenido del arreglo \n \n \nObservaciones en  \u201cslicing\u201d  de arreglos  bidimensionales  \n >>> a=np.array([[2,3,4,5],[8,3,2,1],[9,2,4,8]])  \n>>> print(a)  \n[[2 3 4 5]  \n [8 3 2 1]  \n [9 2 4 8]]  \n  \n \nPython Programaci\u00f3n", "start_char_idx": 455, "end_char_idx": 1181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e91a175-cd81-4226-a6ee-bc3f7b0422c0": {"__data__": {"id_": "7e91a175-cd81-4226-a6ee-bc3f7b0422c0", "embedding": null, "metadata": {"page_label": "254", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "36ce2372-d1b6-4d8b-8135-aaa696ee9b07", "node_type": "4", "metadata": {"page_label": "254", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09bbbab59547d31688bc0e06eb60f15146df787bbeed5c4687e641e922608462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5af1c62b-fb2c-4d05-a97e-17e6372940d3", "node_type": "1", "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e15fca7726a9c3e2530392153db8700246842d575438f34ce758ac22edb75789", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0dba63f1-9224-4ab8-81b8-fea0c5f64bac", "node_type": "1", "metadata": {}, "hash": "5c3550644a620c1ff4dfae2f21fc01fef669eee041a562b498f2f606e5b4f2d4", "class_name": "RelatedNodeInfo"}}, "hash": "85d182a79dcc85b68dcc78ac35d98fa0874c42f9ffd3093487a0991c69abbd9b", "text": "254 \n \n>>> print(a[:][2])   Con esta notaci\u00f3n, el orden de los \u00edndices es confusa:  \n[9 2 4 8]    Produce todas las columnas de la fila 2 \n \n>>> print(a[2][:])   Con esta notaci\u00f3n, el orden de los \u00edndic es es confusa:  \n[9 2 4 8]    Tambi\u00e9n produce todas las columnas de la fila 2  \n \n>>> print(a[:,2])   Esta notaci\u00f3n produce todas las filas de la columna 2  \n[4 2 4] \n \n>>> print(a[2,:])   Esta notaci\u00f3n produce todas las columnas de la fila 2 \n[9 2 4 8]  \n \n \nLas formas es peciales de los \u00ecndices permiten asignar porciones de las matrices  \n >>> a=np.array([[2,3,4,5],[8,3,2,1],[9,2,4,8]])  \n>>> a \narray([[2, 3, 4, 5],  \n       [8, 3, 2, 1],  \n       [9, 2, 4, 8]])  \n \n>>> a[1,:]=5  \n>>> a \narray([[2, 3, 4, 5],  \n       [5, 5, 5, 5],  \n       [ 9, 2, 4, 8]])  \n >>> a[:,1]=7  \n>>> a \narray([[2, 7, 4, 5],  \n       [5, 7, 5, 5],  \n       [9, 7, 4, 8]])  \n >>> a[1:,2:]=0  \n>>> a \narray([[2, 7, 4, 5],  \n       [5, 7, 0, 0],  \n       [9, 7, 0, 0]])  \n >>> a[1,:]=[1,2,3,4]  \n>>> a \narray([[2, 7, 4, 5],  \n       [1, 2, 3, 4],  \n       [9, 7, 0, 0]])  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1077, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0dba63f1-9224-4ab8-81b8-fea0c5f64bac": {"__data__": {"id_": "0dba63f1-9224-4ab8-81b8-fea0c5f64bac", "embedding": null, "metadata": {"page_label": "255", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c984b1a1-696a-4cad-8240-729684ccd758", "node_type": "4", "metadata": {"page_label": "255", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b1ff59d6016ae85bfaf7a398a08799afbaaf25fd6cee9a5c1ea3ac7ba3cd7f8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e91a175-cd81-4226-a6ee-bc3f7b0422c0", "node_type": "1", "metadata": {"page_label": "254", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "85d182a79dcc85b68dcc78ac35d98fa0874c42f9ffd3093487a0991c69abbd9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac960ca7-e260-4724-a1e6-d40278419643", "node_type": "1", "metadata": {}, "hash": "d96e02626a1538f52c7216673744db972eb81ba2ca350e352d58b2a1cb7ee25e", "class_name": "RelatedNodeInfo"}}, "hash": "5c3550644a620c1ff4dfae2f21fc01fef669eee041a562b498f2f606e5b4f2d4", "text": "255 \n \nReconfiguraci\u00f3n de arreglos  \n \n>>> a=np.array([[4,2,5],[2,8,4],[6,9,5]])  \n>>> print(a)  \n[[4 2 5]  \n [2 8 4] \n [6 9 5]]  \n>>> len(a)     Cantidad de filas de la matriz  \n3 \n>>> np.size(a)     Cantidad de elem entos de la matriz \n9 \n>>> [n,m]=shape(a)     Dimensiones de un arreglo \n>>> n      N\u00famero de filas  \n3 \n>>> m      N\u00famero de columnas  \n3 \n>>> a.size      Notaci\u00f3n reducida  \n9 \n>>> [n,m]=a.shape     Notaci\u00f3n reducida  \n>>> n       \n3 \n>>> m       \n3 \n \n>>> x=np.arange(12).reshape(3,4)  Arreglo unidimensional con enter os \n>>> print(x)      reconfigurado a una matriz compatible  \n[[ 0  1  2  3]  \n [ 4  5  6  7]  \n [ 8  9 10 11]]  \n \n>>> a=np.array([4,7,8,3,5,9,2,4,6])  Arreglo unidimensional  \n>>> b=a.reshape(3,3)    Convertir a un arreglo de 2 dimensiones  \n>>> print(b)      La reconfigu raci\u00f3n debe ser co mpatible \n[[4 7 8]      en las dimensiones  \n [3 5 9] \n [2 4 6]]  \n \n>>> c=b.reshape(9,1)    Convertir a un arreglo de 1 columna  \n>>> print(c)  \n[[4] \n [7] \n [8] \n [3] \n [5] \n [9] \n [2] \n [4] \n [6]] \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1056, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac960ca7-e260-4724-a1e6-d40278419643": {"__data__": {"id_": "ac960ca7-e260-4724-a1e6-d40278419643", "embedding": null, "metadata": {"page_label": "256", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17e6a965-7105-427d-87ef-ff06c9b5909b", "node_type": "4", "metadata": {"page_label": "256", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fc64db28538499a0c3e9acb637583d39defc2eb031f35dc43007c44ac722ed12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0dba63f1-9224-4ab8-81b8-fea0c5f64bac", "node_type": "1", "metadata": {"page_label": "255", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5c3550644a620c1ff4dfae2f21fc01fef669eee041a562b498f2f606e5b4f2d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "317acb3c-419e-4446-9eff-db6a9427aff8", "node_type": "1", "metadata": {}, "hash": "bd71a8d33fb77ba679227e83f862dbd00576713b5c88a6295ac6b0a896034237", "class_name": "RelatedNodeInfo"}}, "hash": "d96e02626a1538f52c7216673744db972eb81ba2ca350e352d58b2a1cb7ee25e", "text": "256 \n \n>>> x=b.tolist()     Un arrreglo se puede convertir a lista \n>>> print(x)  \n[[4, 7, 8], [3, 5, 9], [2, 4, 6]]  \n \n>>> v=[[5,4],[7,3]]    Una lista se puede convertir a arreglo \n>>> v      pero debe tener estructura rectangular  \n[[5,4],[7,3]]  \n>>> u=np.array(v)  \n>>> u \narray([[5, 4],  \n       [7, 3]])  \n \nOperador de pertenencia en  arreglos bidimensionales  \n >>> a=np.array([[4,2,5],[2,8,4],[6,9,5]])  \n>>> 8 in a      \nTrue \n>>> 7 in a \nFalse \n>>> 8 not in a \nFalse \n \n \nConstrucci\u00f3n declarativa de listas num\u00e9ricas (matrices)  \n Las listas num\u00e9ricas pueden construirse mediante declaraciones impl\u00edc itas en la ventana \ninteractiva o dentro de programas \n \n>>> b=np.array(range(9))        Un arreglo se puede generar con un rango  \n>>> b \narray([0, 1, 2, 3, 4, 5, 6, 7, 8])  \n \n>>> c=np.array([[i,2*i] for i in range(5)])  Filas de dos componentes  \n>>> c \narray([[0, 0], \n       [1, 2], \n       [2, 4], \n       [3, 6], \n       [4, 8]]) \n \n>>> c=np.array([[i,i+1,i+2] for i in range(5)] )   Filas de tres componentes \n>>> c \narray([[0, 1, 2],  \n       [1, 2, 3],  \n       [2, 3, 4],  \n       [3, 4, 5],  \n       [4, 5, 6]])  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "317acb3c-419e-4446-9eff-db6a9427aff8": {"__data__": {"id_": "317acb3c-419e-4446-9eff-db6a9427aff8", "embedding": null, "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "166fbd76-f5db-4211-97a1-4d2a75350985", "node_type": "4", "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4e977e76691aa65a20580d147852adb57999ce3d6b3bca42222cfdcc5605f6dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac960ca7-e260-4724-a1e6-d40278419643", "node_type": "1", "metadata": {"page_label": "256", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d96e02626a1538f52c7216673744db972eb81ba2ca350e352d58b2a1cb7ee25e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a8066d1-8e92-4f7f-9942-b1752c7561f0", "node_type": "1", "metadata": {}, "hash": "80bf9f4f95ef3d77f5b2405a8f7fe0d86114f046ef424ce1788552051c9f8212", "class_name": "RelatedNodeInfo"}}, "hash": "bd71a8d33fb77ba679227e83f862dbd00576713b5c88a6295ac6b0a896034237", "text": "257 \n \n>>> from random import * \n>>> c=np.array([[randint(0,9) for j in range(5)] for i in range(4)])  \n>>> c \narray([[6, 6, 1, 8, 1],    Una matriz de 4 filas y 5 columnas con  \n       [7, 9, 3, 2, 2],    n\u00fameros aleatorios de una cifra:  \n       [2, 0, 1, 6, 0],  \n       [6, 0, 9, 1, 2]])  \n \nUna funci\u00f3n para replicar una matriz:  tile  \n >>> a=np.array([[1,2,3],[4,5,6],[7,8,9]])  \n>>> a \narray([[1, 2, 3],  \n       [4, 5, 6],  \n       [7, 8, 9]])  \n>>> u=np.tile(a,2)  \n>>> u \narray([[1, 2, 3, 1, 2, 3],  \n       [4, 5, 6, 4, 5, 6],  \n       [7, 8, 9, 7, 8, 9]])  \n \nOperaciones con arreglos bidimensionales \n \n>>> u=[[2,3],[4,5]]    Es una lista  \n>>> v=[[5,2],[1,4]]    Es una lista  \n>>> u+v      +  concatena listas  (comparar con arreglos)  \n[[2, 3], [4, 5], [5, 2], [1, 4]]  El resultado es una lista concatenada  \n >>> a=np.array([[2,3],[4,5]])   Arreglo (matriz)  \n>>> b=np.array([[5,2],[1,4]])   Arreglo (matriz)   \n>>> a+b      Suma de matrices  (deben ser compatibles)  \narray([[7, 5],     El resultado es un arreglo (matriz)  \n       [5, 9]])  \n \n>>> a-b     Resta de matrices \narray([[- 3,  1],", "start_char_idx": 0, "end_char_idx": 1113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a8066d1-8e92-4f7f-9942-b1752c7561f0": {"__data__": {"id_": "5a8066d1-8e92-4f7f-9942-b1752c7561f0", "embedding": null, "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "166fbd76-f5db-4211-97a1-4d2a75350985", "node_type": "4", "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4e977e76691aa65a20580d147852adb57999ce3d6b3bca42222cfdcc5605f6dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "317acb3c-419e-4446-9eff-db6a9427aff8", "node_type": "1", "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bd71a8d33fb77ba679227e83f862dbd00576713b5c88a6295ac6b0a896034237", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "318c54b9-3a84-425c-a84c-0dea43e5702f", "node_type": "1", "metadata": {}, "hash": "b85b2840060c9845a61fbed40df85cd2ea03f84abec832dad39c4ec02c90bd24", "class_name": "RelatedNodeInfo"}}, "hash": "80bf9f4f95ef3d77f5b2405a8f7fe0d86114f046ef424ce1788552051c9f8212", "text": "1], \n       [ 3,  1]])  \n >>> a*b      Multiplicaci\u00f3n (elemento con elemento)  \narray([[10,  6],  \n       [ 4, 20]])  \n \n>>> np.dot(a,b)      Multiplicaci\u00f3n de matrices  \narray([[13, 16],  \n       [25, 28]])  \n \n>>> a.dot(b)      Notaci\u00f3n reducida  \narray([[13, 16],  \n       [25, 28]])  \nPython Programaci\u00f3n", "start_char_idx": 1110, "end_char_idx": 1418, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "318c54b9-3a84-425c-a84c-0dea43e5702f": {"__data__": {"id_": "318c54b9-3a84-425c-a84c-0dea43e5702f", "embedding": null, "metadata": {"page_label": "258", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57544394-3c23-4a89-864c-bbf2139eb206", "node_type": "4", "metadata": {"page_label": "258", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66f6a2b158273a3b3c49aac0f1766cfc7b39f8fa09dfd4256ee28246dbb6d19e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a8066d1-8e92-4f7f-9942-b1752c7561f0", "node_type": "1", "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "80bf9f4f95ef3d77f5b2405a8f7fe0d86114f046ef424ce1788552051c9f8212", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "203fb962-697d-4e31-a1b3-05106979b8cc", "node_type": "1", "metadata": {}, "hash": "8243f8b49da2ed3d088767378646ebad61c019f24701b5737ff76fc79b81cc1b", "class_name": "RelatedNodeInfo"}}, "hash": "b85b2840060c9845a61fbed40df85cd2ea03f84abec832dad39c4ec02c90bd24", "text": "258 \n \nAlgunas funciones matem\u00e1ticas de la librer\u00eda NumPy para matrices  \n \n>>> a=np.array([[4,2,5],[2,8,4],[6,9,5]])  \n>>> a \narray([[4, 2, 5],  \n       [2, 8, 4],  \n       [6, 9, 5]])  \n \n>>> np.sum(a)     Suma de elementos de la matriz \n45 \n \n>>> np.prod(a)     Producto de todos los elementos  \n691200 \n >>> np.mean(a)     Media aritm\u00e9tica de todos los elementos  \n5.0 \n \n>>> np.average(a)     Media aritm\u00e9tica de todos los elementos  \n5.0 \n \n>>> np.max(a)     El mayor valor del arreglo a  \n9 \n >>> np.min(a)     El menor valor del arreglo  a  \n2 \n >>> np.argmax(a)     Indice del mayor valor conteo por filas  \n7 \n >>> np.argmin(a)     Indice del menor valor conteo por filas  \n1 \n >>> np.std(a)     Desviaci\u00f3n est\u00e1ndar  \n2.2607766610417559  \n >>> np.median(a)     Mediana \n5.0 \n \n>>> b=np.sort(a)     Ordenamiento por filas  \n>>> b \narray([[2, 4, 5],  \n       [2, 4, 8],  \n       [5, 6, 9]])  \n >>> np.cumsum(a)     Suma acumulada  \narray([ 4,  6, 11, 13, 21, 25, 31, 40, 45], dtype=int32)  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1020, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "203fb962-697d-4e31-a1b3-05106979b8cc": {"__data__": {"id_": "203fb962-697d-4e31-a1b3-05106979b8cc", "embedding": null, "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19a2cc1a-1f0c-495e-a1ef-6f23e25af291", "node_type": "4", "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "11a229d78b34981bb96c0164627814733d799709da8ca60849c07e3838d35dc2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "318c54b9-3a84-425c-a84c-0dea43e5702f", "node_type": "1", "metadata": {"page_label": "258", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b85b2840060c9845a61fbed40df85cd2ea03f84abec832dad39c4ec02c90bd24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "087674de-4e33-41ec-a94c-d169ba42f00d", "node_type": "1", "metadata": {}, "hash": "3540302d4154dd8099859f18e1f42e1fc3b61b94a370951031069f72aa7249dd", "class_name": "RelatedNodeInfo"}}, "hash": "8243f8b49da2ed3d088767378646ebad61c019f24701b5737ff76fc79b81cc1b", "text": "259 \n \nLa sublibrer\u00eda Linalg de NumPy  contiene funciones para aplicaciones de \u00e1lgebra lineal  \n \n>>> np.linalg.det(a)    Determinante  \n-105.99999999999997  \n >>> np.linalg.inv(a)    Matriz inversa \narray([[- 0.03773585, -0.33018868,  0.30188679],  \n       [ -0.13207547,  0.09433962,  0.05660377],  \n       [ 0.28301887,  0.22641509, - 0.26415094]])  \n>>> np.trace(a)     Traza (su ma de la diagonal)  \n17 \n >>> np.transpose(a)    Matriz transpuesta \narray([[4, 2, 6],  \n       [2, 8, 9],  \n       [5, 4, 5]])  \n \n>>> a.T     Notaci\u00f3n reducida para la transpuesta \narray([[4, 2, 6],      \n       [2, 8, 9],  \n       [5, 4, 5]])  \n \n>>> np.tril(a)     Matriz t riangular inferior  \narray([[4, 0, 0],  \n       [2, 8, 0],  \n       [6, 9, 5]])  \n >>> np.triu(a)     Matriz triangular superior  \narray([[4, 2, 5],  \n       [0, 8, 4],  \n       [0, 0, 5]])  \n >>> a=np.zeros([3,4],int)    Llenar una matriz con ceros, tipo entero \n>>> a \narray([[0, 0, 0, 0],  \n       [0, 0, 0, 0],  \n       [0, 0, 0, 0]])  \n >>> np.identity(5)     Matriz identidad  \narray([[ 1.,  0.,  0.,  0.,  0.],  \n       [ 0.,  1.,  0.,  0.,  0.", "start_char_idx": 0, "end_char_idx": 1113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "087674de-4e33-41ec-a94c-d169ba42f00d": {"__data__": {"id_": "087674de-4e33-41ec-a94c-d169ba42f00d", "embedding": null, "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19a2cc1a-1f0c-495e-a1ef-6f23e25af291", "node_type": "4", "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "11a229d78b34981bb96c0164627814733d799709da8ca60849c07e3838d35dc2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "203fb962-697d-4e31-a1b3-05106979b8cc", "node_type": "1", "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8243f8b49da2ed3d088767378646ebad61c019f24701b5737ff76fc79b81cc1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49a4f36f-deb8-4a07-a5f8-3f6e60e19a9d", "node_type": "1", "metadata": {}, "hash": "ff4ee575c47a0c7a11aa119ce5b44fbcf3aad718a0fdcaf0ad2dd821a3e06218", "class_name": "RelatedNodeInfo"}}, "hash": "3540302d4154dd8099859f18e1f42e1fc3b61b94a370951031069f72aa7249dd", "text": "],  \n       [ 0.,  0.,  1.,  0.,  0.],  \n       [ 0.,  0.,  0.,  1.,  0.],  \n       [ 0.,  0.,  0.,  0.,  1.]])  \n \n \n \n  \nPython Programaci\u00f3n", "start_char_idx": 1113, "end_char_idx": 1255, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49a4f36f-deb8-4a07-a5f8-3f6e60e19a9d": {"__data__": {"id_": "49a4f36f-deb8-4a07-a5f8-3f6e60e19a9d", "embedding": null, "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57bbe390-3dff-49d6-935e-a16b34b8a5df", "node_type": "4", "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13aabd595feb21b273d9c16013fe6d2c0d43168b1dc77a045abeba6c34a4f88e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "087674de-4e33-41ec-a94c-d169ba42f00d", "node_type": "1", "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3540302d4154dd8099859f18e1f42e1fc3b61b94a370951031069f72aa7249dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1af2705-7fa2-4a23-a404-57b8237eaed5", "node_type": "1", "metadata": {}, "hash": "5f13210fd801dbe82e1382a4f1ac6e38680b3fbbb838561333b09bd53c615f37", "class_name": "RelatedNodeInfo"}}, "hash": "ff4ee575c47a0c7a11aa119ce5b44fbcf3aad718a0fdcaf0ad2dd821a3e06218", "text": "260 \n \n>>> np.identity(5, dtype=int )  Matriz identidad  con enteros  \narray([[1, 0, 0, 0, 0],  \n       [0, 1, 0, 0, 0],  \n       [0, 0, 1, 0, 0],  \n       [0, 0, 0, 1, 0],  \n       [0, 0, 0, 0, 1]])  \n \n>>> np.eye(5,dtype=int)    El mismo resultado se obtiene  \narray([[1, 0, 0, 0, 0],    con la funci\u00f3n:  eye \n       [0, 1, 0, 0, 0],  \n       [0, 0, 1, 0, 0],  \n       [0, 0, 0, 1, 0],  \n       [0, 0, 0, 0, 1]])  \n >>> a=np.array([[4,2,5],[2,8,4],[6,9,5]])  \n>>> a.fill(5)           Un arreglo se puede susutituir  con alg\u00fan valor  \n>>> print(a)  \n[[5 5 5]  \n [5 5 5] \n [5 5 5]]  \n \n>>> a=np.full([3 ,2],7,dtype=int)   Se puede crear y rellenar  con la funci\u00f3n  full \n>>> print(a)  \n[[7 7] \n [7 7] \n [7 7]] \n \n>>> c=np.zeros([4,3],dtype=complex)   Matriz inicial con n\u00fameros complejos  \n>>> c \narray([[ 0.+0.j,  0.+0.j,  0.+0.j],  \n       [ 0.+0.j,  0.+0.j,  0.+0.j],  \n       [ 0.+0.j,  0.+0.j,  0.+0.j],  \n       [ 0.+0.j,  0.+0.j,  0.+0.", "start_char_idx": 0, "end_char_idx": 943, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1af2705-7fa2-4a23-a404-57b8237eaed5": {"__data__": {"id_": "d1af2705-7fa2-4a23-a404-57b8237eaed5", "embedding": null, "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57bbe390-3dff-49d6-935e-a16b34b8a5df", "node_type": "4", "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13aabd595feb21b273d9c16013fe6d2c0d43168b1dc77a045abeba6c34a4f88e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49a4f36f-deb8-4a07-a5f8-3f6e60e19a9d", "node_type": "1", "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff4ee575c47a0c7a11aa119ce5b44fbcf3aad718a0fdcaf0ad2dd821a3e06218", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "117e207b-b35c-4505-98bc-8e6cc75fffd3", "node_type": "1", "metadata": {}, "hash": "db39d1f08f275047fb43b51d330962b136c3d81e7f907ece666fb5bb31e43510", "class_name": "RelatedNodeInfo"}}, "hash": "5f13210fd801dbe82e1382a4f1ac6e38680b3fbbb838561333b09bd53c615f37", "text": "j,  0.+0.j,  0.+0.j]]  \n \nUna funci\u00f3n para sustituir en una matriz elementos especificados mediante \u00edndices \n \n>>> a=np.array([[1,2,3],[4,5,6],[7,8,9]])  \n>>> a \narray([[1, 2, 3],  \n       [4, 5, 6],  \n       [7, 8, 9]])  \n \n>>> np.put(a,[4,6],[- 2,-3])         \u00cdndices contados en sentido de filas   \n>>> a \narray([[ 1,  2,  3],  \n       [ 4, - 2,  6], \n       [ -3,  8,  9]])  \nPython Programaci\u00f3n", "start_char_idx": 925, "end_char_idx": 1324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "117e207b-b35c-4505-98bc-8e6cc75fffd3": {"__data__": {"id_": "117e207b-b35c-4505-98bc-8e6cc75fffd3", "embedding": null, "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f2d24cd1-0419-4148-8aca-de99d11e1c6e", "node_type": "4", "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64efa05df7542def0096d6c08a9793adb61ab3a60e30d3de19d8d6204f670d06", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1af2705-7fa2-4a23-a404-57b8237eaed5", "node_type": "1", "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5f13210fd801dbe82e1382a4f1ac6e38680b3fbbb838561333b09bd53c615f37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffd18c57-8e15-4929-8767-65ebe4dc7705", "node_type": "1", "metadata": {}, "hash": "e369af3c958f6f7fbcbafffb4b7bc86523a93a68509347c922efb108a17045ce", "class_name": "RelatedNodeInfo"}}, "hash": "db39d1f08f275047fb43b51d330962b136c3d81e7f907ece666fb5bb31e43510", "text": "261 \n \nFunci\u00f3n para comparar matrices (o listas bidimensio nales: array_equal  \n \n>>> a=[[2,3],[4,5]]  \n>>> b=[[2,3],[4,5]]  \n>>> np.array_equal(a,b)  \nTrue \n>>> b=[[2,3],[4,6]]  \n>>> np.array_equal(a,b)  \nFalse \n \nUna funci\u00f3n para determinar si un objeto es iterable (lista, arreglo, cadena, etc.)", "start_char_idx": 0, "end_char_idx": 298, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffd18c57-8e15-4929-8767-65ebe4dc7705": {"__data__": {"id_": "ffd18c57-8e15-4929-8767-65ebe4dc7705", "embedding": null, "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f2d24cd1-0419-4148-8aca-de99d11e1c6e", "node_type": "4", "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64efa05df7542def0096d6c08a9793adb61ab3a60e30d3de19d8d6204f670d06", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "117e207b-b35c-4505-98bc-8e6cc75fffd3", "node_type": "1", "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "db39d1f08f275047fb43b51d330962b136c3d81e7f907ece666fb5bb31e43510", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "26abcb13-4c1a-4aa5-9a47-aa299ed508bc", "node_type": "1", "metadata": {}, "hash": "1aa99732e592cbf424b249f8f589bd3d75a79bc463a3eff09735873093ed0b0e", "class_name": "RelatedNodeInfo"}}, "hash": "e369af3c958f6f7fbcbafffb4b7bc86523a93a68509347c922efb108a17045ce", "text": ">>> a=np.array([[1,2,3],[4,5,6],[7,8,9]])  \n>>> np.iterable(a)  \n1 \n>>> x='prueba'  \n>>> np.iterable(x)  \n1 \n>>> s=[4,6,3,8]  \n>>> np.iterable(x)  \n1 \n>>> r=5 \n>>> np.iterable(r)  \n0 \n \nFunciones especiales para trasladar  elementos de matrices  \n \n>>> A=np.array ([[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16],[17,18,19,20]])  \n>>> print(A)  \n[[ 1  2  3  4]  \n [ 5  6  7  8]  \n [ 9 10 11 12]  \n [13 14 15 16]  \n [17 18 19 20]]  \n \n>>> B=np.rot90(A)     Rotaci\u00f3n de una matriz 90\u00ba opuesto al reloj   \n>>> print(B)  \n[[ 4  8 12 16 20]  \n [ 3  7 11 15 19]  \n [ 2  6 10 14 18]  \n [ 1  5  9 13 17]]  \n \n>>> np.fliplr(A)     Rotar alrededor del eje vertical central  \narray([[ 4,  3,  2,  1],  \n       [ 8,  7,  6,  5],  \n       [12, 11, 10,  9],  \n       [16, 15, 14, 13],  \n       [20, 19, 18, 17]])  \n \nPython Programaci\u00f3n", "start_char_idx": 303, "end_char_idx": 1125, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26abcb13-4c1a-4aa5-9a47-aa299ed508bc": {"__data__": {"id_": "26abcb13-4c1a-4aa5-9a47-aa299ed508bc", "embedding": null, "metadata": {"page_label": "262", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dce5b2fa-f296-4165-b1b5-9e1d942f82f3", "node_type": "4", "metadata": {"page_label": "262", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eebae571001ea3965cef890b169b7de50b556be288dbb1588c19e8b9e5b30948", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffd18c57-8e15-4929-8767-65ebe4dc7705", "node_type": "1", "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e369af3c958f6f7fbcbafffb4b7bc86523a93a68509347c922efb108a17045ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae05e88c-4e19-4e27-8e66-5aa7cc3673f2", "node_type": "1", "metadata": {}, "hash": "2e5020f5ca66aaebf875b7df9548979b85f45c5c110a0aeef5e0859a86603cb4", "class_name": "RelatedNodeInfo"}}, "hash": "1aa99732e592cbf424b249f8f589bd3d75a79bc463a3eff09735873093ed0b0e", "text": "262 \n \n>>> np.flipud(A)     Rotar alrededor del eje horizontal central  \narray([[17, 18, 19, 20],  \n       [13, 14, 15, 16],  \n       [ 9, 10, 11, 12],  \n       [ 5,  6,  7,  8],  \n       [ 1,  2,  3,  4]])  \n \n>>> np.roll(A,2)     Rotar o girar alrededor de la misma matriz  \narray([[19, 20,  1,  2],    en sentido del reloj un n\u00famero especific ado \n       [ 3,  4,  5,  6],  \n       [ 7,  8,  9, 10],  \n       [11, 12, 13, 14],  \n       [15, 16, 17, 18]])  \n \nFunciones con operaciones \u201ctipo conjunto\u201d con matrices  \n \n>>> a=np.array([[2,3],[5,5]])  \n >>> b=np.array([[5,3],[7,3]])  \n \n>>> np.union1d(a,b)     Uni\u00f3n \narray([2, 3, 5, 7])  \n \n>>> np.intersect1d(a,b)     Intersecci\u00f3n  \narray([3, 5])  \n \n>>> np.unique(a)      Eliminar elementos repetidos  \narray([2, 3, 5])  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 795, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae05e88c-4e19-4e27-8e66-5aa7cc3673f2": {"__data__": {"id_": "ae05e88c-4e19-4e27-8e66-5aa7cc3673f2", "embedding": null, "metadata": {"page_label": "263", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1201048e-4f35-4df8-b552-2ca10fbb21d3", "node_type": "4", "metadata": {"page_label": "263", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3b87714fbc447cf32de69d8028f19892d32fadd5f63a0df3cd40c42bdf2e4bef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "26abcb13-4c1a-4aa5-9a47-aa299ed508bc", "node_type": "1", "metadata": {"page_label": "262", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1aa99732e592cbf424b249f8f589bd3d75a79bc463a3eff09735873093ed0b0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "333800c0-3b7b-4737-b8d0-7640c541b5d9", "node_type": "1", "metadata": {}, "hash": "b7a7ddd78202d152f93e8e94734c4527b44c0761a13f4f5813a49cce970ae471", "class_name": "RelatedNodeInfo"}}, "hash": "2e5020f5ca66aaebf875b7df9548979b85f45c5c110a0aeef5e0859a86603cb4", "text": "263 \n \nSelecci\u00f3n  de elementos en arreglos de dos dimensiones (matrices)  \n \nLos arreglos admiten formas especiales para selec ci\u00f3n de componentes con los que se \npuede construir expresiones compactas para el manejo de porciones de las matrices.  \n \n>>> a=np.array([[4,5,6],[2,8,4],[2,5,9]])  \n>>> print(a)  \n[[4 5 6]  \n [2 8 4] \n [2 5 9]]  \n \n>>> a>5     Resulta un arreglo de valores l\u00f3gicos \narray([[False, False,  True],  \n       [False,  True, False],  \n       [False, False,  True]], dtype=bool)  \n \n>>> np.sum(a>5)     Los valores l\u00f3gicos se puede sumar  \n3 \n \n>>> np.sum(a[a>5])     Los valores l\u00f3gicos act\u00faan como \u00edndices  \n23 \n \nCuantificadores l\u00f3gicos con matr ices \n \n>>> a=np.array([[4,5,6],[2,8,4],[2,5,9]])  \n>>> np.any(a<2)  \nFalse \n>>> np.all(a>0)  \nTrue \n \nLa funci\u00f3n where de NumPy para seleccionar elementos de matrices  \n \n>>> a=np.array([[4,5,6],[2,8,4],[2,5,9]])  \n>>> print(a)  \n[[4 5 6]  \n [2 8 4] \n [2 5 9]]  \n \n>>> [f,c]=np. where(a==4)  \n>>> f \narray([0, 1], dtype=int32)  \n>>> c \narray([0, 2], dtype=int32)  \n \n>>> np.where(a>5)     Produce un arreglo de elementos  \n(array([0, 1, 2], dtype=int32), array([2, 1, 2], dtype=int32))  \n >>> print(a[np.where(a>5)])   Notaci\u00f3n compacta pero legible \n[6 8 9] \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "333800c0-3b7b-4737-b8d0-7640c541b5d9": {"__data__": {"id_": "333800c0-3b7b-4737-b8d0-7640c541b5d9", "embedding": null, "metadata": {"page_label": "264", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e29b79dd-c7e3-4e53-b776-39bc4064b557", "node_type": "4", "metadata": {"page_label": "264", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b4a4e66c1a8392118b0c25f983fed297cb9dec0ce980143183fad822d8bb7ce1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae05e88c-4e19-4e27-8e66-5aa7cc3673f2", "node_type": "1", "metadata": {"page_label": "263", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2e5020f5ca66aaebf875b7df9548979b85f45c5c110a0aeef5e0859a86603cb4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b45d9ae-d23d-43c1-bfe5-92ba94a4fb64", "node_type": "1", "metadata": {}, "hash": "5dedd2b8923eb0f078428b0dc48ecf39ae871abe998d744552b4bcaa8e6125ce", "class_name": "RelatedNodeInfo"}}, "hash": "b7a7ddd78202d152f93e8e94734c4527b44c0761a13f4f5813a49cce970ae471", "text": "264 \n \n>>> np.sum(a[np.where(a>5)])  \n23 \n \nLa funci\u00f3n especial  where es un dispositivo muy \u00fatil para sustituir valores de matrices : \nwhere(condition, x, y) .  Los valores que cumplen la condici\u00f3n son sustituidos por x. Los \notros son sustituidos por y \n \n>>> a=np.array([[5,3,6],[7,1,3],[3,9,6]])  \n>>> print(a)  \n[[5 3 6]  \n [7 1 3] \n [3 9 6]]  \n \n>>> b=np.where(a>4,0,9)    Los valores mayores a 4 se ustituyen por 0  \n>>> print(b)      los otros por  9 \n[[0 9 0]  \n [0 9 9] \n [9 0 0]]  \n \n>>> c=np.where(a>4,'Cumple','No cumple')  \n>>> print(c)  \n[['Cumple' 'No cumple' 'Cumple']  \n ['Cumple' 'No cumple' 'No cumple']  \n ['No cumple' 'Cumple' 'Cumple']]  \n \n \nUso de la especificaci\u00f3n axis para la direcci\u00f3n de recorrido de matrices  \n \nEn muchas funciones de NumPy se puede especificar mediante la opci\u00f3n axis si el \nrecorrido es por columnas:  axis=0 ,  o por filas:  axis=1  \n \n>>> a=np.array([[4,5,6],[2,8,4],[2,5,9]])  \n>>> print(a)  \n[[4 5 6]  \n [2 8 4] \n [2 5 9]]  \n \n>>> np.sum(a,axis=1)     Suma de filas  \narray([15, 14, 16])  \n >>> np.sum(a,axis=0)     Suma de columnas  \narray([ 8, 18, 19])  \n \n>>> np.prod(a,1)      Producto por filas  \narray([120,  64,  90])  \n >>> np.prod(a,0)      Producto por columnas  \narray([ 16, 200, 216])  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b45d9ae-d23d-43c1-bfe5-92ba94a4fb64": {"__data__": {"id_": "0b45d9ae-d23d-43c1-bfe5-92ba94a4fb64", "embedding": null, "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e13b7f6-c55b-424a-baa8-03e4f9e36ce9", "node_type": "4", "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "08e69f2f23193f0de76a52ead46cd33ecb3e73794c18d1dceb716944c19cb52e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "333800c0-3b7b-4737-b8d0-7640c541b5d9", "node_type": "1", "metadata": {"page_label": "264", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b7a7ddd78202d152f93e8e94734c4527b44c0761a13f4f5813a49cce970ae471", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8154d84-4ff3-4695-b6db-444474f47057", "node_type": "1", "metadata": {}, "hash": "a1cb66be8d6c755df58909a404dae7738eac52689a8671560f46c06c9f8deccc", "class_name": "RelatedNodeInfo"}}, "hash": "5dedd2b8923eb0f078428b0dc48ecf39ae871abe998d744552b4bcaa8e6125ce", "text": "265 \n \n>>> np.mean(a,axis=1)      Media de filas  \narray([ 5.        ,  4.66666667,  5.33333333])  \n \n>>> np.mean(a,axis =0)     Media de columnas  \narray([ 2.66666667,  6.        ,  6.33333333])  \n \n>>> np.average(a,axis=1)      Media de filas  \narray([ 5.        ,  4.66666667,  5.33333333])  \n \n>>> np.average(a,axis=0)      Media de columnas  \narray([ 2.66666667,  6.        ,  6.33333333])  \n >>> np.average(a,axis=1,weights=np.arange(1,4)) Media aritm\u00e9tica ponderada fil.  \narray([ 5.33333333,  5.        ,  6.5       ])  \n >>> np.average(a,axis=0,weights=[1,2,2])      Media aritm\u00e9tica ponderada col.  \narray([ 2.4,  6.2,  6.4])  \n \nSe puede omitir la palabra axis \n \n>>> np.sum(a,0)    Suma de columnas  \narray([ 8, 18, 19])  \n >>> np.sum(a,1)     Suma de filas  \narray([15, 14, 16])  \n \n>>> np.std(a,0)     \narray([ 0.94280904,  1.41421356,  2.05480467])    Desv. Std. de columnas  \n \n>>> np.median(a,0)       Mediana de colum nas \narray([ 2.,  5.,  6.])", "start_char_idx": 0, "end_char_idx": 963, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8154d84-4ff3-4695-b6db-444474f47057": {"__data__": {"id_": "a8154d84-4ff3-4695-b6db-444474f47057", "embedding": null, "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e13b7f6-c55b-424a-baa8-03e4f9e36ce9", "node_type": "4", "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "08e69f2f23193f0de76a52ead46cd33ecb3e73794c18d1dceb716944c19cb52e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b45d9ae-d23d-43c1-bfe5-92ba94a4fb64", "node_type": "1", "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5dedd2b8923eb0f078428b0dc48ecf39ae871abe998d744552b4bcaa8e6125ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "858da336-b4e8-47b5-8e5f-e4327eb55f60", "node_type": "1", "metadata": {}, "hash": "233149fd3de4b3ee3f083abb88d00685da12a2a5b27155faaa7dcda2aa94081c", "class_name": "RelatedNodeInfo"}}, "hash": "a1cb66be8d6c755df58909a404dae7738eac52689a8671560f46c06c9f8deccc", "text": ">>> np.amax(a)     El mayor  de la matriz (igual que max)  \n9 \n>>> np.amax(a,0)     El mayor de cada columna  \narray([4, 8, 9])  \n >>> np.amax(a,1)     El mayor de cada fila \narray([6, 8, 9])  \n >>> np.amin(a)     El menor  de la matriz (igual que min) \n2 \n>>> np.amin(a,0)     El menor de cada columna  \narray([2, 5, 4])  \n \n>>> np.amin(a,1)     El menor de cada fila \narray([4, 2, 2])  \n \n \nPython Programaci\u00f3n", "start_char_idx": 967, "end_char_idx": 1379, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "858da336-b4e8-47b5-8e5f-e4327eb55f60": {"__data__": {"id_": "858da336-b4e8-47b5-8e5f-e4327eb55f60", "embedding": null, "metadata": {"page_label": "266", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07bd22b6-4fab-4553-9a49-de920235eade", "node_type": "4", "metadata": {"page_label": "266", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4ca20498138cd739aceb097a6aeacb24d210a314d051149266f99a2d83043fc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8154d84-4ff3-4695-b6db-444474f47057", "node_type": "1", "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a1cb66be8d6c755df58909a404dae7738eac52689a8671560f46c06c9f8deccc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce89c73e-c904-401c-a6a7-f3d05f38d951", "node_type": "1", "metadata": {}, "hash": "394fe75822b4523db582067be943a9e6f4a8390af9a0c4a048cf4973308827ba", "class_name": "RelatedNodeInfo"}}, "hash": "233149fd3de4b3ee3f083abb88d00685da12a2a5b27155faaa7dcda2aa94081c", "text": "266 \n \n>>> np.argmax(a)     Indice  del mayor valor  \n8      contando por filas  \n>>> np.argmin(a)     Indice d el menor valor  \n3 \n>>> np.argmax(a,0)     Posici\u00f3n del mayor de c/columna  \narray([0, 1, 2], dtype=int32)  \n \n>>> np.argmax(a,1)     Posici\u00f3n del mayor de c/fila \narray([2, 1, 2], dtype=int32)  \n >>> np.all(a>2)   Todos los elementos mayores a 2  \nFalse \n \n>>> np.all(a>2,0)      Cuales colum. con todos elem. > 2  \narray([False,  True,  True], dtype=bool)  \n \n>>> a[:,np. all(a>2,0)]     Mostrar las columnas  \narray([[5, 6],  \n       [8, 4],  \n       [5, 9]])  \n \n>>> np.all(a>2,1)      Cuales filas con todos elem. >  2  \narray([ True, False, False], dtype=bool)  \n >>> a[np.all(a>2,1)]     Mostrar las filas  \narray([[4, 5, 6]])  \n >>> np.any(a>6,0)      Cuales cols. con alg\u00fan elem. >  2 \narray([False,  True,  True], dtype=bool)  \n >>> a[:,np. any(a>6,0)]     Mostrar las columnas  \narray([[5, 6],  \n       [8, 4],  \n       [5, 9]])  \n \n>>> np.any(a>6,1)      Cuales filas con alg\u00fan elem. >  2  \narray([False,  True,  True], dtype=bool)  \n \n>>> a[np.any(a>6,1)]    Mostrar las filas  \narray([[2, 8, 4],  \n       [2, 5, 9]])  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce89c73e-c904-401c-a6a7-f3d05f38d951": {"__data__": {"id_": "ce89c73e-c904-401c-a6a7-f3d05f38d951", "embedding": null, "metadata": {"page_label": "267", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ffe9236-fd03-402d-8e29-90fad74eec94", "node_type": "4", "metadata": {"page_label": "267", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec180a92b7ad282c8a3e722029a3ae5eba0e6a3d97966cd67a2f8752b30edf09", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "858da336-b4e8-47b5-8e5f-e4327eb55f60", "node_type": "1", "metadata": {"page_label": "266", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "233149fd3de4b3ee3f083abb88d00685da12a2a5b27155faaa7dcda2aa94081c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e231def-dccf-44c6-9e87-4ea6c3acc979", "node_type": "1", "metadata": {}, "hash": "97d8d99f322cd265e0f5a82b89195c7d4fe83813ef971e9465f5cbb50318c4eb", "class_name": "RelatedNodeInfo"}}, "hash": "394fe75822b4523db582067be943a9e6f4a8390af9a0c4a048cf4973308827ba", "text": "267 \n \nFunciones especiales de  NumPy  para modificar la estructura de arreglos \nbidimensional es (matrices)  \n \nEstas funciones especiales permiten modificar la estructura de los arreglos de NumPy de \nmanera din\u00e1mica (durante la ejecuci\u00f3n), similar a las listas  \n \n>>> a=np.array([[10,20,30],[40,50,60],[70,80,90]])  \n>>> a  \narray([[10, 20, 30],  \n       [40, 50, 60],  \n       [70, 80, 90]])  \n \n>>> e=np.insert(a,1,[1,2,3],axis= 0)    Inserte en las columnas de la fila 1  \n>>> e \narray([[10, 20, 30],  \n       [ 1,  2,  3],  \n       [40, 50, 60],  \n       [70, 80, 90]])   \n \n>>> e=np.insert(a,[1],[[1],[2],[3]],axis=1)  Inserte en  las filas de la columna 1  \n>>> e \narray([[10,  1, 20, 30],  \n       [40,  2, 50, 60],  \n       [70,  3, 80, 90]])  \n >>> c=np.delete(a,1,axis= 1)        Borrar todas las filas de la columna 1 \n>>> c  \narray([[10, 30],  \n       [40, 60],  \n       [70, 90]])  \n \n>>> b=np.delete(a,1,axis= 0)        Borrar todas las columnas de la fila 1 \n>>> b \narray([[10, 20, 30],  \n       [70, 80, 90]])  \n  \n>>> a=np.array([[10,20],[30,40]])     \n>>> a \narray([[10, 20],  \n       [30, 40]])  \n >>> b=np.array([[50,60],[70,80]])  \n>>> b \narray([[50, 60],  \n       [70, 80]])  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e231def-dccf-44c6-9e87-4ea6c3acc979": {"__data__": {"id_": "6e231def-dccf-44c6-9e87-4ea6c3acc979", "embedding": null, "metadata": {"page_label": "268", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d61db280-fd51-4c54-a34f-9a5171689b88", "node_type": "4", "metadata": {"page_label": "268", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fa9de4013bf4a25099655787092ec815fe9ba50594f054d9a18030693c5119dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce89c73e-c904-401c-a6a7-f3d05f38d951", "node_type": "1", "metadata": {"page_label": "267", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "394fe75822b4523db582067be943a9e6f4a8390af9a0c4a048cf4973308827ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faa107bd-0e03-46c5-8f73-f071ee7ca29c", "node_type": "1", "metadata": {}, "hash": "c8a35739f347ecff7560865c74d009d26da8929298461b6e18c01d80361f2132", "class_name": "RelatedNodeInfo"}}, "hash": "97d8d99f322cd265e0f5a82b89195c7d4fe83813ef971e9465f5cbb50318c4eb", "text": "268 \n \n>>> c=np.concatenate([a,b])     Concatenar matrices  \n>>> c \narray([[10, 20],  \n       [30, 40],  \n       [50, 60],  \n       [70, 80]])  \n \n>>> c=np.concatenate([a,b],axis=1)  \n>>> c \narray([[10, 20, 50, 60],  \n       [30, 40, 70, 80]])  \n \n>>> c=np.concatenate([a,b],axis=0)  \n>>> c \narray([[10, 20],  \n       [30, 40],  \n       [50, 60],  \n       [70, 80]])  \n >>> a=np.array([[10,20],[30,40]])  \n>>> a \narray([[10, 20],  \n       [30, 40]])  \n >>> b=np.array([[50,60]])  \n>>> b \narray([[50, 60]])  \n \n>>> c=np.concatenate([a,b.T],axis=1)  \n>>> c \narray([[10, 20, 50],  \n       [30, 40, 60]])  \n \n>>> a=np.array([[10,20],[30,40]])  \n>>> a \narray([[10, 20],  \n       [30, 40]])  \n \n>>> b=np.array([[50],[60]])  \n>>> b \narray([[50],  \n       [60]])  \n \n>>> c=np.concatenate([a,b],axis=1)  \n>>> c \narray([[10, 20, 50],  \n       [ 30, 40, 60]])  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "faa107bd-0e03-46c5-8f73-f071ee7ca29c": {"__data__": {"id_": "faa107bd-0e03-46c5-8f73-f071ee7ca29c", "embedding": null, "metadata": {"page_label": "269", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb36d47d-b9c4-4d3f-a19a-792e65042b47", "node_type": "4", "metadata": {"page_label": "269", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "141d70b3944931bdd3318056af926933da7e5898e74732dbe5d42167ed550d83", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e231def-dccf-44c6-9e87-4ea6c3acc979", "node_type": "1", "metadata": {"page_label": "268", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "97d8d99f322cd265e0f5a82b89195c7d4fe83813ef971e9465f5cbb50318c4eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74e75a5e-428f-428f-a4ee-bd0ce3be109d", "node_type": "1", "metadata": {}, "hash": "b5d0ff624d3e6f136a9c7c435ab40da8f93aebab881cc7edd104a132e19c6e3d", "class_name": "RelatedNodeInfo"}}, "hash": "c8a35739f347ecff7560865c74d009d26da8929298461b6e18c01d80361f2132", "text": "269 \n \nUna matriz puede usarse como argumento para seleccionar elementos de otra matriz \n \n>>> a=np.array([[4,2,5],[2,8,4],[6,9,5]])  \n>>> a \narray([[4, 2, 5],  \n       [2, 8, 4],  \n       [6, 9, 5]])  \n \n>>> b=np.array([[1,7,3],[6,8,2],[6,8,7]])  \n>>> b \narray([[1, 7, 3],  \n       [6, 8, 2],  \n       [6, 8, 7]])  \n >>> a[a>5]  \narray([8, 6, 9])  \n >>> a[a>b]  \narray([4, 5, 4, 9])  \n \n>>> a[a==b]  \narray([8, 6])  \n >>> c=np.array([['N','S','A'],['S','S','N'],['N','S','N ']]) \n>>> c \narray([['N', 'S', 'A'],  \n       ['S', 'S', 'N'],  \n       ['N', 'S', 'N ']],  \n      dtype='<U1')  \n >>> a[c=='S']  \narray([2, 2, 8, 9])  \n >>> list(a[c=='S'])  \n[2, 2, 8, 9]  \n >>> np.sum(a[c=='S'])  \n21 \n \n>>> np.average(a[c!='S'])  \n4.7999999999999998  \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 768, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74e75a5e-428f-428f-a4ee-bd0ce3be109d": {"__data__": {"id_": "74e75a5e-428f-428f-a4ee-bd0ce3be109d", "embedding": null, "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd018312-2a86-4585-a726-c36a668e5044", "node_type": "4", "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64bca0c7b324dd890b3b63d47a7cf5c9534971e2c5194b0e96ad23a61722491e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faa107bd-0e03-46c5-8f73-f071ee7ca29c", "node_type": "1", "metadata": {"page_label": "269", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c8a35739f347ecff7560865c74d009d26da8929298461b6e18c01d80361f2132", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "199d1cd4-1e01-444f-841d-be1d8251c415", "node_type": "1", "metadata": {}, "hash": "dc923ce3197499ddaffa8005ed5b40a8764236441df1f95a0e0ade1825257570", "class_name": "RelatedNodeInfo"}}, "hash": "b5d0ff624d3e6f136a9c7c435ab40da8f93aebab881cc7edd104a132e19c6e3d", "text": "270 \n \nSelecci\u00f3n de d iagonales de matrices  \n \n>>> from random import* \n>>> a=np.array([[randint(10,20)for  i in range(5)]for j in range(5)])  \n>>> a  \narray([[13, 16, 17, 19, 19],    Matriz aleatoria  \n       [11, 13, 11, 11, 13],  \n       [13, 10, 20, 12, 20],  \n       [11, 16, 14, 12, 15],  \n       [11, 12, 14, 13, 13]])  \n \n>>> d=np.diag(a)       Diagonal principal  \n>>> d  \narray([13, 13, 20, 12, 13])  \n \n \n>>> d=np.diag(np.diag(a))     Matriz con la diagonal  \n>>> d \narray([[13,  0,  0,  0,  0],  \n       [ 0, 13,  0,  0,  0],  \n       [ 0,  0, 20,  0,  0],  \n       [ 0,  0,  0, 12,  0],  \n       [ 0,  0,  0,  0, 13]])  \n >>> d=np.diag(np.diag(a,1))     Matriz diagonal +1 \n>>> d \narray([[16,  0,  0,  0],  \n       [ 0, 11,  0,  0],  \n       [ 0,  0, 12,  0],  \n       [ 0,  0,  0, 15]])  \n >>> d=np.diag(np.diag(a,- 1))    Matriz diagonal - 1 \n>>> d \narray([[11,  0,  0,  0],  \n       [ 0, 10,  0,  0],  \n       [ 0,  0, 14,  0],  \n       [ 0,  0,  0, 13]])  \n \n>>> d=np.", "start_char_idx": 0, "end_char_idx": 986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "199d1cd4-1e01-444f-841d-be1d8251c415": {"__data__": {"id_": "199d1cd4-1e01-444f-841d-be1d8251c415", "embedding": null, "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd018312-2a86-4585-a726-c36a668e5044", "node_type": "4", "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64bca0c7b324dd890b3b63d47a7cf5c9534971e2c5194b0e96ad23a61722491e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74e75a5e-428f-428f-a4ee-bd0ce3be109d", "node_type": "1", "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b5d0ff624d3e6f136a9c7c435ab40da8f93aebab881cc7edd104a132e19c6e3d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa940b8b-74c7-4663-a49d-fe4daf7c16f2", "node_type": "1", "metadata": {}, "hash": "911c5b407cc54e68fe41697c3267590f2fa53d6afc3cdacd0d06ebb5bc74633e", "class_name": "RelatedNodeInfo"}}, "hash": "dc923ce3197499ddaffa8005ed5b40a8764236441df1f95a0e0ade1825257570", "text": "0,  0, 13]])  \n \n>>> d=np.diag(np.diag(a,2))     Matriz diagonal +2 \n>>> d \narray([[17,  0,  0],  \n       [ 0, 11,  0],  \n       [ 0,  0, 20]])  \n \n>>> d=np.diag(np.diag(a,- 2))   Matriz diagonal - 2 \n>>> d \narray([[13,  0,  0],  \n       [ 0, 16,  0],  \n       [ 0,  0, 14]])  \n \nPython Programaci\u00f3n", "start_char_idx": 960, "end_char_idx": 1259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa940b8b-74c7-4663-a49d-fe4daf7c16f2": {"__data__": {"id_": "aa940b8b-74c7-4663-a49d-fe4daf7c16f2", "embedding": null, "metadata": {"page_label": "271", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a9648dd-bd99-4386-99da-637f7657af89", "node_type": "4", "metadata": {"page_label": "271", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eea2e515ca40281576d121a9b65173a341278724691d27d2778a56893621585d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "199d1cd4-1e01-444f-841d-be1d8251c415", "node_type": "1", "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dc923ce3197499ddaffa8005ed5b40a8764236441df1f95a0e0ade1825257570", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa0d478f-854e-4f3a-b152-8ae261e9feb5", "node_type": "1", "metadata": {}, "hash": "9f1452636c8f1a262e9028230dd60ccb2735de43ea478cc695eb107d535d6698", "class_name": "RelatedNodeInfo"}}, "hash": "911c5b407cc54e68fe41697c3267590f2fa53d6afc3cdacd0d06ebb5bc74633e", "text": "271 \n \nBroadcasting  \n \nBroadcasting (transmisi\u00f3n) es un mecanismo de NumPy  que permite operar \nmatem\u00e1ticamente con arreglos de diferentes dimensiones. Comunmente se aplica cuando se desea operar varias veces con un arreglo de menor dimensi\u00f3n sobre un arreglo de \nmayor dimensi\u00f3n. Para su aplicaci\u00f3n debe haber compatibilidad.  \n \nEjemplos . \n \n>>> x=np.array([4,3,7,8])  \n>>> t=np.array([5])  \n>>> x+t      Agrega  t  a cada elemento de  x  \narray([ 9,  8, 12, 13])  \n \n>>> x=np.array([[4,3],[7,8],[9,6]])  \n>>> t=np.array([5,2])  \n>>> x+t      Agrega  t  a cada fila de  x  \narray([[ 9,  5],  \n       [12, 10],  \n       [14,  8]])  \n \n>>> x=np.array([[4,3],[7,8],[9,6]])  \n>>> t=np.array([5,2,6])  \n>>> x+t        \nValueError: operands could not be broadcast  Error: Arreglos imcompatibles  \n \nEjemplo.  Agregar el arreglo [6,5]  a cada columna del arreglo [ [4,3,7],[7,8,9]]  \n \nPara que haya compatibilidad, debe us arse la transpuesta de x: \n \n>>> x=np.array([[4,3,7],[7,8,9]])  \n>>> t=np.array([6,5])  \n>>> r=x.T+t             N otaci\u00f3n reducida para transpuesta \n>>> r.T \narray([[10,  9, 13],  \n       [12, 13, 14]])  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa0d478f-854e-4f3a-b152-8ae261e9feb5": {"__data__": {"id_": "fa0d478f-854e-4f3a-b152-8ae261e9feb5", "embedding": null, "metadata": {"page_label": "272", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "098ec2df-1a80-470a-9966-ba693493135f", "node_type": "4", "metadata": {"page_label": "272", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31777b37c5d143053e8e66f63b9e1f1dbc70925ccf5deff0ab11da72e135f4b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa940b8b-74c7-4663-a49d-fe4daf7c16f2", "node_type": "1", "metadata": {"page_label": "271", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "911c5b407cc54e68fe41697c3267590f2fa53d6afc3cdacd0d06ebb5bc74633e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ead689b0-5186-4f4a-a0b6-072e1e64e11f", "node_type": "1", "metadata": {}, "hash": "0d1ac67d93f2b9b598a425647f2c84fd6f65d3ef4bd96f2d36d58b681585b01f", "class_name": "RelatedNodeInfo"}}, "hash": "9f1452636c8f1a262e9028230dd60ccb2735de43ea478cc695eb107d535d6698", "text": "272 \n \nAplicaci\u00f3n cl\u00e0sica: Resoluci\u00f3n de un sistema de ecuaciones lineales  \n \nResolver el sistema  \n \nAX = B   \n A:  matriz de coeficientes  \n B:  vector de constantes  \n X:  vector sol uci\u00f3n  \nEntonces  \n X = A-1B,   si  |A| \u2260 0,  en donde:  \n A-1:  matriz inversa de A \n |A|:  determinante de A \n \nEjemplo. Resolver el sistema:  245 5\n3 1 4X 6\n524 7\uf8ee \uf8f9 \uf8ee\uf8f9\n\uf8ef \uf8fa \uf8ef\uf8fa=\uf8ef \uf8fa \uf8ef\uf8fa\n\uf8ef \uf8fa \uf8ef\uf8fa\uf8f0 \uf8fb \uf8f0\uf8fb \n \n>>> import numpy as np \n>>> a=np.array([[2,4,5],[3,1,4],[5,2,4]])   Matriz de coeficientes  \n>>> b=np.array([[5],[6],[7]])     Vector de constantes  \n>>> np.linalg.det(a)      Determinante de la matriz \n28.999999999999989        \n>>> c=np.linalg.inv(a)      Matriz inversa \n>>> x=np.dot(c,b)       Multipilcar  c con b \n>>> print(x)  \n[[ 0.72413793],       Vector soluci\u00f3n  \n [-0.44827586],  \n [ 1.06896552]]  \n \n \nEn lugar de usar la inversa, se puede usar directamente el m\u00e9todo solve de Num Py: \n \n>>> import numpy as np \n>>> a=np.array([[2,4,5],[3,1,4],[5,2,4]])   Matriz de coeficientes  \n>>> b=np.array([[5],[6],[7]])     Vector de constantes  \n>>> x=np.linalg.solve(a,b)  \n>>> print(x)  \n[[ 0.72413793],       Vector soluci\u00f3n \n [-0.44827586],  \n [ 1.06896552]]  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1180, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ead689b0-5186-4f4a-a0b6-072e1e64e11f": {"__data__": {"id_": "ead689b0-5186-4f4a-a0b6-072e1e64e11f", "embedding": null, "metadata": {"page_label": "273", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66e408ab-ca6a-45f0-b4a0-735a57f69890", "node_type": "4", "metadata": {"page_label": "273", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ade16b1570dfc6f597a6b82d8d63b351567fe2cd02e9769d0336e25306269143", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa0d478f-854e-4f3a-b152-8ae261e9feb5", "node_type": "1", "metadata": {"page_label": "272", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9f1452636c8f1a262e9028230dd60ccb2735de43ea478cc695eb107d535d6698", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2afac6d-cda1-49f9-9cda-7dfcef955af9", "node_type": "1", "metadata": {}, "hash": "8bfb763c3173e00e58579660f4610275c12bcf83e8bbeb67e4f47b802522bebe", "class_name": "RelatedNodeInfo"}}, "hash": "0d1ac67d93f2b9b598a425647f2c84fd6f65d3ef4bd96f2d36d58b681585b01f", "text": "273 \n \nSalida  de arreglos con control de decimales \n \nCon la opci\u00f3n    set_printoptions(precision = d)  se puede controlar la cantidad de \ndecimales  d   al imprimir los arreglos de la librer\u00eda NumPy  \n \n>>> np.set_printoptions(precision=5)   Cinco decimales  \n>>> print(x)  \n[[ 0.72414 ],       Vector soluci\u00f3n \n [-0.44828], \n [ 1.06897]]  \n \n \nRedondeo de decimales en arreglos \n  \n>>> s=np.array([[np. pi,np.sqrt(2)],[ np.sqrt(5),1/3]])  \n>>> print(s)  \n[[ 3.14159265  1.41421356]  \n [ 2.23606798  0.33333333]]  \n>>> t=np.around(s,4)  \n>>> print(t)  \n[[ 3.1416  1.4142]  \n [ 2.2361  0.3333]]  \n \nAlmacenamiento y recuperaci\u00f3n de arreglos en disco de archivos tipo texto  \n Las siguientes func iones est\u00e1n disponibles en la librer\u00eda NumPy  para almacenar o \nrecuperar un arreglo en el disco en un archivo de tipo texto.  \n \nPara almacenar  un arreglo,  c, en el disco en un archivo de tipo texto,  f, en el disco:  \n np.savetxt('f.txt',c)  \n \nPara recuperar el ar reglo , c, del archivo de tipo texto,  f, almacenado en el disco : \n c=np.loadtxt('f.txt')  \n \nEstas funciones no est\u00e1n disponibles para almacenar listas con datos de diferente tipo  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2afac6d-cda1-49f9-9cda-7dfcef955af9": {"__data__": {"id_": "c2afac6d-cda1-49f9-9cda-7dfcef955af9", "embedding": null, "metadata": {"page_label": "274", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba3dfa6c-0552-4935-aeac-0522dcd83514", "node_type": "4", "metadata": {"page_label": "274", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f20d4cb56c391bf28948d04ff3c0073d19977d89606a196062cc06d4a7e934bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ead689b0-5186-4f4a-a0b6-072e1e64e11f", "node_type": "1", "metadata": {"page_label": "273", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0d1ac67d93f2b9b598a425647f2c84fd6f65d3ef4bd96f2d36d58b681585b01f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d03eb545-70fd-4207-9a45-d2238e5b1c07", "node_type": "1", "metadata": {}, "hash": "48593bd0b3a3de11537612369410fc77a43ddb212c8f094510c7df63f0375d1c", "class_name": "RelatedNodeInfo"}}, "hash": "8bfb763c3173e00e58579660f4610275c12bcf83e8bbeb67e4f47b802522bebe", "text": "274 \n \n7.4.1 Resoluci\u00f3n de problemas con arreglos bidimensionales ( matrices)  \n \nEn esta s ecci\u00f3n se desarrollar\u00e1n algunas aplicaciones, programas y funciones, con \nmatrices. E ste conocimiento s er\u00e1 \u00fatil para el desarrollo de nuev as aplicaciones.  \n  \nEjemplo. Escribir  un programa que reciba una matriz y muestre un arreglo conteniendo las \nsumas de las filas.  \n \nVariables  \n a: matriz de nxm enteros \n f: cada fila de la matriz  \n v: arreglo con las sumas de las filas de la matriz  a \n \nLos datos ingresar\u00e1n uno a la vez guiados por un mensaje que indica la posici\u00f3n de la \ncelda que lo recibe. El espacio para la m atriz es creado agregando celdas a cada fila y \ncada fila a la matriz mientras ingresan los datos.  \n \n#Suma de filas de una matriz  \nfrom numpy import* \nn=int(input('Cuantas filas: '))  \nm=int(input('Cuantas columnas: '))  \na=zeros([n,m],dtype=int)            #Iniciar la matriz  \nfor i in range(n):  \n    for j in range(m): \n        a[i,j]=int (input('Dato fila '+str(i)+  \n                         ' columna '+str(j)+' : '))  \nv=zeros(n,int)  \nfor i in range(n):  \n    v[i]=sum(a[i,:])    #Suma de filas  \nprint('Suma de filas\\ n',v)  \n \n \nPrueba del programa  \n>>>  \nCuantas filas: 3  \nCuantas columnas: 2 \nDato fila 0 columna 0 : 4 \nDato fila 0 columna 1 : 2 \nDato fila 1 columna 0 : 3 \nDato fila 1 columna 1 : 5 \nDato fila 2 columna 0 : 6 \nDato fila 2 columna 1 : 4 \nSuma de filas  \n [ 6  8 10]  \n \n>>> print(a)      Para verificar  \n[[4 2] \n [3 5] \n [6 4]] \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d03eb545-70fd-4207-9a45-d2238e5b1c07": {"__data__": {"id_": "d03eb545-70fd-4207-9a45-d2238e5b1c07", "embedding": null, "metadata": {"page_label": "275", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5323a54-44f4-46f3-8419-89166818f34f", "node_type": "4", "metadata": {"page_label": "275", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "949101c2821b04e0d090db49a56236de982222e3455e9f1aabfdd3538b03fc55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2afac6d-cda1-49f9-9cda-7dfcef955af9", "node_type": "1", "metadata": {"page_label": "274", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8bfb763c3173e00e58579660f4610275c12bcf83e8bbeb67e4f47b802522bebe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ee4f400-9c7f-46c1-a399-367f26f3a252", "node_type": "1", "metadata": {}, "hash": "07b7bdad56e94ff174d752e77819c1da5140ac0606acad0146674c431c0c7df6", "class_name": "RelatedNodeInfo"}}, "hash": "48593bd0b3a3de11537612369410fc77a43ddb212c8f094510c7df63f0375d1c", "text": "275 \n \nEjemplo. Reescribir el programa anterior mediante una funci\u00f3n que reciba la matriz y \nretorne un vector conteniendo las sumas de las filas.  \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  sumat  \n Par\u00e1metros  \n  a: arreglo bidimensional ( matriz  ) \nResultado  \n v: arreglo unidimensional ( vector ) con la suma de las filas  \n \n \nfrom numpy import* \ndef sumat(a):  \n    [n,m]=shape(a)  \n    v=[]  \n    for i in range(n): \n        v=v+[sum(a[i][:])]  #En cada fila  i  sumar todas las cols.  \n    return v \n \n \nPrueba de la funci\u00f3n desde la ventana interactiva  \n \n>>> from sumat import* \n>>> a=[[4,5,6],[2,8,4],[2,5,9]]  \n>>> v=sumat(a)  \n>>> v \n[15, 14, 16]  \n \n>>> b=array([[4,5,6],[2,8,4],[2,5,9]]) \n>>> v=sumat(b ) \n>>> v \n[15, 14, 16]  \n \n \nNOTA S.  \n \nEn la funci \u00f3n sumat  se usa la notaci\u00f3n separada para \u00edndices:  a[i][j] esto permite que \nel par\u00e1metro para la funci\u00f3n pueda ser una lista de dos niveles, o un arreglo bidimensional. \nSi se hubiese usado la notaci\u00f3n  a[i,j]  no se pudiera enviar como par\u00e1metro una lista.  \n \nLa funci\u00f3 n sumat  carga la librer\u00eda NumPy , por lo que al cargar la funci\u00f3n  sumat  tambi\u00e9n \nse carga la librer\u00eda Numpy  y se puede tener acceso a esta librer\u00eda fuera de la funci\u00f3n.  \n \nEn general, es preferible escribir funciones en vez de programas. Las funciones son m\u00e1s \ngenerales y cons tituyen instrumentos computacionales fundamentales para resolver \nproblemas desde la ventana interactiva o desde programas que llaman a estas funciones . \nLas funciones en Python no requieren que se especifique ni el tipo ni la cantidad de \nelementos del par\u00e1metro de entrada.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1632, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ee4f400-9c7f-46c1-a399-367f26f3a252": {"__data__": {"id_": "4ee4f400-9c7f-46c1-a399-367f26f3a252", "embedding": null, "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e28e14d-7e68-4061-b259-b65d917e340c", "node_type": "4", "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "81e9db8a90cb7ca758ca0c2a3859d57f415ba247bf049c775728fe03ae3287be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d03eb545-70fd-4207-9a45-d2238e5b1c07", "node_type": "1", "metadata": {"page_label": "275", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "48593bd0b3a3de11537612369410fc77a43ddb212c8f094510c7df63f0375d1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43b14de9-df6f-4479-b17b-6acd7149400a", "node_type": "1", "metadata": {}, "hash": "64761c7c0484bc5e341e6441b02e963f330f6a36ec40272118c4021b61fc0871", "class_name": "RelatedNodeInfo"}}, "hash": "07b7bdad56e94ff174d752e77819c1da5140ac0606acad0146674c431c0c7df6", "text": "276 \n \nEjemplo. Escribir un programa para llenar una matriz n xn con los coeficientes del tri\u00e1ngulo \nde Pascal:  \n \n 1 \n 1 1 \n 1 2 1 \n 1  3 3 1 \n 1 4 6 4 1 \n 1 5 10 10 5 1 \n etc. \n \nInstrumentaci\u00f3n  \n A partir de la tercera fila, los elementos intermedios se obtienen sumando los dos  \n elementos cercanos ubicados en la fila anterior  \n \nVariables  \n p:    matriz con los coeficientes  \n n:    n\u00famero de filas  \n \nCon la funci\u00f3n  zeros  de la librer\u00eda  numpy  se crea el espacio para la matriz inici\u00e1ndola \ncon ceros. Creada la matriz se puede acceder a cualquier elemento con los \u00edndices.   \nTambi\u00e9n se puede crear esta matriz llenando filas con ceros y agreg\u00e1ndolas a la matriz.", "start_char_idx": 0, "end_char_idx": 681, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43b14de9-df6f-4479-b17b-6acd7149400a": {"__data__": {"id_": "43b14de9-df6f-4479-b17b-6acd7149400a", "embedding": null, "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e28e14d-7e68-4061-b259-b65d917e340c", "node_type": "4", "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "81e9db8a90cb7ca758ca0c2a3859d57f415ba247bf049c775728fe03ae3287be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ee4f400-9c7f-46c1-a399-367f26f3a252", "node_type": "1", "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07b7bdad56e94ff174d752e77819c1da5140ac0606acad0146674c431c0c7df6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6214579f-9331-41a7-8100-101e13c6bad0", "node_type": "1", "metadata": {}, "hash": "d5727997a76260fa7fa49887e55c5af5fa8de5ea94d232f6ff1f5eed93d86db1", "class_name": "RelatedNodeInfo"}}, "hash": "64761c7c0484bc5e341e6441b02e963f330f6a36ec40272118c4021b61fc0871", "text": "from numpy import* \nn=int(input('cuantas filas: '))  \np=zeros([n,n],int)  \nfor i in range(n): \n    p[i][0]=1  \n    p[i][i]=1  \nfor i in range(2,n):  \n    for j in range(1,i): \n        p[i][j]=p[i- 1][j-1]+p[i-1][j] \nprint(p)  \n \n \nPrueba del programa  \n >>>  \ncuantas filas: 8  \n[[ 1   0   0   0   0   0   0   0]  \n [ 1   1   0   0   0   0   0   0]  \n [ 1   2   1   0   0   0   0   0]  \n [ 1   3   3   1   0   0   0   0]  \n [ 1   4   6   4   1   0   0   0]  \n [ 1   5  10  10   5   1   0   0]  \n [ 1   6  15  20  15   6   1   0]  \n [ 1   7  21  35  35  21   7   1]] \nPython Programaci\u00f3n", "start_char_idx": 688, "end_char_idx": 1274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6214579f-9331-41a7-8100-101e13c6bad0": {"__data__": {"id_": "6214579f-9331-41a7-8100-101e13c6bad0", "embedding": null, "metadata": {"page_label": "277", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3fc04974-90f7-4c4a-967e-67d5dfafaf79", "node_type": "4", "metadata": {"page_label": "277", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aaf33ca04c05f2a54fc5db6d166414ed40962a2c3b8de1d0fdb4d83e9f14f6c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43b14de9-df6f-4479-b17b-6acd7149400a", "node_type": "1", "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "64761c7c0484bc5e341e6441b02e963f330f6a36ec40272118c4021b61fc0871", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ae7ece6-5914-4c0b-95b4-7f191024684d", "node_type": "1", "metadata": {}, "hash": "f62f95d1980cf0542f0df5d2cb0f7bf414b4e11c26a8177717593e52f888f229", "class_name": "RelatedNodeInfo"}}, "hash": "d5727997a76260fa7fa49887e55c5af5fa8de5ea94d232f6ff1f5eed93d86db1", "text": "277 \n \nEjemplo. Escribir  una funci\u00f3n que localice un elemento en una matriz \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  matbuscar  \n Par\u00e1metros  \n  a: matriz  (puede ser una lista bidimensional)  \n  x: elemento  \n Resultados  \n  i,j:   fila y columna del primer  elemento  x   en la matriz  a  \n            si  x  no est\u00e1 en la matriz el resultado s er\u00e1:  -1, -1 \n \nSe usa la funci\u00f3n shape de la librer\u00eda numpy  para determinar la cantidad de filas y \ncolumnas de la matriz que entra a la funci\u00f3n  \nfrom numpy import * \ndef matbuscar(a,x):  \n    [n,m]=shape(a)  \n    for i in range(n): \n        for  j in range(m):  \n            if x==a[i][j]:  \n                return [i,j] \n    return [-1,-1] \n \nPrueba de la funci\u00f3n en la ventana interactiva  \n \n>>> from matbuscar import * \n>>> a=[[4,5,6],[2,8,4],[2,5,9]]  \n>>> [i,j]=matbuscar(a,6)  \n>>> i \n0 \n>>> j \n2 \n>>> [f,c]=matbuscar(a,3 ) \n>>> f \n-1 \n>>> c \n-1 \n \nLa funci\u00f3n where de NumPy  permite obtener las coordenadas (filas y columnas) de todas  \nlas coincidencias  \n \n>>> from numpy import* \n>>> a=array([[4,5,6],[2,8,4],[2,5,9]]) \n>>> [f,c]=where(a==4)  \n>>> print(f,c)  \n[0 1] [0 2]  \n>>> [f,c]=where(a==3)  \n>>> print(f,c)  \n[] []\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ae7ece6-5914-4c0b-95b4-7f191024684d": {"__data__": {"id_": "6ae7ece6-5914-4c0b-95b4-7f191024684d", "embedding": null, "metadata": {"page_label": "278", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48226cba-9d81-413e-b04e-0c52a168780f", "node_type": "4", "metadata": {"page_label": "278", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "93129ce468531eae62c623ab527d3ed7bcd2e20ae3d5ee248013a6919d7217d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6214579f-9331-41a7-8100-101e13c6bad0", "node_type": "1", "metadata": {"page_label": "277", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d5727997a76260fa7fa49887e55c5af5fa8de5ea94d232f6ff1f5eed93d86db1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "845af96c-ef21-4c53-8944-054c555c5662", "node_type": "1", "metadata": {}, "hash": "41665367019a97c82aae16d130e81289732383208e668a2f536cbaf473cb66ed", "class_name": "RelatedNodeInfo"}}, "hash": "f62f95d1980cf0542f0df5d2cb0f7bf414b4e11c26a8177717593e52f888f229", "text": "278 \n \nEjemplo. Escribir  una funci\u00f3n que reciba un  arreglo (tabla o lista bidimensional ) y entregue \nuna subtabla conteniendo algunas columnas de la tabla enviada  \n \n Nombre de la funci\u00f3n:  extraer  \n Par\u00e1metros  \n  tabla: lista bidimensional  (puede ser un arreglo bidimensional)  \n  cols:  lista de columnas que se deben extraer  \n Resultados  \n  subtabla:  tabla con las columnas elegidas  \n \ndef extraer(tabla,cols):  \n    n=len(tabla)  \n    subtabla=[]  \n    for i in range(n):  \n        linea=[]  \n        for  j in cols: \n            linea=linea+[tabla[i][j]] \n        subtabla=subtabla+[linea]  \n    return subtabla  \n \n \nPrueba de la funci\u00f3n en la ventana interactiva  \n \n>>> from extraer import* \n>>> tabla=[[2,3,4,5],[8,3,2,1],[9,2 ,4,8]] \n>>> subtabla=extraer(tabla,[1,3])  \n>>> subtabla  \n[[3, 5], [3, 1], [2, 8]]  \n >>> from numpy import* \n>>> subtabla=array(subtabla)  \n>>> print(subtabla)      Para visualizar  \n[[3 5] \n [3 1] \n [2 8]] \n \nEste ejemplo se puede resolver directamente usando \u201cslicing\u201d  con la librer\u00eda NumPy  \n \n>>> from numpy import* \n>>> tabla=array([[2,3,4,5],[8,3,2,1],[9,2,4,8]])  \n>>> print(tabla)  \n[[2 3 4 5]  \n [8 3 2 1]  \n [9 2 4 8]]  \n>>> subtabla=tabla[:,1:4:2]  \n>>> print(subtabla)  \n[[3 5] \n [3 1] \n [2 8]]\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "845af96c-ef21-4c53-8944-054c555c5662": {"__data__": {"id_": "845af96c-ef21-4c53-8944-054c555c5662", "embedding": null, "metadata": {"page_label": "279", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7970fa1f-c6f4-4413-b884-d15b85756f30", "node_type": "4", "metadata": {"page_label": "279", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bbcf30ca575b3bfb7c52c7a58290cf6a1627c0cebe067f165356f615163a8e6d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ae7ece6-5914-4c0b-95b4-7f191024684d", "node_type": "1", "metadata": {"page_label": "278", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f62f95d1980cf0542f0df5d2cb0f7bf414b4e11c26a8177717593e52f888f229", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "554bb08d-53b2-4b21-99ee-5fdb0e76bf2d", "node_type": "1", "metadata": {}, "hash": "b250accdb22331c5b83a5f4e048d3bb88c2d063b5e27c8d96070db7ca84a4dc0", "class_name": "RelatedNodeInfo"}}, "hash": "41665367019a97c82aae16d130e81289732383208e668a2f536cbaf473cb66ed", "text": "279 \n \nEjemplo. Escribir  una funci\u00f3n que genere una matriz  nxm   con n\u00fameros aleatorios en un \nrango especi ficado \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  randmat  \n Par\u00e1metros  \n  n,m:  dimeniones de la matriz \n  a,b:   rango para los n\u00fameros aleatorios  \n Resultado  \n  c:      matriz con n\u00fameros aleatorios \n  \n Cada fila  f  se llena con los n\u00fameros aleatorios y luego es  agregada a la matriz \n  \nfrom random import* \ndef randmat(n,m,a,b):  \n    c=[]  \n    for i in range(n): \n        f=[]  \n        for j in range(m):  \n            x=randint(a,b)  \n            f=f+[x]  \n        c=c+[f]  \n    return c \n \n \nEsta funci\u00f3n entrega como resultado una lista de listas conteniendo los datos de la matriz  \n >>> from randmat import* \n>>> c=randmat(3,4,10,20)  \n>>> c \n[[18, 13, 12, 12], [13, 18, 14, 11], [17, 11, 13, 17]]  \n>>>  \n En la siguiente versi\u00f3n de la misma funci\u00f3n, el espacio para la matriz es creado con l a \nfunci\u00f3n  zeros  de la librer\u00eda  numpy  \n \n \n        \n  \n \n Esta funci\u00f3n entrega como resultado una matriz (arreglo rectangular)  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1077, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "554bb08d-53b2-4b21-99ee-5fdb0e76bf2d": {"__data__": {"id_": "554bb08d-53b2-4b21-99ee-5fdb0e76bf2d", "embedding": null, "metadata": {"page_label": "280", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "977a47f5-689b-4171-af17-ee34543989ab", "node_type": "4", "metadata": {"page_label": "280", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "240750275befe37b9d64ee02726e03312f7cde5c2bbdfc427f54cfd7bb599f38", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "845af96c-ef21-4c53-8944-054c555c5662", "node_type": "1", "metadata": {"page_label": "279", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "41665367019a97c82aae16d130e81289732383208e668a2f536cbaf473cb66ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23869b78-bbc3-49b5-bf04-c66cc73fb5c0", "node_type": "1", "metadata": {}, "hash": "b5ea9e5034ae91442219d59121cd646b9427f2ad57e5a228d52b761e6df86633", "class_name": "RelatedNodeInfo"}}, "hash": "b250accdb22331c5b83a5f4e048d3bb88c2d063b5e27c8d96070db7ca84a4dc0", "text": "280 \n \nLa lista o la matriz de n\u00fameros aleatorios se la puede construir directamente mediante una \ndeclaraci\u00f3n impl\u00edcita en la ventana int eractiva  \n \n>>> from numpy import* \n>>> from random import* \n>>> c=[[randint(10,20) for  j in range(4)] for i in range(3)]  \n>>> c \n[[10, 15, 18, 19], [19, 19, 18, 15], [13, 10, 12, 11]]  \n>>> c=array([[randint(10,20) for j in range(4)] for i in range(3)])  \n>>> c \narray([[13, 11, 13, 10],  \n       [19, 16, 16, 11],  \n       [11, 19, 11, 12]])  \n>>> print(c)  \n[[13 11 13 10]  \n [19 16 16 11]  \n [11 19 11 12]]  \n \nEjemplo. Para dise\u00f1ar un juego se necesita una matriz que represente un laberinto de \ntama\u00f1o nxm. Los bordes deben contener 1 y las celdas interiores deben contener 0 o 1 \naleatoriamente. Escribir y pruebe una funci\u00f3n para generar la matriz.  \n \nInstrumentaci\u00f3n  \n \nVariables  \n laber:    nombre de la funci\u00f3n \n n,m:     dimensiones del laberinto  \n a:    matriz con el laberinto  \n \nSe llena cada fila con n\u00fameros aleatorios  0   o  1   y luego se llenan los bordes  \n \nfrom random import* \nfrom numpy import* \ndef laber(n,m):  \n    a=zeros([n,m],dtype=int)  \n    for i in range(n):  \n        for  j in range(m):  \n            a[i,j]=randint(0,1)  \n    for i in range(n):  \n        a[i,0]=1  \n        a[i,m- 1]=1 \n    for j in range(m):  \n        a[0,j]=1  \n        a[n -1,j]=1 \n    return a \n \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1380, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23869b78-bbc3-49b5-bf04-c66cc73fb5c0": {"__data__": {"id_": "23869b78-bbc3-49b5-bf04-c66cc73fb5c0", "embedding": null, "metadata": {"page_label": "281", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a330f747-1007-42c5-a668-544ecffa9a1c", "node_type": "4", "metadata": {"page_label": "281", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f1022c2b4ece8221208336499fd3e848f7dde21103fda177b88323a8ff6e9810", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "554bb08d-53b2-4b21-99ee-5fdb0e76bf2d", "node_type": "1", "metadata": {"page_label": "280", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b250accdb22331c5b83a5f4e048d3bb88c2d063b5e27c8d96070db7ca84a4dc0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcd2a600-57ec-4f44-af56-93721579acf1", "node_type": "1", "metadata": {}, "hash": "88e568d6ee14886c108b70a4eff72a9b5622cfdddccbe69b6bbaba9d1d517741", "class_name": "RelatedNodeInfo"}}, "hash": "b5ea9e5034ae91442219d59121cd646b9427f2ad57e5a228d52b761e6df86633", "text": "281 \n \nPrueba de la funci\u00f3n  \n \n>>> from laber import* \n>>> a=laber(10,12)  \n>>> print(a)  \n[[1 1 1 1 1 1 1 1 1 1 1 1]  \n [1 0 0 1 0 0 1 0 1 0 0 1]  \n [1 0 1 0 0 0 0 0 0 0 0 1]  \n [1 1 0 0 1 0 1 1 0 1 0 1]  \n [1 1 0 0 1 1 1 0 0 1 1 1]  \n [1 1 0 1 1 1 0 1 0 0 1 1]  \n [1 0 1 0 1 0 1 0 1 0 1 1]  \n [1 0 1 1 1 0 0 1 0 0 1 1]  \n [1 1 1 1 1 1 0 1 0 1 1 1]  \n [1 1 1 1 1 1 1 1 1 1 1 1]]  \n \nLa construcci\u00f3n de la matriz de n\u00fameros aleatorios dentro del programa:  \n \n    a=zeros([n,m],dtype=int)  \n    for i in range(n):  \n        for  j in range(m):  \n            a[i,j]=randint(0,1)  \n \nSe puede sustituir con la siguiente instrucci\u00f3n  \n    a=[[randint(0,1) for j in range(m)] for i in range(n)] \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fcd2a600-57ec-4f44-af56-93721579acf1": {"__data__": {"id_": "fcd2a600-57ec-4f44-af56-93721579acf1", "embedding": null, "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c196a41b-35a8-4e77-8833-4ad7065b1feb", "node_type": "4", "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7753f1cbed0974a6499aecf7581c510d03475231fef87ff4cd3b6294f027c7b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23869b78-bbc3-49b5-bf04-c66cc73fb5c0", "node_type": "1", "metadata": {"page_label": "281", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b5ea9e5034ae91442219d59121cd646b9427f2ad57e5a228d52b761e6df86633", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8d8e7ff-6fb9-4691-b15e-2af36ed6f970", "node_type": "1", "metadata": {}, "hash": "76785e1adcb434b8f307b8b243ed593385db2df5b7bbc3d20546b16276734c0e", "class_name": "RelatedNodeInfo"}}, "hash": "88e568d6ee14886c108b70a4eff72a9b5622cfdddccbe69b6bbaba9d1d517741", "text": "282 \n \nEjempl o. Escribir  una funci\u00f3n para rotar 90\u00b0 una mariz nxm  en sentido del reloj  k  veces  \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  rotar  \n Par\u00e1metros  \n  A: matriz rectangular  \n  k: cantidad de rotaciones 90\u00b0 en sentido del reloj  \n Resultados  \n  B:   matriz rotada \n \nSe usa la funci\u00f3n shape de la librer\u00eda numpy  para determinar la cantidad de filas y \ncolumnas de la matriz que entra a la funci\u00f3n.  \n \nEsta es una funci\u00f3n no trivial que requiere observar con atenci\u00f3n el manejo de los \u00edndices \n \nLa matriz resultante  B   tiene que ser iniciada en cada ciclo de  k  para cambiar sus \ndimensiones en caso de que sea una matriz rectangular.", "start_char_idx": 0, "end_char_idx": 659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8d8e7ff-6fb9-4691-b15e-2af36ed6f970": {"__data__": {"id_": "a8d8e7ff-6fb9-4691-b15e-2af36ed6f970", "embedding": null, "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c196a41b-35a8-4e77-8833-4ad7065b1feb", "node_type": "4", "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7753f1cbed0974a6499aecf7581c510d03475231fef87ff4cd3b6294f027c7b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcd2a600-57ec-4f44-af56-93721579acf1", "node_type": "1", "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "88e568d6ee14886c108b70a4eff72a9b5622cfdddccbe69b6bbaba9d1d517741", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ae5f350-670d-4e05-abac-98f2242e89c4", "node_type": "1", "metadata": {}, "hash": "c85e804278ff2b4168de7ae4d0d99358fa1835a0edd83099d96daeb33ee9fe28", "class_name": "RelatedNodeInfo"}}, "hash": "76785e1adcb434b8f307b8b243ed593385db2df5b7bbc3d20546b16276734c0e", "text": "#Rotar matrices nxm 90\u00b0 k veces  \nfrom numpy import* \ndef rotar(A,k):  \n    [n,m]=shape(A)  \n    for i in range(k):  \n        B=zeros([m,n],int ) \n        for  i in range(m):  \n            for j in range(n):  \n                B[i ,j]=A[n-j-1,i] \n        n,m=m,n  \n        A=B  \n    return B \n \nPrueba de la funci\u00f3n en la ventana interactiva  \n \n>>> from rotar import* \n>>> A=[[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16],[17,18,19,20]]  \n>>> array(A)  \narray([[ 1,  2,  3,  4],  \n       [ 5,  6,  7,  8],  \n       [ 9, 10, 11, 12],  \n       [13, 14, 15, 16],  \n       [17, 18, 19, 20]])  \n>>> rotar(A,1)  \narray([[17, 13,  9,  5,  1],  \n       [18, 14, 10,  6,  2],  \n       [19, 15, 11,  7,  3],  \n       [ 20, 16, 12,  8,  4]])  \nPython Programaci\u00f3n", "start_char_idx": 664, "end_char_idx": 1417, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ae5f350-670d-4e05-abac-98f2242e89c4": {"__data__": {"id_": "2ae5f350-670d-4e05-abac-98f2242e89c4", "embedding": null, "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5b347f9-b563-42ec-a614-9c735d7876f6", "node_type": "4", "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e742c967dafe5aa6d103faa7746b0db8f3291a3cf69d74879ae923ec00cd8f7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8d8e7ff-6fb9-4691-b15e-2af36ed6f970", "node_type": "1", "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76785e1adcb434b8f307b8b243ed593385db2df5b7bbc3d20546b16276734c0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c889757-0914-460a-a913-dd6f4318bbc0", "node_type": "1", "metadata": {}, "hash": "23affcae40381b3d4e6275e8079e9158926bdbc2eccbbce46d5adf2df4f4b190", "class_name": "RelatedNodeInfo"}}, "hash": "c85e804278ff2b4168de7ae4d0d99358fa1835a0edd83099d96daeb33ee9fe28", "text": "283 \n \n>>> rotar(A,2)  \narray([[20, 19, 18, 17],  \n       [16, 15, 14, 13],  \n       [12, 11, 10,  9],  \n       [ 8,  7,  6,  5],  \n       [ 4,  3,  2,  1]])  \n>>> rotar(A,3)  \narray([[ 4,  8, 12, 16, 20],  \n       [ 3,  7, 11, 15, 19],  \n       [ 2,  6, 10, 14, 18],  \n       [ 1,  5,  9, 13, 17]])  \n>>> rotar(A,4)  \narray([[ 1,  2,  3,  4],  \n       [ 5,  6,  7,  8],  \n       [ 9, 10, 11, 12],  \n       [13, 14, 15, 16],  \n       [17, 18, 19, 20]])  \n \nNota. La funci\u00f3n rot90  de la librer\u00eda NumPy realiza una rotaci\u00f3n de 90\u00b0 pero en sentido \nopuesto al reloj  \n \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 578, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c889757-0914-460a-a913-dd6f4318bbc0": {"__data__": {"id_": "5c889757-0914-460a-a913-dd6f4318bbc0", "embedding": null, "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5b347f9-b563-42ec-a614-9c735d7876f6", "node_type": "4", "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e742c967dafe5aa6d103faa7746b0db8f3291a3cf69d74879ae923ec00cd8f7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ae5f350-670d-4e05-abac-98f2242e89c4", "node_type": "1", "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c85e804278ff2b4168de7ae4d0d99358fa1835a0edd83099d96daeb33ee9fe28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cec0ddb7-e04f-40c3-a705-c6a346442413", "node_type": "1", "metadata": {}, "hash": "0b8afa98110d6784bb992210a4119b21d891d6e0fac73e46f2b43ae79d31b3b7", "class_name": "RelatedNodeInfo"}}, "hash": "23affcae40381b3d4e6275e8079e9158926bdbc2eccbbce46d5adf2df4f4b190", "text": "Escribir  una funci\u00f3n para extraer una submatriz en la esquina de una matriz \nrectangular  \n \nInstrumentaci\u00f3n  \n Nombre de la funci\u00f3n:  extraer_esquina \n Par\u00e1metros  \n  A: matriz rectangular de tama\u00f1o nxm  \n  t: tama\u00f1o de la ma triz extra\u00edda  \n  k:  Esquina de la cual se extrae (0, 1, 2, 3) comenzando en la esquina  \n                            superior izquierda en sentido del reloj  \n Resultados  \n  B:   matriz extra\u00edda de tama\u00f1o txt \n \n Soluci\u00f3n usando \u201cslicing\u201d de matrices \n \nfrom numpy import* \ndef extraeresquina (A,k,t):  \n    [n,m]=shape(A)  \n    if k==0: \n        B=A[0:t+1,0:t+1]  \n    elif k==1: \n        B=A[0:t+1,m- t+1:t+1]  \n    elif k==2: \n        B=A[n- t+1:t+1,m- t+1:t+1]  \n    elif k==3: \n        B=A[n- t+1:t+1,0:t+1]  \n    return B \n \nPython Programaci\u00f3n", "start_char_idx": 579, "end_char_idx": 1360, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cec0ddb7-e04f-40c3-a705-c6a346442413": {"__data__": {"id_": "cec0ddb7-e04f-40c3-a705-c6a346442413", "embedding": null, "metadata": {"page_label": "284", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22fc2b88-089b-4d65-83ff-1969b75a5063", "node_type": "4", "metadata": {"page_label": "284", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "048cf58640fd6592103087666f42f547a09b9a188f6d92f2432d0ce2c91b73fa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c889757-0914-460a-a913-dd6f4318bbc0", "node_type": "1", "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "23affcae40381b3d4e6275e8079e9158926bdbc2eccbbce46d5adf2df4f4b190", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e26d0a9-09a3-462c-90a0-a1a7fffbb862", "node_type": "1", "metadata": {}, "hash": "7db2dc39162ad172e65f3b936d6dc7a693e239e6d13bfc49672c2b9ce5d777ec", "class_name": "RelatedNodeInfo"}}, "hash": "0b8afa98110d6784bb992210a4119b21d891d6e0fac73e46f2b43ae79d31b3b7", "text": "284 \n \nPrueba de la funci\u00f3n en la ventana interactiva \n \n>>> from extraeresquina import* \n>>> A=array([[0,1,2,3],[10,11,12,13],[20,21,22,23],[30,31,32,33]])  \n>>> print(A)  \n[[ 0,  1,  2,  3],  \n [10, 11, 12, 13],  \n [20, 21, 22, 23],  \n [30, 31, 32, 33]]  \n \n>>> B=extraeresquina(A,0,2);print (B) \n[[ 0,  1],  \n [10, 11]]  \n \n>>> B=extraeresquina(A,1,2);print (B) \n[[ 2,  3],  \n [12, 13]]  \n \n>>> B=extraeresquina(A,2,2);print (B) \n[[22, 23],  \n [32, 33]]  \n \n>>> B=extraeresquina(A,3,2);print (B) \n[[20, 21],  \n [30, 31]])  \n \n \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 555, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e26d0a9-09a3-462c-90a0-a1a7fffbb862": {"__data__": {"id_": "7e26d0a9-09a3-462c-90a0-a1a7fffbb862", "embedding": null, "metadata": {"page_label": "285", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dee52d4a-76d4-4860-990c-0c3e315a2ee4", "node_type": "4", "metadata": {"page_label": "285", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5e9c6ef51e0bd9e3ac81cd24e14e2f579ac564c611107667abda5485b795b3b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cec0ddb7-e04f-40c3-a705-c6a346442413", "node_type": "1", "metadata": {"page_label": "284", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0b8afa98110d6784bb992210a4119b21d891d6e0fac73e46f2b43ae79d31b3b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f4542f2-8c81-42e2-a79f-84f008a93634", "node_type": "1", "metadata": {}, "hash": "ec1522eacaa71d8313bcc17bb533b1a3964d23fb79addffb3da90a22e0cd8fdf", "class_name": "RelatedNodeInfo"}}, "hash": "7db2dc39162ad172e65f3b936d6dc7a693e239e6d13bfc49672c2b9ce5d777ec", "text": "285 \n \nEjemplo. Dise\u00f1ar una aplicaci\u00f3n para admi nistrar el uso de los casilleros en un club.  \n \nInstrumentaci\u00f3n  \n \nEn un progama se usar\u00e1 una matriz para representar l os casilleros . Los elementos de la \nmatriz contendr\u00e1n el c\u00f3digo de identificaci\u00f3n del usuario. Un casillero libre contendra cero.  \n \nEl program a incluir\u00e1 la funci\u00f3n matbuscar  desarrollada anteriormente \n \nPara la interacci\u00f3n se propone un men\u00fa con las siguientes opciones:  \n1) Asignar casillero \n2) Devolver casillero  \n  3) Consultar casillero  \n4) Consultar usuario  \n5) Salir  \n \n#Control de los casilleros de un club \nfrom numpy import * \ndef matbuscar(a,x):  \n    [n,m]=shape(a)  \n    for i in range(n): \n        for  j in range(m):  \n            if x==a[i,j]: \n                return [i,j] \n    return [-1,-1] \n \nn=int(input('Cuantas filas: '))  \nm=int(input('Cuantas columnas: ')) \nc=zeros([n,m], int)     #Iniciar la matriz con casilleros vac\u00edos  \nwhile True: \n    print('1) Asignar casillero')  \n    print('2) Devolver casillero')  \n    print('3) Consultar casillero')  \n    print('4) Consultar usuario')  \n    print('5) Salir')  \n    opc=input( 'Elija una opci\u00f3n: ')  \n    if opc=='1':  \n        i=int (input('Cual fila: '))  \n        j=int (input('Cual columna: ')) \n        if c[i,j]==0: \n            e=int( input('Ingrese el c\u00f3digo: '))  \n            c[i, j]=e \n        else:  \n            print('Casillero ocupado')  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f4542f2-8c81-42e2-a79f-84f008a93634": {"__data__": {"id_": "7f4542f2-8c81-42e2-a79f-84f008a93634", "embedding": null, "metadata": {"page_label": "286", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4751cd6a-d8ca-4622-972d-11aed6d8e025", "node_type": "4", "metadata": {"page_label": "286", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f66ee9cc2c4bbe6536766b8313ef6f6a3d5a7ad5816be08d4003e115ad46ada8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e26d0a9-09a3-462c-90a0-a1a7fffbb862", "node_type": "1", "metadata": {"page_label": "285", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7db2dc39162ad172e65f3b936d6dc7a693e239e6d13bfc49672c2b9ce5d777ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "843f8835-0f6f-454c-b3d5-ea8e7a8585a0", "node_type": "1", "metadata": {}, "hash": "b76395908b3ebc5f7a0a78018d36af12b2fbf5aeabee4907dce947df426804c9", "class_name": "RelatedNodeInfo"}}, "hash": "ec1522eacaa71d8313bcc17bb533b1a3964d23fb79addffb3da90a22e0cd8fdf", "text": "286 \n \n \n        elif opc=='2':  \n        i=int (input('Cual fila: '))  \n        j=int (input('Cual columna: ')) \n        if c[i,j]==0: \n            print('Casillero no est\u00e1 asignado')  \n        else:  \n            c[i, j]=0 \n    elif opc=='3':  \n        i=int (input('Cual fila: '))  \n        j=int (input('Cual columna: ')) \n        if c[i,j]==0: \n            print('Casillero no est\u00e1 asignado')  \n        else:  \n            print('El casillero est\u00e1 ocupado')  \n    elif opc=='4': \n        x=int (input('Ingrese el c\u00f3digo: '))  \n        [i,j]=matbuscar(c,x)  \n        if i>=0 and j>=0: \n            print('El usuario est\u00e1 en el casillero: ',i,j)  \n        else:  \n            print('El usuario no tiene casillero asignado')  \n    elif opc=='5':  \n     print('Adi\u00f3s')  \n            break  \n \nPrueba del programa  \n>>>  \nCuantas filas: 4 \nCuantas columnas: 4 \n1) Asignar casillero  \n2) Devolver casillero  \n3) Consultar casillero  \n4) Consultar usuario  \n5) Salir  \nElija una opci\u00f3n: 1 \nCual fila: 2 \nCual columna: 3  \nIngrese el c\u00f3digo: 123 \n1) Asignar casillero  \n2) Devolver casillero  \n3) Consultar casillero  \n4) Consultar usuario  \n5) Salir  \nElija una opci\u00f3n: 3 \nCual fila: 2 \nCual columna: 3  \nEl casillero est\u00e1 ocupado  \n. . . . . . .  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1266, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "843f8835-0f6f-454c-b3d5-ea8e7a8585a0": {"__data__": {"id_": "843f8835-0f6f-454c-b3d5-ea8e7a8585a0", "embedding": null, "metadata": {"page_label": "287", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "102316cd-962e-44fc-a603-b8d9298aa34c", "node_type": "4", "metadata": {"page_label": "287", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2288f5c19847ff73a0d0a3db8efd040aa8c94bc765e59ac737bc7093c99f6a88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f4542f2-8c81-42e2-a79f-84f008a93634", "node_type": "1", "metadata": {"page_label": "286", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec1522eacaa71d8313bcc17bb533b1a3964d23fb79addffb3da90a22e0cd8fdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "39ea7e09-f487-48e1-90e3-ee5dd26cfb06", "node_type": "1", "metadata": {}, "hash": "c56b31f7a233386a3e2a5d29ee08afaaa50cddce53ebdeb44931628c0caa3eb5", "class_name": "RelatedNodeInfo"}}, "hash": "b76395908b3ebc5f7a0a78018d36af12b2fbf5aeabee4907dce947df426804c9", "text": "287 \n \nEjemplo.  Reescribir el ejemplo de los casilleros  pero colocando las acciones en funciones \njunto al programa. Si las funciones se las almacena separadamente en una librer\u00eda, debe  \nser importada por el programa para usar las funciones.  \n \n#Control de los casilleros de un club \nfrom numpy import * \ndef matbuscar(a,x):  \n    [n,m]=shape(a)  \n    for i in range (n): \n        for  j in range (m): \n            if x==a[i, j]: \n                return [i,j] \n    return [-1,-1] \n def asignar(c):  \n    i=int( input('Cual fila: '))  \n    j=int( input('Cual columna: '))  \n    if c[i,j]==0: \n        e=int (input('Ingrese el c\u00f3digo: '))  \n        c[i ,j]=e \n    else:  \n        print('Casillero ocupado')  \n    return c \n \ndef devolver(c):  \n    i=int( input('Cual fila: '))  \n    j=int( input('Cual columna: '))  \n    if c[i,j]==0: \n        print('Casillero no est\u00e1 asignado')  \n    else:  \n        c[i ,j]=0 \n    return c \n \ndef casillero(c):  \n    i=int(input('Cual fila: '))  \n    j=int( input('Cual columna: '))  \n    if c[i,j]==0: \n        print('Casillero no est\u00e1 asignado')  \n    else:  \n        print('El casillero est\u00e1 ocupado')  \n         \ndef usuario(c):  \n    x=int( input('Ingrese el c\u00f3digo: '))  \n    [i,j]=matbuscar(c,x)  \n    if i>=0 and j>=0:  \n        print('El usuario est\u00e1 en el casillero: ',i,j)  \n    else:  \n        print('El usuario no tiene casillero asignado')  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39ea7e09-f487-48e1-90e3-ee5dd26cfb06": {"__data__": {"id_": "39ea7e09-f487-48e1-90e3-ee5dd26cfb06", "embedding": null, "metadata": {"page_label": "288", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64b45e1a-bead-422d-9ecc-fc88b32611cd", "node_type": "4", "metadata": {"page_label": "288", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d75bcafa92529f3f6f69300a7c0f1ab227684adbb202812ec970c9f57754fec7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "843f8835-0f6f-454c-b3d5-ea8e7a8585a0", "node_type": "1", "metadata": {"page_label": "287", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b76395908b3ebc5f7a0a78018d36af12b2fbf5aeabee4907dce947df426804c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cb6834a-131c-470a-918b-28a29bd23f23", "node_type": "1", "metadata": {}, "hash": "e0268a13c18445a89239571ecc19efe2514ed40a8474f796065029ac1b5acc95", "class_name": "RelatedNodeInfo"}}, "hash": "c56b31f7a233386a3e2a5d29ee08afaaa50cddce53ebdeb44931628c0caa3eb5", "text": "288 \n \nn=int(input('Cuantas filas: '))  \nm=int(input('Cuantas columnas: '))  \nc=zeros([n,m],int)       \nwhile True : \n    print('1) Asignar casillero')  \n    print('2) Devolver casillero')  \n    print('3) Consultar casillero')  \n    print('4) Consultar usuario')  \n    print('5) Salir')  \n    opc=input('Elija una opci\u00f3n: ')  \n    if opc=='1':  \n        c=asignar(c)  \n    elif opc=='2':  \n        c=devolver(c)  \n    elif opc=='3':  \n        casillero(c)  \n    elif opc=='4':  \n        usuario(c)  \n    elif opc=='5':  \n        print('Adi\u00f3s')  \n        break  \n \n \n \n   \n La estrategia de programaci\u00f3n desarrollando unidades (segmentos , m\u00f3dulos ) es necesaria \npara enfrentar proyectos de programaci\u00f3n grandes y complejos, de tal manera que se \nfacilite la especificaci\u00f3n y asignaci\u00f3n del desarrollo de los componentes, sus  pruebas y los \ncambios que se requieran posteriormente.    \n \nEsta importante metodolog\u00eda se denomina Programaci\u00f3n Modular  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9cb6834a-131c-470a-918b-28a29bd23f23": {"__data__": {"id_": "9cb6834a-131c-470a-918b-28a29bd23f23", "embedding": null, "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62ae83ee-7d9f-4e89-80e2-5c910c258075", "node_type": "4", "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7c6b76d9f44c594c3bc0c27cd248a057ae2bb7665a045cfc86201865facd240f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "39ea7e09-f487-48e1-90e3-ee5dd26cfb06", "node_type": "1", "metadata": {"page_label": "288", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c56b31f7a233386a3e2a5d29ee08afaaa50cddce53ebdeb44931628c0caa3eb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e9c5b15-836f-4e4c-891e-543d2ec199f9", "node_type": "1", "metadata": {}, "hash": "9f1074b0e28708563690a3743c33d563b5176c1ecb1deff15fece6bd4f555fd3", "class_name": "RelatedNodeInfo"}}, "hash": "e0268a13c18445a89239571ecc19efe2514ed40a8474f796065029ac1b5acc95", "text": "289 \n \n7.4.2 Listas y arreglos multidimensionales  \n \nLos tipos de datos  lista y  arreglo   del lenguaje Python son muy generales . De manera \ndirecta se puede extender y manejar listas y arreglos de m\u00e1s niveles.  \n \nEjemplo. Para organizar el siste ma de control de inventario de una farmacia se desea usar \nuna lista de dos niveles  para representar la percha con casillas. C ada casilla contendr\u00e1 el \nc\u00f3digo y la cantidad de cajas de medicamentos. Esto agrega un tercer nivel a la lista.  \n A continuaci\u00f3n  se escriben  las instrucciones Python para crear las celdas de \nalmacenamiento de la percha para representar  las casillas . Cada casilla con dos \ncomponentes: c\u00f3digo y cantidad de cajas.  \n \nInicialmente cada casilla contiene dos ceros (uno para el c\u00f3digo y uno par a la cantidad) \npero luego contendr\u00e1n los datos que deber\u00e1n ingresarse por lectura.  \n \nn=int(input('Cuantas filas: '))  \nm=int(input('Cuantas columnas: '))  \npercha=[]  \nfor i in range(n):  \n    fila=[]  \n    for j in range(m): \n        casilla=[0,0]      #Para almacenar  el c\u00f3digo y la cantidad  \n        fila=fila+[casilla]  \n    percha=percha+[fila]  \n \nSuponer que se suministran los siguientes datos:  \n \nn = 4   (cantidad de filas)  \nm = 3  (cantidad de columnas)   \n \nLa matriz habr\u00e1 sido creada con el nombre percha. El manejo de los componentes \nrequiere \u00edndices. El uso de los \u00edndices se los describe mediante ejemplos.", "start_char_idx": 0, "end_char_idx": 1409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e9c5b15-836f-4e4c-891e-543d2ec199f9": {"__data__": {"id_": "7e9c5b15-836f-4e4c-891e-543d2ec199f9", "embedding": null, "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62ae83ee-7d9f-4e89-80e2-5c910c258075", "node_type": "4", "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7c6b76d9f44c594c3bc0c27cd248a057ae2bb7665a045cfc86201865facd240f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cb6834a-131c-470a-918b-28a29bd23f23", "node_type": "1", "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e0268a13c18445a89239571ecc19efe2514ed40a8474f796065029ac1b5acc95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78fe4b14-073c-4bbb-80dc-9676a40e3aa0", "node_type": "1", "metadata": {}, "hash": "02b888b5b72d4e220610e465a38390811026199995319651513349d16a736169", "class_name": "RelatedNodeInfo"}}, "hash": "9f1074b0e28708563690a3743c33d563b5176c1ecb1deff15fece6bd4f555fd3", "text": "El uso de los \u00edndices se los describe mediante ejemplos.  \n \n>> percha  \n[[[0, 0], [0, 0], [0, 0]],  \n [[0, 0], [0, 0], [0, 0]],  \n [[0, 0], [0, 0], [0, 0]],  \n [[0, 0], [0, 0], [0, 0]]]  \n Se puede manejar cada fila de la percha con un  \u00edndice: percha[i]  \n \nMostrar la fila 0 de la percha \n \n>>> percha[0]  \n[[0, 0], [0, 0], [0, 0]]  \n  \n \n \nPython Programaci\u00f3n", "start_char_idx": 1353, "end_char_idx": 1716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78fe4b14-073c-4bbb-80dc-9676a40e3aa0": {"__data__": {"id_": "78fe4b14-073c-4bbb-80dc-9676a40e3aa0", "embedding": null, "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45fc0569-809f-4acd-b345-ad1888bd9bde", "node_type": "4", "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ecd4655e8050aac0a84ab0cea68b40d686aac1516d9f01e864bf500918cce4df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e9c5b15-836f-4e4c-891e-543d2ec199f9", "node_type": "1", "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9f1074b0e28708563690a3743c33d563b5176c1ecb1deff15fece6bd4f555fd3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48313c64-154e-4b8f-a5ed-6d260866a9c2", "node_type": "1", "metadata": {}, "hash": "dde3c280df71deee31f9058e491b137e9cdfff4b9c20435a01eb1258be7379f8", "class_name": "RelatedNodeInfo"}}, "hash": "02b888b5b72d4e220610e465a38390811026199995319651513349d16a736169", "text": "290 \n \nSe requieren dos \u00edndices para manejo de una c asilla en la fila i y columna j : \npercha[i][j]  \n \nMostrar en la fila 0 la casilla 1  \n >>> percha[0][1]  \n[0, 0] \n \nSe requieren tres \u00edndices para manejar el c\u00f3digo o  la cantidad de cajas del medicamento  \n \nC\u00f3digo almacenado en la casilla i, j:  percha[i][j][0]  \n \nMostrar en la fila 2, casilla 1 , cual es c\u00f3digo almacenado  \n \n>>> percha[2][1][0]  \n0 \n \nCantidad de cajas almacenada en la c asilla i, j:  percha[i][j][1]  \n \nMostrar en la fila 2,  casilla 1 , cual es la cantidad almacenada  \n >>> percha[2][1][1]  \n0 \n \nNOTA . El uso de arreglos multidimensionales de NumPy  en lugar de listas \nmultidimensionales, visualiza de otra manera la representacion de los datos.  \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 745, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48313c64-154e-4b8f-a5ed-6d260866a9c2": {"__data__": {"id_": "48313c64-154e-4b8f-a5ed-6d260866a9c2", "embedding": null, "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45fc0569-809f-4acd-b345-ad1888bd9bde", "node_type": "4", "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ecd4655e8050aac0a84ab0cea68b40d686aac1516d9f01e864bf500918cce4df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78fe4b14-073c-4bbb-80dc-9676a40e3aa0", "node_type": "1", "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "02b888b5b72d4e220610e465a38390811026199995319651513349d16a736169", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e25b9705-1e0f-404d-9de4-18a1248a3f28", "node_type": "1", "metadata": {}, "hash": "0a671334edc58adf38318f4aec38ccb50eb3afaccca871686d35e9d17900c8c9", "class_name": "RelatedNodeInfo"}}, "hash": "dde3c280df71deee31f9058e491b137e9cdfff4b9c20435a01eb1258be7379f8", "text": "Ejemplo.  \n \nOrganizaci\u00f3n  de la percha mediante una lista de tres niveles  \n \n>>> percha \n[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, \n0]], [[0, 0], [0, 0], [0, 0]]]  \n Se puede reformatear para visualizar las filas:  \n \n[[[0, 0], [0, 0], [0, 0]],         cada fila es una fila de la percha  \n [[0, 0], [0, 0], [0, 0]],  \n [[0, 0], [0, 0], [0, 0]],  \n [[0, 0], [0, 0], [0, 0]]]  \n \nVisualizaci\u00f3n del contenido de la percha mediante un arreglo de tres dimensiones:  \n \n>>> from numpy import* \n>>> print(array(percha))  \n[[[0 0]      cada submatriz es una fila de la percha  \n  [0 0] \n  [0 0]]  \nPython Programaci\u00f3n", "start_char_idx": 737, "end_char_idx": 1381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e25b9705-1e0f-404d-9de4-18a1248a3f28": {"__data__": {"id_": "e25b9705-1e0f-404d-9de4-18a1248a3f28", "embedding": null, "metadata": {"page_label": "291", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45028eca-869c-4542-8639-9649187e5949", "node_type": "4", "metadata": {"page_label": "291", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9f90b135f8b059d45fa6cdbc0f887b4260c7f6b4b483aad16e139f9ee5ebf78e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48313c64-154e-4b8f-a5ed-6d260866a9c2", "node_type": "1", "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dde3c280df71deee31f9058e491b137e9cdfff4b9c20435a01eb1258be7379f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3fcd3943-2b4d-4647-9a00-826e2b4a22ab", "node_type": "1", "metadata": {}, "hash": "227db9d286edeb0ff77d4e2e78c70cce725b41e37e984a544d98caf619f0d95d", "class_name": "RelatedNodeInfo"}}, "hash": "0a671334edc58adf38318f4aec38ccb50eb3afaccca871686d35e9d17900c8c9", "text": "291 \n \n \n [[0 0] \n  [0 0] \n  [0 0]]  \n  [[0 0] \n  [0 0] \n  [0 0]]  \n  [[0 0] \n  [0 0] \n  [0 0]]]  \n \n \nEjemplo.  El siguiente ejemplo usa una lista con tres niveles.  Se requiere almacenar por \ncada semana la cantidad de cada tipo de art\u00edculo vendida por cada uno de los vendedores de una empresa y determinar para cada semana el total de ventas de cada vendedor.  \n \nInstrumentaci\u00f3n  \n Se almacenar\u00e1n los datos en una lista de tres niveles  \n c: lista de ns  semanas por nv  vendedores por na art\u00edculos  \n \n#Ventas semanales de art\u00edculos por cada vendedor  \nns=int(input('Cuantas semanas: '))  \nnv=int(input('Cuantos vendedores: ')) \nna=int(input('Cuantos art\u00edculos: ')) \nc=[] \nfor i in range(ns):  \n    s=[]  \n    for j in range(nv): \n        f=[]  \n        for  k in range(na):  \n           print('Semana: ',i+1,' Vendedor: ',j+1,' Art\u00edculo: ',k+1)  \n           x=int(input('Ingrese la cantidad vendida: '))  \n           f=f+[x] \n        s=s+[f]  \n    c=c+[s]  \n \nfor i in range(ns):  \n    print('Semana: ',i+1)  \n    for j in range(nv): \n        t=0  \n        for  k in range(na):  \n            t=t+c[i][j][k]  \n        print('Vendedor: ',j+1,' Total: ',t)  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fcd3943-2b4d-4647-9a00-826e2b4a22ab": {"__data__": {"id_": "3fcd3943-2b4d-4647-9a00-826e2b4a22ab", "embedding": null, "metadata": {"page_label": "292", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f6806765-be99-4d79-8a99-d83d5f069ccd", "node_type": "4", "metadata": {"page_label": "292", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9a7ff6ebcafd201490847416d88149a11c61848ed7eb05313bea4a46e73edf0e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e25b9705-1e0f-404d-9de4-18a1248a3f28", "node_type": "1", "metadata": {"page_label": "291", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0a671334edc58adf38318f4aec38ccb50eb3afaccca871686d35e9d17900c8c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe96a019-c602-49f9-ba0d-6b5a7b261d52", "node_type": "1", "metadata": {}, "hash": "47b7d1b7a0eca3ac9978ff203c00d2e5219f543cde5e1c461632e770871fda3c", "class_name": "RelatedNodeInfo"}}, "hash": "227db9d286edeb0ff77d4e2e78c70cce725b41e37e984a544d98caf619f0d95d", "text": "292 \n \nPrueba del programa  \n>>>  \nCuantas semanas: 4       Ingreso de datos \nCuantos vendedores: 3  \nCuantos art\u00edculos: 3  \nSemana:  1  Vendedor:  1  Art\u00edculo:  1 \nIngrese la cantidad vendida: 4  \nSemana:  1  Vendedor:  1  Art\u00edculo:  2 \nIngrese la cantidad vendida: 3  \nSemana:  1  Vendedor:  1  Art\u00edculo:  3 \nIngrese la cantidad vendida: 2  \nSemana:  1  Vendedor:  2  Art\u00edculo:  1  \n. . . . .  \n. . . . .  \n. . . . .  \n \nSemana:  4  Vendedor:  2  Art\u00edculo:  3 \nIngrese la cantidad vendida: 6  \nSemana:  4  Vendedor:  3  Art\u00edculo:  1 \nIngrese la cantidad vendida: 2  \nSemana:  4  Vendedor:  3  Art\u00edculo:  2 \nIngrese la cantidad vendida: 3  \nSemana:  4  Vendedor:  3  Art\u00edculo:  3 \nIngrese la cantidad vendida: 4  \nSemana:  1        Resultados  \nVendedor:  1  Total:  9  \nVendedor:  2  Total:  12  \nVendedor:  3  Total:  10  \nSemana:  2  \nVendedor:  1  Total:  7  \nVendedor:  2  Total:  3  \nVendedor:  3  Total:  7  \nSemana:  3 \nVendedor:  1  Total:  10  \nVendedor:  2  Total:  15  \nVendedor:  3  Total:  6  \nSemana:  4  \nVendedor:  1  Total:  10  \nVendedor:  2  Total:  15  \nVendedor:  3  Total:  9  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe96a019-c602-49f9-ba0d-6b5a7b261d52": {"__data__": {"id_": "fe96a019-c602-49f9-ba0d-6b5a7b261d52", "embedding": null, "metadata": {"page_label": "293", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f223b85-9784-4f6b-b4a0-2a0d6f0d587e", "node_type": "4", "metadata": {"page_label": "293", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4f8b251426cc9e0704a886e883a8aaa8abc4ceea8ae99e82553d48af44a8baa7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3fcd3943-2b4d-4647-9a00-826e2b4a22ab", "node_type": "1", "metadata": {"page_label": "292", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "227db9d286edeb0ff77d4e2e78c70cce725b41e37e984a544d98caf619f0d95d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "628d5061-30db-4f8e-b928-585a463c19a9", "node_type": "1", "metadata": {}, "hash": "9ff1821a3d4699e647e573c7fb48e71220b59df80ab15e941f168bbcc3ee75e4", "class_name": "RelatedNodeInfo"}}, "hash": "47b7d1b7a0eca3ac9978ff203c00d2e5219f543cde5e1c461632e770871fda3c", "text": "293 \n \nMostrar la matriz  c  como una lista de listas de listas \n \n>>> print(c)      \n[[[4, 3, 2], [5, 3, 4], [2, 3, 5]], [[6, 0, 1], [2, 1, 0], [0, 3, 4]], \n[[5, 2, 3], [4, 5, 6], [1, 2, 3]], [[5, 3, 2], [5, 4, 6], [2, 3, 4]]]  \n \nReformateada en pantalla para su visualizaci\u00f3n \n \n[[[4, 3, 2], [5, 3, 4], [2, 3, 5]],        Cada fila corresponde a una semana \n [[6, 0, 1], [2, 1, 0], [0, 3, 4]],  \n [[5, 2, 3], [4, 5, 6], [1, 2, 3]],  \n [[5, 3, 2], [5, 4, 6], [2, 3, 4]]]  \n \nReformateada como un arreglo multidimensional de NumPy  \n \n>>> import numpy as np \n>>> print(np. array(c))    \n[[[4 3 2]          Cada submatriz es una fila de la lista de listas  \n  [5 3 4]          (corresponde a una semana)  \n  [2 3 5]]  \n  [[6 0 1]  \n  [2 1 0]  \n  [0 3 4]]  \n  [[5 2 3]  \n  [4 5 6]  \n  [1 2 3]]  \n \n [[5 3 2]  \n  [5 4 6]  \n  [2 3 4]]]  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 858, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "628d5061-30db-4f8e-b928-585a463c19a9": {"__data__": {"id_": "628d5061-30db-4f8e-b928-585a463c19a9", "embedding": null, "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "390b1dee-d796-4e3e-9da6-3fcb52f62699", "node_type": "4", "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2bca1e2a9ad4c862807056de3571cba8c5d03942f541b1ee4b11fe22175fbc60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe96a019-c602-49f9-ba0d-6b5a7b261d52", "node_type": "1", "metadata": {"page_label": "293", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "47b7d1b7a0eca3ac9978ff203c00d2e5219f543cde5e1c461632e770871fda3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ea7da7a-889a-43e2-b1f1-0b2481adf88d", "node_type": "1", "metadata": {}, "hash": "316d0d491d268bb32a018304fe8f14620a6f125a904262f9d3cea06a53139f8b", "class_name": "RelatedNodeInfo"}}, "hash": "9ff1821a3d4699e647e573c7fb48e71220b59df80ab15e941f168bbcc3ee75e4", "text": "294 \n \n7.4.3 Ejercicios de programaci \u00f3n con arreglos bidimensionales (matrices)  \n \nAlgunos problemas propuestos tambi\u00e9n se pueden resolver con listas bidimensionales  \n \n1.  Lea una matriz cuadrada. Descomponga la matriz en tres matrices: submatriz debajo de \nla diagonal, submatriz diagonal, y submatriz sobre la diagonal. Verifique que la suma de \nlas tres matric es coincide con la matriz original. Muestre las matrices obtenidas  \n \n2.  Lea una matriz nxm. Para cada fila, muestre el producto de los elementos cuyo valor es \nun n\u00famero par.  \n \n3.  Lea una matriz cuadrada. Muestre la suma de los elementos que no est\u00e1n en las  dos \ndiagonales principales.   \n 4.  Uno de los pasos que se requieren en los algoritmos para resolver un sistema de \necuaciones lineales consiste en intercambiar las filas de una matriz cuadrada para colocar \nen la diagonal principal los elementos de mayor magnitud de cada columna.  \n Escriba un programa que reciba una matriz cuadrada nxn, intercambie las filas desde arriba hacia debajo de tal manera que el elemento de mayor magnitud de cada columna se \nubique en la diagonal y sustituya con ceros el resto de la f ila hacia la derecha, como se \nmuestra en el ejemplo.  \n \n  \n276\n453\n981\uf8ee\uf8f9\n\uf8ef\uf8fa\uf8ef\uf8fa\n\uf8ef\uf8fa\uf8f0\uf8fb \u21d2  900\n453\n276\uf8ee\uf8f9\n\uf8ef\uf8fa\uf8ef\uf8fa\n\uf8ef\uf8fa\uf8f0\uf8fb \u21d2 900\n270\n453\uf8ee\uf8f9\n\uf8ef\uf8fa\uf8ef\uf8fa\n\uf8ef\uf8fa\uf8f0\uf8fb \n 5.  Lea una matriz nxn, siendo n un dato inicial. Suponga que cada celda contiene un dato \n(peso en kg.).", "start_char_idx": 0, "end_char_idx": 1398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ea7da7a-889a-43e2-b1f1-0b2481adf88d": {"__data__": {"id_": "8ea7da7a-889a-43e2-b1f1-0b2481adf88d", "embedding": null, "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "390b1dee-d796-4e3e-9da6-3fcb52f62699", "node_type": "4", "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2bca1e2a9ad4c862807056de3571cba8c5d03942f541b1ee4b11fe22175fbc60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "628d5061-30db-4f8e-b928-585a463c19a9", "node_type": "1", "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9ff1821a3d4699e647e573c7fb48e71220b59df80ab15e941f168bbcc3ee75e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9be2d78-77b7-4619-8960-b74c8cd61c01", "node_type": "1", "metadata": {}, "hash": "84beccd2c14c7a6bac91fae2155560c9e4f3c2ce02f7948ccc92c35b1478ae9d", "class_name": "RelatedNodeInfo"}}, "hash": "316d0d491d268bb32a018304fe8f14620a6f125a904262f9d3cea06a53139f8b", "text": "Suponga que cada celda contiene un dato \n(peso en kg.). Determin e cuales son las celdas interiores en las cuales el valor del peso es \nmayor que el promedio de las cuatro celdas ubicadas a sus cuatro lados inmediatos, es \ndecir que no debe considerar las celdas en los bordes.  \n \n6.  El \u00e1rea de un patio est\u00e1 distribuida en celdas ordenadas en filas y columnas. En cada \ncelda est\u00e1n almacenados paquetes del mismo tipo.  \nEscriba un programa que lea una matriz cuyo contenido representa la cantidad de \npaquetes ubicados en cada celda \na) Encuentre el valor promedio de la cantidad de paquetes existentes en todas las celdas.  \nb) Encuentre cual celda contiene m\u00e1s paquetes.  \nc) Muestre las coordenadas y la cantidad de paquetes que contiene una celda cuya posici\u00f3n: n\u00famero de fila y n\u00famero de columna, son valores elegidos al azar en el \nprograma..  \n \n7.  Se dice que una matriz es \u2018Diagonal dominante\u2019 si en cada fila, el valor del elemento \nubicado en la diagonal, es mayor a la cada uno de los otros elementos de esa fila.  Escriba \nun programa que lea una matriz nxn y determine si es tipo \u2018Diagonal  dominante\u2019  \n \n8.  Si a es una matriz, la asignaci\u00f3n  b = a,  asigna a ambas matrices las mismas celdas de \nmemoria y los cambios en la una afectan a la otra.  Escriba una funci\u00f3n b=copiar(a)  que \nreciba una matriz a , constuya  y entregue una matriz b  contenien do una copia de la matriz  \na  pero en celdas diferentes.  \nPython Programaci\u00f3n", "start_char_idx": 1343, "end_char_idx": 2797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9be2d78-77b7-4619-8960-b74c8cd61c01": {"__data__": {"id_": "d9be2d78-77b7-4619-8960-b74c8cd61c01", "embedding": null, "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "496b5367-9ba7-4974-805e-c917ecd86ad4", "node_type": "4", "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c899e1a22005dc3f210b13d6b30cc8b3a2848042100a5b38e2835ed954fff7b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ea7da7a-889a-43e2-b1f1-0b2481adf88d", "node_type": "1", "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "316d0d491d268bb32a018304fe8f14620a6f125a904262f9d3cea06a53139f8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56103495-4f01-427d-a578-bab9e09a25f9", "node_type": "1", "metadata": {}, "hash": "65b3ffb3c664a2c078a9a8703feca553f6981ff402398ab23961afe62f05b126", "class_name": "RelatedNodeInfo"}}, "hash": "84beccd2c14c7a6bac91fae2155560c9e4f3c2ce02f7948ccc92c35b1478ae9d", "text": "295 \n \n9. Escriba un solo programa que lea una matriz nxn y desarrolle  instrucciones que \nsucesivamente permitan determinar:  \n \na)  La suma de los elementos con valor impar de cada columna  \nb)  El valor promedi o de los elementos de cada fila  \nc)  El mayor valor y su posici\u00f3n en cada fila de la matriz  \nd)  La cantidad de elementos en cada fila que son mayores al promedio de la fila  \ne)  El producto de los elementos de la diagonal  \nf)  Sustituya cada elemento impar de la matriz con un n\u00fam. aleatorio de una cifra \ng)  La suma de los elementos de la matriz que no pertenecen a la triangular superior  \nh)  Genere un entero aleatorio de 1 cifra. \u00bf Cuantas veces est\u00e1 en la matriz de f ) ? \ni)  Convierta la matriz en un vector, or dene los elementos y mu\u00e9stre el vector  \n \n \n10. Un cuadrado semi -m\u00e1gico es una matriz cuadrada conteniendo n\u00fameros tales que la \nsuma las dos diagonales principales producen el mismo resultado.  \n \nEjemplo. Un cuadrado semi -m\u00e1gico de 4 filas y 4 columnas:  \n8     1     6    7  \n       6     5     7    3 \n       4     3     2    1 \n  2     8     9    4  \n \nEscriba un programa que coloque n\u00fameros enteros aleatorios de una cifra en una matriz \nde 4 filas y 4 columnas. Repita el ciclo hasta que la matriz sea un cuadrado semi -m\u00e1gico.  \n \nEl programa debe mostrar la matriz resultante y la cantidad de intentos que realiz\u00f3 el programa hasta llenar la matriz con \u00e9xito.  \n \n11. Escriba un programa que coloque n\u00fameros aleatorios de una cifra en los cuatro bordes \nde una matriz.", "start_char_idx": 0, "end_char_idx": 1521, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56103495-4f01-427d-a578-bab9e09a25f9": {"__data__": {"id_": "56103495-4f01-427d-a578-bab9e09a25f9", "embedding": null, "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "496b5367-9ba7-4974-805e-c917ecd86ad4", "node_type": "4", "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c899e1a22005dc3f210b13d6b30cc8b3a2848042100a5b38e2835ed954fff7b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9be2d78-77b7-4619-8960-b74c8cd61c01", "node_type": "1", "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "84beccd2c14c7a6bac91fae2155560c9e4f3c2ce02f7948ccc92c35b1478ae9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a159f822-bc9e-404a-9067-de899c40583d", "node_type": "1", "metadata": {}, "hash": "0627b4d745e651a865d149ff427c36455af551c880464fbdb66d0d247315bf2c", "class_name": "RelatedNodeInfo"}}, "hash": "65b3ffb3c664a2c078a9a8703feca553f6981ff402398ab23961afe62f05b126", "text": "Despu\u00e9s rellen e los elementos del interior de la matriz con n\u00fameros \naleatorios de una cifra, tales que cada uno sea menor o igual al promedio de todos los \nelementos en los bordes \n \nEjemplo.     Matriz inicial de 4 x 4               Matriz rellena:  \n \n8     1     6     7       8    1    6    7   \n       6                  3      promedio:  4.91   6    3    4    3  \n       4                  1     4    2    3    1  \n  2     8     9     4    2    8    9    4  \n \nAl inicio no interesan los valores que se asignan a los elementos interiores p ues ser\u00e1n \nsustituidos.  \n \nEl programa debe mostrar la matriz resultante y la cantidad de intentos que realiz\u00f3 el \nprograma hasta llenar la matriz con \u00e9xito.  \n \n12. Escriba una funci\u00f3n   b=cambiar(a,h,k)   que reciba una matriz nxn e intercambie la fila \nh con la fila k . La funci\u00f3n debe entregar la matriz transformada.  \n \nEn la ventana interactiva genere una matriz cuadrada con n\u00fameros aleatorios de una cifra.  \nLlame a la funci\u00f3n y verifique si el resultado es correcto.  \n \nPython Programaci\u00f3n", "start_char_idx": 1522, "end_char_idx": 2573, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a159f822-bc9e-404a-9067-de899c40583d": {"__data__": {"id_": "a159f822-bc9e-404a-9067-de899c40583d", "embedding": null, "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad", "node_type": "4", "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c9b245c3e6886484a445d0ddd882900fbfb08c7cce4279d9406d6b32f73ad06f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56103495-4f01-427d-a578-bab9e09a25f9", "node_type": "1", "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "65b3ffb3c664a2c078a9a8703feca553f6981ff402398ab23961afe62f05b126", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6faec326-5818-493f-93b1-ea6f22816e37", "node_type": "1", "metadata": {}, "hash": "b89e8f9d5eb56784facdfc9afd0ae13dab10e4583b9988ea3e642145be0ab22f", "class_name": "RelatedNodeInfo"}}, "hash": "0627b4d745e651a865d149ff427c36455af551c880464fbdb66d0d247315bf2c", "text": "296 \n \n13.  Escriba una funci\u00f3n b=diagonales(a)  que reciba una matriz nxn  e intercambie los \nelementos de la diagonal principal con los elementos de la otra diagonal.  \n \nEjm.           Matriz inicial de 4 x 4     Matriz  modificada \n3     2     7    9   9     2     7    3   \n       6     5     3    7         6     3     5    7  \n       8     8     1    6   8     1     8    6 \n  3     5     9    2   2     5     9    3  \n En la ventana interactiva genere una matriz cuadrada con n\u00fameros aleatorios de una cifra.  \nLlame a la funci\u00f3n y verifique si el resultado es correcto.  \n \n14. Escriba una funci\u00f3n que reciba una matriz. La funci\u00f3n debe debe entregar un vector \ncon la cantidad de elementos pares que contiene cada columna de la matriz  \n \nEjemplo .  Entra  345\n618\n863787\uf8ee\uf8f9\n\uf8ef\uf8fa\uf8ef\uf8fa\uf8ef\uf8fa\uf8ef\uf8fa\n\uf8f0\uf8fb\n  sale  [2, 3, 1]  \n \nEscriba un programa que lea una matriz, llame a la funci\u00f3n creada y determine cual es la \ncolumna con la mayor cantidad de n\u00fameros pares  \n \n15.  Dado un vector x  de n componentes :  [x0, x1, x2, . . . ,  xn].  Construya una funci\u00f3n  \nd=van(x)   que reciba el vector  x  y entregue l a matriz  d   seg\u00fan la def inici\u00f3n indicada con \nel siguiente ejemplo. Esta matriz se denomina matriz de Vandermonde.  \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 1233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6faec326-5818-493f-93b1-ea6f22816e37": {"__data__": {"id_": "6faec326-5818-493f-93b1-ea6f22816e37", "embedding": null, "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad", "node_type": "4", "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c9b245c3e6886484a445d0ddd882900fbfb08c7cce4279d9406d6b32f73ad06f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a159f822-bc9e-404a-9067-de899c40583d", "node_type": "1", "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0627b4d745e651a865d149ff427c36455af551c880464fbdb66d0d247315bf2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "419ae9a8-6296-4145-8b43-33e6efef6623", "node_type": "1", "metadata": {}, "hash": "908a532361ad43c314ad2366f8b34f5229912b177620e07998286427b8cadc28", "class_name": "RelatedNodeInfo"}}, "hash": "b89e8f9d5eb56784facdfc9afd0ae13dab10e4583b9988ea3e642145be0ab22f", "text": "Esta matriz se denomina matriz de Vandermonde.  \n \nEjemplo. Dado el vector   x = [2, 3, 5, 4] ,  la matriz de Vandermonde es:  \n \nd = 3210\n3210\n3210\n32102222\n3333\n5555\n4444\uf8ee\uf8f9\n\uf8ef\uf8fa\n\uf8ef\uf8fa\uf8ef\uf8fa\uf8ef\uf8fa\n\uf8ef\uf8fa\uf8f0\uf8fb   \n \n16. Dado una matriz de Vandermonde d, el determinante det(d)  de esta matriz es una \ndefinici\u00f3n que se la puede calcular con el producto de todas las diferencias xi \u2013 xj  \nconsiderando todas las parejas en las que  j<i, como se muestra en el siguiente ejemplo \ncon la matriz del ejercicio an terior:  \n \n   0 1 0 2 0n 12 13 1n n 1nx )(x x )...(x x )(x x )(x x )...(x x )...(x x )\n           (2 3)(2 5)(2 4)(3 5)(3 4)(5 4)det(d) (x\u2212 \u2212\u2212 \u2212\u2212\u2212 \u2212 \u2212\n= \u2212\u2212\u2212\u2212\u2212\u2212=  \n \n17. Sea  P  un pol\u00edgono de  n  lados con v\u00e9rtices:   (x0, y0), (x 1, y1), . . .", "start_char_idx": 1174, "end_char_idx": 1905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "419ae9a8-6296-4145-8b43-33e6efef6623": {"__data__": {"id_": "419ae9a8-6296-4145-8b43-33e6efef6623", "embedding": null, "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad", "node_type": "4", "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c9b245c3e6886484a445d0ddd882900fbfb08c7cce4279d9406d6b32f73ad06f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6faec326-5818-493f-93b1-ea6f22816e37", "node_type": "1", "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b89e8f9d5eb56784facdfc9afd0ae13dab10e4583b9988ea3e642145be0ab22f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fbe84ef-9f7e-4c17-bcf0-1f29c9c656e0", "node_type": "1", "metadata": {}, "hash": "880355238fb08e8beb2079ac67a559533aa147b4316e3c47f9bace16c88a368b", "class_name": "RelatedNodeInfo"}}, "hash": "908a532361ad43c314ad2366f8b34f5229912b177620e07998286427b8cadc28", "text": ". . , (x n-1, yn-1) \nEntonces el \u00e1rea de la regi\u00f3n poligonal  S  se la puede calcular con la siguiente expresi\u00f3n \ndenominada f\u00f3rmula del \u00e1rea de Gauss que requiere calcular determinantes de parejas de \nv\u00e9rtices:  \n 0 1 n1 0 12\n0 1 n1 0 12xx x x xx 1S ...yy y y yy 2\u2212\n\u2212\uf8eb\uf8f6= + ++\uf8ec\uf8f7\n\uf8ed\uf8f8 \nEn donde  \n S    es el \u00e1rea de la regi\u00f3n poligonal  \n n    es la cantidad de lados del pol\u00edgono  \n (xi, yi), i = 0, 1, 2,..., n-1    son los n  v\u00e9rtices del pol\u00edgono.  \nPython Programaci\u00f3n", "start_char_idx": 1902, "end_char_idx": 2373, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fbe84ef-9f7e-4c17-bcf0-1f29c9c656e0": {"__data__": {"id_": "7fbe84ef-9f7e-4c17-bcf0-1f29c9c656e0", "embedding": null, "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "085d1b75-491b-4dc4-a55f-b6124713690f", "node_type": "4", "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "851e1f57364eda5612d791d103a9a572521817dd0ab02d21001a2b64b1c7cd75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "419ae9a8-6296-4145-8b43-33e6efef6623", "node_type": "1", "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "908a532361ad43c314ad2366f8b34f5229912b177620e07998286427b8cadc28", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4b63c8e-c431-4327-a0c2-ff77e2cc50f6", "node_type": "1", "metadata": {}, "hash": "a38b38bfe4310c0a6180f0f326921b561b4d19710fe6fcef1b2922d9d47fa377", "class_name": "RelatedNodeInfo"}}, "hash": "880355238fb08e8beb2079ac67a559533aa147b4316e3c47f9bace16c88a368b", "text": "297 \n \nEscriba una funci\u00f3n que reciba los vectores  x, y  conteniendo las coordenadas de los  \nv\u00e9rtices de un pol\u00edgono, calcule y entregue el \u00e1rea de la figura poligonal.  \n \nPruebe su funci\u00f3n desde la ventana interactiva de Python para calcular el \u00e1rea del \npol\u00edgono cuyos v\u00e9rtices son:  (8,7), (1,3), ( -2,6), ( -5, -4), (9,0)  \n \n18. En el siguiente cuadro C  se muestra la cantidad de unidades de los materiales M1, M2, \nM3  que se necesitan para producir una unidad de cada uno de los productos P1, P2, P3.   \nEjemplo. Para produ cir una unidad del producto P1 se necesitan 4 unidades del material \nM1, 5 unidades del material M2 y 8 unidades del material M3  \n \n  \n \n \n \nEscriba una funci\u00f3n que reciba el cuadro C (matriz) y un vector P conteniendo la cantidad \nde unidades que se desean fabricar de cada producto. La funci\u00f3n debe entregar como \nresultado un vector R conteniendo la cantidad total de unidades de los materiales M1, M2, \ny M3 que se necesitan para completar la producci\u00f3n . Note que el vector R se puede \nobtener de la multiplicaci\u00f3n R = CP  \n \n19.", "start_char_idx": 0, "end_char_idx": 1070, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c4b63c8e-c431-4327-a0c2-ff77e2cc50f6": {"__data__": {"id_": "c4b63c8e-c431-4327-a0c2-ff77e2cc50f6", "embedding": null, "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "085d1b75-491b-4dc4-a55f-b6124713690f", "node_type": "4", "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "851e1f57364eda5612d791d103a9a572521817dd0ab02d21001a2b64b1c7cd75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fbe84ef-9f7e-4c17-bcf0-1f29c9c656e0", "node_type": "1", "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "880355238fb08e8beb2079ac67a559533aa147b4316e3c47f9bace16c88a368b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9e88db2-30b5-496c-ace7-46b59cac1ae1", "node_type": "1", "metadata": {}, "hash": "41b08b7e50373ff6a03a04394b768dd2d12f88cc2a0cfe99ca666a0729fb1026", "class_name": "RelatedNodeInfo"}}, "hash": "a38b38bfe4310c0a6180f0f326921b561b4d19710fe6fcef1b2922d9d47fa377", "text": "Versi\u00f3n simple del juego de la vida \n  \nGenerar una matriz aleatoria nxm con 0\u2019s y 1\u2019s, en donde 1 representa un organismo vivo  \ny 0 su desaparici\u00f3n \n  \nUn ciclo de vida significa  recorrer todas las cel das de la matriz con las siguientes reglas \n         a) Si la celda contiene 0 y existe una o dos celdas con 1 en \n             alguno de los cuatro lados, la celda cambia a 1  \n         b) Si la celda contiene 1 y existen tres o cuatro celdas con 1  \n             en sus cuatro lados, su valor cambia a 0 \n         c) En los otros casos, la celda no cambia de valor  \n  \nEscriba un programa para simular k ciclos de vida.   Muestre la cantidad de organismos \nvivos al inicio y luego de los k ciclos  \n \n20.  Escriba un program a para controlar la cantidad de contenedores en un patio.  Ingrese \ncomo dato la cantidad inicial y ofrezca las siguientes opciones:  \n    1. Salida de contenedores  \n2. Llegada de contenedores  \n3. Cantidad actual de contenedores  \n4. Terminar el control  \nEn cada repetici\u00f3n el operador elige la opci\u00f3n ingresando el n\u00famero y la cantidad de contenedores.  \n  P1 P2 P3 P4 \nM1 4 5 2 6 \nM2 5 7 7 3 \nM3 8 2 1 4 \nPython Programaci\u00f3n", "start_char_idx": 1071, "end_char_idx": 2233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9e88db2-30b5-496c-ace7-46b59cac1ae1": {"__data__": {"id_": "f9e88db2-30b5-496c-ace7-46b59cac1ae1", "embedding": null, "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fc53991d-8771-4018-ac46-1e4026acc321", "node_type": "4", "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f5299a29fba9929f2ef32ccde3bede1e1d860b598551d7ef4bd8dfb87f014fe6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4b63c8e-c431-4327-a0c2-ff77e2cc50f6", "node_type": "1", "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a38b38bfe4310c0a6180f0f326921b561b4d19710fe6fcef1b2922d9d47fa377", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60e27bd8-dd1a-4077-ae6e-f28279f1c3e3", "node_type": "1", "metadata": {}, "hash": "dbbedf732707edd9329449901b525cdefd14d356bbc26c9b2da06236e9d5f6d2", "class_name": "RelatedNodeInfo"}}, "hash": "41b08b7e50373ff6a03a04394b768dd2d12f88cc2a0cfe99ca666a0729fb1026", "text": "298 \n \n21.  Un grafo consta de v\u00e9rtices que pueden representarse mediante c\u00edrculos y arcos que \nlos conectan. Esta conectividad puede describirse mediante una matriz en la que el valor 1 \nindica que existe un arco en esa direcci\u00f3n, mientras que el valor 0  indica que no existe el \narco con esa direcci\u00f3n,  como se muestra en el ejemplo \n \n \n  \n \nEscriba un programa para almacenar 0 o 1 aleatoriamente en una matriz nxn, siendo n un \ndato que debe leerse inicialmente. Dentro del programa llene la diagonal con 1's para \nindicar que cada nodo est\u00e1 conectado consigo mismo. El programa examinar las filas para determinar  \na) Cual nodo no tiene conecciones con otros nodos (no tiene arcos)  \nb) Cual es el nodo que tiene m\u00e1s conecciones con otros nodos  \n 22.  Escriba un programa para controlar el uso de los camiones de una empresa. Cada \ncami\u00f3n tiene un c\u00f3digo. Ingrese como dato inicial la lista de los c\u00f3digos de los camiones. Programe una aplicaci\u00f3n  con las siguientes opciones:  \n    1. Salida de un cami\u00f3n  \n2. Devoluci\u00f3n de un cami\u00f3n 3. Disponibilidad de un cami\u00f3n \n4. Terminar  \nEl operador elige la opci\u00f3n ingresando el n\u00famero.  \n \n23.  Dise\u00f1e un programa para administrar el uso de los casilleros de una inst ituci\u00f3n. Los \ncasilleros est\u00e1n organizados en n filas y m columnas. Inicialmente los casilleros contienen \nel valor cero, lo cual significa que est\u00e1n vac\u00edos.", "start_char_idx": 0, "end_char_idx": 1379, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60e27bd8-dd1a-4077-ae6e-f28279f1c3e3": {"__data__": {"id_": "60e27bd8-dd1a-4077-ae6e-f28279f1c3e3", "embedding": null, "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fc53991d-8771-4018-ac46-1e4026acc321", "node_type": "4", "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f5299a29fba9929f2ef32ccde3bede1e1d860b598551d7ef4bd8dfb87f014fe6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9e88db2-30b5-496c-ace7-46b59cac1ae1", "node_type": "1", "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "41b08b7e50373ff6a03a04394b768dd2d12f88cc2a0cfe99ca666a0729fb1026", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1251bde0-de9d-49bc-8f5a-860f279ae979", "node_type": "1", "metadata": {}, "hash": "22c09c28d39637a0c3d57d807bc1938e9ac401da5ee8b3c3358ad35d8d5a3ab3", "class_name": "RelatedNodeInfo"}}, "hash": "dbbedf732707edd9329449901b525cdefd14d356bbc26c9b2da06236e9d5f6d2", "text": "El programa debe usar un men\u00fa con las \nsiguientes opciones:  \n 1) Consultar casillero  \n 2) Asignar casil lero  \n3) Devolver casillero  \n4) Buscar usuario  \n 5) Salir  \n \nEn la opci\u00f3n 1, verificar si el casillero contiene cero, mostrar el mensaje DISPONIBLE u \nOCUPADO  \nEn la opci\u00f3n 2, almacenar en el casillero el c\u00f3digo del usuario asignado  \nEn la opci\u00f3n 3, almacenar cer o en el casillero que es devuelto  \nEn la opci\u00f3n 4, ingresar el c\u00f3digo de alg\u00fan usuario. Buscar la ubicaci\u00f3n del casillero asignado.  \n     Matriz de conectividad  \n 1    2    3    4    5    6  \n     1 1    1    1    0    0    0  \n     2 0    1    1    1    1    0 \n     3 0    1    1    0    0    0  \n     4 0    0    0    1    0    1  \n     5 0    0    0    1    1    0  \n     6 0    0    0    1    0    1  \nPython Programaci\u00f3n", "start_char_idx": 1380, "end_char_idx": 2185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1251bde0-de9d-49bc-8f5a-860f279ae979": {"__data__": {"id_": "1251bde0-de9d-49bc-8f5a-860f279ae979", "embedding": null, "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8cb1129e-7b6e-464b-81f1-b583dde7fc89", "node_type": "4", "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7bedbaf944973cf68b360f78d67ab492f8754d010a89a078c78259f6e9a9e0d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60e27bd8-dd1a-4077-ae6e-f28279f1c3e3", "node_type": "1", "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dbbedf732707edd9329449901b525cdefd14d356bbc26c9b2da06236e9d5f6d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "310a2681-a4da-40a2-b827-8fe18e029b2f", "node_type": "1", "metadata": {}, "hash": "6126db8e15e776e8b5025f31d53e7ced926414d3500395ca62542622f1a59bd0", "class_name": "RelatedNodeInfo"}}, "hash": "22c09c28d39637a0c3d57d807bc1938e9ac401da5ee8b3c3358ad35d8d5a3ab3", "text": "299 \n \n24.  Un grafo consta de v\u00e9rtices que pueden representarse mediante c\u00edrculos y arcos que \nlos conectan. Esta conectividad puede describirse mediante una matriz  en la que el valor 1 \nindica que existe un arco en esa direcci\u00f3n, mientras que el valor 0  indica que no existe el \narco con esa direcci\u00f3n,  como se muestra en el ejemplo \n \n \n  \n \nEscriba un programa para manejar interactivamen te la conectividad de un grafo mediante \nun men\u00fa con las siguientes opciones:  \n \n 1) Agregar arco  \n 2) Eliminar arco  \n 3) Consultar arco  \n 4) Listar arcos  \n 5) Salir  \n \nAl inicio debe pedir el n\u00famero de v\u00e9rtices. Llenar con 1 la diagonal y 0 en el resto de la \nmatriz  \n \nEn la opci\u00f3n 1) debe pedir los v\u00e9rtices inicial y final, y colocar 1 en la celda de la matriz \nubicada en la fila y columna respectivas.  \n \nEn la opci\u00f3n 2) debe pedir los v\u00e9rtices inicial y final, y colocar 0 en la celda de la matriz \nubicada en la fila y c olumna respectivas.  \n \nEn la opci\u00f3n 3) debe pedir los v\u00e9rtices inicial y final, y mostrar un mensaje \u201cExiste arco\u201d o \n\u201cNo existe arco\u201d  dependiendo del contenido de la celda de la matriz ubicada en la fila y \ncolumna respectivas \n \nEn la opci\u00f3n 4) busque para cada fila (v\u00e9rtice inicial) cada columna (v\u00e9rtices finales), que contenga 1. \n \nNOTA:  Las opciones deben ser instrumentadas mediante funciones . \n 25. Un problema hospitalario es la falta de control de las medicinas. Suponga que una \npercha de una farmacia tiene casillas ubicadas en n filas y m columnas.  Cada casilla \ncontiene los siguientes datos: c\u00f3digo del medicamente y la cantidad de cajas disponibles.", "start_char_idx": 0, "end_char_idx": 1605, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "310a2681-a4da-40a2-b827-8fe18e029b2f": {"__data__": {"id_": "310a2681-a4da-40a2-b827-8fe18e029b2f", "embedding": null, "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8cb1129e-7b6e-464b-81f1-b583dde7fc89", "node_type": "4", "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7bedbaf944973cf68b360f78d67ab492f8754d010a89a078c78259f6e9a9e0d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1251bde0-de9d-49bc-8f5a-860f279ae979", "node_type": "1", "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "22c09c28d39637a0c3d57d807bc1938e9ac401da5ee8b3c3358ad35d8d5a3ab3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f06b194a-7911-4f67-8321-ee2ae39a0644", "node_type": "1", "metadata": {}, "hash": "343fc9eec58cd121775310a6cf30694d13759f34bc1f95b3a53b474572890583", "class_name": "RelatedNodeInfo"}}, "hash": "6126db8e15e776e8b5025f31d53e7ced926414d3500395ca62542622f1a59bd0", "text": "Para organizar el sistema de control de inventario escriba un programa con una matriz \npara representar la percha en la que cada casilla contendr\u00e1 el c\u00f3digo y la cantidad de \ncajas del medicamento. El programa debe funcionar con un men\u00fa con las siguientes \nopciones:  \n             1)  Iniciar una casilla. Especificar la fila y columna. Almacenar el c\u00f3digo de un \n                 medicamento y la cantidad inicial de cajas del medicamento  \n 2)  Consultar si una casilla est\u00e1 disponible (el c\u00f3digo del medicamento es cero)        Matriz de conectividad  \n 1    2    3    4    5    6  \n     1 1    1    1    0    0    0  \n     2 0    1    1    1    1    0  \n     3 0    1    1    0    0    0  \n     4 0    0    0    1    0    1  \n     5 0    0    0    1    1    0  \n     6 0    0    0    1    0    1  \nPython Programaci\u00f3n", "start_char_idx": 1610, "end_char_idx": 2432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f06b194a-7911-4f67-8321-ee2ae39a0644": {"__data__": {"id_": "f06b194a-7911-4f67-8321-ee2ae39a0644", "embedding": null, "metadata": {"page_label": "300", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1f67a52-05af-4967-b5c8-d2ada706ded7", "node_type": "4", "metadata": {"page_label": "300", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8212b096e7dadf329e29dae9407626edb53e3de2a2f66486eddc2abfdc2e796f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "310a2681-a4da-40a2-b827-8fe18e029b2f", "node_type": "1", "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6126db8e15e776e8b5025f31d53e7ced926414d3500395ca62542622f1a59bd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6960ceef-1eb4-4781-9a4f-078259e0d015", "node_type": "1", "metadata": {}, "hash": "032656abe2f0d54de7a73da9cc0f1a8eab242d8f6a141d58560b207b7cbe1a83", "class_name": "RelatedNodeInfo"}}, "hash": "343fc9eec58cd121775310a6cf30694d13759f34bc1f95b3a53b474572890583", "text": "300 \n \n3)  Mostrar  la ubicaci\u00f3n (fila y columna) de  un medicamento dado su c\u00f3digo \n4)  Mostrar  la cantidad de cajas disponibles de un medicamento dado su c\u00f3digo  \n5)  Agregar m\u00e1s cajas de un medicamento. Especificar  el c\u00f3digo y la cantidad  \n6)  Sacar  cajas de un medicamento. Especificar  el c\u00f3digo y la cantidad  \n 7)  Eliminar un medicamento de la percha. Especificar la fila y columna. Asignar  \n                 cero al c\u00f3digo del medicamento y a la cantidad de cajas \n8)  Salir  \n \n26. Para medir la movilidad de las tortugas en una regi\u00f3n de control de 10 x10 Km. se ha \ndividido esta regi\u00f3n en cuadr\u00edculas de 1x1 Km. En la fecha inicial se colocaron tortugas en \ncada cuadr\u00edcula en una cantidad aleatoria (1 a 5). En una fecha posterior se ha contado y \nregistrado la cantidad de tortugas en cada cuadr\u00edcula.  \n Escriba un programa asigne la distribuci\u00f3n aleatoria inicial de las tortugas  y lea la cantidad \nde tortugas enc ontradas en las cuadr\u00edculas en la fecha posterior. Muestre  \n  \na) En cuantas cuadr\u00edculas no quedaron tortugas  \nb) Las coordenadas (fila y columna) de las cuadr\u00edculas en las que aument\u00f3 la cantidad  \nc) La cantidad de tortugas q ue salieron de la regi\u00f3n de control  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1225, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6960ceef-1eb4-4781-9a4f-078259e0d015": {"__data__": {"id_": "6960ceef-1eb4-4781-9a4f-078259e0d015", "embedding": null, "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ad9c6b9-bffe-4fbc-949c-b5fd82b48fb2", "node_type": "4", "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "51ab4715cf7265ec163931953961382dbf133eca4a963164533422a9555540b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f06b194a-7911-4f67-8321-ee2ae39a0644", "node_type": "1", "metadata": {"page_label": "300", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "343fc9eec58cd121775310a6cf30694d13759f34bc1f95b3a53b474572890583", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "079da608-c40d-4c16-a315-857cf254385e", "node_type": "1", "metadata": {}, "hash": "d8eb4dc16c7754174786805aedd9b922afc7b06e3f448e02c01fc32996f6d74f", "class_name": "RelatedNodeInfo"}}, "hash": "032656abe2f0d54de7a73da9cc0f1a8eab242d8f6a141d58560b207b7cbe1a83", "text": "301 \n \n \n7.5 Tuplas  \n \nUna tupla es una colecci\u00f3n de datos que pueden tener diferente tipo. Los datos se \nescriben entre par\u00e9ntesis, separados por comas con la siguiente sintaxis. Opcionalmente \nse pueden omitir los par\u00e9ntesis:  \n \n(dato, dato, dato, ..., dato)  \n \nLos componentes de una tupla no se pueden modificar  despu\u00e9s de haber sido creados.  \n \nLas celdas son numeradas desde cero .  El primer  componente, o primera celda, tiene \n\u00edndice  0. El segundo componente, o segunda celda, tiene \u00edndice 1, etc. \n \nSe puede acceder a los componentes de una tupla mediante un \u00edndice entre corchetes  \n \nSe puede acceder a varios elementos o componentes mediante un  rango para el \u00edndice.  \n \nEl rango  no incluye el extremo derecho especificado \n Ejemplo.   Descipci\u00f3n  de una tupla  con 5 componentes  \n \n>>> x = (' abc',  73,  5.28,  ' rs',  5)  \n \nLa representaci\u00f3n de una tupla en celdas de memoria numeradas desde cero : \n \n'abc' 73 5.28 'rs' 5 \n      0          1           2          3          4 \n \nSon los mismos ejemplos usados en la secci\u00f3n anterior para describir las listas, pero ahora \nlos resultados son  tuplas . En la secci\u00f3n anterior, los resultados eran  listas.", "start_char_idx": 0, "end_char_idx": 1181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "079da608-c40d-4c16-a315-857cf254385e": {"__data__": {"id_": "079da608-c40d-4c16-a315-857cf254385e", "embedding": null, "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ad9c6b9-bffe-4fbc-949c-b5fd82b48fb2", "node_type": "4", "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "51ab4715cf7265ec163931953961382dbf133eca4a963164533422a9555540b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6960ceef-1eb4-4781-9a4f-078259e0d015", "node_type": "1", "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "032656abe2f0d54de7a73da9cc0f1a8eab242d8f6a141d58560b207b7cbe1a83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e691f14-9a29-4bb0-95ca-6bd38a317ef1", "node_type": "1", "metadata": {}, "hash": "58046f57a1aaf26cabfd0de4bfb09f5478dfc6945d95a2ae9d000fc44d4d36c8", "class_name": "RelatedNodeInfo"}}, "hash": "d8eb4dc16c7754174786805aedd9b922afc7b06e3f448e02c01fc32996f6d74f", "text": "En la secci\u00f3n anterior, los resultados eran  listas.  \n \n \n>>> x[0]          Componente 0 (ubicado en la celda 0 ) \n'abc'          (es el primer componente o primera celda)  \n \n>>> x[2]          Componente 2 (ubicado en la celda 2 ) \n5.28          (es el tercer componente o tercera celda)  \n \n \n>>> x[1:4]          Componentes desde 1  hasta el 3  (celdas 1 a 3)  \n(73, 5.28, 'rs')              (el rango no incluye el extremo final)  \n >>> x[2:]           Componentes  2 hasta el final (celda 2  hasta el final)  \n(5.28, 'rs', 5)         Los resultados tambi\u00e9n son  tuplas  \n \n>>> x[1] = 45            Error:  no se pu eden modificar los elementos de tuplas  \n            \nTypeError: 'tuple' object does not support item assignment  \n \nPython Programaci\u00f3n", "start_char_idx": 1129, "end_char_idx": 1886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e691f14-9a29-4bb0-95ca-6bd38a317ef1": {"__data__": {"id_": "5e691f14-9a29-4bb0-95ca-6bd38a317ef1", "embedding": null, "metadata": {"page_label": "302", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "122faea4-d55a-4b52-89e0-09bb7ce86026", "node_type": "4", "metadata": {"page_label": "302", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "407c9dcb4887995e5f21bdf3ef45b9c7c80b0fbdd5f3fa22cead88e4f58e8c1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "079da608-c40d-4c16-a315-857cf254385e", "node_type": "1", "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8eb4dc16c7754174786805aedd9b922afc7b06e3f448e02c01fc32996f6d74f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9abc138-9a23-4722-8a77-82e11c1f3a6a", "node_type": "1", "metadata": {}, "hash": "d4df6dbcd6fb08616e6a881c72b9ba45e8531f0f78c20d6996ded033b3865e95", "class_name": "RelatedNodeInfo"}}, "hash": "58046f57a1aaf26cabfd0de4bfb09f5478dfc6945d95a2ae9d000fc44d4d36c8", "text": "302 \n \nTupla con componentes de tipo estructurado  \n \n>>> x=(3,[6,7],8,(4,5),2)  \n>>> x[1]  \n[6, 7] \n \n>>> x[1][1]=3    Se puede modificar el componente interno lista \n>>> x \n(3, [6, 3], 8, (4, 5), 2)  \n \n>>> x[3][1]=3     Error: No se pueden modificar componente s tupla  \n \nTypeError: 'tuple' object does not support item assignment  \n Los par\u00e9ntesis son opcionales para definir tuplas  \n \n>>> x = ('abc',  73,  5.28,  'rs',  5) >>> x \n('abc', 73, 5.28, 'rs', 5)  \n \nSe puede n omitir los par\u00e9ntesis para definir una tupla  \n \n>>> x = 'abc',  73,  5.28,  'rs',  5 \n>>> print(x)  \n('abc', 73, 5.28, 'rs', 5)  \n \nUna tupla se puede convertir a lista  \n >>> x = ('abc',  73,  5.28,  'rs',  5) \n>>> x = list(x) \n>>> x[1]=75  \n \nUna lista se puede convertir a tupla  \n \n>>> x = ['abc',  73,  5.28,  'rs',  5] \n>>> x = tuple(x)  \n>>> print(x)  \n('abc', 73 , 5.28, 'rs', 5)  \n Los valores de una tupla se pueden desempacar asigna ndo a variables  \n \n>>> t = (34,25,42)  \n>>> a,b,c = t \n>>> a \n34 \n>>> b \n25 \n>>> c \n42 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1033, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9abc138-9a23-4722-8a77-82e11c1f3a6a": {"__data__": {"id_": "d9abc138-9a23-4722-8a77-82e11c1f3a6a", "embedding": null, "metadata": {"page_label": "303", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a988b73f-3bae-4d54-b7fa-acbe96d15dc9", "node_type": "4", "metadata": {"page_label": "303", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "122bd471e22d4329b26c4ebf9df8e49e6b22899c2a5673f473e3b51054dc8622", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e691f14-9a29-4bb0-95ca-6bd38a317ef1", "node_type": "1", "metadata": {"page_label": "302", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "58046f57a1aaf26cabfd0de4bfb09f5478dfc6945d95a2ae9d000fc44d4d36c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86626aa0-4a06-436e-9c41-d10d654b9727", "node_type": "1", "metadata": {}, "hash": "e55a2e59947c37ae0cbdf0e2849391484d0bef6450359f5e3c3c1abc5aae4759", "class_name": "RelatedNodeInfo"}}, "hash": "d4df6dbcd6fb08616e6a881c72b9ba45e8531f0f78c20d6996ded033b3865e95", "text": "303 \n \nUna funci\u00f3n para formar tuplas entre dos listas:  zip  \n \n>>> c=[101,231,725]  \n>>> m=['Algebra','F\u00edsica','Qu\u00edmica'] \n>>> p=zip(c,m)  \n>>> list(p)  \n[(101, 'Algebra'), (231, 'F\u00edsica'), (725, 'Qu\u00edmica')]  \n Las tuplas se pueden concatenar y reproducir  \n \n>>> a=(23,45,28)  \n>>> b=(52,19)  \n>>> c=a+b  \n>>> c \n(23, 45, 28, 52, 19)  \n>>> d=3*b  \n>>> d \n(52, 19, 52, 19, 52, 19)  \n \nAlgunas funciones y operadores aplicables a tuplas  \n >>> a=(28,73,45,67,26,45)  \n>>> len(c)  \n6 \n>>> 45 in a \nTrue \n>>> max(a)  \n73 \n>>> max(a[2:len(a)])    Se puede especificar el rango de b\u00fasqueda  \n67 >>> min(a)  \n26 \n>>> sum(a)  \n284 \n>>> sum(a[2:6])  \n183 \n>>> del a     Elimina la tupla   \n>>> a \n>>> a=(27,23,45,23,28)  \n>>> a.index(23)     Indice de la primera coincidencia  \n1 \n>>> a.count(23)     Conteo de coincidencias  \n2 \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 845, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86626aa0-4a06-436e-9c41-d10d654b9727": {"__data__": {"id_": "86626aa0-4a06-436e-9c41-d10d654b9727", "embedding": null, "metadata": {"page_label": "304", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b45e8378-0ce3-4059-ab7c-bd29cf325ed3", "node_type": "4", "metadata": {"page_label": "304", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b8b3177c86904741201859c5eb0bab9c1081b639746f0330d7f2f7ec9babfc51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9abc138-9a23-4722-8a77-82e11c1f3a6a", "node_type": "1", "metadata": {"page_label": "303", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4df6dbcd6fb08616e6a881c72b9ba45e8531f0f78c20d6996ded033b3865e95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fe19cae-5ffd-4a46-abf3-d6c3f3c9ea7c", "node_type": "1", "metadata": {}, "hash": "f2326d2f9f9208488cd5c30df1d975b2afeaa3836fb81db0259768f889a68fcc", "class_name": "RelatedNodeInfo"}}, "hash": "e55a2e59947c37ae0cbdf0e2849391484d0bef6450359f5e3c3c1abc5aae4759", "text": "304 \n \nSe puede iterar sobre una tupla  \n \n>>> a=(28,73,45,67,26,45)  \n>>> for e in a: \n print(e)  \n28 \n73 45 \n67 \n26 \n45  \nNotaci\u00f3n especial para agregar un elemento a una tupla  \n \n>>> x=5     x es un entero  \n>>> print(x)  \n5 \n>>> x=5,      x es una tupla  (la coma hace la diferencia)  \n>>> print(x)  \n(5,) \n \n>>> x=x+(7 ) \nTypeError: solamente se pueden concatenar tuplas a tuplas  \n \n>>> x=5, \n>>> x=x+(7 ,)     Concatenaci\u00f3n  correcta \n>>> x      x es una tupla  \n(5, 7) \n \n>>> x=(5,7,4,8)  \n>>> x=x+(6)  \n TypeError: solamente se pueden concatenar tuplas a tuplas  \n \n>>> x=x+(6,)      Concatenaci\u00f3n correcta \n>>> x \n(5, 7, 4, 8, 6)  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 664, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fe19cae-5ffd-4a46-abf3-d6c3f3c9ea7c": {"__data__": {"id_": "5fe19cae-5ffd-4a46-abf3-d6c3f3c9ea7c", "embedding": null, "metadata": {"page_label": "305", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fba029e-d201-4d8e-9b90-d548f9d8689c", "node_type": "4", "metadata": {"page_label": "305", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4fc5859ebe9e9a76cc74cc80afcc563b8a03f177866bc9817d8316fa685fd28b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86626aa0-4a06-436e-9c41-d10d654b9727", "node_type": "1", "metadata": {"page_label": "304", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e55a2e59947c37ae0cbdf0e2849391484d0bef6450359f5e3c3c1abc5aae4759", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a7383fb-58a5-4948-8eab-1f203baf67ed", "node_type": "1", "metadata": {}, "hash": "78b22572ce6ef97d6f155f2b07a8dd8e0f135288d75ca5bd50f1822bb1a36306", "class_name": "RelatedNodeInfo"}}, "hash": "f2326d2f9f9208488cd5c30df1d975b2afeaa3836fb81db0259768f889a68fcc", "text": "305 \n \nUna funci\u00f3n pa ra formar una tupla con los cuadrados de los enteros \n \ndef cuadrado(n):  \n    y=2*n  \n    return y \n \n \nt=() \nfor n in range(5): \n    e=cuadrado(n)  \n    t=t+(e)    Esta concatenaci\u00f3n es incorrecta  \nprint(t)  \n \nTypeError: solamente se pueden concatenar tuplas a tuplas  \n  \nUna soluci\u00f3n correcta es redefinir el resultado obtenido de la funci\u00f3n como una tupla : \n \ndef cuadrado(n):  \n    y=2*n  \n    return y \n \n \nt=() \nfor n in range(5):  \n    e=cuadrado(n)  \n    t=t+(e,)  \nprint(t)  \n Resultado  \n \n(0, 2, 4, 6, 8)  \n \n Otra soluci\u00f3n correcta es definir como una  tupla el resultado que entrega la funci\u00f3n:  \n \ndef cuadrado(n):  \n    y=2*n  \n    return y, \n \nt=() \nfor n in range(5):  \n    e=cuadrado(n)  \n    t=t+(e)  \nprint(t)  \n Resultado  \n \n(0, 2, 4, 6, 8)  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 811, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3a7383fb-58a5-4948-8eab-1f203baf67ed": {"__data__": {"id_": "3a7383fb-58a5-4948-8eab-1f203baf67ed", "embedding": null, "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6832a2de-b608-40dd-ad52-2ae9abd72269", "node_type": "4", "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "563aca6f28e0536860f4a8e6b1c5d367b49c545b44f817cc16f557f8fa00cc12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fe19cae-5ffd-4a46-abf3-d6c3f3c9ea7c", "node_type": "1", "metadata": {"page_label": "305", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f2326d2f9f9208488cd5c30df1d975b2afeaa3836fb81db0259768f889a68fcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02cd066a-3dec-4c6e-958a-e9d6362e750a", "node_type": "1", "metadata": {}, "hash": "544381f18366ef31cce60b6f51ae6c1f082ed931f458524dce1b3e4d220f4ab9", "class_name": "RelatedNodeInfo"}}, "hash": "78b22572ce6ef97d6f155f2b07a8dd8e0f135288d75ca5bd50f1822bb1a36306", "text": "306 \n \n7.6 Conjuntos  \n \nLos conjuntos se construyen como una lista de valor es encerrados entre llaves. Tambi\u00e9n \nse pueden definir conjuntos con la instrucci\u00f3n   set(c) en donde c representa cualquier \nobjeto que se pueda indexar, como tuplas , listas  o cadenas de caracteres . Por definici\u00f3n, \nlos componentes de un conjunto no est\u00e1n ordenados ni contienen elementos repetidos.   \nSe pueden usar los conjuntos para eliminar elementos repetidos y realizar operaciones \nmatem\u00e1ticas entre conjuntos : \n \nEl resultado de la definici\u00f3n y operaci\u00f3n entre conjuntos es un objeto que no se puede \nindexar . Pero se lo puede convertir nuevamente a  un objeto indexable.", "start_char_idx": 0, "end_char_idx": 663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "02cd066a-3dec-4c6e-958a-e9d6362e750a": {"__data__": {"id_": "02cd066a-3dec-4c6e-958a-e9d6362e750a", "embedding": null, "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6832a2de-b608-40dd-ad52-2ae9abd72269", "node_type": "4", "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "563aca6f28e0536860f4a8e6b1c5d367b49c545b44f817cc16f557f8fa00cc12", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3a7383fb-58a5-4948-8eab-1f203baf67ed", "node_type": "1", "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "78b22572ce6ef97d6f155f2b07a8dd8e0f135288d75ca5bd50f1822bb1a36306", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "212bf609-9cb2-4706-a4e3-553d1827a467", "node_type": "1", "metadata": {}, "hash": "a1764e77ba808cccca2b30b9d216a4a9fd7b3afe6b3050075244b9e906c59037", "class_name": "RelatedNodeInfo"}}, "hash": "544381f18366ef31cce60b6f51ae6c1f082ed931f458524dce1b3e4d220f4ab9", "text": "Pero se lo puede convertir nuevamente a  un objeto indexable.  \n \n Sean:  a,  b:  conjuntos  \nOperaci\u00f3n  Resultado  Funciones equivalentes  \na | b Uni\u00f3n  de conjuntos  a.union (b) \na & b Intersecci\u00f3n  de conjuntos  a.intersection (b) \na \u2013 b Diferencia de conjuntos  a.differ ence (b) \na ^ b Diferencia sim\u00e9tri ca de conjuntos  a.symmetric_difference (b) \n \n>>> u={4,6,7,3,8,6}    Definici\u00f3n directa de un conjunto  \n>>> u \n{8, 3, 4, 6, 7}  \n \n>>> r=set([7,3,8,6,9,8])    Definici \u00f3n de un conjunto desde una lista \n>>> r \n{8, 9, 3, 6 , 7}    Se eli minan los  elementos repetidos \n >>> a =\n {3, 4, 9, 6, 7}   Conjuntos  \n>>> b = {4, 6, 2, 9, 7, 5}  \n>>> c=a|b      Operaci \u00f3n de uni\u00f3n entre los conjuntos  a, b \n>>> c \n{2, 3, 4, 5, 6, 7, 9}  \n >>> c=a.union(b)     El mismo resultado que  c  = a|b  \n>>> c \n{2, 3, 4, 5, 6, 7, 9}  \n >>> c=a&b      Intersecci\u00f3n   \n>>> c \n{9, 4, 6, 7} \n \n>>> c=b-a     Diferencia  \n>>> c \n{2, 5} \n \n>>> c=a^b      Diferencia sim\u00e9trica  \n>>> c \n{2, 3, 5} \nPython Programaci\u00f3n", "start_char_idx": 602, "end_char_idx": 1607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "212bf609-9cb2-4706-a4e3-553d1827a467": {"__data__": {"id_": "212bf609-9cb2-4706-a4e3-553d1827a467", "embedding": null, "metadata": {"page_label": "307", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92309dbe-43aa-48c1-bb95-2d062651ee48", "node_type": "4", "metadata": {"page_label": "307", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "af198ff1a3a3b0471f8a687a84c07e9c706c730f3387f9bb81bc8268351c11c4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02cd066a-3dec-4c6e-958a-e9d6362e750a", "node_type": "1", "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "544381f18366ef31cce60b6f51ae6c1f082ed931f458524dce1b3e4d220f4ab9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b47f2fc2-90e4-49b8-88fb-6e57d2de1fc0", "node_type": "1", "metadata": {}, "hash": "5fb5e9644bac8fbc1274f776a539dda50f5f0fe48b144a5d951b8d31ed648135", "class_name": "RelatedNodeInfo"}}, "hash": "a1764e77ba808cccca2b30b9d216a4a9fd7b3afe6b3050075244b9e906c59037", "text": "307 \n \nDeterminar la propiedad de subconjunto . Funci\u00f3n equivalente:   b.issubset(a)  \n \n>>> a={2,5,3,7,8,9}  \n>>> b={9,5,4}  \n>>> c={9,5,8}  \n>>> b<a \nFalse \n>>> c<a \nTrue \n \nDeterminar la propiedad de pertenencia de un elemento en un conjunto  \n \n>>> x={7,3,8,6,9}  \n>>> 5 in x \nFalse \n>>> 3 in x \nTrue \n>>> 6 not in x  \nFalse \n Conversi\u00f3n de un conjunto a lista con la funci\u00f3n  list  \n \n>>> c = {3, 5, 6, 8}  \n>>> c[1]             Error: los conjuntos no se pueden indexar  \nTypeError: 'set' object does not support indexing  \n \n>>> d=list(c)                La funci\u00f3n list convierte el conjunto en lista   \n>>> d \n[3, 5, 6, 8]  \n \n>>> d[1]=7         La lista es indexable y modificable  \n>>> print(d)  \n[3, 7, 6, 8] \n \nCadenas de caracteres convertidas a listas o a conjuntos  \n \n>>> x='adivinanza'      Cadena, indexable pero no modificable  \n>>> t=set(x)  \n>>> t \n{'n', 'i', 'd', 'v', 'z', 'a'}       Conjunto de caracteres sin repeticiones  \n(los elementos no ordenados)  \nEl conjunto n o es modificable ni indexable  \n>>> r=list(x) \n>>> r \n['a', 'd', 'i', 'v', 'i', 'n', 'a', 'n', 'z', 'a']     \n  Lista de caracteres con repeticiones    \n  (los elementos est\u00e1n ordenados)  \n>>> r[1]=' d'      La lista es i ndex able  y  modificable  \n>>> r        \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b47f2fc2-90e4-49b8-88fb-6e57d2de1fc0": {"__data__": {"id_": "b47f2fc2-90e4-49b8-88fb-6e57d2de1fc0", "embedding": null, "metadata": {"page_label": "308", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c5b1908-da7c-4d07-a06f-4cb728fbf7cd", "node_type": "4", "metadata": {"page_label": "308", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "65f21595c1997fecd24f9bac9e3a161c1e53d465085af2d73ff0ad838a34645b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "212bf609-9cb2-4706-a4e3-553d1827a467", "node_type": "1", "metadata": {"page_label": "307", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a1764e77ba808cccca2b30b9d216a4a9fd7b3afe6b3050075244b9e906c59037", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6664f8f1-1f16-466e-b944-06e889d48cb2", "node_type": "1", "metadata": {}, "hash": "78e56f9f39c19606d2fb66abde1afd0f84a10ead7c80249adbe84fbb1e26b164", "class_name": "RelatedNodeInfo"}}, "hash": "5fb5e9644bac8fbc1274f776a539dda50f5f0fe48b144a5d951b8d31ed648135", "text": "308 \n \nUso de conjuntos para encontrar c aracteres comunes entre  cadenas de caracteres:  \n \n>>> a='programa'  \n>>> b='panorama'  \n>>> c=set(a)  & set(b)   Convertir cadenas a conjuntos  \n>>> c \n{'a', 'r', 'o', 'p', 'm'}   Los elementos no es t\u00e1n en orden \n>>> len(c)  \n5 \n \nAlgunas funciones comunes aplicables a conjuntos  \n \n>>> x={7,3,8,6,9}  \n>>> len(x)  \n5 \n>>> sum(x)  \n33 >>> min(x)  \n3 \n>>> max(x)  \n9 \n \nDefinici\u00f3n de conjunto vac\u00edo  \n \n>>> x=set()  \n \nOperaciones para modificar la estructura de los conjuntos  \n >>> x=set([7,3,8,6,9])  \n>>> x \n{8, 9, 3, 6, 7} \n \n>>> x.add(5 )    Agregar elemento \n>>> x \n{3, 5, 6, 7, 8, 9}  \n \n>>> x={7,3,8,6,9}  \n>>> x.remove(6)    Eliminar elemento  \n>>> x \n{8, 9, 3, 7}  \n>>> x.remove(5)    Error:  el elemento no est\u00e1 en el conjunto  \nKeyError: 5  \n \n>>> x.discard(5)    No genera error  si no est\u00e1. Si est\u00e1 lo elimina \n>>> x \n{8, 9, 3, 7}  \n>>> x.discard(9)  \n>>> x \n{8, 3, 7}  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 949, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6664f8f1-1f16-466e-b944-06e889d48cb2": {"__data__": {"id_": "6664f8f1-1f16-466e-b944-06e889d48cb2", "embedding": null, "metadata": {"page_label": "309", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "789cedd5-09aa-40b9-acec-6fd633bc7d35", "node_type": "4", "metadata": {"page_label": "309", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "60ecc9868fc186fff9fdaeb9c3972094dda7d38b96fc6a30f098eafdd87959d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b47f2fc2-90e4-49b8-88fb-6e57d2de1fc0", "node_type": "1", "metadata": {"page_label": "308", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5fb5e9644bac8fbc1274f776a539dda50f5f0fe48b144a5d951b8d31ed648135", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fcf3b2e-d594-4659-adab-9cb8f646fd23", "node_type": "1", "metadata": {}, "hash": "69e34bebc14265b3899d16ff3a3c1dc04225c936eb993eac245c1da2f6e771a8", "class_name": "RelatedNodeInfo"}}, "hash": "78e56f9f39c19606d2fb66abde1afd0f84a10ead7c80249adbe84fbb1e26b164", "text": "309 \n \n>>> x={7,3,8,6,9}  \n>>> t=x.pop()    Elimina un elemento aleatorio del conjunto \n>>> t \n8 \n>>> t=x.pop()  \n>>> t \n9 \n>>> t=x.pop()  \n>>> t \n3 \n>>> x     Contenido actual del conjunto   \n{6, 7} \n \nSe puede iterar sobre un conjunto. Los elementos de conjuntos no est\u00e1n ordenados  \n \n>>> x={7,3,8,6,9}  \n>>> for e in x: \n print(e)  \n  \n8 \n9 \n3 \n6 \n7 \n \n \nEjemplo. Creacion de un conjunto con lectura de datos  \n \n \nc=set()   #iniciar el conjun to vac\u00edo  \nn=int(input('Cuantos datos: '))  \nfor i in range(n): \n    e=int( input('Elemento: '))  \n    c.add(e)  \nprint(c)  \n \n \nPrueba del programa  \n \n>>>  \nCuantos datos: 5  \nElemento: 23 \nElemento: 45 \nElemento: 23 \nElemento: 78 \nElemento: 42 \n{42, 45, 78, 23}    El elemento repetido fue eliminado  \nLos elementos no est\u00e1n ordenados  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 807, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fcf3b2e-d594-4659-adab-9cb8f646fd23": {"__data__": {"id_": "6fcf3b2e-d594-4659-adab-9cb8f646fd23", "embedding": null, "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3af6b96-4ef9-4094-b242-c61bbf2a6860", "node_type": "4", "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "428c31280177e1072df17481fdacff80ad13ee4553f1e6395d8b3e0bb3312897", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6664f8f1-1f16-466e-b944-06e889d48cb2", "node_type": "1", "metadata": {"page_label": "309", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "78e56f9f39c19606d2fb66abde1afd0f84a10ead7c80249adbe84fbb1e26b164", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e387fe88-ad79-49b5-825a-8740e03c3929", "node_type": "1", "metadata": {}, "hash": "66515219fb0de14071c03e5329f959cf389a36382545111b1786376320a0fc03", "class_name": "RelatedNodeInfo"}}, "hash": "69e34bebc14265b3899d16ff3a3c1dc04225c936eb993eac245c1da2f6e771a8", "text": "310 \n \n7.7 Diccionarios  \n \nLos diccionarios son colecciones de datos con un formato especial que permite definir y acceder a los componentes \u00fanicamente mediante una clave. Cada componente de un \ndiccionario es un par  clave: valor   y se escriben entre llaves, separados por comas con la \nsiguiente sintaxis:  \n \n{clave: valor, clave: valor, clave: valor, ..., clave: valor}  \n \nLas claves pueden ser valores simples de diferentes tipos y los valores  asociados a la \nclave pueden ser datos  simples o datos estructurados de tipo lista,  tupla, conjunto, e \ninclusive otro  diccionario . No se pueden modificar las claves pero , si se pueden modificar \nlos valores q ue est\u00e1n asociados a las claves siempre que sean datos modificables, \nejemp lo: listas.  \n \nLos componentes de un diccionario no est\u00e1n en un orden espec\u00edfico .  Para acceder a los \nelementos de un diccionario debe especificarse la clave entre corchetes.  \n \nEjemplo.  Definir un diccionario con clave num\u00e9rica entera y valor tipo cadena.  \n \n>>> x={123: 'Algebra', 325: 'F\u00edsica', 215: 'Qu\u00edmica'}  \n \nSu representaci\u00f3n conceptual en la memoria con celdas identificadas con la clave  \n \n'Algebra' 'F\u00edsica' 'Qu\u00edmica' \n     123               325              215  \n \n>>> x[123]       Mediante la clave se accede al  valor \n 'Algebra'  \n \n>>> x[215]  \n 'Qu\u00edmica'  \n \n>>> x[123]='Matem\u00e1ticas'      Se puede modificar el valor   \n>>> x \n {123: 'Matem\u00e1ticas', 325: 'F\u00edsica', 215: 'Qu\u00edmica'}  \n \nDefinici\u00f3n de un diccionario nulo  \n \n>>> dic={}  \n \nDefini ci\u00f3n de  un diccionario asignando el conteni do \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 1574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e387fe88-ad79-49b5-825a-8740e03c3929": {"__data__": {"id_": "e387fe88-ad79-49b5-825a-8740e03c3929", "embedding": null, "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3af6b96-4ef9-4094-b242-c61bbf2a6860", "node_type": "4", "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "428c31280177e1072df17481fdacff80ad13ee4553f1e6395d8b3e0bb3312897", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fcf3b2e-d594-4659-adab-9cb8f646fd23", "node_type": "1", "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "69e34bebc14265b3899d16ff3a3c1dc04225c936eb993eac245c1da2f6e771a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca67252b-078e-456b-81a2-53b7f64188e6", "node_type": "1", "metadata": {}, "hash": "a119557312f0cdcbd67661dcd95cf240a642cf1bb180453f5b94517e40859b42", "class_name": "RelatedNodeInfo"}}, "hash": "66515219fb0de14071c03e5329f959cf389a36382545111b1786376320a0fc03", "text": "Definir un diccionario con cl ave num\u00e9rica y valor asociado que contiene  una lista \nde dos componentes: nombre y edad  \n \n>>> dic={123:['Anita',25],234:['Elena ',34],456:['Carmen',45]}  \n>>> dic  \n{456: ['Carmen', 45], 234: ['Elena', 34], 123: ['Anita', 25]}     \n \nPython Programaci\u00f3n", "start_char_idx": 1575, "end_char_idx": 1861, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca67252b-078e-456b-81a2-53b7f64188e6": {"__data__": {"id_": "ca67252b-078e-456b-81a2-53b7f64188e6", "embedding": null, "metadata": {"page_label": "311", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d46265f0-292e-4abb-9a8e-3eb07d9f171d", "node_type": "4", "metadata": {"page_label": "311", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e9fae0b2bced9a51191cba196b689e510305cf624f154de630f2690b3663bda0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e387fe88-ad79-49b5-825a-8740e03c3929", "node_type": "1", "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66515219fb0de14071c03e5329f959cf389a36382545111b1786376320a0fc03", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56b697bf-f78d-46b6-97b1-39e525bdeca5", "node_type": "1", "metadata": {}, "hash": "31723895f6c226f3d7324cb083c01d1cb8078a773f2c4f676afb85f444cb4674", "class_name": "RelatedNodeInfo"}}, "hash": "a119557312f0cdcbd67661dcd95cf240a642cf1bb180453f5b94517e40859b42", "text": "311 \n \n \nEl manejo de las entradas del diccionario requiere especificar la clave  \n  \n>>> dic[123]  \n['Anita', 25]  \n \nManejo del contenido de la lista asociada a la clave  \n Requiere especificar el \u00edndice del componente (si es una lista o tupla)  \n \n>>> dic[123][0]  \n'Anita' \n>>> dic[123][1]  \n25 \n \nModificar el contenido de la lista asociada a una clave \n \n>>> dic[123][0]='Mar\u00eda'         Cambiar el nombre  \n>>> dic \n{456: ['Carmen', 45], 234: ['Elena', 34], 123: ['Mar\u00eda', 25]}  \n>>> dic[123][1]=27          Cambiar la edad \n>>> dic \n{456: ['Carmen', 45], 234: ['Elena', 34], 123: ['Mar\u00eda', 27]}  \n \nEliminar elementos del diccionario dada una clave:  del \n \n>>> del dic[234] \n>>> dic \n{456: ['Carmen', 45], 123: ['Mar\u00eda', 27]}  \n \nDetectar si el diccionario contiene una clave:  in \n \n>>> 123 in dic \nTrue \n>>> 234 in dic \nFalse \n \nAgregar elementos a un diccionario  \n \nSe debe n especificar  la clave y el contenido  respectivo , que puede ser un  valor simple o de \ntipo estructurado.  Si la clave ya existe, esa entrada del diccionario es sustituida. Se puede \nagregar elementos a un diccionario si el diccionario ya existe. Si no existe, primero debe \niniciarse el diccionario con un valor nulo.  \n \n>>> dic[572]=['Juanita',26]  \n>>> dic \n{456: ['Carmen', 45], 234: ['Elena', 34], 123: ['Mar\u00eda', 25], 572: \n['Juanita', 26]}  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56b697bf-f78d-46b6-97b1-39e525bdeca5": {"__data__": {"id_": "56b697bf-f78d-46b6-97b1-39e525bdeca5", "embedding": null, "metadata": {"page_label": "312", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19a956cc-e02d-4bfa-b1f5-09da9d22c5de", "node_type": "4", "metadata": {"page_label": "312", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "37b5f19f8ab3137476d5076f34696c53a4e7aec3e06fbed222786d58e2aeebe8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca67252b-078e-456b-81a2-53b7f64188e6", "node_type": "1", "metadata": {"page_label": "311", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a119557312f0cdcbd67661dcd95cf240a642cf1bb180453f5b94517e40859b42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dac3660a-b956-4a62-b117-17febfa37a2f", "node_type": "1", "metadata": {}, "hash": "9f6f8d2b22b50530a127f9887a33ebd1e617a8d2c04562fa6b90337dc5193660", "class_name": "RelatedNodeInfo"}}, "hash": "31723895f6c226f3d7324cb083c01d1cb8078a773f2c4f676afb85f444cb4674", "text": "312 \n \nTambi\u00e9 n se pueden agregar entradas al diccionario con la palabra especial  setdefault : \n \n>>> dic.setdefault(584,['Laura',31]) \n['Laura', 31]  \n>>> dic \n{456: ['Carmen', 45], 584: ['Laura', 31], 234: ['Elena', 34], 123: ['Mar\u00eda', 25], 572: ['Juanita', 26]} \n \n \n \nPara com parar: Acceso a valores en listas vs. valores en diccionarios   \n \nCaso l ista: Requiere \u00edndices  \n \n>>> s=[[234, ['cuaderno', 30]],[123, ['libro', 20]]]  \n>>> s[0]  \n[234, ['cuaderno', 30]]  \n>>> s[0][0]  \n234  \n>>> s[0][1]  \n['cuaderno', 30]  \n>>> s[0][1][1]  \n30  \nCaso diccionario: Requiere clave e \u00edndice  \n \n>>> s={234:['cuaderno', 30],123:['libro', 20]}  \n>>> s[234]  \n['cuaderno', 30]  \n>>> s[234][1]  \n30  \nEl uso de las claves de los diccionarios es m\u00e1s claro que el uso de \u00edndices en listas  \n \n \nAlgunas funciones comunes son aplicables a diccionarios  \n >>> dic={456: ['Carmen', 45], 123: ['Mar\u00eda', 27], 572: ['Juanita', 26]} \n  \n>>> len(dic)      Cantidad de elementos en el diccionario   \n3 \n>>> max(dic)      El mayor valor de clave   \n572 \n>>> min(dic)      El menor valor de clave \n123 \n>>> del dic     Eliminar el diccionario de la memoria \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dac3660a-b956-4a62-b117-17febfa37a2f": {"__data__": {"id_": "dac3660a-b956-4a62-b117-17febfa37a2f", "embedding": null, "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0733f068-eebe-446e-8133-efeaf3d32b1a", "node_type": "4", "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14b55a50d0f273f89a0eccf95a22603a0b8382670342ba4b9cce98020825ba56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56b697bf-f78d-46b6-97b1-39e525bdeca5", "node_type": "1", "metadata": {"page_label": "312", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31723895f6c226f3d7324cb083c01d1cb8078a773f2c4f676afb85f444cb4674", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12bfcda4-3d48-495a-bfe6-a71ec7177372", "node_type": "1", "metadata": {}, "hash": "6974719e322e6b57c1863d807e50dcacc2f8a530b95d80f163132cf2e974e1a1", "class_name": "RelatedNodeInfo"}}, "hash": "9f6f8d2b22b50530a127f9887a33ebd1e617a8d2c04562fa6b90337dc5193660", "text": "313 \n \nObservaciones acerca de d iccionarios con valores de tipo estructurado  \n \nLos valores asociados a la clave pueden ser datos simples o datos estructurados de tipo \nlista,  tupla, conjunto, e inclusive otro diccionario . Se indican las restricciones de acceso \nen cada caso.  \n \nDiccionario con valores de tipo lista  \n \nSe puede listar y acceder a los valores de la lista mediante \u00edndices y se puede n modifica r \nlos valores  inluidos en la lista  \n \nDiccionario con valores de tipo tupla  \n \nSe puede listar y acceder a los valores de la tupla mediante \u00edndices pero no se puede n \nmodificar  los valores  dentro de la tupla  \n \nDiccionario con valores de tipo conjunto  \n \nSe puede listar o verificar la existencia de valores en el conjunto, pero no se puede usar \n\u00edndices ni modificar  los valores incluidos en el conjunto  \n \nDiccionario con valores de tipo diccionario  \n \nPara acceder a los valores del diccionario interno se necesita una segunda clave. El \nacceso a los valores del diccionario interno depende del tipo de datos respectivo.", "start_char_idx": 0, "end_char_idx": 1053, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12bfcda4-3d48-495a-bfe6-a71ec7177372": {"__data__": {"id_": "12bfcda4-3d48-495a-bfe6-a71ec7177372", "embedding": null, "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0733f068-eebe-446e-8133-efeaf3d32b1a", "node_type": "4", "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14b55a50d0f273f89a0eccf95a22603a0b8382670342ba4b9cce98020825ba56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dac3660a-b956-4a62-b117-17febfa37a2f", "node_type": "1", "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9f6f8d2b22b50530a127f9887a33ebd1e617a8d2c04562fa6b90337dc5193660", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81f805bb-65f4-4290-8e5d-4b9825dffa5e", "node_type": "1", "metadata": {}, "hash": "638b2404be6530dda283469e776f1f7fba6802856c958a13e3d415800a5bd924", "class_name": "RelatedNodeInfo"}}, "hash": "6974719e322e6b57c1863d807e50dcacc2f8a530b95d80f163132cf2e974e1a1", "text": "Conversi\u00f3n de una  lista con componentes tipo lista o tupla a diccionario: dict  \n \nLa lista o tupla debe n tener una estructura compatible con el diccionario que se desea \n \n>>> a=[[123,['libro',20]],[234,['cuaderno',30]]]          listas  \n>>> d=dict(a)  \n>>> d \n{123: ['libro', 20], 234: ['cuaderno', 30]}  \n \n>>> a=[(123,['libro',20]),(234,['cuaderno',30])]         tuplas  \n>>> d=dict(a)  \n>>> d \n{234: ['cuaderno', 30], 123: ['libro', 20]}   El orden no es significativo \n \n>>> a=([123,['libro',20]],[234,['cuaderno',30]])  \n>>> d=dict(a)  \n>>> d \n{234: ['cuaderno', 30], 123: ['libro', 20]}       Se obtiene el mismo diccionario \n \n>>> a=[[123,('libro',20)],[234,('cuaderno',30)]]  \n>>> d=dict(a)  \n>>> d \n{234: ('cuaderno', 30), 123: ('libro', 20)}    Las tuplas no son modificables \nPython Programaci\u00f3n", "start_char_idx": 1060, "end_char_idx": 1871, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81f805bb-65f4-4290-8e5d-4b9825dffa5e": {"__data__": {"id_": "81f805bb-65f4-4290-8e5d-4b9825dffa5e", "embedding": null, "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b94a4771-d491-4847-a169-3e48e5ca6df2", "node_type": "4", "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dd8eee9854d1e393c7700f776189589c22fe7899b250e6d2376d5a10e4bacf2e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12bfcda4-3d48-495a-bfe6-a71ec7177372", "node_type": "1", "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6974719e322e6b57c1863d807e50dcacc2f8a530b95d80f163132cf2e974e1a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3756e8c3-8eb1-44f4-9675-068e9cab90d6", "node_type": "1", "metadata": {}, "hash": "f6449ce9b9a2b6957b2eb6fcb180bfb155f02adbd370b9b42307be4adedc147e", "class_name": "RelatedNodeInfo"}}, "hash": "638b2404be6530dda283469e776f1f7fba6802856c958a13e3d415800a5bd924", "text": "314 \n \nCreaci\u00f3n de un diccionario emparejando listas de claves y valores con   zip \n \n>>> claves=[123,234]  \n>>> datos=[['libro',20],['cuaderno',30]]  \n>>> d=dict( zip(claves,datos))  \n>>> d \n{234: ['cuaderno', 30], 123: ['libro', 20]}  \n \n \nCrear una l ista con las claves de un diccionario:  keys  \n \ndic={456: ['Carmen', 45], 234: ['Elena', 34], 123: ['Mar\u00eda', 25]}  \n>>> c=dic.keys()  \n>>> list(c) \n[456, 234, 123]  \n \n>>> list(dic)     Tambi\u00e9n se obtiene la lista de claves tom\u00e1ndolas directamente \n[456, 234, 123]       con  list \n \n \nCrear una lista mediante  el contenido de los valores asociados a las claves del  \ndiccionario:  values  \n \n>>> dic={456: ['Carmen', 45], 234: ['Elena', 34], 123: ['Mar\u00eda', 25]}  \n>>> v=dic.values()  \n>>> list(v) \n[['Carmen', 45], ['Elena', 34], ['Mar\u00eda', 25]]  \n  \nConversi\u00f3n de un diccionario a una lista  (los componentes son tuplas)  : items \n \n>>> d={123: ['libro', 20], 234: ['cuaderno', 30]}   Diccionario  \n>>> c=d.items()  \n>>> d=list(c) \n>>> d \n[(123, ['libro', 20]), (234, ['cuaderno', 30])]      C omponentes son tuplas  \nd[0][0]=345            N o se pueden modificar  \n                las claves (primer  \n                componente de la tupla)  \nTypeError: 'tuple' object does not support item assignment  \n >>> d[0][1]=['l\u00e1piz',", "start_char_idx": 0, "end_char_idx": 1286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3756e8c3-8eb1-44f4-9675-068e9cab90d6": {"__data__": {"id_": "3756e8c3-8eb1-44f4-9675-068e9cab90d6", "embedding": null, "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b94a4771-d491-4847-a169-3e48e5ca6df2", "node_type": "4", "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dd8eee9854d1e393c7700f776189589c22fe7899b250e6d2376d5a10e4bacf2e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81f805bb-65f4-4290-8e5d-4b9825dffa5e", "node_type": "1", "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "638b2404be6530dda283469e776f1f7fba6802856c958a13e3d415800a5bd924", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "253469b4-7be3-4cda-9869-a20c19c6934b", "node_type": "1", "metadata": {}, "hash": "88f96b03b1419d75065ff8c0151d4b8766bf39d54f9d7e914515a39c36d215dd", "class_name": "RelatedNodeInfo"}}, "hash": "f6449ce9b9a2b6957b2eb6fcb180bfb155f02adbd370b9b42307be4adedc147e", "text": "30]     Segundo componente de la tupla  \n       (tampoco se puede modificar)  \nTypeError: 'tuple' object does not support item assignment  \n \n>>> d[0][1][0]='pluma'   Pero se puede modificar dentro (lista)  \n>>> d \n[(234, ['pluma', 30]), (123, ['libro', 20])]  \n \nPython Programaci\u00f3n", "start_char_idx": 1286, "end_char_idx": 1569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "253469b4-7be3-4cda-9869-a20c19c6934b": {"__data__": {"id_": "253469b4-7be3-4cda-9869-a20c19c6934b", "embedding": null, "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd655a77-9998-440f-864c-c6009d7f9b79", "node_type": "4", "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "96e424b579ce569f074917620b5d07c216cb974380146835c9b80814a0699a85", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3756e8c3-8eb1-44f4-9675-068e9cab90d6", "node_type": "1", "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f6449ce9b9a2b6957b2eb6fcb180bfb155f02adbd370b9b42307be4adedc147e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc73a439-1536-40f9-b6de-5747d27f9e97", "node_type": "1", "metadata": {}, "hash": "e2680ed3212218bc6ce77cbd3f471ba033c05a9509448f1fde00dd5b898de1f4", "class_name": "RelatedNodeInfo"}}, "hash": "88f96b03b1419d75065ff8c0151d4b8766bf39d54f9d7e914515a39c36d215dd", "text": "315 \n \nConversi\u00f3n de un diccionario a una lista mediante declaraci\u00f3n expl\u00edcita  \n \n>>> d={123: ['libro', 20], 234: ['cuaderno', 30]}   Diccionario  \n>>> c=d.items()  \n>>> x=list(c)  \n>>> x \n[(123, ['libro', 20]), (234, ['cuaderno', 30])]       Resulta una tupla  \n \n>>> t=[]            Inicar una lista \n>>> for e in x:          p ara c onvertir a lista en \n r=list(e)           forma explicita cada \n t=t+[r]                                         elemento                                      \n>>> t \n[[123, ['libro', 20]], [23 4, ['cuaderno', 30]]]      Se obtiene una lista \n>>> t[0][0]=345           (todo e s modificable)  \n>>> t \n[[345, ['libro', 20]], [23 4, ['cuaderno', 30]]]  \n \nSe puede iterar sobre un diccionario.", "start_char_idx": 0, "end_char_idx": 728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc73a439-1536-40f9-b6de-5747d27f9e97": {"__data__": {"id_": "bc73a439-1536-40f9-b6de-5747d27f9e97", "embedding": null, "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bd655a77-9998-440f-864c-c6009d7f9b79", "node_type": "4", "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "96e424b579ce569f074917620b5d07c216cb974380146835c9b80814a0699a85", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "253469b4-7be3-4cda-9869-a20c19c6934b", "node_type": "1", "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "88f96b03b1419d75065ff8c0151d4b8766bf39d54f9d7e914515a39c36d215dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b1fca71-4088-4ac4-9063-667c5e7dfdc1", "node_type": "1", "metadata": {}, "hash": "d6bc3301a0fe54b28675886a3a6dfd4c5eb1776990178887f2379740286459a7", "class_name": "RelatedNodeInfo"}}, "hash": "e2680ed3212218bc6ce77cbd3f471ba033c05a9509448f1fde00dd5b898de1f4", "text": "El iterador es la clave  \n \n>>> dc={456: ['Carmen', 45], 123: ['Mar\u00eda', 27], 572: ['Juanita', 26]}  \n \n>>> for c in dc: \n print(c,dc[c]) \n  \n456 ['Carmen', 45]  \n123 ['Mar\u00eda', 27]  \n572 ['Juanita', 26]  \n \nRecorridos del contenido de un diccionario con items():  \n \n>>> d={123: ['libro', 20], 234: ['cuaderno', 30]}  \n \n>>> for c in d:                           P or claves \n print(c,d[c])  \n  \n234 ['cuaderno', 30]  \n123 ['libro', 20]  \n \n>>> for e in d.items():          P or componentes  \n print(e)  \n  \n(234, ['cuaderno', 30])  \n(123, ['libro', 20])  \n >>> for c,v in d.items():    Por componentes separados  \n print(c,v)     (equivalente al primero)  \n \n234 ['cuaderno', 30]  \n123 ['libro', 20]  \n \nPython Programaci\u00f3n", "start_char_idx": 729, "end_char_idx": 1452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b1fca71-4088-4ac4-9063-667c5e7dfdc1": {"__data__": {"id_": "1b1fca71-4088-4ac4-9063-667c5e7dfdc1", "embedding": null, "metadata": {"page_label": "316", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00b913bc-fadb-4394-926f-9ae18688cf9a", "node_type": "4", "metadata": {"page_label": "316", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5d24d8b0183f127f070a1ddcfccf50d32c88be72ddd6c09c638c5e73f5d12a5b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc73a439-1536-40f9-b6de-5747d27f9e97", "node_type": "1", "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e2680ed3212218bc6ce77cbd3f471ba033c05a9509448f1fde00dd5b898de1f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7f3580c-6909-4949-a4d5-6a1ccc45d6cf", "node_type": "1", "metadata": {}, "hash": "2a7084961dc8c66fbe4ff5c1973c3344f78227c1ecc87d4004dbadf71e7276b0", "class_name": "RelatedNodeInfo"}}, "hash": "d6bc3301a0fe54b28675886a3a6dfd4c5eb1776990178887f2379740286459a7", "text": "316 \n \nUso de  get  para asignar un valor alterno si no existe una clave  \n \n>>> d={123: ['libro', 20], 234: ['cuaderno', 30]}  \n>>> x=d.get(234,333)  \n>>> print(x)  \n['cuaderno', 30]  \n>>> x=d.get(235,333)  \n>>> print(x)  \n333 \n>>> x=d.get(235,'Error')  \n>>> x \n'Error' \n \n Un diccionario con claves de tipo texto (nombre) y valores de tipo conjunto (hijos)  \n \n>>> d={'Juan':{'Mar\u00eda','Pedro'},'Carlos':{'Susy','Jorge','Pedro'},  \n       'Carmen':{'Lisa'}}  \n>>> d['Juan']  \n{'Mar\u00eda', 'Pedro'}  \n>>> d['Carlos']  \n{'Jorge', 'Susy', 'Pedro'}  \n \n>>> for p in d:     Listar familias: Padre e hijos \n print('\\ nPadre: ',p) \n for h in d[p]: \n  print(h)  \n \nPadre: Carlos   Los componentes de un diccionario no est\u00e1n  \nJorge      en alg\u00fan orden espec\u00edfico  \nSusy \nPedro \n Padre: Juan \nMar\u00eda \nPedro \n \nPadre: Carmen \nLisa \n  \nDefin ici\u00f3n impl\u00edcita  de un diccionario \n \nIniciar con ceros un diccionario para conteo de lanzamientos de un dado:  \n >>> dc={i:0 for i in range(1,7)}  \n>>> dc \n{1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0} \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1041, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7f3580c-6909-4949-a4d5-6a1ccc45d6cf": {"__data__": {"id_": "c7f3580c-6909-4949-a4d5-6a1ccc45d6cf", "embedding": null, "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6a4ce20-112d-4ae5-8620-c0a5d48eb661", "node_type": "4", "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "57445eacf0524a4b279509071fc3ea341605ddfd1181dd932ee8912a81abb5be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b1fca71-4088-4ac4-9063-667c5e7dfdc1", "node_type": "1", "metadata": {"page_label": "316", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d6bc3301a0fe54b28675886a3a6dfd4c5eb1776990178887f2379740286459a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9010ac5f-3668-4811-8cf4-2fdf75c5d453", "node_type": "1", "metadata": {}, "hash": "0875464edc4a12c3dbcf56fed9496f453c42927cd62cfff500785804d15c32b2", "class_name": "RelatedNodeInfo"}}, "hash": "2a7084961dc8c66fbe4ff5c1973c3344f78227c1ecc87d4004dbadf71e7276b0", "text": "317 \n \nUn diccionario con componentes  de tipo diccionario  \n \nRequieren dos claves para acceder al valor  \n \nEjemplo. Un diccionario con el c\u00f3digo del profesor como la clave en el primer nivel. En el \ndiccionario del segundo nivel la clave es el nombre de la materia y el valor asociado es el \nn\u00famero del paralelo:  \n \n>>> dic={123:{'Algebra':5,'F\u00edsica':3},234:{'Algebra':2,'F\u00edsica':4,  \n'Qu\u00edmica':3},326:{'F\u00edsica':2}}  \n \n>>> dic[234]      Materias dictadas por el profesor 234 \n{'Qu\u00edmica': 3, 'Algebra': 2, 'F\u00edsica': 4}  \n>>> dic[234]['F\u00edsica']    El n\u00famero del paralel o de la materia \u2018Fisica\u2019  \n4 \n \n>>> dic[472]={'Qu\u00edmica':2 ,'Algebra':3}      Agregar una nueva entrada al dicc.", "start_char_idx": 0, "end_char_idx": 684, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9010ac5f-3668-4811-8cf4-2fdf75c5d453": {"__data__": {"id_": "9010ac5f-3668-4811-8cf4-2fdf75c5d453", "embedding": null, "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6a4ce20-112d-4ae5-8620-c0a5d48eb661", "node_type": "4", "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "57445eacf0524a4b279509071fc3ea341605ddfd1181dd932ee8912a81abb5be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7f3580c-6909-4949-a4d5-6a1ccc45d6cf", "node_type": "1", "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2a7084961dc8c66fbe4ff5c1973c3344f78227c1ecc87d4004dbadf71e7276b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6888a12d-f11e-4f9d-9137-b6d1a31c08a3", "node_type": "1", "metadata": {}, "hash": "96d0124d988b16bdcb997879bb7df3a06f4d341ed79ac722f31c6bf333d9f562", "class_name": "RelatedNodeInfo"}}, "hash": "0875464edc4a12c3dbcf56fed9496f453c42927cd62cfff500785804d15c32b2", "text": ">>> dic \n{472: {'Qu\u00edmica': 2, 'Algebra': 3}, 234: {'Qu\u00edmica': 3, 'Algebra': 2, \n'F\u00edsica': 4}, 123: {'Algebra': 5, 'F\u00edsica': 3}, 326: {'F\u00edsica': 2}}  \n >>> dic[123]['Algebra']=7     Modificar el n\u00famero de par alelo \n>>> dic \n{472: {'Qu\u00edmica': 2, 'Algebra': 3}, 234: {'Qu\u00edmica': 3, 'Algebra': 2, \n'F\u00edsica': 4}, 123: {'Algebra': 7, 'F\u00edsica': 3}, 326: {'F\u00edsica': 2}}  \n \n>>> del dic[234]['F\u00edsica']     Eliminar materia  \n>>> dic \n{472: {'Qu\u00edmica': 2, 'Algebra': 3}, 234: {'Qu\u00edmica': 3, 'Algebra': 2}, \n123: {'Algebra': 7, 'F\u00edsica': 3}, 326: {'F\u00edsica': 2}}  \n \nRecorrido del diccionario de dos niveles  usando claves \n \n>>> for cod in dic: \n print(cod,dic[cod])  \n  \n472 {'Algebra': 3, 'Qu\u00edmica': 2}  \n234 {'Algebra': 2, 'Qu\u00edmica': 3}  \n123 {'Algebra': 7, 'F\u00edsica': 3}  \n326 {'F\u00edsica': 2}  \n \n>>> for cod in dic: \n print('Profesor: ',cod)  \n for mater in dic[cod]:  \n  print(mater,dic[cod][mater])  \n   \nProfesor:  472  \nAlgebra 3  \nQu\u00edmica 2  \nProfesor:  234  \nPython Programaci\u00f3n", "start_char_idx": 687, "end_char_idx": 1663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6888a12d-f11e-4f9d-9137-b6d1a31c08a3": {"__data__": {"id_": "6888a12d-f11e-4f9d-9137-b6d1a31c08a3", "embedding": null, "metadata": {"page_label": "318", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "334d8091-3d9e-4352-86d8-ec69c1d3bc62", "node_type": "4", "metadata": {"page_label": "318", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f9221c2b7cacb54d03a3e3312d77e11c64ff6e6f5efcfac4cc1047a4d4e1fd58", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9010ac5f-3668-4811-8cf4-2fdf75c5d453", "node_type": "1", "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0875464edc4a12c3dbcf56fed9496f453c42927cd62cfff500785804d15c32b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75730431-24e1-40eb-8c58-68d857e98afc", "node_type": "1", "metadata": {}, "hash": "a252820597142d712ce67b941ea8d7c6b05aeb1f97ae85ffae9e2fb3e551b970", "class_name": "RelatedNodeInfo"}}, "hash": "96d0124d988b16bdcb997879bb7df3a06f4d341ed79ac722f31c6bf333d9f562", "text": "318 \n \nAlgebra 2  \nQu\u00edmica 3  \nProfesor:  123  \nAlgebra 7  \nF\u00edsica 3  \nProfesor:  326 \nF\u00edsica 2  \n \nRecorrido del diccionario de dos niveles con   items( )  \n \n>>> for cod,mats in dic.items():       La notaci\u00f3n es m\u00e1s simple \n print(cod,mats)  \n \n472 {'Algebra': 3, 'Qu\u00edmica': 2}  \n234 {'Algebra': 2, 'Qu\u00edmica': 3}  \n123 {'Algebra': 7, 'F\u00edsica': 3}  \n326 {'F\u00edsica': 2}  \n \n>>> for cod,mats in dic.items():             \n print('Profesor: ',cod)  \n for mater,paral in mats.items():  \n  print(mater,paral)  \n Profesor:  472  \nAlgebra 3  \nQu\u00edmica 2  \nProfesor:  234  \nAlgebra 2  \nQu\u00edmica 3  \n Profesor:  123  \nAlgebra 7  \nF\u00edsica 3  \nProfesor:  326  \nF\u00edsica 2  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75730431-24e1-40eb-8c58-68d857e98afc": {"__data__": {"id_": "75730431-24e1-40eb-8c58-68d857e98afc", "embedding": null, "metadata": {"page_label": "319", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f786d5a-e32e-4cf8-80f7-acd6fe248054", "node_type": "4", "metadata": {"page_label": "319", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "538a0c97aa2823d275c9a0b13b7ba40e7deabb19612cd22c9c5339fedf62e97f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6888a12d-f11e-4f9d-9137-b6d1a31c08a3", "node_type": "1", "metadata": {"page_label": "318", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "96d0124d988b16bdcb997879bb7df3a06f4d341ed79ac722f31c6bf333d9f562", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d72e18c-c712-40b1-b104-92da5e8c2d75", "node_type": "1", "metadata": {}, "hash": "ff23f793f6a7f5a20c78cb1a62e0bc7f03a9dc880b3c4a1b9f843f96ab6625ed", "class_name": "RelatedNodeInfo"}}, "hash": "a252820597142d712ce67b941ea8d7c6b05aeb1f97ae85ffae9e2fb3e551b970", "text": "319 \n \nEjemplo.  Un programa para c rear un diccionario con lectura de datos  de personas  \n                 (c\u00f3digo, nombre y edad):  \n \n \ndic={} \nn=int(input('Cuantos datos: '))  \nfor i in range(n):  \n    cla=int (input('Clave: '))  \n    nom=input('Nombre: ') \n    ed=int( input('Edad: '))  \n    dic[cla]=[nom,ed]  \n \nprint('\\nSalida: ' ) \nfor cod in dic:  \n    print(' \\nNombre: ',dic[cod][0])  \n    print('Edad:   ',dic[cod][1])  \n \nx=int(input('Clave para buscar: '))  \nif x in dic: \n    print('Nombre: ',dic[x][0])  \n    print('Edad:   ',dic[x][1])  \nelse: \n    print('No est\u00e1')  \n \n \nPrueba del programa  \n>>>  \nCuantos datos: 3  \nClave: 123 \nNombre: Mar\u00eda \nEdad: 32 \nClave: 234 \nNombre: Juan \nEdad: 28 \nClave: 345 \nNombre: Carmen \nEdad: 30 \n \nSalida \nNombre:  Carmen    Los elementos no est\u00e1n en orden \nEdad:    30 \n \nNombre:  Juan  \nEdad:    28  \n... \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6d72e18c-c712-40b1-b104-92da5e8c2d75": {"__data__": {"id_": "6d72e18c-c712-40b1-b104-92da5e8c2d75", "embedding": null, "metadata": {"page_label": "320", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0a396e3-eb38-4650-8abf-9f9a3feda2f1", "node_type": "4", "metadata": {"page_label": "320", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8cf2d679b44633eda40187b7ca3fbb6b26667a23cbf4e9740905cfe6e39ff9a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75730431-24e1-40eb-8c58-68d857e98afc", "node_type": "1", "metadata": {"page_label": "319", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a252820597142d712ce67b941ea8d7c6b05aeb1f97ae85ffae9e2fb3e551b970", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8571b392-7e32-4b03-b59c-17e682a6a8a8", "node_type": "1", "metadata": {}, "hash": "085ed9f83eebd3dbfcf25ab18a31a6721459d0f13927c8ac450eae1a7974c93f", "class_name": "RelatedNodeInfo"}}, "hash": "ff23f793f6a7f5a20c78cb1a62e0bc7f03a9dc880b3c4a1b9f843f96ab6625ed", "text": "320 \n \nEjemplo.  Una funci\u00f3n para simular el lanzamiento de un dado y registrar la cantidad de \nveces que sali\u00f3 cada n\u00famero. El par\u00e1metro es la cantidad de veces que se lanza el dado.  \n \nEl resultado que entrega la funci\u00f3n es un diccionario cuya clave es el n\u00famero del dado y el \nvalor asociado es la cantidad de veces  que sali\u00f3 ese n\u00famero.  \n El diccionario se inicia con ceros mediante una declaraci\u00f3n impl\u00edcita.  \n  \nfrom random import* \ndef dados(n):  \n    d={i:0 for i in range(1,7)}  \n    for i in range(n):  \n        x=randint(1,6)  \n        d[x]=d[x]+1  \n    return d \n \n \n \nPrueba de la funci\u00f3n  \n >>> from dados import* \n>>> d=dados(600)  \n>>> print(d)  \n{1: 93, 2: 98, 3: 104, 4: 93, 5: 106, 6: 106}  \n>>> d[3] \n104 >>> \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 753, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8571b392-7e32-4b03-b59c-17e682a6a8a8": {"__data__": {"id_": "8571b392-7e32-4b03-b59c-17e682a6a8a8", "embedding": null, "metadata": {"page_label": "321", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44fa1e22-599d-40a4-88ba-b2a7ecf4e6f3", "node_type": "4", "metadata": {"page_label": "321", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ae9c3d13d90a40a404b4038648e50f1228c186dea348b57ba98c1e6e0b03fb5c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d72e18c-c712-40b1-b104-92da5e8c2d75", "node_type": "1", "metadata": {"page_label": "320", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff23f793f6a7f5a20c78cb1a62e0bc7f03a9dc880b3c4a1b9f843f96ab6625ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b97b094d-05d7-4b43-80d0-714f1a7c33c2", "node_type": "1", "metadata": {}, "hash": "e044dde36e6a62442cb7d8bd975be4a63c1b2392ad5a165f1ed0ff43ef470d1a", "class_name": "RelatedNodeInfo"}}, "hash": "085ed9f83eebd3dbfcf25ab18a31a6721459d0f13927c8ac450eae1a7974c93f", "text": "321 \n \nUna funci\u00f3n de prueba para detectar el tipo del par\u00e1metro.  Esta propiedad demuestra que \nno es necesario definir el tipo de datos de los par\u00e1metros que entran a una funci\u00f3n \n \n \ndef encontrartipo(x):  \n    if type(x)==list:  \n        print('Es una lista')  \n    elif type(x)== tuple: \n        print('Es una tupla')  \n    elif type(x)== set: \n        print('Es un conjunto')  \n    elif type(x)== dict: \n        print('Es un diccionario')  \n    else:  \n        print('Otro tipo')  \n \n Prueba de la funci\u00f3n  \n \n>>> from encontrartipo import* \n>>> x=[2,5,3,7]  \n>>> encontrartipo(x)  \nEs una lista  \n>>> x=(2,5,3,7)  \n>>> encontrartipo(x)  \nEs una tupla  \n>>> x={2,5,3,7}  \n>>> encontrartipo(x)  \nEs un conjunto  \n>>> x={2:[5,3,7]}  \n>>> encontrartipo(x)  \nEs un diccionario  \n>>> x=7 \n>>> encontrartipo(x)  \nOtro tipo  \n \n \nUna funci\u00f3n utilitaria para determinar si una variable es simple o es una estructura \nde datos iterable (lista, tupla, conjunto, arreglo, diccionario, cadena de caracteres)  \n \n>>> import numpy as np \n>>> x=5 \n>>> np.iterable(x)  \n0 \n>>> x=(6,4,7)  \n>>> np.iterable(x)  \n1 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b97b094d-05d7-4b43-80d0-714f1a7c33c2": {"__data__": {"id_": "b97b094d-05d7-4b43-80d0-714f1a7c33c2", "embedding": null, "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d83db27f-c410-4a68-b2ae-60f7d4c64336", "node_type": "4", "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5bf30d24913cccdb494710c4f759bf49979585f2932aa8434aba2c84880999fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8571b392-7e32-4b03-b59c-17e682a6a8a8", "node_type": "1", "metadata": {"page_label": "321", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "085ed9f83eebd3dbfcf25ab18a31a6721459d0f13927c8ac450eae1a7974c93f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e9fafa6-e0e5-4909-9c28-f1b6f7ea8b32", "node_type": "1", "metadata": {}, "hash": "f813ccb6587ba5d7dcad6b117cf12baf416ade216b379a4e75a366068abb495d", "class_name": "RelatedNodeInfo"}}, "hash": "e044dde36e6a62442cb7d8bd975be4a63c1b2392ad5a165f1ed0ff43ef470d1a", "text": "322 \n \n7.8 Ejercicios de pro gramaci\u00f3n con colecciones y funciones  \n \nEstos ejercicios combinan el uso de listas, cadenas de caracteres, tuplas, conjuntos y \ndiccionarios utilizando funciones. Esta pr\u00e1ctica afianza el conocimiento de estos \ninstrumentos computacionales y permit e usar estos coceptos como base para crear otras \nfunciones y programas para resolver problemas nuevos y m\u00e0s complejos.  \n Se sugiere proponer soluciones  iniciales usando instrucciones b\u00e1sicas de Python antes de  \nbuscar soluciones abreviadas usando las instrucciones especiales  disponibles en el \nlenguaje Python.  Esta t\u00e9cnica refuerza el conocimiento algor\u00edtmico.  \n \nPara cada uno de los siguientes ejercicios escriba una funci\u00f3n . \n \n1. Recibe una lista de n \u00fameros , que puede tener n\u00fameros repetidos,  y entrega una lista de \ntuplas en las que el primer componente es cada n\u00famero diferente, y el segundo \ncomponente es la cantidad de veces  que el n\u00famero aparece en la lista. \n \n2. Recibe una lista de n\u00fameros, que puede tener n\u00fameros repetidos,  y entrega un \ndiccionario con clave igual a cada n\u00famero diferente, y valor igual a la cantidad de veces \nque el  n\u00famero aparece en la lista  \n \n3. Recibe una cadena de caracteres  y entrega una lista de tuplas en las que el primer \ncomponente es cada una de las vocales y el segundo componente es la cantidad de veces \nque la vocal aparece en la cadena  \n \n4. Recibe una cadena de caracteres y entrega un diccionario con clave igual a a cada \nvocal, y valor igual a la cantidad de veces que la vocal aparece en la cadena  \n \n5. Recibe un n\u00famero entero positivo y entrega una lista de tuplas en las que el primer \ncomponente es cada d\u00edgito del n\u00famero, y el segundo componente es la cantidad de veces \nque el d\u00edgito aparece en el n\u00famero.  \n \n6.", "start_char_idx": 0, "end_char_idx": 1778, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e9fafa6-e0e5-4909-9c28-f1b6f7ea8b32": {"__data__": {"id_": "0e9fafa6-e0e5-4909-9c28-f1b6f7ea8b32", "embedding": null, "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d83db27f-c410-4a68-b2ae-60f7d4c64336", "node_type": "4", "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5bf30d24913cccdb494710c4f759bf49979585f2932aa8434aba2c84880999fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b97b094d-05d7-4b43-80d0-714f1a7c33c2", "node_type": "1", "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e044dde36e6a62442cb7d8bd975be4a63c1b2392ad5a165f1ed0ff43ef470d1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "423f1477-2d3d-495e-9406-4e2f99d3578b", "node_type": "1", "metadata": {}, "hash": "442fba64b99fcbee9f6ad423efde9b542ccc9830636b0abf3dc7b6338b6cecdf", "class_name": "RelatedNodeInfo"}}, "hash": "f813ccb6587ba5d7dcad6b117cf12baf416ade216b379a4e75a366068abb495d", "text": "6. Recibe un n\u00famero entero positivo y entrega un diccionario con clave igual a cada d\u00edgito \ndel n\u00famero, y valor igual a la cantidad de veces que el d\u00edgito aparece en el n\u00famero. \n 7. Recibe un entero positivo, lo convierte a n\u00famero binario y entrega dos  tupla s en la s que \nel primer componente es uno de los dos d\u00edgitos binarios, y el segundo componente es la \ncantidad de veces que aparece en el n\u00famero binario. \n \n8. Recibe una frase en una cadena de caracteres y entrega una cadena con las letras \niniciales de cada palabra, en may \u00fasculas . Ej. \u2018Mi programa favorito\u2019 \u2192  \u2018MPF\u2019 \n \n9. Recibe una cadena y entrega una cadena reflejada, Ej.  \u2018prueba\u2019 \u2192   \u2018pruebaabeurp\u2019  \n 10. Recibe una cadena y entrega la  cadena sin vocales.  Ej. \u2018prueba\u2019 \u2192   \u2018prb\u2019 \n \n11. Recibe una cadena y la entrega sustituyendo cada espacio por un s\u00edmbolo aleatorio \nque puede ser:  \u2018+\u2019,  \u2019#\u2019, \u2018&\u2019 \n \n12. Recib e una cadena y la entrega sustituyendo cada vocal por la siguiente vocal, rotando  \nal final. Ejm \u2018prueba\u2019 \u2192   \u2018praibe\u2019  \nPython Programaci\u00f3n", "start_char_idx": 1776, "end_char_idx": 2806, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "423f1477-2d3d-495e-9406-4e2f99d3578b": {"__data__": {"id_": "423f1477-2d3d-495e-9406-4e2f99d3578b", "embedding": null, "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00a5842f-9017-4939-ab74-64008f39499b", "node_type": "4", "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7c9b18bc5a62fcc229d5e5546635733c6a3808161d93b9eb8597fe3df369f022", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e9fafa6-e0e5-4909-9c28-f1b6f7ea8b32", "node_type": "1", "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f813ccb6587ba5d7dcad6b117cf12baf416ade216b379a4e75a366068abb495d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c9162e4-f31f-4ffe-975f-7ac2742fd106", "node_type": "1", "metadata": {}, "hash": "9fe2993fd3c1963f50edf6c3070ee779138fd5fc5c71007c21818123ce74fbfc", "class_name": "RelatedNodeInfo"}}, "hash": "442fba64b99fcbee9f6ad423efde9b542ccc9830636b0abf3dc7b6338b6cecdf", "text": "323 \n \n13. Recibe una caden a y la entrega intercambiando parejas de caracteres consecutivos.  \nEj. \u2018programa\u2019 \u2192   \u2018rpgoaram\u2019  \n \n14. Recibe una cadena de caracteres conteniendo una frase. Entrega una tupla con dos \nconjuntos. Conjunto de las vocales y conjunto de caracteres que no son voc ales \n \n15. Recibe un diccionario en el cual la clave es un entero y el valor asociado es un \nconjunto de enteros. Entrega una lista de tuplas, En cada tupla el primer componente es el valor de la clave y el segundo componente es la cantidad de elementos del conjunto \nasociado.  \n \n16. Recibe un diccionario en el cual la clave es un entero y el valor asociado es un \nconjunto de enteros. Entrega una lista de tuplas . En cada tupla el primer componente es la  \nclave y el segundo componente es cada valor del conjunto. Por lo tanto, cada dato en el \ndiccionario puede generar varias tuplas.  \n 17. Recibe dos listas  de nombres de personas . Ambas listas  tienen la misma cantidad de \ncomponentes. Entrega un diccionario para asociar, sin repeticiones  y en forma aleatoria, \ncada nombr e de la primera lista con alg\u00fan nombre de la segunda lista. Suponer que dentro \nde cada lista los nombres no est\u00e1n repetidos.  \n \n18. Recibe una lista de nombres y entrega una lista de tuplas. El primer componente de \ncada tupla es un nombre, y el segundo componente es un entero aleatorio entero entre 1 y \nn, siendo n la cantidad de nombres. Pero no deben haber tuplas con n\u00fameros repetidos.  \n \n19. Recibe una lista de tuplas en las que el primer componente es el nombre de una \npersona, y el segundo componente es su g \u00e9nero: \u2018M\u2019 o \u2018F\u2019. Entrega un diccionario cuya \nclave es el g\u00e9nero, y el valor asociado es un conjunto con los nombres de las personas con ese g\u00e9nero.  \n 20.", "start_char_idx": 0, "end_char_idx": 1759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c9162e4-f31f-4ffe-975f-7ac2742fd106": {"__data__": {"id_": "6c9162e4-f31f-4ffe-975f-7ac2742fd106", "embedding": null, "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00a5842f-9017-4939-ab74-64008f39499b", "node_type": "4", "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7c9b18bc5a62fcc229d5e5546635733c6a3808161d93b9eb8597fe3df369f022", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "423f1477-2d3d-495e-9406-4e2f99d3578b", "node_type": "1", "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "442fba64b99fcbee9f6ad423efde9b542ccc9830636b0abf3dc7b6338b6cecdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44591e19-065f-48be-8c1c-7fb082f611c9", "node_type": "1", "metadata": {}, "hash": "971d9f87caf505ea16cbb4ab5ffb935dee4e91a11b485b5ca09b1331dd1c11b7", "class_name": "RelatedNodeInfo"}}, "hash": "9fe2993fd3c1963f50edf6c3070ee779138fd5fc5c71007c21818123ce74fbfc", "text": "20. Recibe una cadena de caracteres conteniendo una frase. Entrega un diccionario en el \ncual la clave es cada palabra diferente y el valor asociado es un entero que representa la \ncantidad de veces que la palabra aparece en le frase.  \n \n21. Recibe una cadena de caracteres conteniendo una frase. Entrega una tupla en la cual \nel primer componente es cada vocal, y el segundo componente es la palabra m\u00e1s larga de \nla frase que contiene esa vocal.  \n \n22. Recibe una lista de n\u00fameros: 1 , 2, o 3. Cada uno representa el voto por uno de los tres \ncandidatos en una elecci\u00f3n. Entrega un diccionario en el cual la clave es el n\u00famer o del \ncandidato, y el valor, la cantidad de votos que obtuvo.  \n \n23. Recibe dos conjuntos y entrega una tupla conteniendo tres componentes de tipo \nconjunto: la uni\u00f3n, intersecci\u00f3n y diferencia sim\u00e9trica de los dos conjuntos dados.  \n \n24. Recibe tres conjuntos y entrega una tupla conteniendo dos componentes de tipo \ncomjunto: la uni\u00f3n y la intersecci\u00f3n de los tres conjuntos dados.  \n \n25. Recibe un diccionario en el que la clave es el c\u00f3digo de un estudiante, y el valor \nasociado es un conjunto de los nombres de las materias que toma. El resultado es el \nconjunto de todas las materias que aparecen en el diccionario.  \nPython Programaci\u00f3n", "start_char_idx": 1756, "end_char_idx": 3034, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44591e19-065f-48be-8c1c-7fb082f611c9": {"__data__": {"id_": "44591e19-065f-48be-8c1c-7fb082f611c9", "embedding": null, "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8579799b-e319-4661-912f-355d7b3fb9bc", "node_type": "4", "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a67e3d915eebd596aae1eeb4c570763fc396e8e586c38dc98018ceca63ec56d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c9162e4-f31f-4ffe-975f-7ac2742fd106", "node_type": "1", "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9fe2993fd3c1963f50edf6c3070ee779138fd5fc5c71007c21818123ce74fbfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a71d2cfb-6cbb-4fec-8787-603df817e6af", "node_type": "1", "metadata": {}, "hash": "575a5b4c96f64f5561ad67aee8e3b5c7d709668cb806024750f61c15af5ea391", "class_name": "RelatedNodeInfo"}}, "hash": "971d9f87caf505ea16cbb4ab5ffb935dee4e91a11b485b5ca09b1331dd1c11b7", "text": "324 \n \n8 Registros y archivos \n \nDefinici\u00f3n de r egistro  \n \nUn registro es un dispositivo para contener datos que p ueden tener  diferente tipo . Los \nregistros normalmen te est\u00e1n asociados a dispositivos externos de almacenamiento como \ndiscos . Algunos lenguajes de programaci\u00f3n tienen un tipo especial de datos para \nrepresentar registros.  \n \nPython no dispone en su librer\u00eda est\u00e1ndar este tipo de datos, sin embargo, se puede us ar \nuna variable de tipo diccionario  o de tipo lista como contenedor es natural es para \nalmacenar registro s puesto que estas estructuras de datos  pueden contener componentes \nde diferente tipo y adem\u00e1s pueden modificarse.  \n Los diccionarios o listas pueden con tener los registros  para facilitar su manejo en memoria.  \nEn el caso del diccionario, el acceso a los registros se realiza mediante una clave. Para las listas, se requiere usar \u00edndices . \n \nUso de nombres como \u00edndices para identificar  los componentes de  registros  \n \nUsar nombres para los \u00edndices  en lugar del n\u00famero de celda para referirse a los \ncomponentes de una lista (registro con datos) facilita la revisi\u00f3n y aporta claridad a la \nprogramaci\u00f3n en e l uso del contenido de l os componentes de l a lista.  \n Ejemplo.  Suponer un a lista  conteniendo algunos registros con datos de art \u00edculos  (c\u00f3digo, \ncantidad, precio y nombre). Listar el nombre y la cantidad de cada art\u00edculo.  \n \nEl nombre y la cantidad corresponden a las celda 3 y a la celda 0, respectivamente,  de la \nlista qu e contiene la informaci\u00f3n de cada art\u00edculo.", "start_char_idx": 0, "end_char_idx": 1541, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a71d2cfb-6cbb-4fec-8787-603df817e6af": {"__data__": {"id_": "a71d2cfb-6cbb-4fec-8787-603df817e6af", "embedding": null, "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8579799b-e319-4661-912f-355d7b3fb9bc", "node_type": "4", "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a67e3d915eebd596aae1eeb4c570763fc396e8e586c38dc98018ceca63ec56d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44591e19-065f-48be-8c1c-7fb082f611c9", "node_type": "1", "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "971d9f87caf505ea16cbb4ab5ffb935dee4e91a11b485b5ca09b1331dd1c11b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb460d2a-c4a3-4ede-b4ec-c0d65eadaa7a", "node_type": "1", "metadata": {}, "hash": "155bbb505609ebfd84906b838dae99a9d5983c1157c6d7c210ebfb86f0d51317", "class_name": "RelatedNodeInfo"}}, "hash": "575a5b4c96f64f5561ad67aee8e3b5c7d709668cb806024750f61c15af5ea391", "text": "Se puden usar estos n\u00fameros de celda:  \n \n>>> \nlista=[[123,20,5.2,'libro'],[234,40,2.1,'cuaderno'],[241,25,0.5,'regla']]  \n>>> for art in lista: \n print(art[3],art[0])  \n  \nlibro 123  \ncuaderno 234  \nregla 241  \n \nUna forma m\u00e1s c omprensible de referirse a los componentes de los registros de la  lista es \nasigna r nombres a los \u00edndices de las celdas:  \n \n>>> lista=[[123,20,5.2,'libro'],[234,40,2.1,'cuaderno'],[241,25,0.5,'regla']]  \n>>> ind_cod=0  \n>>> ind_cant=1  \n>>> ind_pre=2  \n>>> ind_nom=3  \n>>> for art in lista: \n print(art[ind_nom],art[ind_cant])  \n \nlibro 20  \ncuaderno 40  \nregla 25  \nPython Programaci\u00f3n", "start_char_idx": 1542, "end_char_idx": 2161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb460d2a-c4a3-4ede-b4ec-c0d65eadaa7a": {"__data__": {"id_": "bb460d2a-c4a3-4ede-b4ec-c0d65eadaa7a", "embedding": null, "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e31394f-39cc-4c43-b8be-587232773edb", "node_type": "4", "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "edeb66f2bcdf10cc64e119a446802624b82ef6bd32e18cb46588d027ae356a81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a71d2cfb-6cbb-4fec-8787-603df817e6af", "node_type": "1", "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "575a5b4c96f64f5561ad67aee8e3b5c7d709668cb806024750f61c15af5ea391", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "179ab2af-e03a-4437-9221-f39adb475d8d", "node_type": "1", "metadata": {}, "hash": "e4cd8a7c0bf078ce310cb41b59d920543d80fbce95d87d8309cbb9ff2abb9f95", "class_name": "RelatedNodeInfo"}}, "hash": "155bbb505609ebfd84906b838dae99a9d5983c1157c6d7c210ebfb86f0d51317", "text": "325 \n \n8.1 Desarrollo de aplicaciones con  registros en memoria  \n \nEn esta secci\u00f3n se desarrolla una aplicaci\u00f3n b\u00e1sica usando un diccionario  y \nposteriormente una lista . El diccio nario es una manera directa  y simple para estas \naplicaciones, sin embargo, para el almacenamiento de datos en el disco, el uso de una \nlista resulta m \u00e1s conveniente como se ver\u00e1 posteriormente.  \n  Ejemplo.  Desarrolle una aplicaci\u00f3n usando un diccionario  para manejo de los registros \nque contienen la descripci\u00f3n de los art\u00edculos de una empresa.  El programa debe ofrecer \nlas siguientes opciones:  \n1) Ingresar:  Ingreso de un nuevo art\u00edculo: c\u00f3digo, cantidad, precio y nombre \n2) Consultar:  Conocer l os datos  de un art\u00ed culo dado su c\u00f3digo \n3) Comprar : Agregar cantidad a un art\u00edculo existente  \n4) Vender:  Vender una cantidad de un art\u00edculo existente \n5) Eliminar:  Eliminar o dar de baja un art\u00edculo  \n6) Salir  \n Datos de cada art\u00edculo:  \nC\u00f2digo de identificaci\u00f3n  del art\u00edculo  \nCantid ad actual  \nPrecio  \nNombre  \nVariables:  \ndic: Es el diccionario que contendr\u00e0 los registros de los datos de los \nart\u00edculos. Esta estructura  estar\u00e1 disponible \u00fanicamente en la \nmemoria.", "start_char_idx": 0, "end_char_idx": 1173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "179ab2af-e03a-4437-9221-f39adb475d8d": {"__data__": {"id_": "179ab2af-e03a-4437-9221-f39adb475d8d", "embedding": null, "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e31394f-39cc-4c43-b8be-587232773edb", "node_type": "4", "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "edeb66f2bcdf10cc64e119a446802624b82ef6bd32e18cb46588d027ae356a81", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb460d2a-c4a3-4ede-b4ec-c0d65eadaa7a", "node_type": "1", "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "155bbb505609ebfd84906b838dae99a9d5983c1157c6d7c210ebfb86f0d51317", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88060d9e-36fb-435b-bb33-2733ff137f4b", "node_type": "1", "metadata": {}, "hash": "321f7b414f3dfb6184c181776d53a92fac4daa88ca66edc5b077752bec6069cb", "class_name": "RelatedNodeInfo"}}, "hash": "e4cd8a7c0bf078ce310cb41b59d920543d80fbce95d87d8309cbb9ff2abb9f95", "text": "Esta estructura  estar\u00e1 disponible \u00fanicamente en la \nmemoria.  \nNombres de los c omponentes del registro \ncla:  clave ( c\u00f3digo de identificaci\u00f3n  del art\u00ecculo ) \ncant:   cantidad actual de art\u00edculos disponibles  \npre:  precio del art\u00edculo  \nnom:   nombre del art\u00edculo  \n Por claridad, se usan nombres para los \u00edndices en lugar de n\u00fameros \n \n \n#Uso de un diccionario para manejo de registros en memoria  \ndic={}    #Iniciar diccionario vac\u00edo  \nind_cant=0     #\u00cdndice para la cantidad  \nind_pre=1     #\u00cdndice para el precio  \nind_nom=2     #\u00cdndice para el nombre  \nwhile True:  \n    print(' \\n1) Ingresar art\u00edculo')  \n    print('2) Consultar art\u00edculo')  \n    print('3) Comprar')  \n    print('4) Vender')  \n    print('5) Eliminar art\u00edculo')  \n    print('6) Salir')  \n    opc=input('\\ nElija una opci\u00f3n: ') \n \nPython Programaci\u00f3n", "start_char_idx": 1112, "end_char_idx": 1937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88060d9e-36fb-435b-bb33-2733ff137f4b": {"__data__": {"id_": "88060d9e-36fb-435b-bb33-2733ff137f4b", "embedding": null, "metadata": {"page_label": "326", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65ef89c6-165b-4857-b1fd-c5cc5b7d38ae", "node_type": "4", "metadata": {"page_label": "326", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1e87ed64e83687e2f0da23ec00597c3cbec561a24618f581f508efc32c6a3b4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "179ab2af-e03a-4437-9221-f39adb475d8d", "node_type": "1", "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4cd8a7c0bf078ce310cb41b59d920543d80fbce95d87d8309cbb9ff2abb9f95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42ad2b31-fde7-4eee-8329-ce32b0a31111", "node_type": "1", "metadata": {}, "hash": "bece8cdf609ddb9ccf5bc4b1864374dc0bcbe5a19bd4cfb79221aa204126ec77", "class_name": "RelatedNodeInfo"}}, "hash": "321f7b414f3dfb6184c181776d53a92fac4daa88ca66edc5b077752bec6069cb", "text": "326 \n \n    if opc=='1':  \n        cla=int( input('Clave: '))  \n        cant=int( input('Ingrese cantidad: '))  \n        pre=float( input('Ingrese precio: '))  \n        nom= input('Ingrese nombre: ') \n        dic[cla]=[cant,pre,nom]    #Agregar registro al dicc.  \n \n    elif opc=='2':  \n        cla=int( input('Ingrese clave: '))  \n        if cla in dic: \n            print('Cantidad: ',dic[cla][ind_cant])  \n            print('Precio: ',dic[cla][ind_pre])  \n            print('Nombre: ',dic[cla][ind_nom])  \n        else: \n            print('No existe')  \n \n    elif opc=='3':  \n        cla=int( input('Ingrese clave: '))  \n        if cla in dic: \n            c=int( input('Ingrese cantidad: '))  \n            dic[cla][ind_cant]=dic[cla][ind_cant]+c  \n        else:  \n            print('No existe')  \n \n    elif opc=='4':  \n        cla=int( input('Ingrese clave: '))  \n        if cla in dic: \n            c=int( input('Ingrese cantidad: '))  \n            dic[cla][ind_cant]=dic[cla][ind_cant]- c \n        else:  \n            print('No existe')  \n    elif opc=='5':  \n        cla=int( input('Ingrese clave: '))  \n        if cla in dic: \n            del dic[cla]  \n        else:  \n            print('No existe')  \n    elif opc=='6':  \n        break  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1271, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42ad2b31-fde7-4eee-8329-ce32b0a31111": {"__data__": {"id_": "42ad2b31-fde7-4eee-8329-ce32b0a31111", "embedding": null, "metadata": {"page_label": "327", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b629de8-3a47-4a3d-a3ac-248a560fc3c7", "node_type": "4", "metadata": {"page_label": "327", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d8f4f84fe732275de038e5e4d2893bbcf8951144b80e77c148dfde8be8f4b907", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88060d9e-36fb-435b-bb33-2733ff137f4b", "node_type": "1", "metadata": {"page_label": "326", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "321f7b414f3dfb6184c181776d53a92fac4daa88ca66edc5b077752bec6069cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e10e8eef-5d5d-44bf-921a-a6fb663c549c", "node_type": "1", "metadata": {}, "hash": "0757f494ef0f7a7eaef8dbdb61fa04035391fddc93dadab4fb2a00b2faf94e5f", "class_name": "RelatedNodeInfo"}}, "hash": "bece8cdf609ddb9ccf5bc4b1864374dc0bcbe5a19bd4cfb79221aa204126ec77", "text": "327 \n \nPrueba del programa  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n \nElija una opci\u00f3n: 1 \nClave: 123 \nIngrese cantidad: 20 \nIngrese precio: 5.2  \nIngrese nombre: libro  \n 1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender \n5) Eliminar art\u00edculo  \n6) Salir  \n \nElija una opci\u00f3n: 1 \nClave: 234 \nIngrese cantidad: 40 \nIngrese precio: 1.2  \nIngrese nombre: cuaderno  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n \nElija una opci\u00f3n: 2 \nIngrese clave: 234  \nCantidad:  40  \nPrecio:  1.2  \nNombre:  cuaderno  \n 1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n Elija una opci\u00f3n: 6 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 803, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e10e8eef-5d5d-44bf-921a-a6fb663c549c": {"__data__": {"id_": "e10e8eef-5d5d-44bf-921a-a6fb663c549c", "embedding": null, "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28f1f524-87f1-47da-b400-a532030980c1", "node_type": "4", "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff5d002623716c63af22098985637f48ccefa553315a333d2b9c0ddb13c362b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42ad2b31-fde7-4eee-8329-ce32b0a31111", "node_type": "1", "metadata": {"page_label": "327", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bece8cdf609ddb9ccf5bc4b1864374dc0bcbe5a19bd4cfb79221aa204126ec77", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1e86450-cc22-4a78-a1e8-095a1c8647df", "node_type": "1", "metadata": {}, "hash": "792aa4fb2daf0539eba25fcaabdafccbd1e363d8b939d48e3e2dfcd573a56a1b", "class_name": "RelatedNodeInfo"}}, "hash": "0757f494ef0f7a7eaef8dbdb61fa04035391fddc93dadab4fb2a00b2faf94e5f", "text": "328 \n \nEn esta secci\u00f3n se desarrolla otra versi\u00f3n de la aplicaci\u00f3n anterior de manejo de registros \nen memoria , usando listas y  el uso de funciones para describir las acciones. Esta \nmetodol og\u00eda se denomina Programaci\u00f3n Modular . \n \nEjemplo.  Crear una aplicaci\u00f3n para manejar los datos de los art\u00edculos de una empresa con \nlas siguientes opciones:.  \n \n1) Ingresar:  Ingreso de un nuevo art\u00edculo: c\u00f3digo, cantidad, precio y nombre \n2) Consultar:  Conocer l os datos  de un art\u00edculo  dado su c\u00f3digo \n3) Comprar : Agregar cantidad a un art\u00edculo existente  \n4) Vender:  Vender una cantidad de un art\u00edculo existente \n5) Eli minar:  Eliminar o dar de baja un art\u00edculo  \n6) Salir  \n \nDatos de cada art\u00edculo:  \nC\u00f3digo de identificaci\u00f3n  \nCantidad actual  \nPrecio  \nNombre  \n \nVariables:  \nregistro s: Es una lista cuyos componentes son listas que las contendr\u00e1n los \nregistros para almacenar los datos de los art\u00edculos. Esta lista ser\u00e1  \n creada y estar\u00e1 disponible \u00fanicamente en la memoria.  \nreg: Estructura tipo lista que contendr\u00e1 la descripci\u00f3n de cada registro.  \n  \nNombres de los c omponentes del registro \ncod:   c\u00f3digo del art\u00edculo  \ncant:   cantidad actual de art\u00edculos disponibles  \npre:  precio del art\u00edculo  \nnom:   nombre del art\u00edculo  \n  \nM\u00f3dulos  \ningres o \nconsulta  \n  compra  \n  venta \n  elimina r \n \nCada m\u00f3dulo c ontiene las instrucciones  necesarias para realizar cada opci\u00f3n del men\u00fa.  \nLos m\u00f3dulos o funciones pueden escribi rse juntos en el mismo m\u00f3dulo que contiene al \nprograma principal o pueden escribirse separadamente y almacenarse en una librer\u00eda, la \ncual debe ser importada al programa para tener acceso a los m\u00f3dulos. En este ejemplo, \nlos m\u00f3dulos se escriben antes del programa en el mismo documento.  \n El programa resultante contiene las instrucciones de llamada a las funciones dentro de las \ncuales se realizan las acciones correspondientes.", "start_char_idx": 0, "end_char_idx": 1879, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1e86450-cc22-4a78-a1e8-095a1c8647df": {"__data__": {"id_": "b1e86450-cc22-4a78-a1e8-095a1c8647df", "embedding": null, "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "28f1f524-87f1-47da-b400-a532030980c1", "node_type": "4", "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff5d002623716c63af22098985637f48ccefa553315a333d2b9c0ddb13c362b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e10e8eef-5d5d-44bf-921a-a6fb663c549c", "node_type": "1", "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0757f494ef0f7a7eaef8dbdb61fa04035391fddc93dadab4fb2a00b2faf94e5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72c31dbd-debc-4e2b-850b-c549d3574b62", "node_type": "1", "metadata": {}, "hash": "bceaf059365bc112385c7950f6472fa951a330ed708547509e83b633ede60e38", "class_name": "RelatedNodeInfo"}}, "hash": "792aa4fb2daf0539eba25fcaabdafccbd1e363d8b939d48e3e2dfcd573a56a1b", "text": "Se usar\u00e1n nombres para los \u00edndices en lugar de n\u00fameros, pero para no escribirlos den tro \nde cada funci\u00f3n, se los colocar\u00e1 en una \u00e1rea com\u00fan con la declaraci\u00f3 n  global  \nPython Programaci\u00f3n", "start_char_idx": 1884, "end_char_idx": 2074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72c31dbd-debc-4e2b-850b-c549d3574b62": {"__data__": {"id_": "72c31dbd-debc-4e2b-850b-c549d3574b62", "embedding": null, "metadata": {"page_label": "329", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8028d069-bfd1-4d8e-aa39-50b2fdc8f9d9", "node_type": "4", "metadata": {"page_label": "329", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13b2e90e230cfc1e0eb0027a0ceaa732b07b8ce6b4f2ba68da435c13a74b713c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1e86450-cc22-4a78-a1e8-095a1c8647df", "node_type": "1", "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "792aa4fb2daf0539eba25fcaabdafccbd1e363d8b939d48e3e2dfcd573a56a1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71b52179-8e64-45d9-9aaa-fd8bd0cadd02", "node_type": "1", "metadata": {}, "hash": "87d8ac87bc0e054f86a610efe6b4bdaabc2489df378521042113c045e6ea1897", "class_name": "RelatedNodeInfo"}}, "hash": "bceaf059365bc112385c7950f6472fa951a330ed708547509e83b633ede60e38", "text": "329 \n \n  #Manejo de registros en memoria. Desarrollo modular \n     \nglobal ind_cod,ind_cant,ind_pre,ind_nom  \nind_cod=0  \nind_cant=1  \nind_pre=2  \nind_nom=3  \n \ndef ingreso(registros):  \n    cod=int(input('Ingrese c\u00f3digo: ')) \n    cant=int(input('Ingrese cantidad: '))  \n    pre=float(input('Ingrese precio: '))  \n    nom=input('Ingrese nombre: ')  \n    reg=[cod,cant,pre,nom]  \n    registros=registros+[reg]  \n    return registros  \n \ndef consulta(registros):  \n    c=int(input('Ingrese c\u00f3digo: ')) \n    exito=False  \n    for reg in registros:  \n        if c==reg[ind_cod]:  \n            print('Cantidad: ',reg[ind_cant])  \n            print('Precio: ',reg[ind_pre])  \n            print('Nombre: ',reg[ind_nom])  \n            exito= True \n            break  \n    if not exito: \n            print('Art\u00edculo no existe')  \n             \ndef compra(registros):  \n    c=int(input('Ingrese c\u00f3digo: '))     exito=False  \n    for reg in registros:  \n        if c==reg[ind_cod]:  \n            k=int(input('Ingrese la  cantidad comprada: '))  \n            reg[ind_cant]=reg[ind_cant]+k  \n            exito= True \n            break  \n    if not exito: \n        print('Art\u00edculo no existe')  \n    return registros  \n \ndef venta(registros):  \n    c=int(input('Ingrese c\u00f3digo: ')) \n    exito=False  \n    for reg in registros:  \n        if c==reg[ind_cod]:  \n            k=int(input('Ingrese la cantidad vendida: '))  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71b52179-8e64-45d9-9aaa-fd8bd0cadd02": {"__data__": {"id_": "71b52179-8e64-45d9-9aaa-fd8bd0cadd02", "embedding": null, "metadata": {"page_label": "330", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "164b06cb-7e1d-4aab-988b-58f5520fccef", "node_type": "4", "metadata": {"page_label": "330", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "82c3856707660262c2fe3ed2bf2a15eb85ae7859781e9bc336d9c567036d780f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72c31dbd-debc-4e2b-850b-c549d3574b62", "node_type": "1", "metadata": {"page_label": "329", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bceaf059365bc112385c7950f6472fa951a330ed708547509e83b633ede60e38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a088c3cd-fa44-4627-a5d7-fb8db1533b73", "node_type": "1", "metadata": {}, "hash": "f50b4b640df3b6a4d338cde88dcfaa79d84dccca04632a751c22ead614fcfabe", "class_name": "RelatedNodeInfo"}}, "hash": "87d8ac87bc0e054f86a610efe6b4bdaabc2489df378521042113c045e6ea1897", "text": "330 \n \n            reg[ind_cant]=reg[ind_cant]- k \n            exito= True \n            break  \n    if not exito: \n        print('Art\u00edculo no existe')  \n    return registros  \n \ndef eliminar(registros):  \n    c=int(input('Ingrese c\u00f3digo: ')) \n    exito=False  \n    for reg in registros:  \n        if c==reg[ind_cod]:  \n            ind_reg=registros.index(reg)  \n            del registros[ind_reg]  \n            exito= True \n            break  \n    if not exito: \n        print('Art\u00edculo no existe')  \n    return registros  \n \n#Programa  \nregistros=[]  \nwhile True:  \n    print(' \\n1) Ingresar art\u00edculo')  \n    print('2) Consultar art\u00edculo')  \n    print('3) Comprar')  \n    print('4) Vender')  \n    print('5) Eliminar art\u00edculo')  \n    print('6) Salir')  \n    opc=input('\\ nElija una opci\u00f3n: ') \n    if opc=='1':  \n        registros=ingreso(registros) \n         \n    elif opc=='2':  \n        consulta(registros)  \n         \n    elif opc=='3':  \n        registros=compra(registros)  \n         \n    elif opc=='4':  \n        registros=venta(registros)  \n             \n    elif opc=='5':  \n        registros=eliminar(registros)              \n    elif opc=='6':  \n        break  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1196, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a088c3cd-fa44-4627-a5d7-fb8db1533b73": {"__data__": {"id_": "a088c3cd-fa44-4627-a5d7-fb8db1533b73", "embedding": null, "metadata": {"page_label": "331", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16960f53-567e-4a21-ad3a-23d15b0d03ee", "node_type": "4", "metadata": {"page_label": "331", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8deda2e931126637169934e07b8da463a45960b4f81517e806419d2463d66c5f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71b52179-8e64-45d9-9aaa-fd8bd0cadd02", "node_type": "1", "metadata": {"page_label": "330", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "87d8ac87bc0e054f86a610efe6b4bdaabc2489df378521042113c045e6ea1897", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d50ac7a-bca4-4958-a399-8654b930326e", "node_type": "1", "metadata": {}, "hash": "d0967f06c6e08a89b71c9aa9fea59fec10b1b83dda507bc3471b4b161442edd9", "class_name": "RelatedNodeInfo"}}, "hash": "f50b4b640df3b6a4d338cde88dcfaa79d84dccca04632a751c22ead614fcfabe", "text": "331 \n \nPrueba del programa  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n Elija una opci\u00f3n: 1 \nIngrese c\u00f3digo: 123  \nIngrese cantidad: 20 \nIngrese precio: 5.2  \nIngrese nombre: libro  \n 1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n \nElija una opci\u00f3n: 1 \nIngrese c\u00f3digo: 234  \nIngrese cantidad: 40 \nIngrese precio: 1.2  \nIngrese nombre: cuaderno  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n \nElija una opci\u00f3n: 2 \nIngrese c\u00f3digo: 234  \nCantidad:  40  \nPrecio:  1.2  \nNombre:  cuaderno  \n 1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar art\u00edculo  \n6) Salir  \n Elija una opci\u00f3n: 6 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d50ac7a-bca4-4958-a399-8654b930326e": {"__data__": {"id_": "2d50ac7a-bca4-4958-a399-8654b930326e", "embedding": null, "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30ee295d-daad-4fd8-b07d-05faeaf21546", "node_type": "4", "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f8eee20e3f4c07350ea819db263340b4ff279d88b52bed55c01e163fd7aae9fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a088c3cd-fa44-4627-a5d7-fb8db1533b73", "node_type": "1", "metadata": {"page_label": "331", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f50b4b640df3b6a4d338cde88dcfaa79d84dccca04632a751c22ead614fcfabe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ae95ff0-49a0-4a57-a591-78a57df05494", "node_type": "1", "metadata": {}, "hash": "5d33bcd4ffb2a3796fd8974d999683a9e86c7f8215ef97e4074e883239f4c640", "class_name": "RelatedNodeInfo"}}, "hash": "d0967f06c6e08a89b71c9aa9fea59fec10b1b83dda507bc3471b4b161442edd9", "text": "332 \n \n8.2 Funciones para manejo de archivos secuenciales de tipo texto en el disco  \n \nEl lenguaje Python provee las instrucciones para manejo de archivos de tipo texto en el \ndisco.  Estas instrucciones permiten almacenar los datos en el disco, de tal manera que se \npuedan conservar y usar posteriormente.  La informaci\u00f3n que se almacena son cadenas de texto.  \n \nEn las siguientes instrucciones se  usar\u00e1 la notaci\u00f3n : \n f:  Es el  nombre de una variable del objeto creado de tipo archivo  \n n: Es una cadena con el nombre del archivo en el disco.  \nEs adecuado agrega r la extensi\u00f3n .txt  para identificar  con formato de \narchivo de tipo texto.  \n \nApertura de un archivo  \n La siguiente  funci\u00f3n se necesita para crear  o abr ir el archivo para su uso \n f=open(n,t)  \n t: es el tipo de operaci\u00f3n que se realizar\u00e1 con el archivo \n \nTipos de operaci\u00f3n  \n 'w' Crear el archivo y agregar datos. Si el archivo existe, lo borra y lo crea.  \n 'a' Agregar datos al archivo. Si el archivo no existe lo crea y luego agrega.  \n 'r' Leer datos del archi vo \n 'r+' Leer y escribir en el archivo  \n Escritura de texto en el archivo  \nf.write(s)  \nEscribe en el archivo una l\u00ednea de texto, normalmente finalizada c on el car\u00e1cter de \nfin de l\u00ednea '\\n' \n \ns  es alguna variable que contiene la l\u00ednea de texto.  \n \nLectura del contenido de un archivo tipo texto  \n v=f.readline()  \n Lee una linea  de texto del archivo hasta encontrar el car\u00e1cter de f\u00edn de linea:  '\\n' \n Si no quedan l \u00edneas, retorna una l\u00ednea vac\u00eda.", "start_char_idx": 0, "end_char_idx": 1508, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ae95ff0-49a0-4a57-a591-78a57df05494": {"__data__": {"id_": "3ae95ff0-49a0-4a57-a591-78a57df05494", "embedding": null, "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30ee295d-daad-4fd8-b07d-05faeaf21546", "node_type": "4", "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f8eee20e3f4c07350ea819db263340b4ff279d88b52bed55c01e163fd7aae9fe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d50ac7a-bca4-4958-a399-8654b930326e", "node_type": "1", "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d0967f06c6e08a89b71c9aa9fea59fec10b1b83dda507bc3471b4b161442edd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f81a0d7d-0a16-4808-9bcd-c01e2674a8c5", "node_type": "1", "metadata": {}, "hash": "705834b4d6ae932dce80f17940a9a075becb8c6320d2330518f18c37fd775788", "class_name": "RelatedNodeInfo"}}, "hash": "5d33bcd4ffb2a3796fd8974d999683a9e86c7f8215ef97e4074e883239f4c640", "text": "v  es alguna variable que recibe la linea de texto \n \n v=f.readline s() \n Transfiere a una lista todas las lineas de texto almacenadas en el archivo \n \nv  es alguna variable que recibe como una lista todas las lineas de texto \n \nCierre de un archivo  \n f.close()  \nAl finalizar la operaci\u00f3n con un archivo, debe cerrarse. En el ingreso de datos, esta \noperaci\u00f3n se necesita para completar el ingreso de los datos al archivo en el disco.  \n \nDetectar la posici\u00f3n actual del dispositivo de lectur a del archivo  \n p=f.tell() \n p  contendr\u00e1 un entero con la posici\u00f3n actual . La posici\u00f3n inicial en el archivo es  0  \nPython Programaci\u00f3n", "start_char_idx": 1514, "end_char_idx": 2148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f81a0d7d-0a16-4808-9bcd-c01e2674a8c5": {"__data__": {"id_": "f81a0d7d-0a16-4808-9bcd-c01e2674a8c5", "embedding": null, "metadata": {"page_label": "333", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02699bbc-a1df-4415-84f7-5ccf7320a3cf", "node_type": "4", "metadata": {"page_label": "333", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e88cf71ee580aba7190fb155b26994c3994ab1a23663649318be61d61a126a5b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ae95ff0-49a0-4a57-a591-78a57df05494", "node_type": "1", "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5d33bcd4ffb2a3796fd8974d999683a9e86c7f8215ef97e4074e883239f4c640", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33e4cbf4-4744-4b81-b2dc-eee3ddc1764b", "node_type": "1", "metadata": {}, "hash": "a65fbf7dd5dcddaab8b81a08bd485ed5be9a322cc5b89b89795daf4575fcffc7", "class_name": "RelatedNodeInfo"}}, "hash": "705834b4d6ae932dce80f17940a9a075becb8c6320d2330518f18c37fd775788", "text": "333 \n \nUbicar el dispositivo de lectura del archivo en una posici\u00f3n espec\u00edficada  \n f.seek(d) \n d es el desplazamiento contado a partir del inicio que es la  posici\u00f3n  0 \n \n \nEjemplo.  Mediante instrucciones e n la ventana interactiva de Python, crear un archivo  \nidentificado  como  'datos.txt' en el disco . Escribir nombres de materias  y almacena rlas \nen l\u00edneas de texto.   \n \n>>> f=open('datos.txt','w')  \n>>> r='Matem\u00e1ticas \\n' \n>>> f.write (r) \n>>> r='Fi sica\\n' \n>>> f.write (r) \n>>> r='Qu\u00edmica\\ n' \n>>> f.write (r) \n>>> f.close () \n \nAl escribir en el disco cada l\u00ednea de texto  desde la ventana interactiva , aparece en pantalla \nla longitud de la l\u00ednea. Este valor se lo puede asignar  y almacenar en una variable.              \n \nEl car\u00e1cter ' \\n' cuenta com o un car\u00e1cter . Este car\u00e0cter especial act\u00faa como marca de fin \nde l\u00ednea y permite visualizar  los datos en l\u00edneas separadas.  Las l\u00edneas  recibid as del disco \nse pueden editar para eliminar la marca de f\u00edn de l\u00ednea.  \n \nSi no se cierra el archivo con  close()  no se completa el almacenamiento del texto en el \ndisco  \n \nVisualizaci\u00f3n del archivo con el utilitario Bloc de Notas de Windows . La marca '\\n' \nmuestra la informaci\u00f3n en el disco en l\u00edneas separ adas \n \n    \n  \n \nLectura de las l\u00edneas de texto mediante instrucciones en la ventana interactiva  \n \nEl car\u00e1cter '\\n' act\u00faa como salto de l\u00ednea al visualizar los  datos en pantalla con print:  \n \n>>> f=open('datos.txt','r')  \n>>> v=f.readline()  \n>>> v \n'Matem\u00e1ticas\\ n' \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33e4cbf4-4744-4b81-b2dc-eee3ddc1764b": {"__data__": {"id_": "33e4cbf4-4744-4b81-b2dc-eee3ddc1764b", "embedding": null, "metadata": {"page_label": "334", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94660f53-787f-41af-b42f-be0dd3b4dde6", "node_type": "4", "metadata": {"page_label": "334", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f7eb2607d5cc0155054a817448efd695c32c960499826af6f80c42402754354d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f81a0d7d-0a16-4808-9bcd-c01e2674a8c5", "node_type": "1", "metadata": {"page_label": "333", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "705834b4d6ae932dce80f17940a9a075becb8c6320d2330518f18c37fd775788", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d84e26cd-8b73-4276-aa2a-af4fc453ed41", "node_type": "1", "metadata": {}, "hash": "3cecc37f7bfb988636f5547abcd676b3ce70d9699af029be2a3a5a188d3ad7b1", "class_name": "RelatedNodeInfo"}}, "hash": "a65fbf7dd5dcddaab8b81a08bd485ed5be9a322cc5b89b89795daf4575fcffc7", "text": "334 \n \n>>> print(v)     print  utiliza  el salto de l\u00ednea:  ' \\n'   \nMatem\u00e1ticas  \n      L\u00ednea en blanco del salto de l\u00ednea  \n>>> r=f.readline()  \n>>> r \n'Fisica\\n' \n>>> r=f.readline()  \n>>> r \n'Qu\u00edmica\\ n' \n>>> f.close () \n \nPara eliminar los caracteres a la derecha del texto de la l\u00ednea recuperada del disco, \nincluyendo el car\u00e1cter ' \\n' se puede usar la funci\u00f3n rstrip : \n \n>>> f=open('datos.txt','r')  \n>>> linea=f.readline().rstrip()  \n>>> linea  \n'Matem\u00e1ticas'  \n \nTambi\u00e9n se puede usar la notaci\u00f3n de \u00edndices para e xcluir  el \u00faltimo caracter de l a l\u00ednea de \ntexto recuperada del disco:  \n \n>>> f=open('datos.txt','r')  \n>>> linea=f.readline()[:- 1] \n>>> linea  \n'Matem\u00e1ticas'  \n \nEl mismo resultado se obtiene si se reemplaza el car\u00e1cter  '\\n' por un car\u00e1cter nulo  \n \n>>> f=open('datos.txt','r')  \n>>> linea=f.readline().replace('\\ n','') \n>>> linea  \n'matem\u00e1ticas'  \n \nLa lectura de las l\u00edneas de texto desde el archivo almacenado en el disco se puede realizar \nen un ciclo  en el que  se incluye el nombre del archivo abierto para lectura. En el ciclo se \ntrae una por una las l\u00edneas de texto.  No se necesita usar la instrucci\u00f3n  readline().   \n Cada l\u00ednea almacenada en el archivo en el disco debe tener al final el car\u00e1cter ' \\n': \n \n  \nEjemplo.  Leer los nombres de la materias almacenadas en el archivo 'datos.txt'  \n \n>>> f=open('datos.txt','r')  \n>>> for linea in f:    recupera cada l\u00ednea de texto \n print(linea [:-1])    No requiere usar readline()  \n \nMatem\u00e1ticas       [:-1] elimina e l car\u00e1cter final '\\n' \nFisica \nQu\u00edmica \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1571, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d84e26cd-8b73-4276-aa2a-af4fc453ed41": {"__data__": {"id_": "d84e26cd-8b73-4276-aa2a-af4fc453ed41", "embedding": null, "metadata": {"page_label": "335", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d32ffe0-fb10-4f05-9c4f-8b86de29f355", "node_type": "4", "metadata": {"page_label": "335", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c5fed900e4f793986fc0ecf333cd9bbc9c6dd8605746cb56760a6cc1198052d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33e4cbf4-4744-4b81-b2dc-eee3ddc1764b", "node_type": "1", "metadata": {"page_label": "334", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a65fbf7dd5dcddaab8b81a08bd485ed5be9a322cc5b89b89795daf4575fcffc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6cab7ca-fad8-4790-bdce-0e9c15c2afb7", "node_type": "1", "metadata": {}, "hash": "cf516026cf59b8a59e8a632c20fc55e950bbd95e04031da3ffaed96fa04a9cd7", "class_name": "RelatedNodeInfo"}}, "hash": "3cecc37f7bfb988636f5547abcd676b3ce70d9699af029be2a3a5a188d3ad7b1", "text": "335 \n \nSe puede descargar en  una lista todas las l\u00edneas de texto almacenadas en el archiv o: \n \n>>> f=open('datos.txt','r')  \n>>> s=f.readlines()  \n>>> s \n['Matem\u00e1ticas\\ n', 'Fisica \\n', 'Qu\u00edmica\\ n'] \n \n \nEquivalentemente, se pueden descargar en una lista todas las l\u00edneas de texto \nalmacenadas en el archivo con la funci\u00f3n list:  \n \n>>> f=open('datos.txt','r')  \n>>> s=list( f) \n>>> s \n['Matem\u00e1ticas\\ n', 'Fisica \\n', 'Qu\u00edmica\\ n'] \n \n \nEl s\u00edmbolo  '\\n' cuenta como un car\u00e1cter. Si se omite n las marcas  de f\u00edn de l\u00ednea:   '\\n'  \nlas l\u00edneas de texto se almacenan sin separaci\u00f3n y en la lectura se obtendr\u00e1 una sola l\u00ednea \nde texto.  Ejemplo:  \n \n>>> f=open('datos.txt','w')  \n>>> r='Matem\u00e1ticas'  \n>>> f.write (r) \n>>> r='Fisica'  \n>>> f.write (r) \n>>> r='Qu\u00edmica'  \n>>> f.write (r) \n>>> f.close () \n \nVisualizaci\u00f3n del archivo con el utilitario Bloc de Notas:  \n \n \n \nLectura del archivo  \n \n>>> f=open('datos.txt','r')  \n>>> r=f.readline()  \n>>> r \n'Matem\u00e1ticasFisicaQu\u00edmica'  \n \nLos datos est\u00e1n en una sola l\u00ednea sin separaci\u00f3n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1055, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6cab7ca-fad8-4790-bdce-0e9c15c2afb7": {"__data__": {"id_": "e6cab7ca-fad8-4790-bdce-0e9c15c2afb7", "embedding": null, "metadata": {"page_label": "336", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b7e18ef6-5672-44bc-93e4-ac25b624327c", "node_type": "4", "metadata": {"page_label": "336", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9081c7d6b5b50a4fdfe83fcb2f861cb6047f8e30d0ee495226291761f6813890", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d84e26cd-8b73-4276-aa2a-af4fc453ed41", "node_type": "1", "metadata": {"page_label": "335", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3cecc37f7bfb988636f5547abcd676b3ce70d9699af029be2a3a5a188d3ad7b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8f639d3-34b1-490e-a0c5-4c0b9efe3c7a", "node_type": "1", "metadata": {}, "hash": "b6fc216ac03192d909655500ac19bf442c681fc66ea4c31cd76a96e1b19a0d61", "class_name": "RelatedNodeInfo"}}, "hash": "cf516026cf59b8a59e8a632c20fc55e950bbd95e04031da3ffaed96fa04a9cd7", "text": "336 \n \nAcceso directo a los datos al macenados en el archivo  \n \nLa combinaci\u00f3n tell \u2013 seek permite modificar un dato en el disco.  L os datos deben  tener \nigual  longitud para no modificar datos adyacentes en el disco.  \n \nEjemplo. Sustituir 'Fisica'  por 'F\u00edsica' en el archivo almacenado en el disco.  \n \nPara el ejemplo, nuevamente se almacena el archivo inicial  y luego se lo modificar\u00e1:  \n \n>>> f=open('datos.txt','w')  \n>>> f.tell()   \n0            Posici\u00f3n en el inicio del archivo  (inicio de grabaci\u00f3n)  \n>>> r='Matem\u00e1ticas \\n' \n>>> f.write (r) \n12       L a longitud de la l\u00ednea ' \\n'cuenta como un car\u00e1cter  \n>>> f.tell()  \n13       Posici \u00f3n en el disco donde se grabar\u00e1 la siguiente linea  \n>>> r='Fisica\\ n' \n>>> f.write (r) \n7 \n>>> f.tell()  \n21       Posici\u00f3n en el disco donde se grabar\u00e1 la siguiente linea  \n>>> r='Qu\u00edmica\\ n' \n>>> f.write (r) \n8 \n>>> f.close()  \n >>> f=open('datos.txt','r+')                      Abrir archivo para modificar  \n>>> f.seek(13 )         Ubicar la posici\u00f3n en el disco para escribir (cambiar)  \n13    En esta posici\u00f3n se grab\u00f3 la l\u00ednea 'Fisica\\ n' \n>>> r='F\u00edsica\\ n' \n>>> f.write (r)         Grabar la nueva l\u00ednea 'F\u00edsica\\ n' \n7    Elcontenido del archivo ha sido modificado \n>>> f.close () \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f8f639d3-34b1-490e-a0c5-4c0b9efe3c7a": {"__data__": {"id_": "f8f639d3-34b1-490e-a0c5-4c0b9efe3c7a", "embedding": null, "metadata": {"page_label": "337", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4a3c896-fdaa-476a-86f0-34152c768e9e", "node_type": "4", "metadata": {"page_label": "337", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f3513df380d06d3f9881285aad966be0c162abb1c7cd76b51ef44686e677d768", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6cab7ca-fad8-4790-bdce-0e9c15c2afb7", "node_type": "1", "metadata": {"page_label": "336", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cf516026cf59b8a59e8a632c20fc55e950bbd95e04031da3ffaed96fa04a9cd7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cefccc08-7544-4506-8f0c-d4cd71cc8aba", "node_type": "1", "metadata": {}, "hash": "0aea2745ea89488e60897976741316595cc4d0448b3cc545e3fe08c2f57f4646", "class_name": "RelatedNodeInfo"}}, "hash": "b6fc216ac03192d909655500ac19bf442c681fc66ea4c31cd76a96e1b19a0d61", "text": "337 \n \nPrimer ejemplo de uso de instrucciones para almacenar y recuperar  l\u00edneas de texto  \nen un archivo secuencial en disco  \n \n \nEjemplo.  Programa para almacenar en un archivo secuencial en disco  una lista de \nnombres .  \n#Programa para almacenar nombres en un archivo secuencial  \narch=open('nombres.txt','w')  \nn=int(input('Cuantos: '))  \nfor i in range(n):  \n    nom=input('Ingrese nombre: ')  \n    nom=nom+'\\ n'   #Agregar la marca de fin de l\u00ednea  \n    arch.write(nom)  \narch.close()  \n \nPrueba del programa  \n \n>>>  \nCuantos: 4 \nIngrese nombre: Guayas \nIngrese nombre: Manab\u00ed \nIngrese nombre: El Oro \nIngrese nombre: Los R\u00edos  \n \n \nEjemplo.  Programa para leer  de un archivo secuencial en disco una lista de nombres para \nmostrarlos en pantalla.  \n \n#Programa para leer los nombres del archivo secuencial  \narch=open('nombres.txt','r')  \nfor dato in arch: \n    print( dato) \narch.close()  \n Prueba del programa  \n \n>>>  \nGuayas    La marca   '\\n'  act\u00faa como salto de l\u00ednea  \n \nManab\u00ed \n \nEl Oro \n \nLos R\u00edos  \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1043, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cefccc08-7544-4506-8f0c-d4cd71cc8aba": {"__data__": {"id_": "cefccc08-7544-4506-8f0c-d4cd71cc8aba", "embedding": null, "metadata": {"page_label": "338", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f8879d15-9fd1-4b18-8e1f-f3b5e977eec6", "node_type": "4", "metadata": {"page_label": "338", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "50429eb1d5ff8d2e4a1632a6613aebaa6ce2a98ad0c1640eeb23c34bffc55d77", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8f639d3-34b1-490e-a0c5-4c0b9efe3c7a", "node_type": "1", "metadata": {"page_label": "337", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6fc216ac03192d909655500ac19bf442c681fc66ea4c31cd76a96e1b19a0d61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "573ed616-92df-4bae-8df9-b38ed46b0122", "node_type": "1", "metadata": {}, "hash": "294e2bab146be0eb6040b2666d0502b39cf2814b0b0046e51bd719c7ea8ad79b", "class_name": "RelatedNodeInfo"}}, "hash": "0aea2745ea89488e60897976741316595cc4d0448b3cc545e3fe08c2f57f4646", "text": "338 \n \nReinicio  de la lectura de un archivo secuencial  \n \nCada l\u00ednea de texto almacen ada en una rachivo secuencial debe tener la marca '\\n' al \nfinal. La lectura de cada l\u00ednea del archivo secuencial mueve el control a la siguiente linea \nalmacenada, hasta que ya no existan l\u00edneas y retorna una l\u00ednea vac\u00eda.  \n \nSe se desea repetir la lectura del  archivo desde el inicio se lo debe abrir nuevamente con \nla instrucci\u00f3n  f.open, o col ocar la posici\u00f3n  de lectura en el inicio del archivo con la \ninstrucci\u00f3n f.seek(0)  \n  \nProcedimiento para evitar que se interrumpa el programa si se intenta abrir para \nlectur a un archivo que no existe en el disco.  \n \nSi se intenta abrir un archivo que no est\u00e1 en el disco, se producir\u00e1 un error de ejecuci\u00f3n \ndel programa. Para evitar esta interrupci\u00f3n, se puede usar la instrucci\u00f3n  try-except  \npara detectar este error.  Si el arch ivo no existe, se puede  ofrecer  la opci \u00f3n de crearlo o \nsolicita r nuevamente el nombre del archivo.   El siguiente segmento de instrucciones es una \npropuesta para instrumentar esta sugerencia:  \n \n nombre : Nombre del archivo en el disco \n arch:   Objeto tipo arch ivo para uso en la memoria por el programa \n \nwhile True:  \n    nombre= input('Ingrese el nombre del archivo: ')  \n    try:  \n        arch=open(nombre+'.txt','r') \n    except FileNotFoundError:  \n        print('El archivo no existe')         crear= input('Digite  1  si desea crear este archivo: ')  \n        if crear=='1':  \n            arch=open(nombre+'.txt','w')  \n        else: \n            continue    #Regresa al inicio del ciclo  \n    break     #Sale del ciclo    \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "573ed616-92df-4bae-8df9-b38ed46b0122": {"__data__": {"id_": "573ed616-92df-4bae-8df9-b38ed46b0122", "embedding": null, "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "201f557d-5d61-419d-b92f-18941f83cf1e", "node_type": "4", "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "36435ea45a95f82d5880f2663953ae815426ad2870714c58b3a2d83d634f6e5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cefccc08-7544-4506-8f0c-d4cd71cc8aba", "node_type": "1", "metadata": {"page_label": "338", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0aea2745ea89488e60897976741316595cc4d0448b3cc545e3fe08c2f57f4646", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9efe43ca-a254-4dc8-ae0e-f8e417f661af", "node_type": "1", "metadata": {}, "hash": "a5b2b574a98bd03cfa0dc1791fc0acaac91b7b1ecf962f3b3b24a7fecaef4b33", "class_name": "RelatedNodeInfo"}}, "hash": "294e2bab146be0eb6040b2666d0502b39cf2814b0b0046e51bd719c7ea8ad79b", "text": "339 \n \nConversi\u00f3n de listas a l\u00edneas de texto para almacenar en el disco  \n \nPara almacenar el contenido de una lista, tupla o diccionario a l\u00edneas de texto para \nalmacenar en un archivo en disco, cada  dato debe converti rse a texto usando algun \nseparador. Ejemplo,  comas .   A la l\u00ednea de texto r esultante  se debe agregar la marca de fin \nde l\u00ednea '\\n' .  Cada l\u00ednea contiene los datos de un registro y es almacenada en el  archivo  \nsecuencial en disco  .  \n Al traer cada l\u00ednea de texto del disco se la convierte en una lista con la funci\u00f3n split \nusando el mismo separador . Ejemplo,  la coma.  Esta funci\u00f3n reconoce las comas que \nseparan los componentes  en la l\u00ednea de texto.  De esta lista se toman los datos  \nconvirti\u00e9ndolos al tipo original.   En el siguiente ejemplo se usa este procedimiento en la \nventana interac tiva, pero puede desarrollarse en programas y funciones.", "start_char_idx": 0, "end_char_idx": 889, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9efe43ca-a254-4dc8-ae0e-f8e417f661af": {"__data__": {"id_": "9efe43ca-a254-4dc8-ae0e-f8e417f661af", "embedding": null, "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "201f557d-5d61-419d-b92f-18941f83cf1e", "node_type": "4", "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "36435ea45a95f82d5880f2663953ae815426ad2870714c58b3a2d83d634f6e5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "573ed616-92df-4bae-8df9-b38ed46b0122", "node_type": "1", "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "294e2bab146be0eb6040b2666d0502b39cf2814b0b0046e51bd719c7ea8ad79b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04b10f32-13cf-425e-b124-5d789b62304d", "node_type": "1", "metadata": {}, "hash": "1222da75136890e46f29a4d6d02f5458b3c68735ed16915967ba0149a8168b8d", "class_name": "RelatedNodeInfo"}}, "hash": "a5b2b574a98bd03cfa0dc1791fc0acaac91b7b1ecf962f3b3b24a7fecaef4b33", "text": "Armar y a lmacenar un registro en una l\u00ednea de texto en el archivo ' nuevo'  \n \n>>> f=open('nuevo.txt','a')    Abrir archivo para agregar  \n>>> reg=[123,20,12.5,'libro']    Registro que se almacenar\u00e1 en disc o \n>>> cod=reg[0]      Componentes del registro  \n>>> cant=reg[1]  \n>>> pre=reg[2]  \n>>> nom=reg[3]  \n>>> linea=str (cod)+','+str (cant)+','+str(pre)+','+nom+'\\ n'   Armar la linea  \n>>> linea  \n'123,20,12.5,libro \\n' \n>>> f.write(linea)         Escribir la linea en el archi vo \n>>> f.close()          Terminar de grabar y cerrar archivo \n \nLa l\u00ednea de texto para almacenar en el disco, tambi\u00e9n se puede armar con la funci\u00f3n  join: \n \n>>> art=[str (cod),str(cant),str(pre),nom+'\\ n'] \n>>> linea=','.join(art) \n>>> linea  \n'123,20,12.5,libro \\n' \n \n \nLectura de la l\u00ednea de texto del disco y reconstrucci\u00f3n de los datos con el tipo original  \n \n>>> f=open('nuevo.txt','r')            Abrir archivo para lectura  \n>>> linea=f.readline()  \n>>> s=linea.split(',')          Separar componentes en una lista \n>>> s \n['123', '20', '12.5', 'libro\\ n'] \n>>> cod=int (s[0])           Convertir componentes a su tipo original  \n>>> cant=int (s[1]) \n>>> pre=float(s[2])  \n>>> nom=s[3]  \n>>> reg=[cod,cant,pre,nom]           Registro original reconstruido  \n>>> reg \n[123, 20, 12.5, 'libro\\n']  \n>>> f.close()         Cerrar archivo \nPython Programaci\u00f3n", "start_char_idx": 894, "end_char_idx": 2243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04b10f32-13cf-425e-b124-5d789b62304d": {"__data__": {"id_": "04b10f32-13cf-425e-b124-5d789b62304d", "embedding": null, "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e373bc0-ecc6-49c6-aab0-b9228245cf2e", "node_type": "4", "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1569be13d4634a41f49f65e0208056f4692e447156af77a29baa8cc8612521b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9efe43ca-a254-4dc8-ae0e-f8e417f661af", "node_type": "1", "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a5b2b574a98bd03cfa0dc1791fc0acaac91b7b1ecf962f3b3b24a7fecaef4b33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74586c1e-80ca-45dc-b2d9-aa062d1f2731", "node_type": "1", "metadata": {}, "hash": "e14b36dbf3f8ff9e21b04ef217648a464815fbe8f08f9277ec8fba26560de0e2", "class_name": "RelatedNodeInfo"}}, "hash": "1222da75136890e46f29a4d6d02f5458b3c68735ed16915967ba0149a8168b8d", "text": "340 \n \nEl car\u00e1cter  '\\n'   es la marca de fin de linea para la lectura de l\u00edneas de texto d el disco . \nEste s\u00edmbolo permite visualizar el contenido del archivo en el disco en l\u00edneas separadas. \nTambi\u00e9n produce un salto de l\u00ednea al imprimir la l\u00ednea en la pantalla.  Se puede eliminar \nescribiendo:   \n \n >>> nom=s[3][:- 1] \n \nIgualmente, se puede eliminar el car\u00e1cter de fin de l\u00ednea, escribiendo:  \n \n>>> s=linea[:- 1].split(',')  \n Otra forma de suprimir el car\u00e1cter de fin de l\u00ednea, puede ser realizado al traer la l\u00ednea de texto desde el archivo del disco, escribiendo cualquiera de las instrucciones siguientes:  \n >>> linea=f.readline().rstrip()  \n>>> linea=f.readline()[:- 1] \n Conversi\u00f3n a l\u00edneas de texto de componentes  de estructuras de dos niveles  \n Si la lista tuviese registros y cada registro tuviese otra lista, entonces la conversi\u00f3n a l\u00ednea \nde texto de cada registro y la posterior reconstrucci\u00f2n de cada l\u00ednea de texto a registro en \nmemoria necesitar\u00eda dos separadores, como se muestra en el siguiente eje mplo:  \n \nPara separar los componentes  del primer nivel se usar\u00e1 la coma. Para separar los datos \ndel segundo nivel (sublista o lista interna) se usar\u00e1 como separador el punto y coma.", "start_char_idx": 0, "end_char_idx": 1213, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74586c1e-80ca-45dc-b2d9-aa062d1f2731": {"__data__": {"id_": "74586c1e-80ca-45dc-b2d9-aa062d1f2731", "embedding": null, "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e373bc0-ecc6-49c6-aab0-b9228245cf2e", "node_type": "4", "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1569be13d4634a41f49f65e0208056f4692e447156af77a29baa8cc8612521b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04b10f32-13cf-425e-b124-5d789b62304d", "node_type": "1", "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1222da75136890e46f29a4d6d02f5458b3c68735ed16915967ba0149a8168b8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b896d10e-61e0-49b8-92dd-8cc26b882625", "node_type": "1", "metadata": {}, "hash": "059f45a12be9197d45ae941be0261826e8eedeb88e05013b3ec1ca947656bbf8", "class_name": "RelatedNodeInfo"}}, "hash": "e14b36dbf3f8ff9e21b04ef217648a464815fbe8f08f9277ec8fba26560de0e2", "text": "La \nmarca de fin de linea '\\ n' separa las l\u00ednea de texto de las siguientes l\u00ed neas  \n \n>>> cod=123  \n>>> cant=40  \n>>> pr=5.2  \n>>> nom='libro'  \n>>> reg=[cod,[cant,pr,nom]]  \n>>> reg \n[123, [40, 5.2, 'libro']]  \n>>> linea=str(cod)+','+str(cant)+';'+str(pr)+';'+nom+'\\ n' \n>>> linea  \n'123,40;5.2;libro\\ n' \n \nReconstrucci\u00f3n del componente de la  lista orig inal desde la l\u00ednea de texto \n \n>>> s=linea [:-1].split(',')  \n>>> s \n['123', '40;5.2;libro']  \n>>> t=s[1].split(';')  \n>>> t \n['40', '5.2', 'libro']  \n>>> reg=[int(s[0]),[int(t[0]),float(t[1]),t[2]]]  \n>>> reg \n[123, [40, 5.2, 'libro']]  \n Los caracteres usados como separadores son arbitrarios. Pueden usarse otros caracteres . \nPython Programaci\u00f3n", "start_char_idx": 1214, "end_char_idx": 1923, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b896d10e-61e0-49b8-92dd-8cc26b882625": {"__data__": {"id_": "b896d10e-61e0-49b8-92dd-8cc26b882625", "embedding": null, "metadata": {"page_label": "341", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95b8b164-623f-4b24-a30e-7a44bf01844b", "node_type": "4", "metadata": {"page_label": "341", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b260ba27c9196ea8d9262cbcf34722c971c2f50b2f2d52b0dfb2482bc2c4a120", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74586c1e-80ca-45dc-b2d9-aa062d1f2731", "node_type": "1", "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e14b36dbf3f8ff9e21b04ef217648a464815fbe8f08f9277ec8fba26560de0e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82295db2-23f4-4c17-9cc4-a39779878fa8", "node_type": "1", "metadata": {}, "hash": "4a6d7852dc6f3a341f993d29a94241793c73c4d411cb3fdde3ed5ff826a223b1", "class_name": "RelatedNodeInfo"}}, "hash": "059f45a12be9197d45ae941be0261826e8eedeb88e05013b3ec1ca947656bbf8", "text": "341 \n \nConstrucci\u00f3n directa de un archivo de texto en el disco para su lectura secuencial  \n \nUn archivo de texto se puede c rear mediante alg\u00fan utilitario  o directamente como un \ndocumento de texto con  el  Bloc d e notas de Window s. El final de cada l\u00ednea (al \npresionar la tecla de ingreso) introduce la  marca '\\n'. Al guardar el archivo, el sistema \nagrega al nombre la extensi\u00f3n  .txt     \n  \nEjemplo.  Crear con el Bloc de notas un archivo de datos de art\u00edculos contenien do su \nc\u00f3digo, nombre y cantidad.  Almacenarlos en el pendrive ( g:) con el nombre arch . Suponer \nque los datos de cada art\u00edculo en el disco est\u00e1n separados con una coma.  \n       \n  \n \nPrograma para leer el archivo secuencial, linea por l\u00ednea. Para cada l\u00ednea, se  separan  los \ncomponentes  con split, y se elimina la marca de f\u00edn de l\u00ednea '\\ n'. Cada registro de \ndatos es agregado a  una lista. Finalmente se muestran en pantalla los datos de la lista.  \n \n       \n  \n \nResultados \n \n       \n  Ventana del \nBloc de notas  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1028, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82295db2-23f4-4c17-9cc4-a39779878fa8": {"__data__": {"id_": "82295db2-23f4-4c17-9cc4-a39779878fa8", "embedding": null, "metadata": {"page_label": "342", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b7d3748-0e3b-4140-9483-d7db2fc8021b", "node_type": "4", "metadata": {"page_label": "342", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "957b178cab10f6a5fa7c4d5c4f1d7c883028ffe84f65683c126c16438fe4ec7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b896d10e-61e0-49b8-92dd-8cc26b882625", "node_type": "1", "metadata": {"page_label": "341", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "059f45a12be9197d45ae941be0261826e8eedeb88e05013b3ec1ca947656bbf8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3461aaae-7ad3-4923-ac2d-d48e0d88ce6b", "node_type": "1", "metadata": {}, "hash": "f16bf79f24d0469c40341b3ae6e2105e8d1821809dabc273b6eb4adbc59adf8d", "class_name": "RelatedNodeInfo"}}, "hash": "4a6d7852dc6f3a341f993d29a94241793c73c4d411cb3fdde3ed5ff826a223b1", "text": "342 \n \nFunciones utilitarias para descargar archivos de texto a estructuras en memoria \n \nSuponer que en el disco est\u00e1 almacenado un archivo 'g:arts.txt' conteniendo \ninformaci\u00f3n de art\u00edculos: c\u00f3digo(entero), precio(real) y nombre(cadena de caracteres). Al \nfinal de cada l\u00ednea est\u00e1 impl\u00edcita la marca de fin de l\u00ednea. Suponer que los datos de cada \nart\u00edculo est\u00e1n separados con un a coma como se muestra en el ejemplo:  \n \n \n       \n  \n \n Funci\u00f3n para descargar en una lista un archivo de texto desde el disco  \n \nLa funci\u00f3n  disco_a_lista(arch) recib e el nombre del ar chivo y entreg a una lista con \ntodos los datos almacenados, con los tipos que corresponden . Cada componente de la \nlista ser\u00e1 una lista con los datos de cada art\u00edculo.  \n \n \ndef disco_a_lista(arch):  \n    f=open(arch,'r')  \n    lista=[]  \n    for linea in f: \n        dato=linea.rstrip().split(' ,') \n        cod=int(dato[0])  \n        precio=float(dato[1])  \n        nombre=dato[2]  \n        reg=[cod,precio,nombre]  \n        lista=lista+[reg]  \n    f.close()  \n    return lista  \n \n \nPrueba de la funci\u00f3n  en la ventana interactiva  \n \n>>> from disco_a_lista import* \n>>> arch='g:arts.txt'  \n>>> lista=disco_a_lista(arch)  \n>>> lista  \n[[123, 1.2, 'L\u00e1piz'], [234, 2.5, 'Cuaderno'], [345, 8.4, 'Libro']]  \n>>> lista[1]  \n[234, 2.5, 'Cuaderno']  \n>>> lista[1][2]  \n'Cuaderno'\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3461aaae-7ad3-4923-ac2d-d48e0d88ce6b": {"__data__": {"id_": "3461aaae-7ad3-4923-ac2d-d48e0d88ce6b", "embedding": null, "metadata": {"page_label": "343", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "720c23e6-df24-4d4d-9e96-78b21638be7d", "node_type": "4", "metadata": {"page_label": "343", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "48a9f9153aa0559a6f1ef8d976d44dc328f64c993cd4c6e7348994a5c69a5337", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82295db2-23f4-4c17-9cc4-a39779878fa8", "node_type": "1", "metadata": {"page_label": "342", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4a6d7852dc6f3a341f993d29a94241793c73c4d411cb3fdde3ed5ff826a223b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "854f8fff-ea6a-4727-a021-bdcab50fcdd0", "node_type": "1", "metadata": {}, "hash": "800ff0431fff0ff8e946d8127be56664e7abc6cd59af1dca7959a00461956463", "class_name": "RelatedNodeInfo"}}, "hash": "f16bf79f24d0469c40341b3ae6e2105e8d1821809dabc273b6eb4adbc59adf8d", "text": "343 \n \nFunci\u00f3n para descargar en un diccionario un archivo de texto desde el disco  \n \nLa funci\u00f3n  disco_a_diccionario(arch) recib e el nombre del archivo y entrega un \ndiccionario con todos los datos almacenados, con los tipos que correspondan .  \n \nEl c\u00f3digo del art\u00edculo ser\u00e1 la clave mientras que el precio y el nombre ser\u00e1n los valores \nasociados a la clave.  \n Los datos est\u00e1n almacenados en el archivo 'g:arts.txt'  \n \n \ndef disco_a_dicc(arch):  \n    f=open(arch,'r')  \n    dc={}  \n    for linea in f: \n        dato=linea.rstrip().split(' ,') \n        cod=int(dato[0])  \n        precio=float(dato[1])  \n        nombre=dato[2]  \n        val=[precio,nombre]  \n        dc[cod]=val  \n    f.close()  \n    return dc  \n \n \n Prueba de la funci\u00f3n  en la ventana interactiva  \n >>> from disco_a_dicc import* \n>>> arch='g:arts.txt'  \n>>> dc=disco_a_dicc(arch)  \n>>> dc \n{345: [8.4, 'Libro'], 234: [2.5, 'Cuaderno'], 123: [1.2, 'L\u00e1piz']}  \n>>> dc[234]  \n[2.5, 'Cuaderno']  \n>>> dc[234][1]  \n'Cuaderno'\nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1016, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "854f8fff-ea6a-4727-a021-bdcab50fcdd0": {"__data__": {"id_": "854f8fff-ea6a-4727-a021-bdcab50fcdd0", "embedding": null, "metadata": {"page_label": "344", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4814b2e-e63d-4e54-a497-89d90ee54642", "node_type": "4", "metadata": {"page_label": "344", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1338493a77de8ee08b2c1d1aae26eebbdb3573ad184af5983324405b3aa3e36", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3461aaae-7ad3-4923-ac2d-d48e0d88ce6b", "node_type": "1", "metadata": {"page_label": "343", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f16bf79f24d0469c40341b3ae6e2105e8d1821809dabc273b6eb4adbc59adf8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1de088be-2c6b-4cce-9221-80556f85522c", "node_type": "1", "metadata": {}, "hash": "49c43e26a056c7c4a94539e89bdaee5393a2106fe8f1de472b7d0e6c628211fa", "class_name": "RelatedNodeInfo"}}, "hash": "800ff0431fff0ff8e946d8127be56664e7abc6cd59af1dca7959a00461956463", "text": "344 \n \nFunciones utilitarias para almacenar en disco datos desde estructuras en memoria  \n \nSuponer que se tienen los datos de art\u00edculos : c\u00f3digo(entero), precio(real) y nombre(cadena \nde caracteres) en una estructura de datos en memoria y se los desea trasladar al disco \ncomo un archivo de texto.   \n  \nFunci\u00f3n para almacenar en disco los datos desde una lista  \n \nLa funci\u00f3n lista_a_disco(lista,arch)  recibe como par\u00e1metros una lista y el nombre \ndel archivo. La lista contiene la informaci\u00f3n de art\u00edculos: c\u00f3digo(entero), precio(real) y \nnombre(cadena de caracteres).    \n \nEn el disco,  los datos de cada art\u00edculo estar\u00e1n separados con una coma y ser\u00e1n \nalmacenados  como l\u00edneas de texto. Al final de cada l\u00ednea debe agregarse la marca '\\ n'.  \n \n \ndef lista_a_disco(lista,arch):  \n    f=open(arch,'w')  \n    for reg in lista: \n        cod=reg[0]  \n        precio=reg[1]  \n        nombre=reg[2]  \n        art=[str(cod),str(precio),nombre]  \n        linea=','.join(art )+'\\n' \n        f.write(linea)  \n    f.close()  \n  \n \nPrueba de la funci\u00f3n  en la ventana interactiva.  Crear el archivo 'g:artic.txt'  \n \n>>> from lista_a_disco import* \n>>> lista=[[123, 1.2, 'L\u00e1piz'], [234, 2.5, 'Cuaderno'], [345, 8.4,  \n'Libro']]  \n>>> arch='g:artic.txt'  \n>>> lista_a_disco(lista,arch)  \n>>> \n \nRevisi\u00f3n del archivo creado en el disco ( entrar con el utilitario Bloc de n otas)  \n \n       \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1407, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1de088be-2c6b-4cce-9221-80556f85522c": {"__data__": {"id_": "1de088be-2c6b-4cce-9221-80556f85522c", "embedding": null, "metadata": {"page_label": "345", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cd6f6a69-6d88-45c3-b558-d62fde5af908", "node_type": "4", "metadata": {"page_label": "345", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "113c46b02933e8b26c2a232874b7ef08e2ccf2c451c923c4097607c77d42d955", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "854f8fff-ea6a-4727-a021-bdcab50fcdd0", "node_type": "1", "metadata": {"page_label": "344", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "800ff0431fff0ff8e946d8127be56664e7abc6cd59af1dca7959a00461956463", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ddcbda7-c086-40e0-8cb4-6420252216b8", "node_type": "1", "metadata": {}, "hash": "dc5891bfab3ce1f601a23dfbc3f2fb95abf51c98409e2bd43d23745e875e176f", "class_name": "RelatedNodeInfo"}}, "hash": "49c43e26a056c7c4a94539e89bdaee5393a2106fe8f1de472b7d0e6c628211fa", "text": "345 \n \nFunci\u00f3n para almacenar en disco los datos desde un diccionario  \n \nLa funci\u00f3n  dicc_a_disco(lista,arch)   recibe como par\u00e1metros un diccionario y el \nnombre del archivo. El diccionario contiene la informaci\u00f3n de art\u00edculos: c\u00f3digo(entero), \nprecio(real) y nombre(cadena de caracteres). El c\u00f3digo es la clave en el diccionario.  \n En el disco, los datos de cada art\u00edculo estar\u00e1n separados con una coma y ser\u00e1n \nalmacenados como l\u00edneas de texto. Al final de cada l\u00ednea debe agregarse la marca '\\ n'.  \n \n \ndef dicc_a_disco(dc,arch):  \n    f=open(arch,'w')  \n    for cod in dc: \n        precio=dc[cod][0]  \n        nombre=dc[cod][1]  \n        art=[str(cod),str(precio),nombre]  \n        linea=','.join(art )+'\\n' \n        f.write(linea)  \n    f.close()  \n \n  \nPrueba de la funci\u00f3n  en la ventana interactiva. Crear el archivo 'g:articd .txt'  \n \n>>> from dicc_a_disco import* \n>>> dc={123:[1.2, 'L\u00e1piz'],234:[2.5, 'Cuaderno'], 345:[8.4, 'Libro']}  \n>>> arch='g:articd.txt'  \n>>> dicc_a_disco(dc,arch)  \n>>>  \n \n \nRevisi\u00f3n del archivo creado en el disco (entrar con el utilitario Bloc de notas)  \n \n       \n  \n \n  \n Nota.  Las funciones utilitarias desarrolladas en esta secci\u00f3n pueden ser incorporadas en \nprogramas para realizar las operaciones de traslado de datos entre la memoria y el disco.  \n    \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1325, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ddcbda7-c086-40e0-8cb4-6420252216b8": {"__data__": {"id_": "8ddcbda7-c086-40e0-8cb4-6420252216b8", "embedding": null, "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0e78c0f-da99-45cf-9325-4ea90c7fae77", "node_type": "4", "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "01565d0370c8f096ed4267bfa450cc7475012a3831eb72eefe349e5f5e70ab46", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1de088be-2c6b-4cce-9221-80556f85522c", "node_type": "1", "metadata": {"page_label": "345", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "49c43e26a056c7c4a94539e89bdaee5393a2106fe8f1de472b7d0e6c628211fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94c5e137-7f74-4302-acb0-534f3b1904da", "node_type": "1", "metadata": {}, "hash": "3fd30cb63e4046e23a46431f99385be0093802364620974a34cf21d396b9cbee", "class_name": "RelatedNodeInfo"}}, "hash": "dc5891bfab3ce1f601a23dfbc3f2fb95abf51c98409e2bd43d23745e875e176f", "text": "346 \n \n8.3 Programas para almacenamiento y recuperaci\u00f3n de registros en archivo s  \n de texto en  disco  \n \nEn esta secci\u00f3n se explora n mediante programas de ejemplo las estrategias de \nalmacenamiento de registros en un archivo de texto en el disco  \n \na) En el primer ejemplo, los registros son convertidos  individualmente a l\u00edneas de \ntexto y almacenados y recuperados en forma individual en el disco.  Este \nprocedimiento permite escribir y leer del disco las lineas de texto en forma \nsecuencial.  Se pue de crear, agregar y leer  los registros  pero n o se puede modificar \nla informaci\u00f3n almacenada en el archivo.   \n \nb) En el segundo ejemplo la t\u00e9cnica consiste manejar los datos en una lista en la \nmemoria usando las funciones y operadores disponibles para listas. A l finalizar el \nprograma se trasladan  todos los datos de la lista a un archivo en  disco convertidos \nen l\u00edneas de texto. Posteriormente, al ejecutar otra vez el programa, al  inicio se \nleen las l\u00ednea s de texto desde el disco y se reconstruye la lista para con tinuar el \nproceso.  Opcionalmente puede usarse un diccionario en lugar de la lista.  \n \nc) En el tercer ejemplo se instrumenta un m\u00e8todo para manejo individual de registros \nalmacenados en disco . Esta t\u00e9cnica no requiere trasladar o recuperar todos los \nregistros de una lista al  disco. Para acceder a los registros se usan  las \ninstrucciones  de posicionamiento en el disco:  tell y  seek. La t\u00e9cnica requiere \nque los registros tengan  la misma longitud para ubicarlos y poder leerlos, \nmodificarlos y almacenarlos individualmente  \n  \n \na) Registros individuales en memoria convertidas en l\u00edneas de texto para \nalmacenarlas secu encialmente en un archivo en disco  \n \nEn e ste ejemplo, los registros son convertidos individualmente a l\u00edneas de texto y \nalmacenados y recuperados en forma secuencial en el disco para su proceso en memoria.", "start_char_idx": 0, "end_char_idx": 1888, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94c5e137-7f74-4302-acb0-534f3b1904da": {"__data__": {"id_": "94c5e137-7f74-4302-acb0-534f3b1904da", "embedding": null, "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0e78c0f-da99-45cf-9325-4ea90c7fae77", "node_type": "4", "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "01565d0370c8f096ed4267bfa450cc7475012a3831eb72eefe349e5f5e70ab46", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ddcbda7-c086-40e0-8cb4-6420252216b8", "node_type": "1", "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dc5891bfab3ce1f601a23dfbc3f2fb95abf51c98409e2bd43d23745e875e176f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f6208bf-709a-456f-863c-411fcc9bf40a", "node_type": "1", "metadata": {}, "hash": "f233e14f432f562f71bb53fdaf35931f4e8fe6a9714af91ffc9b783b433111bf", "class_name": "RelatedNodeInfo"}}, "hash": "3fd30cb63e4046e23a46431f99385be0093802364620974a34cf21d396b9cbee", "text": "Este enfoque no permite modificar los datos en el disco, a menos que se use las \ninstrucciones  tell y seek.   \n \nEjemplo. Instrumentar una aplicaci\u00f3n para almacenar en disco y listar los  datos de  los \nart\u00edculo s de una empresa mediante registros  individuales que son almacenados y \nrecuperados del disco.  Solamente se instrumentar\u00e1n dos opciones: ingresar y consultar .  \n \nEspecificaciones \n \nComponentes de cada art\u00edculo  \n C\u00f3digo del art\u00edculo (entero)  \n Cantidad de art\u00edcu los (entero)  \n Precio del art\u00edculo (real)  \n Nombre del art\u00edculo (cadena de caracteres)  \n \nPython Programaci\u00f3n", "start_char_idx": 1893, "end_char_idx": 2487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f6208bf-709a-456f-863c-411fcc9bf40a": {"__data__": {"id_": "9f6208bf-709a-456f-863c-411fcc9bf40a", "embedding": null, "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a8ed719-e766-4b9f-8a12-8f8995b5263d", "node_type": "4", "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4d3af3af676211d5eede13f293fc8fed67e195571f8ace922722c9f3ac813fc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94c5e137-7f74-4302-acb0-534f3b1904da", "node_type": "1", "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3fd30cb63e4046e23a46431f99385be0093802364620974a34cf21d396b9cbee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0d6736a-da6a-4c16-97b2-e47575493e2f", "node_type": "1", "metadata": {}, "hash": "21231720534067cff35abdbaa436fb8bd79be1c17e736d99ffbdc8dc91224ad0", "class_name": "RelatedNodeInfo"}}, "hash": "f233e14f432f562f71bb53fdaf35931f4e8fe6a9714af91ffc9b783b433111bf", "text": "347 \n \nOpciones  \n1) Ingresar art\u00edculo     (Agrega un nuevo art\u00edculo al archivo)  \n2) Consulta de  art\u00edculo  (Dado un c\u00f3digo mostrar los datos  del art\u00edculo)  \n3) Salir  \n \nPara almacenar l os datos, cada registro es convertidos a una l\u00ednea de texto agregando la \nmarca '\\n' . Al leer cada l\u00ednea  desde el disco, se la conv ierte nuevamente al tipo de los \ndatos originales.  Al inicio del programa se incluye la validaci\u00f3n del nombre del archivo.", "start_char_idx": 0, "end_char_idx": 447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0d6736a-da6a-4c16-97b2-e47575493e2f": {"__data__": {"id_": "f0d6736a-da6a-4c16-97b2-e47575493e2f", "embedding": null, "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a8ed719-e766-4b9f-8a12-8f8995b5263d", "node_type": "4", "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4d3af3af676211d5eede13f293fc8fed67e195571f8ace922722c9f3ac813fc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f6208bf-709a-456f-863c-411fcc9bf40a", "node_type": "1", "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f233e14f432f562f71bb53fdaf35931f4e8fe6a9714af91ffc9b783b433111bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2841f79-c1c0-4998-9a0c-2a95977b9525", "node_type": "1", "metadata": {}, "hash": "0d01c78144c73b95a98f26629266cb8d3a19c53f21bdd60bddc2f6da7a8c7d54", "class_name": "RelatedNodeInfo"}}, "hash": "21231720534067cff35abdbaa436fb8bd79be1c17e736d99ffbdc8dc91224ad0", "text": "Al inicio del programa se incluye la validaci\u00f3n del nombre del archivo.  \n \nVariables  \n \n nombre : Nombre del archivo en el disco  \n arch:   Objeto tipo archivo para uso en la memoria por el programa \n l\u00ednea:   Linea de texto con los datos de un registro convertidos a texto  \nseparados por comas, y la marca de f\u00edn de linea al final  \n reg:  Registro con los  datos de un art\u00edculo (estructura tipo lista)  \n cod:   C\u00f3digo del art\u00edculo ( entero ) \n cant:   Cantidad de art\u00edculos ( entero ) \n pre:  Precio del art\u00edculo ( real) \n nom:   Nombre del art\u00edculo ( cadena de caracteres)  \n \nwhile True:  \n    nombre= input('Ingre se el nombre del archivo: ')  \n    try: \n        arch= open(nombre+'.txt','r')   #Validaci\u00f3n del archivo  \n    except FileNotFoundError:  \n        print ('El archivo no existe')  \n        crear= input('Digite 1 si desea crear este archivo: ') \n        if  crear=='1':  \n            arch= open(nombre+'.txt','w')  \n        else : \n            continue     break     \nwhile True:  \n    print('\\n1) Ingres o de art\u00edculo')  \n    print('2) Consulta de art\u00edculo') \n    print ('3) Salir')  \n    opc= input('\\nElija una opci\u00f3n: ')  \n    if opc=='1':  \n        arch= open(nombre+'.txt','a')  \n        cod= int(input('Ingrese c\u00f3digo:   '))  \n        cant= int(input('Ingrese cantidad: '))  \n        pre= float(input('Ingrese precio:   '))  \n        nom= input('Ingrese nombre:   ')  \n        linea= str(cod)+','+ str(cant)+',' +str(pre)+','+nom+'\\ n' \n        arch.write(linea)  \n        arch.close() \n \n    elif  opc=='2':  \n        arch= open(nombre+'.txt','r')  \n        xcod= int(input('Ingrese c\u00f3digo:   '))  \nPython Programaci\u00f3n", "start_char_idx": 376, "end_char_idx": 2023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2841f79-c1c0-4998-9a0c-2a95977b9525": {"__data__": {"id_": "a2841f79-c1c0-4998-9a0c-2a95977b9525", "embedding": null, "metadata": {"page_label": "348", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "570fceb4-40ba-4773-ba0f-a65d8bb912ee", "node_type": "4", "metadata": {"page_label": "348", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "af0c2882acee0d1a879f7f808abdbea482b0e57a79adbece1a7461916c449d53", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0d6736a-da6a-4c16-97b2-e47575493e2f", "node_type": "1", "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "21231720534067cff35abdbaa436fb8bd79be1c17e736d99ffbdc8dc91224ad0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7165d15e-e885-4442-9b05-12150cda98a8", "node_type": "1", "metadata": {}, "hash": "16c1177294461c5f6bfb0385c00d82390f83fdfab98c4d7db97ac607e0f9d4fb", "class_name": "RelatedNodeInfo"}}, "hash": "0d01c78144c73b95a98f26629266cb8d3a19c53f21bdd60bddc2f6da7a8c7d54", "text": "348 \n \n        exito= False \n        for linea in arch: \n            reg=linea.split(',') \n            cod=int(reg[0])  \n            cant= int(reg[1]) \n            pre= float(reg[2])  \n            nom=reg[3] \n            if  xcod==cod:  \n                print ('Cantidad: ',cant)  \n                print ('Precio:   ',pre)  \n                print ('Nombre:   ',nom)  \n                exito=True \n                break  \n \n        if not exito: \n            print ('No existe el registro')  \n        arch.close()      elif  opc=='3':  \n        print ('Adi\u00f3s')  \n        break  \n \nPrueba del programa  (almacenar registros en el archivo en disco)  \n \n>>> ========= RESTART =========  \n>>>  \nIngrese el nombre del archivo: prueba \nEl archivo no existe  \nDigite 1 si desea crear este archivo: 1  \n \n1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n \nElija una opci\u00f3n: 1 \nIngrese c\u00f3digo:   123 \nIngrese cantidad: 20 \nIngrese precio:   5.2 \nIngrese nombre:   libro \n 1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n Elija una opci\u00f3n: 1 \nIngrese c\u00f3digo:   234 \nIngrese cantidad: 40 \nIngrese precio:   0.65 \nIngrese nombre:   l\u00e1piz \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7165d15e-e885-4442-9b05-12150cda98a8": {"__data__": {"id_": "7165d15e-e885-4442-9b05-12150cda98a8", "embedding": null, "metadata": {"page_label": "349", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b37ea0c-24f9-4dca-82bd-a5f1b131f589", "node_type": "4", "metadata": {"page_label": "349", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "84f9eb273a6017df08180161122fdab2ebf1d079565356c5cf404de1aae93c1f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2841f79-c1c0-4998-9a0c-2a95977b9525", "node_type": "1", "metadata": {"page_label": "348", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0d01c78144c73b95a98f26629266cb8d3a19c53f21bdd60bddc2f6da7a8c7d54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d5f5b2c-a94f-4426-b5e4-7eebbf6da0ff", "node_type": "1", "metadata": {}, "hash": "9689596e20b0c82fe56793bca3ab74ecc0afbbb6bd963e577552dd1b832ec7a9", "class_name": "RelatedNodeInfo"}}, "hash": "16c1177294461c5f6bfb0385c00d82390f83fdfab98c4d7db97ac607e0f9d4fb", "text": "349 \n \n1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n \nElija una opci\u00f3n: 1 \nIngrese c\u00f3digo:   345 \nIngrese cantidad: 50 \nIngrese precio:   0.50 \nIngrese nombre:   pluma \n \n1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n Elija una opci\u00f3n: 3 \nAdi\u00f3s \n \nPrueba del programa  (recuperaci\u00f3n de registros d el archivo en disco)  \n \n>>> ========= RESTART =========  \n>>>  \nIngrese el nombre del archivo: prueba \n \n1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n Elija una opci\u00f3n: 2 \nIngrese c\u00f3digo:   234 \nCantidad:  40  \nPrecio:    0.65  \nNombre:    l\u00e1piz  \n 1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n Elija una opci\u00f3n: 2 \nIngrese c\u00f3digo:   123 \nCantidad:  20  \nPrecio:    5.2  \nNombre:    libro  \n 1) Ingreso de art\u00edculo  \n2) Consulta de art\u00edculo  \n3) Salir  \n \nElija una opci\u00f3n: 3 \nAdi\u00f3s \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 869, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d5f5b2c-a94f-4426-b5e4-7eebbf6da0ff": {"__data__": {"id_": "9d5f5b2c-a94f-4426-b5e4-7eebbf6da0ff", "embedding": null, "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b0c5720f-2520-40bc-a291-2aa5320a7138", "node_type": "4", "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "715c01244ecf6c5896c00b6b179cc2ef16deab9124c691a9c8763a5bd606ffb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7165d15e-e885-4442-9b05-12150cda98a8", "node_type": "1", "metadata": {"page_label": "349", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "16c1177294461c5f6bfb0385c00d82390f83fdfab98c4d7db97ac607e0f9d4fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e89af5d-f00c-4627-acda-ee950b5cd143", "node_type": "1", "metadata": {}, "hash": "08230eec6b8fd328780749ecee853164da44130bb8bc7cc87e19f98dbf339c79", "class_name": "RelatedNodeInfo"}}, "hash": "9689596e20b0c82fe56793bca3ab74ecc0afbbb6bd963e577552dd1b832ec7a9", "text": "350 \n \n \nb) Desarrollo de una aplicaci\u00f3n con todos registros de datos en una lista para \nmanejo en memoria almacenada como l\u00edneas de texto en un archivo en el disco  \n \nEn este ejemplo los registros no son almacenados y recuperados  secuencialmente  en el \ndisco  para procesarlos, sino que se almacenan todos como l\u00edneas de texto en disco una \nsola vez al finalizar el programa y se recuperan y trasladan nuevamente todos a una lista \nuna sola vez al inicio del programa para su manejo en memoria.  \n \nEste enfoque  permite usar las funciones de manejo de listas en memoria. Tambi\u00e9n se \npudiera usar un diccionario para facilitar el uso en memoria.  \n \nEjemplo.  Crear una aplicaci\u00f3n para manejar en una lista en memoria los datos de los \nart\u00edculos de una empresa.  Los datos ser\u00e1n almacenados en el disco al final del programa  \n \nOpci ones:  \n1) Ingresar:  Ingreso de un nuevo art\u00edculo: c\u00f3digo, cantidad, precio y nombre \n2) Consultar:  Conocer l os datos  de un art\u00edculo  dado su c\u00f3digo \n3) Comprar : Agregar cantidad a un art\u00edculo existente  \n4) Vender:  Vender una cantidad de un art\u00edculo existente \n5) Eliminar:  Eliminar o dar de baja un art\u00edculo  \n6) Salir  \n Datos de cada art\u00edculo:  \nC\u00f3digo de identificaci\u00f3n  \nCantidad actual  \nPrecio  \nNombre  \n \nVariables:  \nlista: Es una lista cuyos componentes son listas que las contendr\u00e1n los \nregistros para almacenar los datos de los art\u00edculos. Esta lista ser\u00e1  \n creada y estar\u00e1 disponible para manejo en la memoria.  \nreg: Estructura tipo lista que contendr\u00e1 la descripci\u00f3n de cada registro.  \nlinea:  L\u00ednea de texto conteniendo los datos de cada registro.  Los \ncomponentes de cada registr o est\u00e1n separados con comas.", "start_char_idx": 0, "end_char_idx": 1675, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e89af5d-f00c-4627-acda-ee950b5cd143": {"__data__": {"id_": "6e89af5d-f00c-4627-acda-ee950b5cd143", "embedding": null, "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b0c5720f-2520-40bc-a291-2aa5320a7138", "node_type": "4", "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "715c01244ecf6c5896c00b6b179cc2ef16deab9124c691a9c8763a5bd606ffb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d5f5b2c-a94f-4426-b5e4-7eebbf6da0ff", "node_type": "1", "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9689596e20b0c82fe56793bca3ab74ecc0afbbb6bd963e577552dd1b832ec7a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81b11957-7426-43e9-96ea-ea54e9347fdb", "node_type": "1", "metadata": {}, "hash": "c3c8f420a14d82c90f615209e7fceb3196e28cac17cbeb37191a437655c6fd73", "class_name": "RelatedNodeInfo"}}, "hash": "08230eec6b8fd328780749ecee853164da44130bb8bc7cc87e19f98dbf339c79", "text": "Los \ncomponentes de cada registr o est\u00e1n separados con comas. Las \nl\u00edneas de texto estar\u00e1n separadas con la marca de f\u00edn de linea' \\n' \narch:  Variable para contener el nombre del archivo en el disco  \n  \nNombres de los c omponentes del registro \ncod:   c\u00f3digo del art\u00edculo  \ncant:   cantidad actual de art\u00edculos disponibles  \npre:  precio del art\u00edculo  \nnom:   nombre del art\u00edculo  \n \nM\u00f3dulos  \nIngres o,  consulta ,  compra ,  venta,  elimina r,  almacenar ,  recuperar  \nPython Programaci\u00f3n", "start_char_idx": 1614, "end_char_idx": 2107, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81b11957-7426-43e9-96ea-ea54e9347fdb": {"__data__": {"id_": "81b11957-7426-43e9-96ea-ea54e9347fdb", "embedding": null, "metadata": {"page_label": "351", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5419bc8b-d3d2-4389-a28e-5d735fb70a36", "node_type": "4", "metadata": {"page_label": "351", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a40d12c2aff2c341239c8e2e37438539d47e3d93a40a4176c395f5b8c0e2610a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e89af5d-f00c-4627-acda-ee950b5cd143", "node_type": "1", "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "08230eec6b8fd328780749ecee853164da44130bb8bc7cc87e19f98dbf339c79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2828290-5547-47c7-80ce-c051673d4c70", "node_type": "1", "metadata": {}, "hash": "bd43b795f8f7c243d518e759ab77d6278083dddaec8b8279ed9ee66f9556e840", "class_name": "RelatedNodeInfo"}}, "hash": "c3c8f420a14d82c90f615209e7fceb3196e28cac17cbeb37191a437655c6fd73", "text": "351 \n \n  #Manejo de registros en memoria con datos almacenados  \n#y recuperados en l\u00edneas  de texto en un archivo  \n#secuencial en el disco con los registros separados con '\\ n' \n \nglobal ind_cod,ind_cant,ind_pre,ind_nom  \nind_cod=0  \nind_cant=1  \nind_pre=2  \nind_nom=3  \n \ndef ingreso(lista):  \n    cod=int(input('Ingrese c\u00f3digo: ')) \n    cant=int(input('Ingrese cantidad: '))  \n    pre=float(input('Ingrese precio: '))  \n    nom=input('Ingrese nombre: ')  \n    reg=[cod,cant,pre,nom]  \n    lista=lista+[reg]  \n    return lista \n \ndef consulta(lista):  \n    c=int(input('Ingrese c\u00f3digo: '))     exito=False  \n    for reg in lista:  \n        if c==reg[ind_cod]:  \n            print('Cantidad: ',reg[ind_cant])  \n            print('Precio: ',reg[ind_pre])  \n            print('Nombre: ',reg[ind_nom])  \n            exito=True  \n            break  \n    if not exito:  \n            print('Art\u00edculo no existe')  \ndef compra(lista):  \n    c=int(input('Ingrese c\u00f3digo: ')) \n    exito=False  \n    for reg in lista:  \n        if c==reg[ind_cod]:  \n            k=int(input('Ingrese la cantidad comprada: '))  \n            reg[ind_cant]=reg[ind_cant]+k  \n            exito=True  \n            break  \n    if not exito:  \n        print('Art\u00edculo no existe')  \n    return lista \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2828290-5547-47c7-80ce-c051673d4c70": {"__data__": {"id_": "d2828290-5547-47c7-80ce-c051673d4c70", "embedding": null, "metadata": {"page_label": "352", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4bfc011-c184-4fc8-9f31-dd61a502bd0f", "node_type": "4", "metadata": {"page_label": "352", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2bc50f7f1ec1dc05d5c75e577e90b0acb9a6429b17648c9be55076e7c0bef027", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81b11957-7426-43e9-96ea-ea54e9347fdb", "node_type": "1", "metadata": {"page_label": "351", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c3c8f420a14d82c90f615209e7fceb3196e28cac17cbeb37191a437655c6fd73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6991790-6b23-4930-bcc9-8539635f63ce", "node_type": "1", "metadata": {}, "hash": "7505011c0f0370e76246085a15929e18e808ba996c98784c1a6dcd74d64404b1", "class_name": "RelatedNodeInfo"}}, "hash": "bd43b795f8f7c243d518e759ab77d6278083dddaec8b8279ed9ee66f9556e840", "text": "352 \n \ndef venta(lista):  \n    c=int(input('Ingrese c\u00f3digo: ')) \n    exito=False  \n    for reg in lista:  \n        if c==reg[ind_cod]:  \n            k=int(input('Ingrese la cantidad vendida: '))  \n            reg[ind_cant]=reg[ind_cant]- k \n            exito=True  \n            break  \n    if not exito:  \n        print('Art\u00edculo no existe')  \n    return lista \n def eliminar(lista):  \n    c=int(input('Ingrese c\u00f3digo: ')) \n    exito=False  \n    for reg in lista:  \n        if c==reg[ind_cod]:  \n            ind_reg=lista.index(reg) \n            del lista[ind_reg]  \n            exito=True  \n            break  \n    if not exito:  \n        print('Art\u00edculo no existe')  \n    return lista \n def recuperar(arch):  \n    lista=[]  \n    for linea in arch:  \n        sco mp=linea.split(',')      #separaci\u00f3n de componentes  \n        cod=int(scomp[ind_cod])    #recuperaci\u00f3n de datos  \n        cant=int(scomp[ind_cant])  #con su tipo original  \n        pre=float(scomp[ind_pre])  \n        nom=scomp[ind_nom]  \n        reg=[cod,cant,pre,nom[:- 1]]   #registro con datos originales  \n                       # '\\n' se quita para no repetir la \n        lista=lista+[reg]             #lista de registros en memoria \n    arch.close()  \n    return lista \n def almacenar(lista,nombre):  \n    arch=open(nombre,'w')  \n    for reg in lista:  \n        scod=str(reg[ind_cod])     #convertir componentes a texto  \n        scant=str(reg[ind_cant])  \n        spre=str(reg[ind_pre])  \n        nom=reg[ind_nom]          #la coma separa componentes  \n        sreg=scod+','+scant+','+spre+','+nom    #armar el registro  \n        linea=sreg+'\\ n'      #marca de fin de registro en disco \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1678, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6991790-6b23-4930-bcc9-8539635f63ce": {"__data__": {"id_": "e6991790-6b23-4930-bcc9-8539635f63ce", "embedding": null, "metadata": {"page_label": "353", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3b5057d-d9bc-45c7-b2fc-4b282ae26e61", "node_type": "4", "metadata": {"page_label": "353", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bf1087d954d8fb3fb23dad7149f5821e77c3bbf9ee6120b460337d569ae4539e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2828290-5547-47c7-80ce-c051673d4c70", "node_type": "1", "metadata": {"page_label": "352", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bd43b795f8f7c243d518e759ab77d6278083dddaec8b8279ed9ee66f9556e840", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba529725-7aee-4fe2-aa5f-c5d500bb6873", "node_type": "1", "metadata": {}, "hash": "e0e025be7eb760e8cfe0df353fcf137b994ce0c5cbb93fa6f0b9fe13fe92a16e", "class_name": "RelatedNodeInfo"}}, "hash": "7505011c0f0370e76246085a15929e18e808ba996c98784c1a6dcd74d64404b1", "text": "353 \n \n        arch.write(linea)      #almacenar cada linea en disco  \n    arch.close()  \n    print('Archivo almacenado')  \n     \n#Programa principal  \nwhile True:  \n    nombre=input(' Ingrese el nombre del archivo: ')  \n    try:  \n        nombre=nombre+'.txt'          #Archivo tipo texto  \n        arch=open(nombre,'r')         #Validaci\u00f3n del archivo  \n        lista=recuperar(arch)  \n    except FileNotFoundError:  \n        print('El archivo no exis te') \n        crear=input('Digite  1  si desea crear este archivo: ')  \n        if crear=='1':  \n            lista=[]  \n        else:  \n            continue  \n    break  \nwhile True:  \n    print(' \\n1) Ingresar art\u00edculo')  \n    print('2) Consultar art\u00edculo')  \n    print('3) Comprar')  \n    print('4) Vender')  \n    print('5) Eliminar art\u00edculo')  \n    print('6) Salir')  \n    opc=input('\\ nElija una opci\u00f3n: ') \n    if opc=='1':  \n        lista=ingreso(lista)  \n    elif opc=='2':  \n        consulta(lista)  \n    elif opc=='3':  \n        lista=compra(lista)      \n    elif opc=='4':  \n        lista=venta(lista)  \n    elif opc=='5':  \n        lista=eliminar(lista)             \n    elif opc=='6':  \n        almacenar(lista,nombre)  \n        break  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1224, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba529725-7aee-4fe2-aa5f-c5d500bb6873": {"__data__": {"id_": "ba529725-7aee-4fe2-aa5f-c5d500bb6873", "embedding": null, "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "505edeb4-876e-44c9-89fe-cf3f1a329a78", "node_type": "4", "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0280edba80a109e58e062bad35f294281ca9a45cb3cfb10da03684f541175e51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6991790-6b23-4930-bcc9-8539635f63ce", "node_type": "1", "metadata": {"page_label": "353", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7505011c0f0370e76246085a15929e18e808ba996c98784c1a6dcd74d64404b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf9df832-3a02-4ad3-b56b-3f77ada1f5fd", "node_type": "1", "metadata": {}, "hash": "65c3750fb50ec29ea869535f4125b20604dbd52f01b27424d6a32d06b71deaca", "class_name": "RelatedNodeInfo"}}, "hash": "e0e025be7eb760e8cfe0df353fcf137b994ce0c5cbb93fa6f0b9fe13fe92a16e", "text": "354 \n \nc) Desarrollo  de una a plicaci\u00f3n con acceso directo a registros almacenados  en disco  \n \nEn este ejemplo final se desarrolla una aplicaci\u00f3n completa en  forma modular  para manejo \nde datos almacenados en el disco en  un archivo. Se  usa acceso directo con las \ninstrucciones   tell  y   seek  para manejo individual de los registros  en el disco . Este \nenfoque evita traer todo el archivo del disco a una lista en memoria para su manejo  \n \nPara la instrumentaci\u00f3n se requiere que los registros almacenados tengan la misma \nlongitud para que pueden ser recuperados y almacenados en la misma posic i\u00f3n. Tambi\u00e9n \npermite reusar el espacio en el disco. Esta aplicaci\u00f3n debe ser estudiada como una \nreferencia para este tipo de proyectos.  \n \nEjemplo. Instrumentar una aplicaci\u00f3n para manejo del inventario de los art\u00edculos de una \nempresa mediante registros alma cenados  en el disco . Incluir validaci ones de los datos.  \n \nEspecificaciones \n \nComponentes de cada art\u00edculo  \n C\u00f3digo del art\u00edculo (entero en 5 columnas ) \n Cantidad de art\u00edculos (entero en 6 columnas ) \n Precio del art\u00edculo (real  en 8 columnas ) \n Nombre del art\u00edculo (cadena de caracteres  en 20 columnas ) \n \nOpciones  \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) Salir  \n \nCon la opci\u00f3n 1) se agrega un nuevo art\u00edculo al archivo \nCon la opci\u00f3n 2) se visualiza en pantalla los datos de un art\u00edcul o dado su c\u00f3digo \nLas opciones 2) y 3) permitir\u00e1n actualizar la cantidad de un art\u00edculo dado su c\u00f3digo \nLa opci\u00f3n 4) se usar\u00e1 para eliminar un art\u00edculo del archivo  \n \nInstrumentaci\u00f3n  \n \nPara almacenar los registros en el archivo los datos ingresados son converti dos a una \nl\u00ednea de texto de tama\u00f1o fijo ( 39 caracteres m\u00e1s un car\u00e1cter adicional para l a marca de f\u00edn \nde l\u00ednea '\\n').", "start_char_idx": 0, "end_char_idx": 1807, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf9df832-3a02-4ad3-b56b-3f77ada1f5fd": {"__data__": {"id_": "cf9df832-3a02-4ad3-b56b-3f77ada1f5fd", "embedding": null, "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "505edeb4-876e-44c9-89fe-cf3f1a329a78", "node_type": "4", "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0280edba80a109e58e062bad35f294281ca9a45cb3cfb10da03684f541175e51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba529725-7aee-4fe2-aa5f-c5d500bb6873", "node_type": "1", "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e0e025be7eb760e8cfe0df353fcf137b994ce0c5cbb93fa6f0b9fe13fe92a16e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4aaec4b2-a3d9-46f6-9c1c-481ca5f70633", "node_type": "1", "metadata": {}, "hash": "4dfef80090712a0dc2ebf869e7c4653506af6c84dc35b6a66467d761b5abdd0a", "class_name": "RelatedNodeInfo"}}, "hash": "65c3750fb50ec29ea869535f4125b20604dbd52f01b27424d6a32d06b71deaca", "text": "El tama\u00f1o fijo facilita la localizaci\u00f3n de los registros almacenados en el \ndisco como li\u00edneas de texto.  Al leer una l\u00ednea desde el disco,  se la convierte nuevamente a \nuna lista con el tipo de los datos originales.  \n \nPara acceder a cada l\u00ednea  de manera directa se utilizan las funciones seek y tell. De \nesta manera se puede leer  y volver a escribir la l\u00ednea en la misma posici\u00f3n en el disco.   \n \nLos registros son l\u00edneas de texto almacenadas en el disco con una longitud fija (40 \ncaracteres in cluyendo la marca de f\u00edn de l\u00ednea '\\n'). La estrategia para eliminar un \nregistro ser\u00e1 asignar el valor 0 a la clave. Esto evita dejar espacios sin usar en el di sco. \nPython Programaci\u00f3n", "start_char_idx": 1808, "end_char_idx": 2499, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4aaec4b2-a3d9-46f6-9c1c-481ca5f70633": {"__data__": {"id_": "4aaec4b2-a3d9-46f6-9c1c-481ca5f70633", "embedding": null, "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bcacd02-e253-4b7d-93db-4d7d173cdb64", "node_type": "4", "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14f61d7173fde319433eefa5b8407c1c2cff9715d9682c3f434ba7a9faac6616", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf9df832-3a02-4ad3-b56b-3f77ada1f5fd", "node_type": "1", "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "65c3750fb50ec29ea869535f4125b20604dbd52f01b27424d6a32d06b71deaca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eaded1e1-5091-4605-9585-10a757077560", "node_type": "1", "metadata": {}, "hash": "cacec5909daac15abd8472c171f43b058cc98f5011d3f87657a90197d58bec87", "class_name": "RelatedNodeInfo"}}, "hash": "4dfef80090712a0dc2ebf869e7c4653506af6c84dc35b6a66467d761b5abdd0a", "text": "355 \n \nAl ingresar un nuevo registro, se buscan registros  disponibles en el disco ( su clave es 0). \nEn esta posici\u00f3n se almacena el nuevo registro Si no existen registros disponibles  se lo \nagrega al final del  archivo.  Esto es posible por la longitud fija que tienen los registros.  \n \nVariables  \n \n archivo:  Nombre del archivo en el disco  (variable global)  \n arch:  Objeto tipo archivo para uso en la memoria por el programa \n l\u00ednea:   Linea de texto con los datos de cada registro separados por comas  \n   con la marca de f \u00edn de linea al final.  \n cod:   C\u00f3digo del art\u00edculo (entero)  \n cant:   Cantidad de art\u00edculos (entero)  \n pre:  Precio del art\u00edculo (real)  \n nom:   Nombre del art\u00edculo (cadena de caracteres)  \n \nM\u00f3dulos  \n \nEsta aplicaci\u00f3n est\u00e1 desarrollada en base a m\u00f3dulos asociados a l as acciones b\u00e1sic as que \nfueron identificadas en varios niveles . La comunicaci\u00f3n entre el programa y los m\u00f3dulos \nusa una variable global para trasmitir el nombre del archivo.", "start_char_idx": 0, "end_char_idx": 986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eaded1e1-5091-4605-9585-10a757077560": {"__data__": {"id_": "eaded1e1-5091-4605-9585-10a757077560", "embedding": null, "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bcacd02-e253-4b7d-93db-4d7d173cdb64", "node_type": "4", "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14f61d7173fde319433eefa5b8407c1c2cff9715d9682c3f434ba7a9faac6616", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4aaec4b2-a3d9-46f6-9c1c-481ca5f70633", "node_type": "1", "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4dfef80090712a0dc2ebf869e7c4653506af6c84dc35b6a66467d761b5abdd0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2dac5018-7acf-4701-a700-c57a7bca758c", "node_type": "1", "metadata": {}, "hash": "31fcd83a6af5c293c8a5bcbf47c2f0007635c04e8150f1b8d824692395443ad9", "class_name": "RelatedNodeInfo"}}, "hash": "cacec5909daac15abd8472c171f43b058cc98f5011d3f87657a90197d58bec87", "text": "M\u00f3dulos de acciones principales  \n \napertura:  Solicita el nombre del archivo para l eerlo o crearlo  \ningreso:  Valida y agrega al archivo un registro con los datos de un nuevo art\u00edculo  \nconsulta:  Dado un c\u00f3digo, muestra los datos del art\u00edculo almacenado  \ncomprar:  Localiza en el disco y modifica el dato de la cantidad de un art\u00edculo  \nvender : Localiza en el disco y modifica el dato de la cantidad de un art\u00edculo  \neliminar:  Descarta del disco el registro de un art\u00edculo dado su c\u00f3digo \n \nM\u00f3dulos de soporte  \n \nleer_registro:     Trae una linea (registro) del disco en u na posici\u00f3n especificada \nbuscar _regist ro:   Localiza la posici\u00f3n de un registro en el disco dado el c\u00f3digo \nbuscar_bloque_libre:   Localiza un bloque disponible para grabar un nuevo registro  \ngrabar_registro:    Graba una l\u00ednea (registro) en el archivo  \nencera_registro:    Anula un registro en el di sco asignando cero a la clave  \nreemplaza_registro:    Reemplaza un registro con otro con datos modificados  \nlinea_a_reg istro :   Convierte un registro almacenado en el disco como una  \n  l\u00ednea  de texto, al formato de una lista para acceder a los \n  componentes.  \n \n \nEn las siguientes p\u00e1ginas se muestran los m\u00f3dulos instrumentados. En la parte final de la \ncodificaci\u00f3n  est\u00e1 el programa principal que llama a los m\u00f3dulos. Para usar esta aplicaci\u00f3n \ndeben escribirse juntos los m\u00f3dulos y el programa y almacenar el conjunto con alg\u00fan \nnombre.  \nPython Programaci\u00f3n", "start_char_idx": 990, "end_char_idx": 2447, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2dac5018-7acf-4701-a700-c57a7bca758c": {"__data__": {"id_": "2dac5018-7acf-4701-a700-c57a7bca758c", "embedding": null, "metadata": {"page_label": "356", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cceeea3d-3002-4c01-95c7-7d387e36af00", "node_type": "4", "metadata": {"page_label": "356", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "347e3280d9b78c4f3a7d13c2390f9381644c2adbad62652f87d5689273999e8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eaded1e1-5091-4605-9585-10a757077560", "node_type": "1", "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cacec5909daac15abd8472c171f43b058cc98f5011d3f87657a90197d58bec87", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebc4c799-ff92-468b-ad67-0990aa7b2955", "node_type": "1", "metadata": {}, "hash": "6df1927fb91ea5fbcbf1da8db0cfcfd81b230b9f918222e14b2f077b7e6ca059", "class_name": "RelatedNodeInfo"}}, "hash": "31fcd83a6af5c293c8a5bcbf47c2f0007635c04e8150f1b8d824692395443ad9", "text": "356 \n \n#Aplicaci\u00f3n final con acceso directo a registros en el disco  \ndef apertura (): \n    global archivo  \n    while True: \n        archivo=input('Ingrese el nombre del archivo: ')  \n        try: \n            arch=open(archivo+'.txt','r')  \n            arch.close()         except FileNotFoundError:  \n            print('El archivo no existe') \n            crear=input('Digite 1 si desea crear este archivo: ') \n            if crear=='1':  \n                arch=open(archivo+'.txt','w')  \n                arch.close()             else:  \n                continue \n        return \n def ingreso(): \n    global archivo  \n    try: \n        c=int(input('Ingrese c\u00f3digo  : '))  \n    except ValueError:  \n        print('Dato incorrecto') \n        return \n    if c<=0:  \n        print('C\u00f3digo inco rrecto') \n        return     [exito,pos]=buscar_registro(c) \n    if exito:  \n        print('C\u00f3digo ya existe')  \n    else:  \n        try: \n            cant=int(input('Ingrese cantidad: '))  \n            pre=float(input('Ingrese precio  : '))  \n            nom=input('In grese nombre  : ') \n        except ValueError:  \n            print('Dato incorrecto') \n            return \n   linea=str(c).rjust(5)+','+str(cant).rjust(6)+','+  \n         str(pre).rjust(8)+','+nom.rjust(20)+' \\n' \n        grabar_registro(linea)  \n  \ndef consulta (): \n    global archivo  \n    try: \n        c=int(input('Ingrese c\u00f3digo: '))  \n    except ValueError:  \n        print('C\u00f3digo incorrecto')         return     [exito,pos]=buscar_registro(c) \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebc4c799-ff92-468b-ad67-0990aa7b2955": {"__data__": {"id_": "ebc4c799-ff92-468b-ad67-0990aa7b2955", "embedding": null, "metadata": {"page_label": "357", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b08fd5d0-e215-4802-b725-9d6af447cc33", "node_type": "4", "metadata": {"page_label": "357", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a6a081d40a36dcae6b11071ece5e5e9b3b0d93dbe7e4c297123b2923e38a05db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2dac5018-7acf-4701-a700-c57a7bca758c", "node_type": "1", "metadata": {"page_label": "356", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31fcd83a6af5c293c8a5bcbf47c2f0007635c04e8150f1b8d824692395443ad9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcc1f61d-71a4-4dac-9866-8459ded60bce", "node_type": "1", "metadata": {}, "hash": "db602cd9fd1e9ad959123e9d14200b76271efa7e3c6cf333bc4eb063926759ce", "class_name": "RelatedNodeInfo"}}, "hash": "6df1927fb91ea5fbcbf1da8db0cfcfd81b230b9f918222e14b2f077b7e6ca059", "text": "357 \n \n    if exito:  \n        linea=leer_registro(pos) \n        [cod,cant,pre,nom]=linea_ a_registro(linea)  \n        print('C\u00f3digo:   ',cod)  \n        print('Cantidad: ',cant)  \n        print('Precio:   ',pre)  \n        print('Nombre:   ',nom.strip())  \n    else:  \n        print('Registro no existe')  \n     \n def comprar(): \n    global archivo  \n    try:         c=int(input('Ingrese c\u00f3digo: '))  \n    except ValueError:  \n        print('C\u00f3digo incorrecto')         return     [exito,pos]=buscar_registro(c) \n    if exito:  \n        try: \n            k=int(input('Ingrese la cantidad comprada: ')) \n        except ValueError:  \n            print('Dato incorrecto') \n            return \n        reemplaza_registro(pos,k)  \n    else:  \n        print('Registro no existe')  \n \n  \ndef vender(): \n    global archivo  \n    try: \n        c=int(input('Ingrese c\u00f3digo: '))  \n    except ValueError:  \n        pri nt('C\u00f3digo incorrecto') \n        return \n    [exito,pos]=buscar_registro(c) \n    if exito:  \n        linea=leer_registro(pos) \n        [cod,cant,pre,nom]=linea_a_registro(linea)  \n        try: \n            k=int(input('Ingrese la cantidad vendida: '))  \n        excep t ValueError:  \n            print('Dato incorrecto')             return \n        if k>cant:  \n            print('Cantidad disponible insuficiente') \n            return \n        reemplaza_registro(pos, -k) \n    else:  \n        print('Registro no existe')  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1450, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcc1f61d-71a4-4dac-9866-8459ded60bce": {"__data__": {"id_": "dcc1f61d-71a4-4dac-9866-8459ded60bce", "embedding": null, "metadata": {"page_label": "358", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ff41244-5b87-4e0e-85dc-c57e77e130b1", "node_type": "4", "metadata": {"page_label": "358", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2161fe5c58731a7c7e872980a0eadd8b333d67bf461fdbb99fa8597bcccb1d7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebc4c799-ff92-468b-ad67-0990aa7b2955", "node_type": "1", "metadata": {"page_label": "357", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6df1927fb91ea5fbcbf1da8db0cfcfd81b230b9f918222e14b2f077b7e6ca059", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3708d1ac-113f-4c1f-b448-983513aab3b6", "node_type": "1", "metadata": {}, "hash": "df68baf349abdd278c48f2616f90d46f6150575452442c93ee2ea60e64aaefc8", "class_name": "RelatedNodeInfo"}}, "hash": "db602cd9fd1e9ad959123e9d14200b76271efa7e3c6cf333bc4eb063926759ce", "text": "358 \n \ndef eliminar (): \n    global archivo  \n    try: \n        c=int(input('Ingrese c\u00f3digo: '))  \n    except ValueError:  \n        print('C\u00f3digo incorrecto')         return \n    [exito,pos]=buscar_registro(c) \n    if exito:  \n        encera_registro(pos) \n    else:  \n        print('Registro  no existe')  \n  \ndef leer_registro (pos): \n    global archivo  \n    arch=open(archivo+'.txt','r')  \n    arch.seek(pos)     linea=arch.readline()  \n    return linea  \n \n  \ndef buscar_registro (c): \n    global archivo  \n    arch=open(archivo+'.txt','r')  \n    pos=arch.tell()  \n    linea=arch.readline()  \n    exito=False  \n    while linea!='': \n        [cod,cant,pre,nom]=linea_a_registro(linea)  \n        if c==cod:  \n            exito=True \n            break  \n        pos=arch.tell()  \n        linea=arch.readline()  \n    arch.close() \n    return [e xito,pos]     \n  \ndef grabar_registro (linea):  \n    global archivo  \n    [exito,pos]=buscar_bloque_libre()  \n    if exito:      #grabar en un registro libre  \n        arch=open(archivo+'.txt','r+')  \n        arch.seek(pos) \n        arch.write(linea)  \n    else:            #agregar al final del archivo  \n        arch=open(archivo+'.txt','a')  \n        arch.write(linea)  \n    arch.close()   \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3708d1ac-113f-4c1f-b448-983513aab3b6": {"__data__": {"id_": "3708d1ac-113f-4c1f-b448-983513aab3b6", "embedding": null, "metadata": {"page_label": "359", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "98bbb677-751d-4d93-9962-7e49528bd2bf", "node_type": "4", "metadata": {"page_label": "359", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e180cb58b68364959de0bfffbd282c5f265d7ab11340ee1e034bab09ea17d150", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcc1f61d-71a4-4dac-9866-8459ded60bce", "node_type": "1", "metadata": {"page_label": "358", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "db602cd9fd1e9ad959123e9d14200b76271efa7e3c6cf333bc4eb063926759ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "677862df-081b-4733-8a2a-1a40a5d5c706", "node_type": "1", "metadata": {}, "hash": "ee9023341967698fdb8296583eadcab62024eceef063a09f376d939f5f6b60e3", "class_name": "RelatedNodeInfo"}}, "hash": "df68baf349abdd278c48f2616f90d46f6150575452442c93ee2ea60e64aaefc8", "text": "359 \n \ndef buscar_bloque_libre (): \n    global archivo  \n    arch=open(archivo+'.txt','r')  \n    pos=arch.tell()  \n    linea=arch.readline()  \n    exito=False  \n    while linea!='': \n        [cod,cant,pre,nom]=linea_a_registro(linea)  \n        if cod==0:  \n            exito=True             break  \n        pos=arch.tell()  \n        linea=arch.readline()  \n    arch.close() \n    return [exito,pos]  \n \n  \ndef encera_registro (pos): \n    global archivo  \n    linea=leer_registro(pos) \n    [cod,cant,pre,nom]=linea_a_registro(linea)  \n    cod=0    \n    linea=str(cod).rjust(5)+','+str(cant).rjust(6)+','+  \n          str(pre).rjust(8)+','+nom.rjust(20)+'\\ n'     \n    arch=open(archivo+'.txt','r+') \n    arch.seek(pos) \n    arch.write(linea)  \n    arch.close()  \n \ndef reemplaza_registro (pos,k): \n    global archivo  \n    linea=leer_registro(pos) \n    [cod,cant,pre,nom]=linea_a_registro(linea)  \n    cant=cant+k  \n    linea=str(cod).rjust(5)+','+str(cant).rjust(6)+','+  \n          str(pre).rjust(8)+','+nom.rjust(20)+'\\ n' \n    arch=open(archivo+'.txt','r+') \n    arch.seek(pos) \n    arch.write(linea)  \n    arch.close() \n  \ndef linea_a_registro (linea): \n    x=linea.split(',') \n    cod=int(x[0])  \n    cant=int(x[1])     pre=float(x[2])  \n    nom=x[3][0:len(x[3]) -1] \n    return [cod,cant,pre,nom]  \n         \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "677862df-081b-4733-8a2a-1a40a5d5c706": {"__data__": {"id_": "677862df-081b-4733-8a2a-1a40a5d5c706", "embedding": null, "metadata": {"page_label": "360", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a73139d-e85e-4c3e-acf6-ba63f7aa8c19", "node_type": "4", "metadata": {"page_label": "360", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e446c5c6246f230bd60fcabc96b83e099f1d2b66f326d3b20e3bb9140ddbd7bf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3708d1ac-113f-4c1f-b448-983513aab3b6", "node_type": "1", "metadata": {"page_label": "359", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "df68baf349abdd278c48f2616f90d46f6150575452442c93ee2ea60e64aaefc8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50568410-9f92-4d60-b3ca-ecd1034f2eaa", "node_type": "1", "metadata": {}, "hash": "706e399f521f88a65ac8b128adacbee7a70b9988b5e6fd22c9ba1e90dbb9895f", "class_name": "RelatedNodeInfo"}}, "hash": "ee9023341967698fdb8296583eadcab62024eceef063a09f376d939f5f6b60e3", "text": "360 \n \n#Programa principal: Manejo de registros en disco  \napertura()  \nwhile True:  \n    print(' \\n1) Ingresar art\u00edculo')  \n    print('2) Consultar art\u00edculo') \n    print('3) Comprar')     print('4) Vender ') \n    print('5) Eliminar')     print('6) salir')     opc=input(' \\nElija una opci\u00f3n: ')  \n    if opc=='1':  \n        ingreso()         \n    elif  opc=='2':  \n        consulta()                 elif  opc=='3':  \n        comprar()  \n    elif opc=='4':  \n        vender()     elif opc=='5':  \n        eliminar()     elif opc=='6':  \n        print('Adi\u00f3s') \n        break  \n \n \n \n \n \nPrueba del programa  \n >>>  \nIngrese el nombre del archivo: ferretero  \nEl archivo no existe  \nDigite 1 si desea crear el archivo en el disco: 1  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) salir  \n \nElija una opci\u00f3n: 1 \nIngrese c\u00f3digo  : 123 \nIngrese cantidad: 20 \nIngrese precio   : 18.5 \nIngrese nombre : Taladro  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 975, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50568410-9f92-4d60-b3ca-ecd1034f2eaa": {"__data__": {"id_": "50568410-9f92-4d60-b3ca-ecd1034f2eaa", "embedding": null, "metadata": {"page_label": "361", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9c7b8c1-7e64-425b-8c69-3c9938cab3a6", "node_type": "4", "metadata": {"page_label": "361", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7092f610441d52ecc4462e895b850f4fc172e71d6e2a3b819f7abf2fd62a28e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "677862df-081b-4733-8a2a-1a40a5d5c706", "node_type": "1", "metadata": {"page_label": "360", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ee9023341967698fdb8296583eadcab62024eceef063a09f376d939f5f6b60e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e685ec38-941e-453a-bd20-ea7b4283fa86", "node_type": "1", "metadata": {}, "hash": "9e676400bf9c4329e1463544e651ef5c02cff58d71c432646a7fac892365bd92", "class_name": "RelatedNodeInfo"}}, "hash": "706e399f521f88a65ac8b128adacbee7a70b9988b5e6fd22c9ba1e90dbb9895f", "text": "361 \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) salir  \n \nElija una opci\u00f3n: 1 \nIngrese c\u00f3digo  : 234 \nIngrese cantidad: 40 \nIngrese precio   : 3.25 \nIngrese nombre : Flex\u00f3metro  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) salir  \n \nElija una opci\u00f3n: 1 \nIngrese c\u00f3digo  : 345 \nIngrese cantidad: 50 \nIngrese precio   : 2.45 \nIngrese nombre : Destornillador  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) salir  \n \nElija una opci\u00f3n: 2 \nIngrese c\u00f3digo: 234  \nC\u00f3digo:     234 \nCantidad:  40  \nPrecio:      3.25 \nNombre:    Flex\u00f3metro  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) salir  \n \nElija una opci\u00f3n: 3 \nIngrese c\u00f3digo: 234 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e685ec38-941e-453a-bd20-ea7b4283fa86": {"__data__": {"id_": "e685ec38-941e-453a-bd20-ea7b4283fa86", "embedding": null, "metadata": {"page_label": "362", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a35bdd4f-0ef9-4b16-b44f-30cc8cce69e7", "node_type": "4", "metadata": {"page_label": "362", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "63c895423d12a7ea3e28b83de1b904cce0aa59634a0fe19a339ee5de0b643542", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50568410-9f92-4d60-b3ca-ecd1034f2eaa", "node_type": "1", "metadata": {"page_label": "361", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "706e399f521f88a65ac8b128adacbee7a70b9988b5e6fd22c9ba1e90dbb9895f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67f6d0c7-898c-4958-b206-9b1cdea1ba07", "node_type": "1", "metadata": {}, "hash": "10d9c931909c31458127593407361fbd5dcc6dcdf3dee570c92f5420cf532fdb", "class_name": "RelatedNodeInfo"}}, "hash": "9e676400bf9c4329e1463544e651ef5c02cff58d71c432646a7fac892365bd92", "text": "362 \n \nIngrese la cantidad comprada: 5  \n \n1) Ingresar art\u00edculo  \n2) Consultar art\u00edculo  \n3) Comprar  \n4) Vender  \n5) Eliminar  \n6) salir  \n Elija una opci\u00f3n: 2 \nIngrese c\u00f3digo: 234  \nC\u00f3digo:     234 \nCantidad:  45  \nPrecio:      3.25 \nNombre:    Flex\u00f3metro  \n \n \n \nLos archivos son almacenados en el disco en formato texto, por lo cual se puede visualizar \nel contenido de estos archivos para constatar y depurar los programas  \n \nEl siguiente gr\u00e1fico  muestra en pantalla el  contenido del  archivo que fue  creado en el disco \npara el ejemplo anterior\n    \n \n           \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67f6d0c7-898c-4958-b206-9b1cdea1ba07": {"__data__": {"id_": "67f6d0c7-898c-4958-b206-9b1cdea1ba07", "embedding": null, "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7592c211-ad5d-4483-89ec-c29d018384e9", "node_type": "4", "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "085e954f31b30d8e90a4685f1567e87e83fc4e1ffcfe13ae5496b7046c663b5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e685ec38-941e-453a-bd20-ea7b4283fa86", "node_type": "1", "metadata": {"page_label": "362", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9e676400bf9c4329e1463544e651ef5c02cff58d71c432646a7fac892365bd92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b060f30e-6ee3-4cac-ad29-dbf098e40445", "node_type": "1", "metadata": {}, "hash": "843f54dd43dd1431d1b40fedffe19e89e5b6a7164e5e207a094d84222a5b1b44", "class_name": "RelatedNodeInfo"}}, "hash": "10d9c931909c31458127593407361fbd5dcc6dcdf3dee570c92f5420cf532fdb", "text": "363 \n \n8.4 Ejercicios de programaci \u00f3n con registros y archivos \n \n1. Escriba un programa para el pago a los n  vendedores por comisi\u00f3n de una empresa. \nPara cada vendedor se deben leer registros con los siguientes datos: C\u00f3digo de \nidentificaci\u00f3n, nombre del vendedor, nivel (entero que puede ser 1, 2, 3), y el monto en \ndinero vendido en el mes. El pago depende del nivel: nivel 1: $400, nivel 2: $500, nivel 3: \n$600. A este valor hay que agregar el 5% del valor de las ventas realizadas. Adicionalmente hay un bono de $100 al o los vendedores con el mayor valor de ventas.  \nLea los datos y muestre:  \n \na) El valor que hay qu e pagar a cada vendedor  \nb) El monto total que se requiere para pagar a todos los vendedores  \n \nLos datos deben almacenarse en listas en memoria.  \n 2. Se tiene una lista de n c\u00f3digos de art\u00edculos (n\u00fameros enteros) y la cantidad disponible \nde cada uno, y otra lista de m clientes (n\u00fameros enteros) junto con el c\u00f3digo del art\u00edculo \nque desea (un solo art\u00edculo por cliente) y la cantidad requerida.  \n \nAlmacene ambas listas en memoria y determin e la cantidad total sobrante o faltante de \ncada art\u00edculo para atender las solicitudes de todos los clientes.  \n \n3. Escriba un programa para control del registro de los estudiantes para un evento.  \n El sistema debe incluir las siguientes opciones en un men\u00fa:  \n1) Registrar estudiante  \n2) Eliminar estudiante  \n3) Consultar registro de estudiantes  \n4) Mostrar estudiantes registrados \n5) Salir \nLos datos ser\u00e1n manejados en una lista en memoria \n \n4. Escriba un programa con un men\u00fa para registrar estudiantes en uno de los dos \nparalelos de una materia mediante las opciones indicadas a continuaci\u00f3n. Cada paralelo \ndebe ser representado mediante un a lista para manejo en memoria.", "start_char_idx": 0, "end_char_idx": 1767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b060f30e-6ee3-4cac-ad29-dbf098e40445": {"__data__": {"id_": "b060f30e-6ee3-4cac-ad29-dbf098e40445", "embedding": null, "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7592c211-ad5d-4483-89ec-c29d018384e9", "node_type": "4", "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "085e954f31b30d8e90a4685f1567e87e83fc4e1ffcfe13ae5496b7046c663b5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67f6d0c7-898c-4958-b206-9b1cdea1ba07", "node_type": "1", "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "10d9c931909c31458127593407361fbd5dcc6dcdf3dee570c92f5420cf532fdb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae38bb0e-d32b-4c70-bd27-4c3026d8b6bf", "node_type": "1", "metadata": {}, "hash": "1f0838f476e85b020a48a45bb5eb1dd9b5865a62ed7292111e58cd36e1500b2b", "class_name": "RelatedNodeInfo"}}, "hash": "843f54dd43dd1431d1b40fedffe19e89e5b6a7164e5e207a094d84222a5b1b44", "text": "1) Registrar  \n          Lea el numero del paralelo elegido (1 o 2), luego lea el c\u00f3digo del  \n                  estudiante y agr\u00e9guelo a la lista  correspondiente \n2) Consultar  \n                   Lea el c\u00f3digo del estudiante, b\u00fasquelo en l as listas  y muestre el  \n                   paralelo en el que est\u00e1 registrado \n3) Cambiar  \n                   Lea el c\u00f3digo del estudiante. Si est\u00e1 registrado  elim\u00ednelo de la lista  \n                   y agr\u00e9guelo a  la otra lista \n4) Salir  \n \nPython Programaci\u00f3n", "start_char_idx": 1772, "end_char_idx": 2283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae38bb0e-d32b-4c70-bd27-4c3026d8b6bf": {"__data__": {"id_": "ae38bb0e-d32b-4c70-bd27-4c3026d8b6bf", "embedding": null, "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82ca54ac-254c-4c16-816a-aeb47e43a026", "node_type": "4", "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "98cf65509909de72d039e24620e24daf348c2ab9f3c854110b9d2364fa7d1984", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b060f30e-6ee3-4cac-ad29-dbf098e40445", "node_type": "1", "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "843f54dd43dd1431d1b40fedffe19e89e5b6a7164e5e207a094d84222a5b1b44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c32ed54-bb95-40f8-8ca5-ebe666011ac5", "node_type": "1", "metadata": {}, "hash": "df59fb815a386258fac23ac789da6205dea9135c49afa86a7fe0b38d563e2e25", "class_name": "RelatedNodeInfo"}}, "hash": "1f0838f476e85b020a48a45bb5eb1dd9b5865a62ed7292111e58cd36e1500b2b", "text": "364 \n \n5. Desarrolle una soluci\u00f3n en lenguaje Python para la siguiente aplicaci\u00f3n de control de los \nsocios en un club.  Para esta aplicaci\u00f3n use registros en memoria \n \nCada socio es un registro con tres datos:  \n \nC\u00f3digo:  entero, es la ide ntificaci\u00f3n del socio.  \nNombre:  texto \nCategor\u00eda:  entero: 1 si es ni\u00f1o, 2 si es adulto y 3 si es tercera edad \nCuotas:  n\u00famero de cuotas que el socio adeuda al club.  \n \nEl programa debe mostrar un men\u00fa con las siguientes opciones  \n \n1) Ingresar socio  \n2) Consul tar socio  \n3) Incrementar cuotas vencidas  \n4) Reducir cuotas vencidas  \n5) Borrar socio 6) Salir  \n \n6.  Dise\u00f1e y pruebe un sistema para control de los socios de un club mediante el men\u00fa:  \n1) Ingresar datos del socio  \n2) Consultar datos del socio  \n3) Salir \n \nLos datos deben s er almacenados en un archivo secuencial en disco  \n \nCada socio es un registro con tres datos:  \n \nC\u00f3digo: entero, es la identificaci\u00f3n del socio.  \nCategor\u00eda: entero: 1 si es ni\u00f1o, 2 si es adulto y 3 si es tercera edad \nCuotas: n\u00famero de cuotas que el socio adeu da al club.  \n \nLa primera opci\u00f3n permite ingresar los datos del socio en un registro y almacenarlo en un \narchivo  \n \nLa segunda opci\u00f3n pide el c\u00f3digo del socio, lo busca en el archivo, y en caso de existir, \nmuestra los datos . \n \n \n7. Cada libro de una biblioteca es un registro con los siguientes datos: c\u00f3digo, t\u00edtulo, \nubicaci\u00f3n (n\u00famero de estante, n\u00famero de fila y n\u00famero de columna).  \n \nEstos registros deben almacenarse en un archivo secuencial en disco con el nombre \n\u2018libros.txt\u2019 para realizar consultas.", "start_char_idx": 0, "end_char_idx": 1574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c32ed54-bb95-40f8-8ca5-ebe666011ac5": {"__data__": {"id_": "8c32ed54-bb95-40f8-8ca5-ebe666011ac5", "embedding": null, "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82ca54ac-254c-4c16-816a-aeb47e43a026", "node_type": "4", "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "98cf65509909de72d039e24620e24daf348c2ab9f3c854110b9d2364fa7d1984", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae38bb0e-d32b-4c70-bd27-4c3026d8b6bf", "node_type": "1", "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1f0838f476e85b020a48a45bb5eb1dd9b5865a62ed7292111e58cd36e1500b2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "46fdcc6c-7002-4a2d-b1e1-28286298c6b6", "node_type": "1", "metadata": {}, "hash": "cfa92e6ad3e1fc20b2b2f69c762c548b14a2f6f23433899c848ef1758785df8a", "class_name": "RelatedNodeInfo"}}, "hash": "df59fb815a386258fac23ac789da6205dea9135c49afa86a7fe0b38d563e2e25", "text": "Cada regist ro debe convertirse a una l\u00ednea de texto \nagregado al final  la marca \u2018 \\n\u2019 \n \n \nEscriba un programa que ofrezca las siguientes opciones:  \n \n1) Agregar libro   (agregar los datos de un libro al archivo en disco)  \n2) Consulta de libro   (dado el c\u00f3digo mostrar el t \u00edtulo y ubicaci\u00f3n)  \n3) Salir  \n \nPython Programaci\u00f3n", "start_char_idx": 1575, "end_char_idx": 1907, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "46fdcc6c-7002-4a2d-b1e1-28286298c6b6": {"__data__": {"id_": "46fdcc6c-7002-4a2d-b1e1-28286298c6b6", "embedding": null, "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "539b671e-252e-47d3-83f4-4fb086e619b1", "node_type": "4", "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "efb7408e80635237c7cfe767a1bfdf76084c3236c2ef792cdd0c74b21553bfbe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c32ed54-bb95-40f8-8ca5-ebe666011ac5", "node_type": "1", "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "df59fb815a386258fac23ac789da6205dea9135c49afa86a7fe0b38d563e2e25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7988a0b8-7bff-4d55-8877-ad3a7570f1a2", "node_type": "1", "metadata": {}, "hash": "303aabb0904503e84426607bc7944d5acb685b2a44d5ba72768d33208c261ac0", "class_name": "RelatedNodeInfo"}}, "hash": "cfa92e6ad3e1fc20b2b2f69c762c548b14a2f6f23433899c848ef1758785df8a", "text": "365 \n \n8.  El Ministerio de Salud requiere implementar un programa para gesti\u00f3n de donantes de \nsangre que permita registrar y consultar resultados con el men\u00fa mostrado.  Los datos \ndeben almacenarse en forma permanente en el disco.  \n \n1. Ingreso de donante  \n2. Consulta de donante  \n3. Cosulta por tipo de sangre  \n4. Salir  \n \nLa informaci\u00f3n que se registra por paciente es: c\u00e9dula, nombre, edad y  tipo de sangre \nLa consulta por donante muestra el nombre del donante y su tipo de sangre, dado el \nn\u00fame ro de c\u00e9dula.  \nLa consulta por tipo de sangre presenta el n\u00famero de donantes por tipo de sangre  \n \nEl tipo de sangre es un n\u00famero (1, 2, 3, 4, 5, 6, 7, 8) los cuales corresponden a los \nsiguientes tipos: (1) O -, (2) O+, (3) A -, (4) A+, (5) B -, (6) B+, (7) AB -, (8) AB+  \n9.  Dise\u00f1o de un sistema de registro y control de atenci\u00f3n de los pacientes de una cl\u00ednica.  \nLos datos deben almacenarse en disco.", "start_char_idx": 0, "end_char_idx": 916, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7988a0b8-7bff-4d55-8877-ad3a7570f1a2": {"__data__": {"id_": "7988a0b8-7bff-4d55-8877-ad3a7570f1a2", "embedding": null, "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "539b671e-252e-47d3-83f4-4fb086e619b1", "node_type": "4", "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "efb7408e80635237c7cfe767a1bfdf76084c3236c2ef792cdd0c74b21553bfbe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46fdcc6c-7002-4a2d-b1e1-28286298c6b6", "node_type": "1", "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cfa92e6ad3e1fc20b2b2f69c762c548b14a2f6f23433899c848ef1758785df8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d98fed7b-1414-428b-a54c-8dde77f3f76c", "node_type": "1", "metadata": {}, "hash": "09e0af85c8f351407f7c138dad6c5be15e350f6a9638204b8cd4ae0e9aafbe4b", "class_name": "RelatedNodeInfo"}}, "hash": "303aabb0904503e84426607bc7944d5acb685b2a44d5ba72768d33208c261ac0", "text": "Los datos deben almacenarse en disco.  \nMen\u00fa con las opciones y acciones que se deben instrumentar  \n \n   1.- Ingreso de Paciente  \n        Ingresar y almacenar  los datos del paciente:  \n              C\u00f3digo del paciente  \n              C\u00f3digo de la enfermedad \n              C\u00f3digo del m\u00e9dico tratante \n  2.- Consulta de paciente  \n        Ingresar el c\u00f3digo del paciente  \n        Mostrar el c\u00f3digo de la enfermedad y el c \u00f3digo del m\u00e9dico tratante \n  3.- Dar de alta a un paciente  \n        Ingresar el c\u00f3digo de un paciente  \n        Eliminar el registro del paciente  \n  4.- Consulta de m\u00e9dico \n       Ingresar el c\u00f3digo de un m\u00e9dico        Mostrar la lista de los c\u00f3digos de los paci entes asignados  \n  5.- Consulta de enfermedad \n        Ingresar el c\u00f3digo de una enfermedad \n        Mostrar la lista de los c\u00f3digos de los pacientes que la tienen \n  6.- Salir \n10.  Dise\u00f1o de un sistema para registro y control de alquiler de veh\u00edculos   \nLos dat os deben almacenarse en disco.  \nMen\u00fa con las opciones y acciones que se deben instrumentar  \n \n   1.- Registro de veh\u00edculo  \n        Ingresar y almacenar los datos del veh\u00edculo:  \n              C\u00f3digo del veh\u00edculo (entero positivo)  \n              Tipo de veh\u00edculo (1: auto, 2: campero, 3: camioneta)  \n              Estado del veh\u00edculo  (0: libre,  1: alquilado, 2: en reparaci\u00f3n)  \n     C\u00f3digo del cliente  en uso  del veh\u00edculo (0 inicialmente)  \n  2.- Consulta de veh\u00edculo  \nPython Programaci\u00f3n", "start_char_idx": 879, "end_char_idx": 2333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d98fed7b-1414-428b-a54c-8dde77f3f76c": {"__data__": {"id_": "d98fed7b-1414-428b-a54c-8dde77f3f76c", "embedding": null, "metadata": {"page_label": "366", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5449077e-d179-4824-a75a-41c3ed71c337", "node_type": "4", "metadata": {"page_label": "366", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2e786d0282d3634108e4f43a4337bd0e6573624d4feeb8e6acd9e50935f27ec7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7988a0b8-7bff-4d55-8877-ad3a7570f1a2", "node_type": "1", "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "303aabb0904503e84426607bc7944d5acb685b2a44d5ba72768d33208c261ac0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "424f6f3e-e511-4e40-ab8f-ed374d107594", "node_type": "1", "metadata": {}, "hash": "b30bb324153213531c023e8cd193236d9c229f0599aa0af56b247af8a6f498af", "class_name": "RelatedNodeInfo"}}, "hash": "09e0af85c8f351407f7c138dad6c5be15e350f6a9638204b8cd4ae0e9aafbe4b", "text": "366 \n \n        Ingresar el c\u00f3digo del veh\u00edculo  \n        M ostrar el tipo y estado del veh\u00edculo  y el c\u00f3digo del cliente en uso.  \n  3.- Alquiler de veh\u00edculo  \n        Leer c\u00f3digo del cliente (entero positivo)  \n        Leer tipo de acci\u00f3n (0: alquila, 1: devuelve)  \n        Cambiar el estado del veh\u00edculo  \n  4.- Reparaci\u00f3n  de veh\u00edculo  \n        Ingresar el c\u00f3digo de un veh\u00edculo  \n        Cambiar el estado del veh\u00edculo  \n  5.- Dar de baja veh\u00edculo  \n        Ingresar el c\u00f3digo del veh\u00edculo  \n        Eliminar el registro de veh\u00edculo del archivo \n  6.- Salir \n \n \n11. Dise\u00f1e y pruebe un sistema para control del alquiler de los n casilleros de un club.  Los \ncasilleros son numerados 1, 2, 3, ..., n.  \n \nInicialmente cada uno contiene el valor 0: disponible  \n1) Asignar casillero  \n2) Consultar casillero  \n3)       Buscar usuario  \n4) Notificar casilleros vencidos  \n5)       Liberar casillero   \n6) Salir       \n \nCada usuario del casillero contiene los siguientes datos:  \nC\u00f3digo: entero, es la identificaci\u00f3n del socio.  \nNombre: Nombre y apellido del socio \nMes: entero que indica el n\u00famero del mes de vencimiento de uso del casillero  \n Los datos deben almacenarse en el disco \n \nLa opci\u00f3n 1 almacena el c\u00f3digo del usuario , nomre  y el n\u00famero del mes de vencimiento.  \nLa opci\u00f3n 2 muestra un mensaje: casillero disponible o el c\u00f3digo del usuario y el n\u00famer o \ndel mes de vencimiento de uso, dado el  n\u00famero del casillero \nLa opci\u00f3n 3, muestra los datos del socio y su casillero asignado, dado el c\u00f3digo del socio  \nLa opci\u00f3n 4  lista los casilleros y usuarios cuyo mes es mayor o igual a un mes dado.  \nLa opci\u00f3n 5, l ibera un casillero dado su n\u00famero \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1687, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "424f6f3e-e511-4e40-ab8f-ed374d107594": {"__data__": {"id_": "424f6f3e-e511-4e40-ab8f-ed374d107594", "embedding": null, "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2073e0f3-4fe5-4407-a994-88305ff20770", "node_type": "4", "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dcfc5de94a2ffa7b6b729ec82372063bc80eef45b1bf2dc81d9c69cf876355fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d98fed7b-1414-428b-a54c-8dde77f3f76c", "node_type": "1", "metadata": {"page_label": "366", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09e0af85c8f351407f7c138dad6c5be15e350f6a9638204b8cd4ae0e9aafbe4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "320b3a99-8f04-49f4-aef0-347bd1ea6fdc", "node_type": "1", "metadata": {}, "hash": "5e1c786f7df2eb75c9fe4ced8221578793d9d5ebbb0ae5751ea7d28507b4427b", "class_name": "RelatedNodeInfo"}}, "hash": "b30bb324153213531c023e8cd193236d9c229f0599aa0af56b247af8a6f498af", "text": "367 \n \n9 Soluci ones propuestas para problemas de ex\u00e1menes de \n  programaci\u00f3n  de computadoras con el lenguaje Python \n \nEn esta secci\u00f3n se desarrollan soluciones para temas de ex\u00e1menes recientes de la \nmateria Fundamentos de Programaci\u00f3n ( CCPG1001) receptados en la Facultad de \nIngenier\u00eda El\u00e9ctrica y Computaci\u00f3n (FIEC) de la Escuela Superior P olit\u00e9cnica del Litoral \n(ESPOL) .  \n \nEstos problemas  representan los requerimientos actuales de conocimiento del le nguaje \nPython que se incluyen en estas  evaluaciones . \n \n \nEjercicio 9. 1 El sigu iente ejercicio corresponde al  enunciado del primer tema del examen \nde la Primera Evaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   \nFIEC \u2013 ESPOL \u2013 Primer T\u00e9rmino, 2016) : \n Suponga que est\u00e1 disponible la siguiente lista de los URLs de diferen tes sitios Web que \nhan sido visitados  \n lista=['www.espol.edu.ec','www.google.com','www.sri.gob.ec','www.fiec.esp\nol.edu.ec','www.uess.edu.ec','www.FIEC.espol.edu.ec','www.fict.espol.edu.ec','www.fcnm.espol.edu.ec','www.ucsg.edu.ec','www.Stanford.edu','www.har\nvard.edu','www.stanford.edu','www.UCSG.edu.ec','www.google.com.ec','www.f\nacebook.com','www.opensource.org','www.educacionbc.edu.mx']  \n \nLos URLs se pueden repetir y algun os corresponden a universidades del Ecuador y de \notros pa\u00edses.  \n \nLos URLs no diferencia n entre may\u00fasculas y min\u00fasculas. Por ejemplo. www,espol.edu.ec y \nwww.ESPOL.edu.ec  representan el mismo sitio Web.", "start_char_idx": 0, "end_char_idx": 1455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "320b3a99-8f04-49f4-aef0-347bd1ea6fdc": {"__data__": {"id_": "320b3a99-8f04-49f4-aef0-347bd1ea6fdc", "embedding": null, "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2073e0f3-4fe5-4407-a994-88305ff20770", "node_type": "4", "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dcfc5de94a2ffa7b6b729ec82372063bc80eef45b1bf2dc81d9c69cf876355fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "424f6f3e-e511-4e40-ab8f-ed374d107594", "node_type": "1", "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b30bb324153213531c023e8cd193236d9c229f0599aa0af56b247af8a6f498af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fa5ec7b-9e0c-4185-ad0a-087f409175fa", "node_type": "1", "metadata": {}, "hash": "e4fb7928eb96c7100f7e25eb9c8864fba2c58bcfdd9e149af93632a2e7b833f3", "class_name": "RelatedNodeInfo"}}, "hash": "5e1c786f7df2eb75c9fe4ced8221578793d9d5ebbb0ae5751ea7d28507b4427b", "text": "Escriba un programa que dada la lista indicada realice lo siguiente  \n \na. Muestre numerados los nombres  o siglas de las universidades que aparecen en la lista \n(sin repetir)  \n  \nb. Muestre la cantidad y el n\u00famero y los nombres o siglas de las universidades del \nEcuador que aparecen en la lista (sin repetir)  \n \n \nc. Dado el nombre de un usuario y el nombre o sigla de la universidad,  imprima la \nidentificaci\u00f3n del correo del usuario con el formato del siguiente ejemplo:  \n \njuan_perez@espol.edu.ec  \n \nPython Programaci\u00f3n", "start_char_idx": 1460, "end_char_idx": 1989, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4fa5ec7b-9e0c-4185-ad0a-087f409175fa": {"__data__": {"id_": "4fa5ec7b-9e0c-4185-ad0a-087f409175fa", "embedding": null, "metadata": {"page_label": "368", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80ad3994-53e2-4326-903f-503fd21f505a", "node_type": "4", "metadata": {"page_label": "368", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cc1d2eb257351fbb602dc3ca2e1801bc8d7ba9b997d4eab36df11ecbfe789db9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "320b3a99-8f04-49f4-aef0-347bd1ea6fdc", "node_type": "1", "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5e1c786f7df2eb75c9fe4ced8221578793d9d5ebbb0ae5751ea7d28507b4427b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "368c2271-568f-4caf-953d-dcc2eec54100", "node_type": "1", "metadata": {}, "hash": "9cd45db844f441aeb3ee508980d0510fe8ca8309dcebaa294ee7360d344aa303", "class_name": "RelatedNodeInfo"}}, "hash": "e4fb7928eb96c7100f7e25eb9c8864fba2c58bcfdd9e149af93632a2e7b833f3", "text": "368 \n \nPrograma propuesto \n \nEn la soluci\u00f3n solicitada en el examen no es necesario escribir la lista de URLs. En la \nsoluci\u00f3n propuesta la lista se la incluye al inicio del programa para que pueda ser utilizada \nen las  pruebas.  \n \n \nlista=['www.espol.edu.ec','www.google.com','www.sri.gob.ec','www.fie\nc.espol.edu.ec','www.uess.edu.ec','www.FIEC.espol.edu.ec','www.fict.\nespol.edu.ec','www.fcnm.espol.edu.ec','www.ucsg.edu.ec','www.Stanfor\nd.edu','www.harvard.edu','www.stanford.edu','www.UCSG.edu.ec','www.g\noogle.com.ec','www.facebook.com','www.opensource.org','www.educacion\nbc.edu.mx']  \n \nuniv_nombres=[]  \nuniv_ecuador=[]  \nfor u in lista: \n    u=u.upper()  \n    url=u.split('.')  \n    if 'EDU' in url and url[1] not in univ_nombres and  \n                        url[2] not in univ_nombres:  \n        univ_nombres.append(url[1])  \n        if 'EC'in url: \n            univ_ecuador.append(url[1])  \n \nprint('Nombres de universidades')  \nfor i in range(len(univ_nombres)):  \n    print(i+1,' ',univ_nombres[i])  \n     \nprint('\\ nUniversidades de Ecuador')  \nprint('Cantidad: ',len(univ_ecuador )) \nfor i in range(len(univ_ecuador)):  \n    print(i+1,' ',univ_ecuador[i])  \n usuario=input('\\ nIngrese el usuario: ').upper()  \nuniver=input('Universidad: ').upper() \nfor u in lista: \n    u=u.upper()  \n    url=u.split('.')  \n    if univer in url: \n        correo=usuario+'@'  \n        for j in range(1,len(url)):  \n            correo=correo+str(url[j])+'.'  \n        print('Correo de usuario\\ n',correo[:- 1].lower())  \n        break  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1564, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "368c2271-568f-4caf-953d-dcc2eec54100": {"__data__": {"id_": "368c2271-568f-4caf-953d-dcc2eec54100", "embedding": null, "metadata": {"page_label": "369", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6b47ce6-d660-4878-950e-5c674b593a87", "node_type": "4", "metadata": {"page_label": "369", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f8e897754b83e47339b80007653d6816725aa4261d8ce947327b64f53f0f3fe2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fa5ec7b-9e0c-4185-ad0a-087f409175fa", "node_type": "1", "metadata": {"page_label": "368", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4fb7928eb96c7100f7e25eb9c8864fba2c58bcfdd9e149af93632a2e7b833f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a4a5e4b-c9eb-446e-aa06-5832ea605c03", "node_type": "1", "metadata": {}, "hash": "4aa694be3590b5bf6cb4d4f2a0b3afb43b667c1a3c755ba032c559457e3460a2", "class_name": "RelatedNodeInfo"}}, "hash": "9cd45db844f441aeb3ee508980d0510fe8ca8309dcebaa294ee7360d344aa303", "text": "369 \n \nPrueba del programa  \n \n>>>  \nNombres de universidades  \n1   ESPOL  \n2   UESS  \n3   UCSG  \n4   STANFORD  \n5   HARVARD  \n6   EDUCACIONBC  \n Universidades de Ecuador  \nCantidad 3  \n1   ESPOL  \n2   UESS  \n3   UCSG  \n Ingrese el usuario: juan.perez  \nUniversidad: espol \nCorreo de usuario  \n juan.perez@espol.edu.ec  \n>>> \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 349, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a4a5e4b-c9eb-446e-aa06-5832ea605c03": {"__data__": {"id_": "5a4a5e4b-c9eb-446e-aa06-5832ea605c03", "embedding": null, "metadata": {"page_label": "370", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3343c01d-b616-4332-af5e-44fa55b4234d", "node_type": "4", "metadata": {"page_label": "370", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c460ae5464322d8162ec734a02e9125fdbd1f3f86c628b4dd71e4ffcf6bdb5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "368c2271-568f-4caf-953d-dcc2eec54100", "node_type": "1", "metadata": {"page_label": "369", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9cd45db844f441aeb3ee508980d0510fe8ca8309dcebaa294ee7360d344aa303", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae74e51e-bef5-4c9c-96a3-1db7b646b3ea", "node_type": "1", "metadata": {}, "hash": "c9b6cca0fc3055bee5e381928818e089073a07004bc2b9a8b7a35723a0b2c142", "class_name": "RelatedNodeInfo"}}, "hash": "4aa694be3590b5bf6cb4d4f2a0b3afb43b667c1a3c755ba032c559457e3460a2", "text": "370 \n \nEjercicio 9. 2  El siguiente ejercicio corresponde a l enunciado del segundo tema del \nexamen de la Primera Evaluaci\u00f3n de  la materia Fundamentos de Programaci\u00f3n \n(CCPG1001 \u2013  FIEC \u2013 ESPOL \u2013 Primer T\u00e9rmino, 2016) : \n \nUna empresa registra las visitas a sitios de internet que realizan sus empleado y los minutos de navegaci\u00f3n. Cada registro se almacena en una cadena de texto con el  formato \n'empleado|sitio de internet visitado|minutos' :  \n \nvisitados=['mar\u00eda|www.facebook.com|160','javier|www.youtube.com|50',  \n           'jos\u00e9|www.sri.gob.ec|30','mar\u00eda|www.twitter.com|30',  \n           'javier|www.inec.gob.ec|10','mar\u00eda|www.espol.edu.ec|50',  \n           'jos\u00e9|www.sri.gob.ec|120','javier|www.sri.gob.ec|20',  \n  . . . \n           'mar\u00eda|www.twitter.com|20'] \n \nSe dispone tambi\u00e9n de la lista de los empleados y de la lista de los sitios de intenet que \nusan los empleados para su trabajo.  \n \nempleados=['mar\u00eda','jos\u00e9',...,'javier']  \ntrabajo=['www.espol.edu.ec','www.inec.gob.ec', ...,'www.sri.gob.ec']  \n \n \nSe desea escribir un programa para analizar la  informaci\u00f3n de las listas \u2018visitados\u2019, \n\u2018empleados\u2019 y  \u2018trabajo\u2019 y producir los siguientes reportes:  \n \na. Lista de los sitios de internet visitados que son de diversi\u00f3n (no son de trabajo)  \n \nb. Cuadro del tiempo en minutos usados por  cada empleado en cada sitio vi sitado \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1377, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae74e51e-bef5-4c9c-96a3-1db7b646b3ea": {"__data__": {"id_": "ae74e51e-bef5-4c9c-96a3-1db7b646b3ea", "embedding": null, "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3553a940-617e-4492-aa86-380626e9ee8a", "node_type": "4", "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "db25b8f2175d74ab51de5e75a1c4ff37e4e249f4ab71b39f95e0138c0d95ab48", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a4a5e4b-c9eb-446e-aa06-5832ea605c03", "node_type": "1", "metadata": {"page_label": "370", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4aa694be3590b5bf6cb4d4f2a0b3afb43b667c1a3c755ba032c559457e3460a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24d91793-7977-42ca-934d-fbff41c712ad", "node_type": "1", "metadata": {}, "hash": "d15ac7af0143c960a7921b8397fb9360bd77053cea037a124165196a664a3388", "class_name": "RelatedNodeInfo"}}, "hash": "c9b6cca0fc3055bee5e381928818e089073a07004bc2b9a8b7a35723a0b2c142", "text": "371 \n \nEn la soluci\u00f3n propuesta a continuaci\u00f3n se incluyen los datos dentro del programa \nsolamente par a realizar pruebas . Los comentarios se agregan con fines did\u00e1cticos.  \n \n \nvisitados=['mar\u00eda|www.facebook.com|160','javier|www.youtube.com|50',  \n           'jos\u00e9|www.sri.gob.ec|30','mar\u00eda|www.twitter.com|30',  \n           'javier|www.inec.gob.ec|10','mar\u00eda|www.espol.edu.ec|50',  \n           'jos\u00e9|www.sri.gob.ec|120','javier|www.sri.gob.ec|20',  \n           'mar\u00eda|www.twitter.com|20'] \nempleados=['mar\u00eda','jos\u00e9','javier']  \ntrabajo=['www.espol.edu.ec','www.inec.gob.ec','www.sri.gob.ec']  \n \nimport numpy as np \nt=len(visitados)  \nn=len(empleados)  \np=len(trabajo)  \n \ndiversion=[]    #Lista de sitios de diversi\u00f3n  \nfor v in visitados:   #Examinar cada registro de visitas  \n    dato=v.split('|')     #Separa el registro de visita en una lista  \n    if dato[1] not in diversion and dato[1] not in trabajo:  \n        diversion.append(dato[1])  \n q=len(diversion)  \nprint('Lista de sitios de diversi\u00f3n \\n',diversion)  \n cuadro=np.zeros([n,p+q],dtype=int)  \nfor i in range(n):   #Ciclo para examinar cada empleado  \n    for v in  visitados:  #Examinar cada registro de visitas  \n        dato=v.split('|')  #Separa el registro de visita en una lista  \n        if empleados[i]==dato[0]:   #Empleado es localizado  \n            for j in range(p):     #Coloca los minutos en el cuadro  \n                if  dato[1]==trabajo[j]:       #en sitio de trabajo  \n                    cuadro[i,", "start_char_idx": 0, "end_char_idx": 1488, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24d91793-7977-42ca-934d-fbff41c712ad": {"__data__": {"id_": "24d91793-7977-42ca-934d-fbff41c712ad", "embedding": null, "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3553a940-617e-4492-aa86-380626e9ee8a", "node_type": "4", "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "db25b8f2175d74ab51de5e75a1c4ff37e4e249f4ab71b39f95e0138c0d95ab48", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae74e51e-bef5-4c9c-96a3-1db7b646b3ea", "node_type": "1", "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c9b6cca0fc3055bee5e381928818e089073a07004bc2b9a8b7a35723a0b2c142", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0753eb33-6e21-4e91-9bef-05109152ff48", "node_type": "1", "metadata": {}, "hash": "319b0b7c4dca19b83ecfc6b6b4aa977223baa5480f2610fe2fc3b6abe7c3175b", "class_name": "RelatedNodeInfo"}}, "hash": "d15ac7af0143c960a7921b8397fb9360bd77053cea037a124165196a664a3388", "text": "j]=cuadro[i,j]+int (dato[2])  \n            for j in range(q):     #Coloca los minutos en el cuadro  \n                if  dato[1]==diversion[j]:     #en sitio de diversi\u00f3n  \n                    cuadro[i,j+q]=cuadro[i,j+q]+int( dato[2])  \nprint('Cuadro de registro de tiempos\\ n',cuadro)  \n \n \nPrueba del programa  \n >>>  \nLista de sitios de diversi\u00f3n  \n ['www.facebook.com', 'www.youtube.com', 'www.twitter.com']  \nCuadro de registro de tiempos  \n[[ 50   0   0 160   0  50]  \n [  0   0 150   0   0   0 ] \n [  0  10  20   0  50   0]]  \nPython Programaci\u00f3n", "start_char_idx": 1488, "end_char_idx": 2041, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0753eb33-6e21-4e91-9bef-05109152ff48": {"__data__": {"id_": "0753eb33-6e21-4e91-9bef-05109152ff48", "embedding": null, "metadata": {"page_label": "372", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "622bcaa2-9fbd-440c-b621-add1c94dc179", "node_type": "4", "metadata": {"page_label": "372", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c6122a67cb90d0aae2ddddfe6e3013bcfb4a2eae4afd8926f7f62278fca28f17", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24d91793-7977-42ca-934d-fbff41c712ad", "node_type": "1", "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d15ac7af0143c960a7921b8397fb9360bd77053cea037a124165196a664a3388", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0f60573-1f2d-40b3-b48b-6d6afcc4a193", "node_type": "1", "metadata": {}, "hash": "cde99b1339c55617a3b5ec19176226b3b48be959effae83ad46b72925131bd4a", "class_name": "RelatedNodeInfo"}}, "hash": "319b0b7c4dca19b83ecfc6b6b4aa977223baa5480f2610fe2fc3b6abe7c3175b", "text": "372 \n \nEjercicio 9.3  El uso de \u00edndices en Python es un instrumento muy flexible y potente para \nmanejar porciones de arreglos. El siguiente ejercicio es un ejemplo de referencia del uso \nde \u201cslicing\u201d en matrices.  \n \nEste ejercicio corr esponde al tercer tema del examen de la Primera Evaluaci\u00f3n de la \nmateria Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   FIEC \u2013 ESPOL \u2013 Primer T\u00e8rmino, \n2016):  \n \nSuponer  que se dispone de un cuadro que contiene el tiempo en minutos de internet usado \npor los empleados de una empresa en sitios categorizados como \u201ctrabajo\u201d y \u201cdiversi\u00f3n\u201d:  \n \n TRABAJO  DIVERSI\u00d3N  \n ESPOL  INEC  SRI FACEBOOK  YOUTUBE  TWITTER  \nMARIA  50 10 0 160 20 50 \nJOSE  40 5 150 0 25 10 \nJAVIER  5 10 20 30 50 40 \n Escriba un programa para elaborar un reporte con informaci\u00f3n de inter\u00e9s relacionada con \nel uso de internet seg\u00fan se indica en cada uno de los siguientes literales.  Las respuestas \ndeben mostrase por pantalla.  \n \na. Almacenar el cuadro de datos en un arreglo \n b. Almacenar los nombres de empleados y sitios de internet en listas \n c. Determinar el tiempo total de uso de internet  \n d. Determinar el tiempo total de uso de internet por empleado  \n \ne. Determinar el tiempo total de uso de internet por sitios de trabajo  \n \nf. Determinar el tiempo total de uso de internet  por sitios de diversi\u00f3n \n g. Determinar  cual es el empleado con m\u00e1s tiempo en sitios de diversi\u00f3n \n \nh. Determinar cual sitio de trabajo ha sido usado m\u00e1s tiempo \n i. Determinar el costo total de uso de internet sabiendo que cada minuto de los sitios de \ntraba jo cuesta 5 cvs. y 10 cvs. cada minuto de los sitios de diversi\u00f3n \n \nj. Determinar la cantidad total de empleados que han visitado cada sitio de internet  \nPrograma  \n \n \n \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0f60573-1f2d-40b3-b48b-6d6afcc4a193": {"__data__": {"id_": "f0f60573-1f2d-40b3-b48b-6d6afcc4a193", "embedding": null, "metadata": {"page_label": "373", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "654c4d42-60c2-46b9-92b1-d2a697f5641b", "node_type": "4", "metadata": {"page_label": "373", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a4319a0ddb131cac5f9fb68f5065fade3c3e50462837398a61a43afd8348e8c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0753eb33-6e21-4e91-9bef-05109152ff48", "node_type": "1", "metadata": {"page_label": "372", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "319b0b7c4dca19b83ecfc6b6b4aa977223baa5480f2610fe2fc3b6abe7c3175b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1566818-8d78-494d-a7f0-5895a46ad573", "node_type": "1", "metadata": {}, "hash": "a45be1fdf6b8d42d6806ed4008ea1a382e554e313057179d6753cdaa728a9c5e", "class_name": "RelatedNodeInfo"}}, "hash": "cde99b1339c55617a3b5ec19176226b3b48be959effae83ad46b72925131bd4a", "text": "373 \n \nPrograma propuesto \n \n \n# Almacenar el cuadro de datos en un arreglo  \n import numpy as np \ncuadro=np.array([[50,10,0,160,20,50],[40,5,150,0,25,10],  \n[5,10,20,30,50,40]])  \nprint('Cuadro de datos')  \nprint(cuadro)  \n # Almacenar nombres de empleados y sitios de internet en listas  \n \nempleados=['MARIA','JOSE','JAVIER']  \ntrabajo=['ESPOL','INEC','SRI']  \ndiversion=['FACEBOOK','YOUTUBE','TWITTER']  \nn=len(empleados)  \np=len(trabajo)  \nq=len(diversion)  \n \n# Determinar el tiempo total de uso de internet  \n \nprint('\\ nTiempo total de uso de internet')  \nprint(np.sum(cuadro))  \n \n# Determinar el tiempo total de uso de internet por empleado  \n print('\\ nTiempo total de uso de internet por empleado')  \nfor i in range(n):  \n    print(empleados[i],np.sum(cuadro[i,:]))  \n # Tiempo total de uso de internet por sitios de trabajo  \n print('\\ nTiempo total de uso de internet por sitios de trabajo')     \nfor i in range(p):  \n    print(trabajo[i],np.sum(cuadro[:,i]))  \n # Tiempo total de uso de internet por sitios de diversi\u00f3n  \n \nprint('\\ nTiempo total de uso de internet por sitios de diversi\u00f3n')  \nfor i in range(q):  \n    print(diversion[i],np.sum(cuadro[:,p+i]))  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1566818-8d78-494d-a7f0-5895a46ad573": {"__data__": {"id_": "e1566818-8d78-494d-a7f0-5895a46ad573", "embedding": null, "metadata": {"page_label": "374", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47bd1ca3-79cd-4799-96ab-7d2f5defae24", "node_type": "4", "metadata": {"page_label": "374", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "96bf68d9d905c17d788166d75f5b8c8a4a2d4141a0edf92715f3202d169c44ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0f60573-1f2d-40b3-b48b-6d6afcc4a193", "node_type": "1", "metadata": {"page_label": "373", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cde99b1339c55617a3b5ec19176226b3b48be959effae83ad46b72925131bd4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60eebb48-3c16-4f2c-a91f-7b9ebfbfe8f6", "node_type": "1", "metadata": {}, "hash": "9564e4ff09512d7dd9068587636e9619edbc177968bf2f359bd6bb409ed2c25b", "class_name": "RelatedNodeInfo"}}, "hash": "a45be1fdf6b8d42d6806ed4008ea1a382e554e313057179d6753cdaa728a9c5e", "text": "374 \n \n \n# Cual es el empleado con m\u00e1s tiempo en sitios de diversi\u00f3n  \n \nprint('\\ nEmpleado con m\u00e1s tiempo en sitios de diversi\u00f3n')  \ntiempodiversion=np.zeros(q,dtype=int) \nfor i in range(n):  \n    tiempodiversion[i]=np.sum(cuadro[i,p:])  \n k=np.argmax(tiempodiversion)  \nprint(empleados[k])  \n # Determinar cual sitio de trabajo ha sido usado m\u00e1s tiempo  \n print('\\ nSitio de trabajo usado m\u00e1s tiempo')  \ntiempotrabajo=np.zeros(p,dtype=int)  \nfor i in range(p):  \n    tiempotrabajo[i]=np.sum(cuadro[:,i])  \n \nk=np.argmax(tiempotrabajo)  \nprint(trabajo[k])  \n \n# Determinar el costo total de uso de internet  \n \nprint('\\ nCosto total de uso de internet')  \ns=0.05*np.sum(cuadro[:,:p])+0.1*np.sum(cuadro[:,p:p+q])  \nprint('$',s)  \n # Cantidad total de empleados que han visitado cada sitio  \n \nprint('\\ nTotal de empleados que han usado cada sitio de internet')  \nfor i in range(p):  \n    print(trabajo[i],np.sum(cuadro[:,i]>0))  \n \nfor i in range(q):  \n    print(diversion[i],np.sum(cuadro[:,p+i]>0))  \n \n \n \nPrueba del programa  \n \n>>>  \nCuadro de datos  \n[[ 50  10   0 160  20  50]  \n [ 40   5 150   0  25  10]  \n [  5  10  20  30  50  40]]  \n Tiempo total de uso de internet  \n675 \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60eebb48-3c16-4f2c-a91f-7b9ebfbfe8f6": {"__data__": {"id_": "60eebb48-3c16-4f2c-a91f-7b9ebfbfe8f6", "embedding": null, "metadata": {"page_label": "375", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99922753-730b-412d-af74-78ea435d32ab", "node_type": "4", "metadata": {"page_label": "375", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b88989f00f182e86d9d72a292529266b26f89a82b6a0ce1d4e03bacf4603aea", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1566818-8d78-494d-a7f0-5895a46ad573", "node_type": "1", "metadata": {"page_label": "374", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a45be1fdf6b8d42d6806ed4008ea1a382e554e313057179d6753cdaa728a9c5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d9d8122-5620-4834-9d73-db80c49bb567", "node_type": "1", "metadata": {}, "hash": "7a949c770eb9287c32b65928c57a8925cc82f12ab534146fb29ada668061764a", "class_name": "RelatedNodeInfo"}}, "hash": "9564e4ff09512d7dd9068587636e9619edbc177968bf2f359bd6bb409ed2c25b", "text": "375 \n \nTiempo total de uso de internet por empleado  \nMARIA 290  \nJOSE 230  \nJAVIER 155  \n \nTiempo total de uso de internet por sitios de trabajo  \nESPOL 95  \nINEC 25 \nSRI 170 \n \nTiempo total de uso de internet por sitios de diversi\u00f3n  \nFACEBOOK 190  \nYOUTUBE 95  \nTWITTER 100  \n \nEmpleado con m\u00e1s tiempo en sitios de diversi\u00f3n  \nMARIA \n \nSitio de trabajo usado m\u00e1s tiempo  \nSRI \n \nCosto total de uso de internet  \n$ 53.0 \n Total de empleados que han usado cada sitio de intern et \nESPOL 3 \nINEC 3 \nSRI 2 \nFACEBOOK 2  \nYOUTUBE 3  \nTWITTER 3  \n>>>   \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d9d8122-5620-4834-9d73-db80c49bb567": {"__data__": {"id_": "3d9d8122-5620-4834-9d73-db80c49bb567", "embedding": null, "metadata": {"page_label": "376", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33f4cdfd-a7d0-4a38-a805-d7123d7e3184", "node_type": "4", "metadata": {"page_label": "376", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3007c4d164a69e7dc5a46cd6831739c066953df738996bcc52065a7c8ac2f466", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60eebb48-3c16-4f2c-a91f-7b9ebfbfe8f6", "node_type": "1", "metadata": {"page_label": "375", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9564e4ff09512d7dd9068587636e9619edbc177968bf2f359bd6bb409ed2c25b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65e472f7-8731-454b-8425-fcbbbf7d48f2", "node_type": "1", "metadata": {}, "hash": "c550fd85d625f82dd7d246a22af85f61b5e9d25f6b39340a6f302a94590d84bf", "class_name": "RelatedNodeInfo"}}, "hash": "7a949c770eb9287c32b65928c57a8925cc82f12ab534146fb29ada668061764a", "text": "376 \n \nEjercicio 9.4  El siguiente ejercicio corresponde al enunciado del cuarto tema del examen \nde la Primera Evaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   \nFIEC \u2013 ESPOL \u2013 Primer T\u00e9r mino, 2016) : \n \na. Dada la siguiente secuencia de instrucciones, realice la prueba de escritorio para las \nsiguientes variables : cuantos, donde, lista  \n \n \nmensaje='No basta saber, se debe tambi\u00e9n aplicar. No es  \n         suficiente querer, se debe tambi\u00e9n hacer. Goet  \n         he(1749- 1832)' \nlargo=len(mensaje)  \ncual='be'  \ncuantos=0  \nlista=[]  \ndonde=-1 \ni=0 \nwhile i<largo:  \n    donde=mensaje[i:].find(cual)  \n    if donde>0:  \n        cuantos=cuantos+1  \n        i=i+donde+1  \n        lista.append(donde)  \n    else:  \n        i=i+1  \nprint(cuantos)  \nprint(lista)  \n \n \n \nPrueba de escritorio \n \ncuantos  donde  lista \n \n0   -1   [] \n1  11  [11] \n2  9  [11, 9] \n3  49  [11, 9, 49]  \n3  -1  [11, 9, 49]  \n3  -1  [11, 9, 49]  \n3  -1  [11, 9, 49]  \n. \n. \n. \n3 \n[11, 9, 49]  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65e472f7-8731-454b-8425-fcbbbf7d48f2": {"__data__": {"id_": "65e472f7-8731-454b-8425-fcbbbf7d48f2", "embedding": null, "metadata": {"page_label": "377", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7b6a294f-5837-4869-adc9-c2f393b99ee4", "node_type": "4", "metadata": {"page_label": "377", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7f97e0279673a29e5eed335799a5d842d448429a431607157ba8cabfb03317b9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d9d8122-5620-4834-9d73-db80c49bb567", "node_type": "1", "metadata": {"page_label": "376", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a949c770eb9287c32b65928c57a8925cc82f12ab534146fb29ada668061764a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b51d3afc-5582-430d-8a39-5126f3b98640", "node_type": "1", "metadata": {}, "hash": "b7fa241cad68ea419b063e9db1dd8b528ddfbf89085fb369398cf077997859b8", "class_name": "RelatedNodeInfo"}}, "hash": "c550fd85d625f82dd7d246a22af85f61b5e9d25f6b39340a6f302a94590d84bf", "text": "377 \n \nb. \u00bfCual es el resultado luego de ejecutar el  siguiente c\u00f3digo?. Justifique su respuesta \nmostrando c\u00f3mo cambian de valor de i y lista2 durante la ejecuci\u00f3n del c\u00f3digo.  \n \n \nlista=[5,3,2,6,7,34,1,23,5,6]  \nlista2=[]  \nfor i in range(1,len(lista)):  \n    if lista[i- 1]<=lista[i] and lista[i]>=lista[i+1]:  \n        lista2.append(lista[i])  \nprint(lista2)  \n  \n \nPrueba de escritorio \n \ni  lista[i]  lista2 \n \n1   3  [] \n2   2  [] \n3   6  [] \n4   7  [] \n5   34  [34] \n6   1  [34] \n7   23  [34, 23]  \n8   5  [34, 23]  \n9   6  [34, 23]  \n IndexError: list index out of range  \n \nEn la instrucci\u00f3n:  \n \nif lista[i- 1]<=lista[i] and lista[i]>=lista[i+1]:  \n \nEl error se produce c uando i es 9 y se hace referencia al \u00edndice 10, valor que no existe \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b51d3afc-5582-430d-8a39-5126f3b98640": {"__data__": {"id_": "b51d3afc-5582-430d-8a39-5126f3b98640", "embedding": null, "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "753e0c41-6f8f-403e-babc-5c3b534bda52", "node_type": "4", "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0013df29909108bc8635c4abccf4a44838ee5c379b2cb27a3e841d8177d1054e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65e472f7-8731-454b-8425-fcbbbf7d48f2", "node_type": "1", "metadata": {"page_label": "377", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c550fd85d625f82dd7d246a22af85f61b5e9d25f6b39340a6f302a94590d84bf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef8792c1-1946-4d16-80ae-b3b5fa875815", "node_type": "1", "metadata": {}, "hash": "36f4b1e1eadbf9b046ae392be33cae60f3fb97ada44c6c5c71a800787a4605a7", "class_name": "RelatedNodeInfo"}}, "hash": "b7fa241cad68ea419b063e9db1dd8b528ddfbf89085fb369398cf077997859b8", "text": "378 \n \nEjercicio 9. 5 El siguiente ejercicio corresponde al primer tema del examen de la \nSegunda Evaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   FIEC \u2013 \nESPOL \u2013 Primer T\u00e8rmino, 2016) : \n \nSuponga que existe un diccionario con el nombre  tendencias  cuya clave es una cadena \nrepresentando una fecha en formato mm -dd-aaa, y como valor un  conjunto de las \netiquetas (h ashtags) que fueron tendencia en Twitter para esa fecha.  \n \nEjemplo.  \n \ntendencias={'08- 22-2016':{'#Rio2016','#BSC','#ECU'},'08- 25-2016': \n{'#GYE','#BSC'},'08- 27-2016':{'#BRA','#YoSoyEspol','#GYE','#BSC'},...}  \n \na. Instrumente una funci\u00f3n  cuentaetiquetas(tendencias, listafechas)  que reciba el \ndiccionario tendencias y una lista de cadenas listafechas conteniendo fechas en el \nformato mm -dd-aaaa. La funci\u00f3n debe retornar un nuevo diccionario  con la etiqueta como \nclave y como valor, el n\u00famero de d\u00edas que esta etiq ueta fue tendencia durante las fechas \nespecificadas.  \n Ejemplo.   \n \nSi  listafechas=['08- 22-2016','08- 25-2016','08- 27-2016'] , la funci\u00f3n retornar\u00eda:  \n \n{'#BSC': 3, '#ECU': 1, '#BRA': 1, '#YoSoyEspol': 1, '#Rio2016': 1, '#GYE': 2}  \n \n b. Instru mente una funci\u00f3n r eportatendencias(tendencias, listafechas)   que reciba el \ndiccionario tendencias y una lista de cadenas listafechas conteniendo fechas en el \nformato mm -dd-aaaa. La funci\u00f3n debe mostrar por pantalla :  \n \n1.", "start_char_idx": 0, "end_char_idx": 1401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef8792c1-1946-4d16-80ae-b3b5fa875815": {"__data__": {"id_": "ef8792c1-1946-4d16-80ae-b3b5fa875815", "embedding": null, "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "753e0c41-6f8f-403e-babc-5c3b534bda52", "node_type": "4", "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0013df29909108bc8635c4abccf4a44838ee5c379b2cb27a3e841d8177d1054e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b51d3afc-5582-430d-8a39-5126f3b98640", "node_type": "1", "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b7fa241cad68ea419b063e9db1dd8b528ddfbf89085fb369398cf077997859b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e71e6fc-0505-4656-8cbd-d417f2d418b3", "node_type": "1", "metadata": {}, "hash": "76703acc49856c54a2414f63d2393bdd6af6342edb3b3ef93aa0892c8c6c0914", "class_name": "RelatedNodeInfo"}}, "hash": "36f4b1e1eadbf9b046ae392be33cae60f3fb97ada44c6c5c71a800787a4605a7", "text": "La funci\u00f3n debe mostrar por pantalla :  \n \n1. Las etiquetas que fueron tendencia todas  las fechas en l istafechas \n \n2. Las etiquetas que fueron tendencia al menos una  fecha en listafechas \n \n \nc. Instrumente una funci\u00f3n  tendenciasexcluyentes(tendencias, fecha1, fecha2)   que \nreciba el diccionario tendencias  y dos cadenas conteniendo fechas en el formato mm -dd-\naaaa. La funci\u00f3n debe mostrar por pantalla  las etiquetas que fueron tendencia en fecha1 \no en fecha2, pero no en ambas. Suponga que fecha1 y fecha2 existen en el diccionario \ncomo claves.  \nPython Programaci\u00f3n", "start_char_idx": 1356, "end_char_idx": 1936, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e71e6fc-0505-4656-8cbd-d417f2d418b3": {"__data__": {"id_": "0e71e6fc-0505-4656-8cbd-d417f2d418b3", "embedding": null, "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c387eaa3-17e7-468c-ac6b-cb3943b12493", "node_type": "4", "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b668f32c0b348d9d26e37c324e2f974175ddaa3ab7854694441aeccac938cb6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef8792c1-1946-4d16-80ae-b3b5fa875815", "node_type": "1", "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "36f4b1e1eadbf9b046ae392be33cae60f3fb97ada44c6c5c71a800787a4605a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e0addc0-66c5-4fd2-ac7c-435397ec96d0", "node_type": "1", "metadata": {}, "hash": "bc482a193b900044d1fc96271022ca1c5859380e1df4ae14eef1e82d88cd4904", "class_name": "RelatedNodeInfo"}}, "hash": "76703acc49856c54a2414f63d2393bdd6af6342edb3b3ef93aa0892c8c6c0914", "text": "379 \n \nSoluci\u00f3n propuesta \n \ndef cuentaetiquetas(tendencias,listafechas):  \n    dic={}  \n    for fecha in listafechas:  \n        if fecha in tendencias:  \n            for etiqueta in tendencias[fecha]:  \n                if etiqueta in dic: \n                    dic[etiqueta]=dic[etiqueta]+ 1 \n                else:  \n                    dic[etiqueta]=1  \n    return dic \n \ndef reportatendencias(tendencias,listafechas):  \n    dic=cuentaetiquetas(tendencias,listafechas)  \n    print( 'Etiquetas que fueron tendencia todas las fechas')  \n    for etiqueta in dic: \n        if dic[etiqueta]==len(listafechas):  \n            print(etiqueta)  \n    print( 'Etiquetas que fueron tendencia al menos una fecha')  \n    for etiqueta in dic: \n        if dic[etiqueta]>0:  \n            print(etiqueta)  \n          \ndef tendenciasexcluyentes (tendencias,fecha1,fecha2):  \n    dic=cuentaetiquetas(tendencias, [fecha1,fecha2])  \n    print( 'Etiquetas que fueron tendencia una sola fecha')  \n    for etiqueta in dic: \n        if dic[etiqueta]==1:  \n            print(etiqueta)  \n \n \nPara las pruebas, se almacenan las funciones en un archivo con el nombre  funciones   \n \nPruebas  de las funciones  \n >>> from funciones  import* \n>>> tendencias={'08- 22-2016':{'#Rio2016','#BSC','#ECU'},'08- 25-2016': \n{'#GYE','#BSC'},'08- 27-2016':{'#BRA','#YoSoyEspol','#GYE','#BSC'}}  \n>>> listafechas=['08- 22-2016','08 -25-2016','08 -27-2016'] \n>>> dic=cuentaetiquetas(tendencias,listafechas)  \n>>> print(dic)  \n{'#BSC': 3, '#ECU': 1, '#BRA': 1, '#YoSoyEspol': 1, '#Rio2016': 1,", "start_char_idx": 0, "end_char_idx": 1549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e0addc0-66c5-4fd2-ac7c-435397ec96d0": {"__data__": {"id_": "9e0addc0-66c5-4fd2-ac7c-435397ec96d0", "embedding": null, "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c387eaa3-17e7-468c-ac6b-cb3943b12493", "node_type": "4", "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b668f32c0b348d9d26e37c324e2f974175ddaa3ab7854694441aeccac938cb6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e71e6fc-0505-4656-8cbd-d417f2d418b3", "node_type": "1", "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76703acc49856c54a2414f63d2393bdd6af6342edb3b3ef93aa0892c8c6c0914", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaaf276e-64fe-4d16-9d3e-505aed3d3d0b", "node_type": "1", "metadata": {}, "hash": "89fa651819391cb0e49b389cb3092e8f7ca0053e362c02f23c233cf83a59033e", "class_name": "RelatedNodeInfo"}}, "hash": "bc482a193b900044d1fc96271022ca1c5859380e1df4ae14eef1e82d88cd4904", "text": "'#YoSoyEspol': 1, '#Rio2016': 1, '#GYE': 2}  \n \n \n>>> reportatendencias(tendencias,listafechas)  \nEtiquetas que fueron tendencia todas las fechas  \n#BSC \nEtiquetas que fueron tendencia al  menos una fecha  \n#GYE \nPython Programaci\u00f3n", "start_char_idx": 1517, "end_char_idx": 1749, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aaaf276e-64fe-4d16-9d3e-505aed3d3d0b": {"__data__": {"id_": "aaaf276e-64fe-4d16-9d3e-505aed3d3d0b", "embedding": null, "metadata": {"page_label": "380", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02a6c621-50b7-4008-a9db-cd1592ec068e", "node_type": "4", "metadata": {"page_label": "380", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8c1a295c198dae7878748b44c2a907ed2fca1468156a84e0774cda211c8f8840", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e0addc0-66c5-4fd2-ac7c-435397ec96d0", "node_type": "1", "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bc482a193b900044d1fc96271022ca1c5859380e1df4ae14eef1e82d88cd4904", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0cd4116-83fb-4969-9f45-a5abbd84fd59", "node_type": "1", "metadata": {}, "hash": "6b9910183082cdb4f28e74866da55b29853e6a4f02bb38064849b927e03191de", "class_name": "RelatedNodeInfo"}}, "hash": "89fa651819391cb0e49b389cb3092e8f7ca0053e362c02f23c233cf83a59033e", "text": "380 \n \n#YoSoyEspol  \n#Rio2016  \n#ECU \n#BRA \n#BSC \n \n>>> fecha1= '08-22-2016' \n>>> fecha2= '08-27-2016' \n>>> tendenciasexcluyentes(tendencias,fecha1,fecha2)  \nEtiquetas que fueron tendencia una sola fecha  \n#YoSoyEspol  \n#Rio2016  \n#BRA \n#GYE \n#ECU \n  \nOtra soluci\u00f3n  de la funci\u00f3n  tendenciasexcluyentes usando definiciones de conjuntos y la \noperaci\u00f3n de diferencia sim\u00e9trica de conjuntos \n \n \ndef tendenciasexcluyentes (tendencias,fecha1,fecha2):  \n    f1=tendencias[fecha1]    #conjuntos de etiquetas  \n    f2=tendencias[fecha2]  \n    etiquetas=f1^f2      #Diferencia sim\u00e9trica          \n    print('Etiquetas que fueron tendencia una sola fecha')  \n    for e in etiquetas:  \n        print(e)  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 718, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0cd4116-83fb-4969-9f45-a5abbd84fd59": {"__data__": {"id_": "a0cd4116-83fb-4969-9f45-a5abbd84fd59", "embedding": null, "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91c9436f-d154-48c0-91d4-d6bd38d1b9d8", "node_type": "4", "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "47b27c55c6a91a1e40099ac8ec932ba8919b19462460e39916a1d0dbf5e15acb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaaf276e-64fe-4d16-9d3e-505aed3d3d0b", "node_type": "1", "metadata": {"page_label": "380", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "89fa651819391cb0e49b389cb3092e8f7ca0053e362c02f23c233cf83a59033e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12fd2304-b215-4128-910e-c06652ad82d8", "node_type": "1", "metadata": {}, "hash": "eb5d48157cd6e159daf5d07ba7cfa0a8440fc5fa8515e21656adeeef21783200", "class_name": "RelatedNodeInfo"}}, "hash": "6b9910183082cdb4f28e74866da55b29853e6a4f02bb38064849b927e03191de", "text": "381 \n \nEjercicio 9. 6 El siguiente ejercicio corresponde al segundo tema del examen de la \nSegunda Evaluac i\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   FIEC \u2013 \nESPOL \u2013 I T\u00e9rmino, 2016)  \n \nSuponer que est\u00e1 disponible en el archivo \u2018ecuador_distancias.txt\u2019  las distancias en Km, \nenteros positivos, entre ciudades del Ecuador conectadas directamente, con el siguiente \nformato:  \n \n  Ciudad de partida|Ciudad,Distancia|Ciudad,Distancia|Ciudad,Distancia . . .  \n  Ciudad de partida|Ciudad,Distancia|Ciudad,Distancia|Ciudad,Distancia . . .  \n  Ciudad de partida|Ciudad,Distancia|Ciudad,Distancia|Ciudad,Distancia . . .  \n  . . . \n \nEjemplo . Suponer que el archivo \u2018ecuador_distancias.txt\u2019  contiene:  \n \nPedernales|Ambato,318|Azogues,555  \nAmbato|Azogues,280|Babahoyo,212|Pedernales,318  \nAzogues|Pedernales,555|Babahoyo,125  \n. . . \n a. Escriba una funci\u00f3n  cargardatos(nombrearchivo)  que l ea las l\u00edneas de texto del \narchivo y retorne el diccionario  distancias. El resultado es un diccionario, cuyos valores \ntambi \u00e9n son diccionarios, con el siguiente formato, con referencia al ejemplo:  \n \n{\u2018Pedernales\u2019:{\u2018Ambato\u2018:318,\u2019Azogues\u2019:555},\u2019Ambato\u2019:{\u2018Pedernales\u2019:318,\u2019Babahoyo\u2019:212,  \n \u2018Azogues\u2019:280},{\u2018Azogues\u2019:{\u2018Pederna les\u2019:555,\u2019Babahoyo\u2019:125},. . .}  \n \nb. Escriba una funci\u00f3n  ciudadescercanas(distancias,km)  donde km es un valor entero \npositivo y distancias es el diccionario generado por la funci\u00f3n anterior.", "start_char_idx": 0, "end_char_idx": 1432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12fd2304-b215-4128-910e-c06652ad82d8": {"__data__": {"id_": "12fd2304-b215-4128-910e-c06652ad82d8", "embedding": null, "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91c9436f-d154-48c0-91d4-d6bd38d1b9d8", "node_type": "4", "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "47b27c55c6a91a1e40099ac8ec932ba8919b19462460e39916a1d0dbf5e15acb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0cd4116-83fb-4969-9f45-a5abbd84fd59", "node_type": "1", "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6b9910183082cdb4f28e74866da55b29853e6a4f02bb38064849b927e03191de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "98e344c3-3be7-44b5-ad33-d071acb14bd5", "node_type": "1", "metadata": {}, "hash": "bdffd3e10628e93cdbfe4484a742c6e72105d786305af4962fd24a6c52a8e741", "class_name": "RelatedNodeInfo"}}, "hash": "eb5d48157cd6e159daf5d07ba7cfa0a8440fc5fa8515e21656adeeef21783200", "text": "La funci\u00f3n debe \nretornar una lista de tuplas con todos los pares de ciudades conectadas directamente por \nuna carretera que est\u00e9n a una distancia menor o igual que el valor de km. La tupla debe \ntener el formato: (ciudad1, ciudad2, distancia que las separa) .   \n \nEjemplo.  Si  km=300 y el diccionario  distancias contiene:  \n \n{'Azoguez': {'Pedernales': 555, 'Babahoyo': 125}, 'Pedernales': {'Azogues': 555, 'Ambato': \n318}, 'Ambato': {'Azogues': 280, 'Pedernales': 318, 'Babahoyo': 212}}  \n \nLa lista de tuplas resultantes  ser\u00e1:  \n [('Ambato', 'Babahoyo', 212), ('Ambato', 'Azogues', 280), ('Azoguez', 'Babahoyo', 125)]  \n \nc. Escriba una funci\u00f3n  guardartciudadescercanas(distancias,listakms)  que reciba el \ndiccionario distancias generado por la funci\u00f3n anterior y una lista de val ores enteros \npositivos  listakms. La funci\u00f3n debe generar por cada valor de listakms, un archivo con las \nciudades separadas a m\u00e1ximo dicho valor. Por ejemplo:  \n \nSi se invoca a la funci\u00f3n con:  guardartciudadescercanas(distancias,[300,100,250])  \n \nSe habr\u00e1n creado en el disco los siguientes tres archivos:  \n \nciudades300.txt,  ciudades100.txt,  ciudades250.txt   \n \nPython Programaci\u00f3n", "start_char_idx": 1434, "end_char_idx": 2615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98e344c3-3be7-44b5-ad33-d071acb14bd5": {"__data__": {"id_": "98e344c3-3be7-44b5-ad33-d071acb14bd5", "embedding": null, "metadata": {"page_label": "382", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29022a59-b1fb-467e-86df-2e1a58b1e8af", "node_type": "4", "metadata": {"page_label": "382", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d2c881d43effbc9f6adce7bce99908f60890a3d0bfcb1b9c4e61482a7ba2f5ed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12fd2304-b215-4128-910e-c06652ad82d8", "node_type": "1", "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "eb5d48157cd6e159daf5d07ba7cfa0a8440fc5fa8515e21656adeeef21783200", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "067ea3df-13b0-419b-b49c-e1e1db259c0a", "node_type": "1", "metadata": {}, "hash": "46d664765649b631da04cf19f55924cd6eabfc1c08b0934f505e2c9d85906fbe", "class_name": "RelatedNodeInfo"}}, "hash": "bdffd3e10628e93cdbfe4484a742c6e72105d786305af4962fd24a6c52a8e741", "text": "382 \n \nPara los datos anteriores, el contenido del archivo  ciudades300.txt   ser\u00eda:  \n \nAzoguez,Babahoyo,125  \nAmbato,Azogues,280 \nAmbato,Babahoyo,212  \n \nEscriba un progr ama que lea el archivo ecuador_distancias.txt  y genere un diccionario \nde distancias de acuerdo al formato del literal a.  Luego, usando este diccionario, su \nprograma deber\u00e1 crear los archivos de las ciudades separadas hasta 150, 225, 320 y 555 km. \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 446, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "067ea3df-13b0-419b-b49c-e1e1db259c0a": {"__data__": {"id_": "067ea3df-13b0-419b-b49c-e1e1db259c0a", "embedding": null, "metadata": {"page_label": "383", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a31e5ee0-8e84-4c9c-8183-31c6142af2e8", "node_type": "4", "metadata": {"page_label": "383", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d74b288645f731c6c5d3e41aa41d8ede07895d1dc75ac0e3e8cd118c1f55ebb8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "98e344c3-3be7-44b5-ad33-d071acb14bd5", "node_type": "1", "metadata": {"page_label": "382", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "bdffd3e10628e93cdbfe4484a742c6e72105d786305af4962fd24a6c52a8e741", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d8bf80f-c94b-48c6-bbc2-c79d2a1cf351", "node_type": "1", "metadata": {}, "hash": "d453018b2c5b33063d37bf641aaed54fec9886b24dfc18c61e8615500f86e64a", "class_name": "RelatedNodeInfo"}}, "hash": "46d664765649b631da04cf19f55924cd6eabfc1c08b0934f505e2c9d85906fbe", "text": "383 \n \nSoluci\u00f3n propuesta  \n \n \ndef cargardatos(nombrearchivo):  \n    distancias={}  \n    f=open(nombrearchivo,'r')  \n    for linea in f: \n        datos=linea.split('|')  \n        ciudadpartida=datos[0]  \n        conecta={}  \n        for  i in range(1,len(datos)): \n            par=datos[i]. split(',')  \n            ciudad=par[0]  \n            dist=int(par[1])  \n            conecta[ciudad]=dist  \n        distancias[ciudadpartida]=conecta  \n    f.close () \n    return distancias  \n \ndef ciudadescercanas(distancias,km): \n    lista=[]  \n    for ciudadpartida in distancias: \n        for  ciudad in distancias[ciudadpartida]:  \n            dist=distancias[ciudadpartida][ciudad]  \n            if dist<=km:  \n                lista=lista+[(ciudadpartida,ciudad,dist)]  \n    return lista \n \ndef guardarciudadescercanas(distancias,listakm):  \n    for km in listakm:  \n        nombre='ciudades'+str(km)+'.txt'  \n        lista=ciudadescercanas(distancias,km)  \n        arch=open(nombre,'w')  \n        for dato in lista: \n            ciudad1=dato[0]  \n            ciudad2=dato[1]  \n            dist=dato[2]  \n            if dist<=km:  \n                linea=ciudad1+','+ciudad2+','+str(dist)+'\\ n' \n                arch.write(linea)  \n        arch.close () \n \n \n \nSuponer que se almacenan las funciones en un archivo con el nombre  ciudades  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d8bf80f-c94b-48c6-bbc2-c79d2a1cf351": {"__data__": {"id_": "7d8bf80f-c94b-48c6-bbc2-c79d2a1cf351", "embedding": null, "metadata": {"page_label": "384", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1930c6c-fc74-45d2-9cec-100738be13c9", "node_type": "4", "metadata": {"page_label": "384", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c79fbd6c0e4508d46ecf5d9b9a45ced495b34a8f35c4a4849337a70880483c3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "067ea3df-13b0-419b-b49c-e1e1db259c0a", "node_type": "1", "metadata": {"page_label": "383", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "46d664765649b631da04cf19f55924cd6eabfc1c08b0934f505e2c9d85906fbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b121e7bd-9984-4936-a304-97eb54ca9cb2", "node_type": "1", "metadata": {}, "hash": "5e6bb124c593efb0baecb3e9749360a28cdc0ad661122c789ccb7731b594926e", "class_name": "RelatedNodeInfo"}}, "hash": "d453018b2c5b33063d37bf641aaed54fec9886b24dfc18c61e8615500f86e64a", "text": "384 \n \nPrograma \n \n \nfrom ciudades import* \nnombrearchivo=input('Nombre del archivo: ')  \ndistancias=cargardatos(nombrearchivo) print(distancias)  \nguardarciudadescercanas(distancias,[150,225,320,555])  \nprint('Archivos fueron creados')  \n \n \n \nPrueba de las funciones  \n >>> from ciudades import* \n>>> nombrearchivo='ecuador_distancias.txt'  \n>>> distancias=cargardatos(n ombrearchivo)  \n>>> print(distancias)  \n{'Azoguez': {'Pedernales': 555, 'Babahoyo': 125}, 'Pedernales': \n{'Azogues': 555, 'Ambato': 318}, 'Ambato': {'Azogues': 280, 'Pedernales': \n318, 'Babahoyo': 212}}  \n \n>>> lista=ciudadescercanas(distancias,300)  \n>>> print(lista)  \n[('Ambato', 'Babahoyo', 212), ('Ambato', 'Azogues', 280), ('Azoguez', \n'Babahoyo', 125)]  \n \n \nPrueba del programa  \n \n>>>  \nNombre del archivo: ecuador_distancias.txt  \n{'Pedernales': {'Ambato': 318, 'Azogues': 555}, 'Ambato': {'Pedernales': 318, 'Babahoyo': 212, 'Azogues': 280}, 'Azogues': {'Pedernales': 555, 'Babahoyo': 125}}  \nArchivos fueron creados  \n>>>  \nSe puede verificar en el disco que los tres archivos fueron creados y se puede examinar su \ncontenido abri\u00e9ndolos directamente con el Bloc de notas de Windows  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b121e7bd-9984-4936-a304-97eb54ca9cb2": {"__data__": {"id_": "b121e7bd-9984-4936-a304-97eb54ca9cb2", "embedding": null, "metadata": {"page_label": "385", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a80b34bf-1067-408a-9895-b9824bbb6de0", "node_type": "4", "metadata": {"page_label": "385", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3c23b4ef1d5d849e86caca9e97e3050d983f5e510053d6cc394ee1504e207669", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d8bf80f-c94b-48c6-bbc2-c79d2a1cf351", "node_type": "1", "metadata": {"page_label": "384", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d453018b2c5b33063d37bf641aaed54fec9886b24dfc18c61e8615500f86e64a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5354e4e5-0438-4e3e-8705-28334b11c68f", "node_type": "1", "metadata": {}, "hash": "c541c8b4cf0d115f62a8c24d8e158673e3b722bfc51d00145b87d6e047ab5a59", "class_name": "RelatedNodeInfo"}}, "hash": "5e6bb124c593efb0baecb3e9749360a28cdc0ad661122c789ccb7731b594926e", "text": "385 \n \nOtra soluci\u00f3n  para la funci\u00f3n  ciudadescercanas(distancias,km)  \n \nEn esta soluci\u00f3n se usa una forma especial para examinar el contenido de los diccionarios  \n  \ndef ciudadescercanas(distancias,km): \n    lista=[]  \n    for ciudadpartida,enlace in distancias.items():  \n        for  ciudad,dist in enlace.items():  \n            if dist<=km:  \n                lista=lista+[(ciudadpartida,ciudad,dist)]  \n    return lista \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5354e4e5-0438-4e3e-8705-28334b11c68f": {"__data__": {"id_": "5354e4e5-0438-4e3e-8705-28334b11c68f", "embedding": null, "metadata": {"page_label": "386", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cf594d3-0793-4685-ae3e-3b5ce08460fc", "node_type": "4", "metadata": {"page_label": "386", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "93072327cfaa1652e91f871b15cd4351d423443a558c7a5cc5412713b6daa566", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b121e7bd-9984-4936-a304-97eb54ca9cb2", "node_type": "1", "metadata": {"page_label": "385", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5e6bb124c593efb0baecb3e9749360a28cdc0ad661122c789ccb7731b594926e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1d8c36b-f22c-4aff-aaa5-adb74d358fbe", "node_type": "1", "metadata": {}, "hash": "52cd1fee83369f15d340026fe9d7b8a4c9474a202e60099ce870c69767fc45f8", "class_name": "RelatedNodeInfo"}}, "hash": "c541c8b4cf0d115f62a8c24d8e158673e3b722bfc51d00145b87d6e047ab5a59", "text": "386 \n \nEjercicio 9.7  El siguiente ejercicio corresponde al enunciado del tercer tema del examen \nde la Segunda Evaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   \nFIEC \u2013 ESPOL \u2013 I T\u00e9rmino, 2016):  \n  \na. Instrumente una funci\u00f3n  buscar(listaanidada,valor)   que reciba una lista de listas de y \nretorne un valor l\u00f3gico si el valor existe en alguna posici\u00f3n de la lista anidada  \n \nSoluci\u00f3n propuesta \n \n \ndef buscar(listaanidada,valor):  \n    for lista in listaanidada:  \n        if valor in lista: \n            return True  \n    return False   \n \n \nPrueba de la funci\u00f3n  \n >>> from buscar import* \n>>> x=[[2,3,5],[4],[5,3]]  \n>>> buscar(x,2)  \nTrue \n>>> buscar(x,7)  \nFalse \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 716, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1d8c36b-f22c-4aff-aaa5-adb74d358fbe": {"__data__": {"id_": "c1d8c36b-f22c-4aff-aaa5-adb74d358fbe", "embedding": null, "metadata": {"page_label": "387", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6989a426-d5ea-4a40-8303-9669649683ad", "node_type": "4", "metadata": {"page_label": "387", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6baf7161486df3676c92a395896f6a8384abb1f42059a247a9a8a06f28f95c4c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5354e4e5-0438-4e3e-8705-28334b11c68f", "node_type": "1", "metadata": {"page_label": "386", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c541c8b4cf0d115f62a8c24d8e158673e3b722bfc51d00145b87d6e047ab5a59", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a94696b9-22f9-4e90-b5ac-36850dd17f84", "node_type": "1", "metadata": {}, "hash": "ce9916899e7992a1637834a68a526a94e96d1e39fcd5a98ba4df0a0a1259a07f", "class_name": "RelatedNodeInfo"}}, "hash": "52cd1fee83369f15d340026fe9d7b8a4c9474a202e60099ce870c69767fc45f8", "text": "387 \n \nb. Instrumente una funci\u00f3n para sumar o multiplicar todos los elementos enteros \nalmacenados en una lista anidada. Si se invoca a la funci\u00f3n \u00fanicamente con la lista,  debe \nretornar la suma. Si se la invoca con un segundo par\u00e1metro con la palabra \u2018multiplicar\u2019 \ndebe entregar el producto. Para cualquier otro valor del segundo par\u00e1metro, debe entregar \n-1 como resultado  \n \nPara la instrumentaci\u00f3n se requiere definir un par\u00e1metro por omisi\u00f3n.  \n \nSoluci\u00f3n propuesta \n \n \ndef operar(listaanidada,op='sumar'):   \n    if op=='sumar':  \n        res=0  \n        for  e in listaanidada:  \n            for x in e: \n                res=res+x  \n    elif op=='multiplicar':  \n        res=1  \n        for  e in listaanidada:  \n            for x in e: \n                res=res*x  \n    else:  \n        res=- 1 \n    return res \n \n \nPrueba de la funci\u00f3n  \n >>> from operar import* \n>>> x=[[2,3,5],[4],[5,3]]  \n>>> operar(x)  \n22 \n \n>>> operar(x,'multiplicar')  \n1800 \n>>> operar(x,'dividir')  \n-1 \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1015, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a94696b9-22f9-4e90-b5ac-36850dd17f84": {"__data__": {"id_": "a94696b9-22f9-4e90-b5ac-36850dd17f84", "embedding": null, "metadata": {"page_label": "388", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd8dac9e-ec6d-4e25-99bd-4338d02a8ef7", "node_type": "4", "metadata": {"page_label": "388", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e4673b929188d540e70e935b81e0af4568f67940b74bb933bf446c56e3782793", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1d8c36b-f22c-4aff-aaa5-adb74d358fbe", "node_type": "1", "metadata": {"page_label": "387", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "52cd1fee83369f15d340026fe9d7b8a4c9474a202e60099ce870c69767fc45f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61ec6fba-391f-408a-a425-db89bb689cb0", "node_type": "1", "metadata": {}, "hash": "21ee18b9f3dcfe5c205e671e60eaae3d8abecb6343cb58c82b8638daca66d006", "class_name": "RelatedNodeInfo"}}, "hash": "ce9916899e7992a1637834a68a526a94e96d1e39fcd5a98ba4df0a0a1259a07f", "text": "388 \n \nEl siguente ejercicio no fue parte del tema propuesto en el examen. Se lo agrega con fines \ndid\u00e1cticos \n \nModifi que la funci\u00f3n   buscar(listaanidada,valor)   para que la lista anidada pueda \nincluir elementos que no son listas  \n \n \ndef buscar(listaanidada,valor):  \n    for elemento in listaanidada:  \n        if type(elemento)==list:  \n            if valor in elemento:  \n                return True  \n        else:  \n            if valor==elemento:  \n                return True  \n    return False  \n \n \n>>> from buscar import* \n>>> x=[[2,3,5],[4],7,[5,3]]  \n>>> buscar(x,5)  \nTrue \n>>> buscar(x,7)  \nTrue \n>>> buscar(x,6)  \nFalse  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 663, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61ec6fba-391f-408a-a425-db89bb689cb0": {"__data__": {"id_": "61ec6fba-391f-408a-a425-db89bb689cb0", "embedding": null, "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fda02e31-0ec6-4f6f-ab09-b5ea1cc71b26", "node_type": "4", "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aadc8853a6471561c39e90beed1b686943f3a4156febda81e62ef98d08dc9ab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a94696b9-22f9-4e90-b5ac-36850dd17f84", "node_type": "1", "metadata": {"page_label": "388", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ce9916899e7992a1637834a68a526a94e96d1e39fcd5a98ba4df0a0a1259a07f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8af08fad-ace7-4356-a705-3f5fb74c638f", "node_type": "1", "metadata": {}, "hash": "fb6881478ebdbee014e40c603daf22f8e2d35a3c6265556f1ac2690a70fdcd19", "class_name": "RelatedNodeInfo"}}, "hash": "21ee18b9f3dcfe5c205e671e60eaae3d8abecb6343cb58c82b8638daca66d006", "text": "389 \n \nEjercicio 9.8  El siguiente ejercicio es el primer tema del examen de la Tercera \nEvaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   FIEC \u2013 ESPOL \u2013 I \nT\u00e9rmino,  2016)  \n \nUna empresa de telecomunicaciones necesita automatizar el c\u00e1lculo del costo de enviar un \nmensaje  basado en el n\u00famero de palabras, el tama\u00f1o de cada palabra y el tipo de palabra. \nPara el c\u00e1lculo se hacen las siguientes consideraciones:  \n 1. Una palabra corta tiene m\u00e1ximo M caracteres \n2. Una palabra larga tiene m\u00e1s de M caracteres \n3. Se define como palabra especial los verbos en infinitivo, es decir, palabras terminadas \nen \u201car\u201d,\u201cer\u201d, \u201cir\u201d, sin importar su tama\u00f1o.  \n \nPara calcular el costo total del mensaje se debe cobrar un valor dependiendo del tipo de \npalabras seg\u00fan la clasificaci\u00f3n anterior  \n \nInstrumentar las  siguientes funciones:  \n a. cargardatos(nombrea rchivo) que recibe el nombre del archivo que contiene en \nl\u00edneas separadas: T ama\u00f1o M, el costo de las palabras cortas, el costo de las palabras \nlargas, y el costo de los infinitvos.  \n \nLa funci\u00f3n deber\u00e1 leer este archivo y retornar un diccionario con el siguiente formato del \nejemplo:  \n Archivo; costos.txt  \n10 \n0.2 \n0.5 \n0.3 \n \nAl llamar a la funci\u00f3n con:   cargardatos(\u2018costos.txt\u2019)   deber\u00e1 retornar el diccionario:  \n \n{\u2018M\u2019:10, \u2018Corta\u2019:0.2, \u2018Larga\u2019:0.5, \u2018Infinitivo\u2019:0.3}  \n \nb.  calcularc ostos(datos, nombrea rchivo) que recibe el diccionario de datos \ngenerado en el literal a) y  un nombre de archivo.  \n \nEl archivo contiene el  texto del mensaje grabado l\u00ednea por l\u00ednea. Adem\u00e1s,  cada l\u00ednea \ncontiene m\u00faltiples palabras separadas por espacios. El \u00fanico signo de puntuaci\u00f3n \npresente en el texto es un punto   '.'", "start_char_idx": 0, "end_char_idx": 1700, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8af08fad-ace7-4356-a705-3f5fb74c638f": {"__data__": {"id_": "8af08fad-ace7-4356-a705-3f5fb74c638f", "embedding": null, "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fda02e31-0ec6-4f6f-ab09-b5ea1cc71b26", "node_type": "4", "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "aadc8853a6471561c39e90beed1b686943f3a4156febda81e62ef98d08dc9ab6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61ec6fba-391f-408a-a425-db89bb689cb0", "node_type": "1", "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "21ee18b9f3dcfe5c205e671e60eaae3d8abecb6343cb58c82b8638daca66d006", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b28aa2d9-705b-411a-a009-df9a4272fc9f", "node_type": "1", "metadata": {}, "hash": "0570d8e9d5360a510bad673416c76f3628683b53ca29391cfdd2ce270ea67152", "class_name": "RelatedNodeInfo"}}, "hash": "fb6881478ebdbee014e40c603daf22f8e2d35a3c6265556f1ac2690a70fdcd19", "text": "El \u00fanico signo de puntuaci\u00f3n \npresente en el texto es un punto   '.'  al final del mensaje y no deber\u00e1 ser considerado \npara determinar  el costo de esa palabra.  \n \nLa funci\u00f3n debe retornar el costo total del mensaje.  \n \nc.  cambiarm ensaje(datos, nombrea rchivo1, nombrea rchivo2)  que recibe el \ndiccionario de datos  generado en el literal a) y dos nombres de archivos. La funci\u00f3n debe \nleer el texto del mensaje de nombrearchivo1 y escribir en nombrea rchivo2 el nuevo \nmensaje, acortando las palabras largas a M  \u2013 1 caracteres y colocando \u2018 #\u2019 al final de \ncada una de ellas, y reemplazando el punto final con la palabra especial \u2018END\u2019.  \nPython Programaci\u00f3n", "start_char_idx": 1632, "end_char_idx": 2298, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b28aa2d9-705b-411a-a009-df9a4272fc9f": {"__data__": {"id_": "b28aa2d9-705b-411a-a009-df9a4272fc9f", "embedding": null, "metadata": {"page_label": "390", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b1094bb-ca6f-4ba6-9914-c1f075d9d494", "node_type": "4", "metadata": {"page_label": "390", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3319bc96aa4026525893dd0648af14936f47bee847bbc58d5d47e7599c6e36b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8af08fad-ace7-4356-a705-3f5fb74c638f", "node_type": "1", "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fb6881478ebdbee014e40c603daf22f8e2d35a3c6265556f1ac2690a70fdcd19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc2600e8-6e3f-4367-8e18-e98579303629", "node_type": "1", "metadata": {}, "hash": "a8d1308d29b22eebe536164e76e9c0d4bb30112fc4dd1b90b6a725cdf94caa39", "class_name": "RelatedNodeInfo"}}, "hash": "0570d8e9d5360a510bad673416c76f3628683b53ca29391cfdd2ce270ea67152", "text": "390 \n \nSoluci\u00f3n propuesta \n \n \ndef cargardatos(nombrearchivo):  \n    f=open(nombrearchivo,'r')  \n    M=int(f.readline()[:- 1]) \n    C=float(f.readline()[:- 1]) \n    L=float(f.readline()[:- 1]) \n    I=float(f.readline()[:- 1]) \n    datos={'M':M,'Corta':C,'Larga':L,'Infinitivo':I}  \n    f.close()  \n    return datos \n     \ndef calcularcostos (datos,nombrearchivo):  \n    f=open(nombrearchivo,'r')  \n    costo=0  \n    for linea in f: \n        lista=linea[:- 1].split(' ')  \n        if lista[-1][-1]=='.':  \n            lista[ -1]=lista[- 1][:-1] \n        for pal in lista: \n            if pal[-2:] in ['ar','er','ir']:  \n                costo=costo+datos ['Infinitivo']  \n            elif len(pal)<=datos['M']: \n                costo=costo+datos ['Corta']  \n            else:  \n                costo=costo+datos ['Larga']  \n    f.close()  \n    return costo \n \ndef cambiarmensaje (datos,nombrearchivo1,nombrearchivo2):  \n    f=open(nombrearchivo1,'r')  \n    g=open(nombrearchivo2,'w')  \n    for linea in f: \n        lista=linea[:- 1].split(' ')  \n        if lista[-1][-1]=='.':  \n            lista[ -1]=lista[- 1].replace('.','END')  \n        for i in range(len(lista)):  \n            if len(lista[i])>datos['M'] and not  \n                                      lista[i].endswith('END'):  \n                lista[i]=lista[i][: datos['M']] + '#'  \n        lineamodificada=''  \n        for pal in lista: \n            lineamodificada=lineamodificada+pal  \n        g.write(lineamodificada+' \\n') \n \n    f.close()  \n    g.close()  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1543, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc2600e8-6e3f-4367-8e18-e98579303629": {"__data__": {"id_": "dc2600e8-6e3f-4367-8e18-e98579303629", "embedding": null, "metadata": {"page_label": "391", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d5bab5b-d399-46da-9336-9bb147ea4a5d", "node_type": "4", "metadata": {"page_label": "391", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "55fd9b450f61987eda7d0dbfe8762f3e4a69d08eefc00af06c31b0f5d3780508", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b28aa2d9-705b-411a-a009-df9a4272fc9f", "node_type": "1", "metadata": {"page_label": "390", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0570d8e9d5360a510bad673416c76f3628683b53ca29391cfdd2ce270ea67152", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbfbe41b-d4b7-465a-8808-a808c8568ad9", "node_type": "1", "metadata": {}, "hash": "a209702531099ee72f4dae775ca6ad69f9ec1772afbcd5deebe288ec6d3ae16c", "class_name": "RelatedNodeInfo"}}, "hash": "a8d1308d29b22eebe536164e76e9c0d4bb30112fc4dd1b90b6a725cdf94caa39", "text": "391 \n \nPara las pruebas, se almacena n las funciones en un archivo con el nombre  empresa \n \nPrueba de las funciones  \n \n>>> from empresa import* \n \n>>> nombrearchivo='h:costos.txt'  \n>>> datos=cargardatos(nombrearchivo) \n>>> print(datos) \n{'M': 10, 'Larga': 0.5, 'Corta': 0.2, 'Infinitivo': 0.3}  \n \n>>> nombrearchivo= 'h:mensaje.txt'  \n>>> costo=calcularcostos( datos,nombrearchivo ) \n>>> print(costo)  \n5.6 \n >>> nombrearchivo1 ='h:mensaje.txt'  \n>>> nombrearchivo2 ='h:mensajemodificado.txt'  \n>>> cambiarmensaje(datos,  nombrearchivo1, nombrearchivo2)  \n Se puede verificar en el disco que el archivo nombrearchivo2 fue creado y se puede \nexaminar su contenido abri\u00e9ndolo directamente.  \n \n \nObservaciones \n \nForma abreviada de construir la l\u00ednea para almacenar en el disco \n \nEn la funci\u00f3n  cambiarmensaje( datos, nombrearchivo1, nombrearchivo2)  se \npueden sustituir las l\u00edneas:  \n \n        lineamodificada=''  \n        for  pal in lista: \n            lineamodificada=lineamodificada+pal  \n        g.write(lineamodificada+' \\n') \n \nPor una sola l\u00ednea armada con la funci\u00f3n  join:  \n \n          lineamodificada=' '.join(lista)  \n   g.write(lineamodificada+'\\ n') \n \n \n \n \n \n \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbfbe41b-d4b7-465a-8808-a808c8568ad9": {"__data__": {"id_": "dbfbe41b-d4b7-465a-8808-a808c8568ad9", "embedding": null, "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c7d77eb-3af9-4fb4-ad94-6d036161194b", "node_type": "4", "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b5992ace0da0e74d39f4ee6f1b204ebc602f39c6e5034ddb0e77e387a2bb849", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc2600e8-6e3f-4367-8e18-e98579303629", "node_type": "1", "metadata": {"page_label": "391", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a8d1308d29b22eebe536164e76e9c0d4bb30112fc4dd1b90b6a725cdf94caa39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d13cb459-52b5-4cd5-99df-12431d91be5a", "node_type": "1", "metadata": {}, "hash": "3361a88dc4606748576e7982c804e0ef49b4fcf56a4ffcf6f3c5f16679eb97ef", "class_name": "RelatedNodeInfo"}}, "hash": "a209702531099ee72f4dae775ca6ad69f9ec1772afbcd5deebe288ec6d3ae16c", "text": "392 \n \nEjercicio 9.9  El siguiente ejercicio corresponde al  segundo tema del examen de la \nTercera Evaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013  FIEC \u2013 \nESPOL \u2013 I T\u00e9rmino, 2016)  \n \nUna empresa agr\u00edcola ha decidido integrar un dron (avi\u00f3n no tripulado) a una de sus \nplantaciones de \u00e1rea MxN para poder monitorear el crecimiento de sus cultivos. El dron a \nutilizarse tiene la capacidad de sensar el n\u00famero de cultivos en una posici\u00f3n (i,j) por \nmedio de la funci\u00f3n sensarcultivos(tuplap osicion) que mueve el dron a la posici\u00f3n \ndada por la tupla y retorna un valor entero correspondiente al n\u00famero de cultivos en dicha \nposici\u00f3n. Suponga que esta funci\u00f3n ya existe, por lo tanto, no necesita ser  desarrollada por \nusted.   Implemente las siguientes funciones:  \n \na.  generarplantacion(tupla dimensionPlantacion)   que recibe una tupla indicando \nel tama\u00f1o total  (M,N) de la plantaci\u00f3n y procede a sensar los cultivos utilizando \nsensarCultivos. La funci\u00f3n retorna la matriz plantaci \u00f3n que indica el n\u00famero de \ncultivos en cada posici\u00f3n de la plantaci\u00f3n.  \n \nb. analizarDensidad(plantaci\u00f3n, limite)  que recibe como par\u00e1metro la matriz \nplantaci\u00f3n del literal a) y  un valor entero positivo. La funci\u00f3n debe retornar una nueva \nmatriz indicando los grados de crecimiento de la plantaci\u00f3n. Una posici\u00f3n (i,j) de la \nplantaci\u00f3n es considerada con crecimiento  'BAJO' si tiene menos de limite cultivos, caso \ncontrario es considerada de crecimiento 'ALTO'. Al definir la funci\u00f3n, considere que el \nvalor por defecto de limite debe ser 4.", "start_char_idx": 0, "end_char_idx": 1560, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d13cb459-52b5-4cd5-99df-12431d91be5a": {"__data__": {"id_": "d13cb459-52b5-4cd5-99df-12431d91be5a", "embedding": null, "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c7d77eb-3af9-4fb4-ad94-6d036161194b", "node_type": "4", "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2b5992ace0da0e74d39f4ee6f1b204ebc602f39c6e5034ddb0e77e387a2bb849", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbfbe41b-d4b7-465a-8808-a808c8568ad9", "node_type": "1", "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a209702531099ee72f4dae775ca6ad69f9ec1772afbcd5deebe288ec6d3ae16c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e28396c0-50e0-4a52-8a85-adfd86710c81", "node_type": "1", "metadata": {}, "hash": "2c586b0e8a8059e11ee24479b86d8f26520b87657f6ee083134b9ac0ff0185ef", "class_name": "RelatedNodeInfo"}}, "hash": "3361a88dc4606748576e7982c804e0ef49b4fcf56a4ffcf6f3c5f16679eb97ef", "text": "Por ejemplo, si plantacion  es \n[[5, 3, 2],  \n [1, 4, 8],  \n [2, 3, 1]]  \nanalizarDensidad(plantacion), retorna:  \n[[\u2018ALTO\u2019, \u2018BAJO\u2019, \u2018BAJO\u2019],  \n [\u2018BAJO\u2019, \u2018ALTO\u2019, \u2018BAJO\u2019],  \n [\u2018BAJO\u2019, \u2018BAJO\u2019, \u2018BAJO\u2019]]  \n \nc. reporteCrecimiento(plantacion, densidad) que recibe como par\u00e1metros las \nmatrices de los literales  a) y b). Suponga que \u201csurco\u201d es equivale nte a una fila de la matriz \ny \u201cparcela\u201d es equivalente a una celda de la matriz. La funci\u00f3n debe retornar una tupla de \ntres elementos con la siguiente informaci\u00f3n:  \n1. Los promedios de cultivos por surcos.  \n2. Las posiciones, relativas a cada surco, de las parcelas que tienen el mayor n\u00famero  \n    decultivos en dicho surco.  \n3. Los promedios de cultivos de las parcelas para los grados de crecimiento \u2018ALTO\u2019 y  \n   \u2018BAJO\u2019  \nPor ejemplo, si plantacion contiene:  \n[[5, 3, 2],  \n [1, 4, 8],  \n [2, 3, 1]]  \nreporteCrecimiento (plantacion, densidad)   retorna:  \n( [3.33333333, 4.33333333, 2.0], [0, 2, 1], [5.66667, 2.0] )  \n \nEn la soluci\u00f3n propuesta se definen las matrices en forma expl\u00edcita. Al final de la soluci\u00f3n \ndesarrollada se describen otras formas abreviadas para crear las matr ices. \nPython Programaci\u00f3n", "start_char_idx": 1561, "end_char_idx": 2731, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e28396c0-50e0-4a52-8a85-adfd86710c81": {"__data__": {"id_": "e28396c0-50e0-4a52-8a85-adfd86710c81", "embedding": null, "metadata": {"page_label": "393", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d6b68f7-31a9-4ce9-850c-35513a3c17c0", "node_type": "4", "metadata": {"page_label": "393", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1c508882945eaa0dd339a1d6b2bd737edda3dccb09ae0b072b86675ed65c6715", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d13cb459-52b5-4cd5-99df-12431d91be5a", "node_type": "1", "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3361a88dc4606748576e7982c804e0ef49b4fcf56a4ffcf6f3c5f16679eb97ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "680788bd-feab-454e-8b1f-e80297cbab26", "node_type": "1", "metadata": {}, "hash": "807b389152c8a469b1dbe47d642926b488a479b69a0cb0f5fadf1390a7eeb46c", "class_name": "RelatedNodeInfo"}}, "hash": "2c586b0e8a8059e11ee24479b86d8f26520b87657f6ee083134b9ac0ff0185ef", "text": "393 \n \nfrom random import* \nimport numpy as np \ndef sensarcultivos (tuplaposicion):  \n# En el tema no se pide escribir esta funci\u00f3n. Es para las pruebas \n    i,j=tuplaposicion  \n    # Se sustituye el dron con un n\u00famero aleatorio para las pruebas  \n    n=randint(0,9)  \n    return n \n \ndef generarplantacion(tupladimensionplantacion):  \n    M,N=tupladimensionplantacion  \n    plantacion=np.zeros([ M,N],int)  \n    for i in range(M): \n        for  j in range(N): \n            plantacion[i,j] = sensarcultivos((i,j))  \n    return plantacion  \n \ndef analizardensidad(plantacion,limite=4):  \n    M,N=np.shape(plantacion)  \n    densidad=[]  \n    for i in range(M):  \n        fila=[]  \n        for j in range(N):  \n            if plantacion[i,j]<limite: \n                fila=fila+['BAJO']  \n            else:  \n                fila=fila+['ALTO']  \n        densidad=densidad+[fila]  \n    densidad=np.array(densidad)  \n    return densidad  \n \ndef reportecrecimiento(plantacion,densidad):  \n    surcos=np.mean(plantacion, axis=1) \n    reporte1=list(surcos)  \n    parcelas=np.argmax(plantacion, axis=1)  \n    reporte2=list(parcelas)  \n    M,N=np.shape(plantacion)  \n    A=[]  \n    B=[]  \n    for i in range(M):  \n        for j in range(N):  \n            if densidad[i,j]=='ALTO': \n                A=A+[plantacion[i,j]] \n            else: \n                B=B+[plantacion[i,j]] \n    reporte3 = [np.mean(A), np.mean(B)]  \n    return reporte1,reporte2,reporte3  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "680788bd-feab-454e-8b1f-e80297cbab26": {"__data__": {"id_": "680788bd-feab-454e-8b1f-e80297cbab26", "embedding": null, "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c12bdbb5-afd0-4849-b772-9436b2169c25", "node_type": "4", "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "418fa65c8e02d07652d49e03868d71fe305ec3ce7e98c6c9c223a1e8b54833b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e28396c0-50e0-4a52-8a85-adfd86710c81", "node_type": "1", "metadata": {"page_label": "393", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2c586b0e8a8059e11ee24479b86d8f26520b87657f6ee083134b9ac0ff0185ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43cf18c4-5206-41c4-8c29-30b25b360497", "node_type": "1", "metadata": {}, "hash": "4540baf86ceac007f2f679c8b416c733c168ca656c9d4435c0786f066c1a4286", "class_name": "RelatedNodeInfo"}}, "hash": "807b389152c8a469b1dbe47d642926b488a479b69a0cb0f5fadf1390a7eeb46c", "text": "394 \n \nPara las pruebas  se almacenan  las funciones en un archivo con el nombre  cultivos  \n \nPruebas  de las funciones  \n \n>>> from cultivos import* \n \n>>> p=generarplantacion((4,5))  \n>>> print(p)  \n[[5 2 7 8 8]  \n [3 4 7 9 6]  \n [2 0 7 5 5]  \n [7 6 7 8 0]]  \n \n>>> d=analizardensidad(p,5)  \n>>> print(d)  \n[['ALTO' 'BAJO' 'ALTO' 'ALTO' 'ALTO']  ['BAJO' 'BAJO' 'ALTO' 'ALTO' 'ALTO'] \n ['BAJO' 'BAJO' 'ALTO' 'ALTO' 'ALTO'] \n ['ALTO' 'ALTO' 'ALTO' 'ALTO' 'BAJO']] \n \n>>> r1,r2,r3=reportecrecimiento(p,d) \n>>> print(r1)  \n[6.0, 5.7999999999999998, 3.7999999999999998, 5.5999999999999996]  \n>>> print(r2)  \n[3, 3, 2, 3]  \n>>> print(r3)  \n[6.7857142857142856, 1.8333333333333333]  \n \n \nObservaciones \n \nSoluci\u00f3n alternativa para la funci\u00f3n generarplantacion(tupladimensionplantacion) \ndefiniendo la matriz plantaci\u00f3n  en forma impl\u00edcita.  \n \ndef generarplantacion(tupladimensionplantacion):  \n    M,N=tupladimensionplantacion  \n    plantacion=np.array([[sensarcultivos((i,j)) for j in range(N)]  \n                         for i in range(M)])  \n    return plantacion  \n \nUna s oluci\u00f3n alternativa para la funci\u00f3n analizardensidad(plantacion,limite=4)  \ndefiniendo la matriz densidad en forma impl\u00edcita y resultados de b\u00faqueda de otra matriz .", "start_char_idx": 0, "end_char_idx": 1239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43cf18c4-5206-41c4-8c29-30b25b360497": {"__data__": {"id_": "43cf18c4-5206-41c4-8c29-30b25b360497", "embedding": null, "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c12bdbb5-afd0-4849-b772-9436b2169c25", "node_type": "4", "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "418fa65c8e02d07652d49e03868d71fe305ec3ce7e98c6c9c223a1e8b54833b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "680788bd-feab-454e-8b1f-e80297cbab26", "node_type": "1", "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "807b389152c8a469b1dbe47d642926b488a479b69a0cb0f5fadf1390a7eeb46c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eea6bc82-3618-4201-b8b4-0ff471dcb0c4", "node_type": "1", "metadata": {}, "hash": "7de5a4de2219f89577486f6d958e69ce13b53496de538fd9dc084aab4c89ff57", "class_name": "RelatedNodeInfo"}}, "hash": "4540baf86ceac007f2f679c8b416c733c168ca656c9d4435c0786f066c1a4286", "text": "def analizardensidad(plantacion,limite=4):  \n    M,N=np.shape(plantacion)  \n    densidad=np.array([['    ' for  j in range(N)]for i in range(M)])  \n    densidad[plantacion<limite]='BAJO' \n    densidad[plantacion>=limite]='ALTO'  \n    return densidad  \nPython Programaci\u00f3n", "start_char_idx": 1244, "end_char_idx": 1515, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eea6bc82-3618-4201-b8b4-0ff471dcb0c4": {"__data__": {"id_": "eea6bc82-3618-4201-b8b4-0ff471dcb0c4", "embedding": null, "metadata": {"page_label": "395", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5240837-6a36-4340-bff1-97546f4c8132", "node_type": "4", "metadata": {"page_label": "395", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d4d62379126b33681175a371aea3d4ff8998f97099e32a81de532224b95a9b80", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43cf18c4-5206-41c4-8c29-30b25b360497", "node_type": "1", "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4540baf86ceac007f2f679c8b416c733c168ca656c9d4435c0786f066c1a4286", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1dcbd81e-9a18-4535-b0a1-09017bf5acb1", "node_type": "1", "metadata": {}, "hash": "2978646d28d5fb9b0b68cbcc31deb16fff8ea7c97b31f860df822d56ae720e79", "class_name": "RelatedNodeInfo"}}, "hash": "7de5a4de2219f89577486f6d958e69ce13b53496de538fd9dc084aab4c89ff57", "text": "395 \n \nSoluci\u00f3n compacta para la funci\u00f3n analizardensidad(plantacion,limite=4)  \ndefiniendo la matriz densidad con la funci\u00f3n  where  con opciones .  \n \n \ndef analizardensidad(plantacion,limite=4):  \n    densidad=np.where(plantacion < limite, 'BAJO', 'ALTO')  \n    return densidad  \n \n \n \nSoluci\u00f3n compacta para la funci\u00f3n reportecrecimiento (plantacion,densidad) \nusando selecci\u00f3n de elementos  de una matriz con axis y los resultados de la b\u00fasqueda en \notra matriz  \n \ndef reportecrecimiento(plantacion,densidad):  \n    reporte1 = list(np.mean(plantacion, axis = 1))  \n    reporte2 = list(np.argmax(plantacion, axis = 1))  \n    reporte3 = list((np.mean(plantacion[densidad == 'ALTO']),  \n                     np.mean(plantacion[densidad == 'BAJO'])))  \n    return reporte1,reporte2,reporte3 \n \n \n \nSugerencia.  Esta soluciones compactas deben es tudiarse y aplicarse luego de revisar el \nc\u00f3digo de las soluciones propuestas en la versi\u00f3n dada al inicio.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 977, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1dcbd81e-9a18-4535-b0a1-09017bf5acb1": {"__data__": {"id_": "1dcbd81e-9a18-4535-b0a1-09017bf5acb1", "embedding": null, "metadata": {"page_label": "396", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ec19f834-eaf1-4b5e-a4fe-5bf50a606e97", "node_type": "4", "metadata": {"page_label": "396", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66d1b0c185334c5ec5a83486ddce0fcfaf9bce11dc8c7940a59be59dd224b757", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eea6bc82-3618-4201-b8b4-0ff471dcb0c4", "node_type": "1", "metadata": {"page_label": "395", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7de5a4de2219f89577486f6d958e69ce13b53496de538fd9dc084aab4c89ff57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30f51ef8-5090-4264-a8c3-0d2d8b4bc54a", "node_type": "1", "metadata": {}, "hash": "9c4a4fd407f57a4cf7a328dc7f89294d876c0e10e4dce244edb51c3d1f1977f6", "class_name": "RelatedNodeInfo"}}, "hash": "2978646d28d5fb9b0b68cbcc31deb16fff8ea7c97b31f860df822d56ae720e79", "text": "396 \n \nEjercicio 9.10  El siguiente ejercicio es el  tercer tema del examen de la Tercera \nEvaluaci\u00f3n de la materia Fundamentos de Programaci\u00f3n (CCPG1001 \u2013   FIEC \u2013 ESPOL \u2013 I \nT\u00e9rmino, 2016)  \n \na. Considere el siguiente c\u00f3digo. Indique que se muestra en la pantalla. Justifique su \nrespuesta \n \n \nlista1 = [3,'A',6]  \nlista2 = ['A'] \n \ndef funcion(lista1, lista2):  \n    a=[]  \n    for i in lista1: \n        for j in lista2: \n            if i != j: \n                a.append(str(i) + str(j))  \n                for  x in a[:]: \n                    a.append(str(i) + str(j))  \n    return a \n print(funcion (lista1, lista2))  \n \n \n \nPrueba  \n  \n['3A', '3A', '6A', '6A', '6A', '6A'] \n \n \n \nb. Considere el sig uiente c\u00f3digo. Indique que se muestra en la pantalla. Justifique su \nrespuesta \n \n \ndef fun(cadena, k):  \n    L = []  \n    for elem in set(cadena.split(' ')):  \n        L.append(elem * k)  \n    return '#'.join(L)  \n cadena = 'programar es estupendo estupendo es program ar' \nprint(fun(cadena, 2))  \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30f51ef8-5090-4264-a8c3-0d2d8b4bc54a": {"__data__": {"id_": "30f51ef8-5090-4264-a8c3-0d2d8b4bc54a", "embedding": null, "metadata": {"page_label": "397", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7dc6e144-71b4-4faf-942b-744e19cd4e8d", "node_type": "4", "metadata": {"page_label": "397", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d06e0014b41e6b0d3ace8ed1817a92e348f03118c57a62abd0a0d6e7d26e68a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1dcbd81e-9a18-4535-b0a1-09017bf5acb1", "node_type": "1", "metadata": {"page_label": "396", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2978646d28d5fb9b0b68cbcc31deb16fff8ea7c97b31f860df822d56ae720e79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96114eba-be67-442a-9220-9aa051a2ea25", "node_type": "1", "metadata": {}, "hash": "16650ce0e54fa5281df22b2722a0f3a054a9845b7c747a2eb5d358a3f316f65e", "class_name": "RelatedNodeInfo"}}, "hash": "9c4a4fd407f57a4cf7a328dc7f89294d876c0e10e4dce244edb51c3d1f1977f6", "text": "397 \n \nPruebas  \n \n>>> ========= RESTART =========  \neses#programarprogramar#estupendoestupendo  \n >>> ========= RESTART =========  \nprogramarprogramar#estupendoestupendo#eses  \n \n>>> ========= RESTART =========  \nestupendoestupendo#eses#programar programar  \n \n>>> ========= RESTART =========  \nestupendoestupendo#programarprogramar#eses  \n \n>>> ========= RESTART =========  \nprogramarprogramar#eses#estupendoestupendo  \n \n \nPueden haber varias soluciones correctas porque la iteraci\u00f3n sobre un conjunto no tiene \nun recorrido \u00fanico debido a que los elementos no est\u00e1n en un orden espec\u00edfico.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96114eba-be67-442a-9220-9aa051a2ea25": {"__data__": {"id_": "96114eba-be67-442a-9220-9aa051a2ea25", "embedding": null, "metadata": {"page_label": "398", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f7e7c5f-2eac-40eb-8f9d-1a1f39ae5a32", "node_type": "4", "metadata": {"page_label": "398", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "301c67c5f950102e4b333fb931431394914c904bca7afbc84679cd79c64ec8d2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30f51ef8-5090-4264-a8c3-0d2d8b4bc54a", "node_type": "1", "metadata": {"page_label": "397", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9c4a4fd407f57a4cf7a328dc7f89294d876c0e10e4dce244edb51c3d1f1977f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58687c06-6852-4ccb-9fc1-481ece90b121", "node_type": "1", "metadata": {}, "hash": "288021776afc3e9db7f53bc85f6d6a4622b08b1ff5fd92db15d37fb0d254e402", "class_name": "RelatedNodeInfo"}}, "hash": "16650ce0e54fa5281df22b2722a0f3a054a9845b7c747a2eb5d358a3f316f65e", "text": "398 \n \n10 Programaci\u00f3n Orientada a Objetos  \n \nLa metodolog\u00eda de la Programaci\u00f3n Orientada a Objetos organiza el desarrollo de la \nprogramaci\u00f3n usando como centro los datos. Los datos son cat egorizados mediante \nclases . Una clase permite empaquetar  atributos  o propiedades que son las variables  que \nrecibir\u00e1n valores y los m\u00e9todos  que son funciones que contienen instrucciones.  \n \nCuando se crea una instancia de la clase, esta entidad se denomina objeto , el cual tiene \nacceso a los atributos y a los m\u00e9todos definidos en la clase.  \n \nHay otros aspectos especializados y que deber\u00e1n revisarse posteriormente, como la \nherencia, el polimorfismo, etc.  \n \nLa clase se la define con la palabra reservada  class \n \nLa clase debe contener un m\u00e9todo especial con el nombre __init__ denominado \nconstructor, el cual inicia algunas variables y  ejecuta algunos m\u00e9todos necesarios \n Los m\u00e9todos deben tener al menos un par\u00e1metro, generalmente se acostumbra escribir la \npalabra self, y los dem\u00e1s par\u00e1metros requeridos . El par\u00e1metro self  sirve para hacer \nreferencias a los atributos de la clase en cada m\u00e9todo.  \n \nLos atributos  o variables  que deben ser  accesibles desde fuera de la clase deben \ndeclararse anteponiendo la palabra  self.  al nombre de la variable.  \n \nLos objetos  son instancias o referencias  a la clase y deben ser creados antes de acceder a \nlos m\u00e9todos y atributos.  \n  \nEjemplo.  Dise\u00f1ar una clase para describir un art\u00edculo con los siguientes atributos:  \n     c\u00f3digo, cantidad y prec io. \n \n  \nInstrumentaci\u00f3n  \n  Nombre de la clase:  articulo  \n \n Atributos : cod  (c\u00f3digo del art\u00edculo)  \n   cant  (cantidad actual)  \n   pre  (precio)  \n \n M\u00e9todos  cantidad  (muestra la cantidad actual)  \n   precio   (muestra el precio)  \n   vender   (reduce la cantidad actual)  \n   comprar  (incrementa la cantidad actual)  \n   \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1869, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "58687c06-6852-4ccb-9fc1-481ece90b121": {"__data__": {"id_": "58687c06-6852-4ccb-9fc1-481ece90b121", "embedding": null, "metadata": {"page_label": "399", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf3bf32c-7713-4497-b0c7-9a091df0443d", "node_type": "4", "metadata": {"page_label": "399", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a7a543d3517729de3fcc7ef5956fc810bff5f78e601bdc607134eeea798e970", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96114eba-be67-442a-9220-9aa051a2ea25", "node_type": "1", "metadata": {"page_label": "398", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "16650ce0e54fa5281df22b2722a0f3a054a9845b7c747a2eb5d358a3f316f65e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d261bc88-972b-4d20-9afe-e9654852b151", "node_type": "1", "metadata": {}, "hash": "6d1df9fc9c6c6198979e9bc8e1f4ec17e8800ce7478329a96a1a4efe948b9eb9", "class_name": "RelatedNodeInfo"}}, "hash": "288021776afc3e9db7f53bc85f6d6a4622b08b1ff5fd92db15d37fb0d254e402", "text": "399 \n \nLa clase articulo  \n \n  \nclass articulo():  \n    def __init__(self,cd,ct,pr):  \n        self.cod=cd  \n        self.cant=ct  \n        self.pre=pr  \n \n    def cantidad(self):  \n        print( 'Cantidad actual: ' ,self.cant)  \n     def precio(self):  \n        print( 'Precio: ',self.pre)  \n     def vender(self,x):  \n        if x<=self.cant:  \n            self.cant=self.cant- x \n        else:  \n            print( 'Cantidad insu ficiente')  \n \n    def comprar(self,x):  \n        self.cant=self.cant+x  \n \n \n \nCreaci\u00f3n de objetos de la clase art\u00edculo en la ventana interactiva \n \n>>> from articulo import* \n>>> a=articulo(123,20,5.4)   Se crea el objeto  a  de la clase art\u00edculo  \n>>> a.precio()  \nPrecio:  5.4  \n>>> a.cantidad()  \nCantidad actual:  20  \n>>> a.vender(5)  \n>>> a.cantidad()  \nCantidad actual:  15  \n>>> b=articulo(234,30,4.2)   Se crea el objeto b  de la clase art\u00edculo  \n>>> b.cantidad()  \nCantidad actual:  30  \n>>> b.comprar(5)  \n>>> b.cantidad()  \nCantidad actual:  35  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1016, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d261bc88-972b-4d20-9afe-e9654852b151": {"__data__": {"id_": "d261bc88-972b-4d20-9afe-e9654852b151", "embedding": null, "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "765ca9e2-504a-4b41-9312-4178b1b3dbc6", "node_type": "4", "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a43601cb102d819cc10649e71624eb384ebe6a221f81b679e8011e593e985c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58687c06-6852-4ccb-9fc1-481ece90b121", "node_type": "1", "metadata": {"page_label": "399", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "288021776afc3e9db7f53bc85f6d6a4622b08b1ff5fd92db15d37fb0d254e402", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dfd46e5-594b-4e7d-ba2c-5e2b6d036c7e", "node_type": "1", "metadata": {}, "hash": "d83e07aea342033f1d40867c9eace2ac485142d672453c16c97d65e34c0065d5", "class_name": "RelatedNodeInfo"}}, "hash": "6d1df9fc9c6c6198979e9bc8e1f4ec17e8800ce7478329a96a1a4efe948b9eb9", "text": "400 \n \n10.1 Dise\u00f1o de clases para representar estructuras de datos especiales  \n \nLas estructuras de datos son dispositivos especiales usados como contenedores de datos. \nSon dise\u00f1ados para facilitar las operaciones en ciertas aplicaciones.   \n \nEl tipo  lista de Python tiene muchos m\u00e9todos con los que f\u00e1cilmente se pueden \ninstrumenta r directamente las estructuras de datos lineales b\u00e1sicas: Pila, Cola, Lista. Sin \nembargo, con fines did\u00e1cticos y para que el uso de los m\u00e9todos de Python queden ocultos \nal programador, se instrumentan las estructuras de datos Pila y Cola usando la \nmetodolog\u00eda de la Programaci\u00f3n Orientada a Objetos \n \n10.1.1  Estructura de datos Pila  \n \nUna Pila e s una estructura lineal que est\u00e1 definida para operar solamente con el dato en el \ntope o extremo del contenedor de datos que representa a la Pila.", "start_char_idx": 0, "end_char_idx": 838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6dfd46e5-594b-4e7d-ba2c-5e2b6d036c7e": {"__data__": {"id_": "6dfd46e5-594b-4e7d-ba2c-5e2b6d036c7e", "embedding": null, "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "765ca9e2-504a-4b41-9312-4178b1b3dbc6", "node_type": "4", "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a43601cb102d819cc10649e71624eb384ebe6a221f81b679e8011e593e985c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d261bc88-972b-4d20-9afe-e9654852b151", "node_type": "1", "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d1df9fc9c6c6198979e9bc8e1f4ec17e8800ce7478329a96a1a4efe948b9eb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d29c55e-71fe-4c19-89d9-9bedeeed25d9", "node_type": "1", "metadata": {}, "hash": "d075df8e97aa9d10456f053b52c7f4729612de410d4a840f9004c80f5e0adcf6", "class_name": "RelatedNodeInfo"}}, "hash": "d83e07aea342033f1d40867c9eace2ac485142d672453c16c97d65e34c0065d5", "text": "Instrumentaci\u00f3n  de la clase Pila \n \n Variable:  \nlista   Es el contenedor de datos \n \n M\u00e9todos:  \nConstructor:  Inicia el contenedor de datos \nPoner:   Agrega un elemento al tope de la pila  \nSacar:   Elimina el elemento del  tope de la pila  \n  Tope:   Entrega una copia del elemento del tope  \n  Vac\u00eda:   Detecta si la pila est\u00e1 vac\u00eda  \n \nclass pila(): \n    def __init__(self):    #Constructor  \n        self.lista=[]    #Inicia el contenedor de datos  \n \n    def poner(self,x):    #Agrega un elemento al tope  \n        self.lista=self.lista+[x]  \n \n    def sacar(self):    #Elimina el tope de la pila  \n        if not self.vacia():  \n            del self.lista[- 1] #Ubicado como \u00faltimo elemento  \n \n    def tope(self):    #Entrega el tope de la pila  \n        if not self.vacia():  \n            x=self.lista[ -1] \n            return x \n \n    def mostrar(self):  \n        print(self.lista)  \n \n    def vacia(self):    #Detecta si la pila est\u00e1 vac\u00eda  \n        return len(self.lista)==0  \n \nPython Programaci\u00f3n", "start_char_idx": 843, "end_char_idx": 1855, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d29c55e-71fe-4c19-89d9-9bedeeed25d9": {"__data__": {"id_": "7d29c55e-71fe-4c19-89d9-9bedeeed25d9", "embedding": null, "metadata": {"page_label": "401", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc0f2de9-5e81-433d-955f-dfa422536662", "node_type": "4", "metadata": {"page_label": "401", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2be743dafdb05e00dc3428fbbe843254957718dffacd5ca4e776fbdade60f558", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dfd46e5-594b-4e7d-ba2c-5e2b6d036c7e", "node_type": "1", "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d83e07aea342033f1d40867c9eace2ac485142d672453c16c97d65e34c0065d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fe305a7-3893-4c2f-83c7-941e8b6530f3", "node_type": "1", "metadata": {}, "hash": "928650eca499b11719961737e390d0634b01cf4467a9095a383b09eb26470bf6", "class_name": "RelatedNodeInfo"}}, "hash": "d075df8e97aa9d10456f053b52c7f4729612de410d4a840f9004c80f5e0adcf6", "text": "401 \n \nPrueba de la clase pila en la ventana interactiva  \n \n>>> from pila import * \n>>> p=pila()      Crea el objet o p  de la clase pila  \n>>> p.poner(3)  \n>>> p.mostrar()  \n[3] \n>>> p.poner(7)  \n>>> p.mostrar()  \n[3, 7] \n>>> p.poner(8)  \n>>> p.mostrar()  \n[3, 7, 8]  \n>>> p.sacar()  \n>>> p.mostrar()  \n[3, 7] \n>>> p.poner(9)  \n>>> p.mostrar()  \n[3, 7, 9]  \n>>> x=p.tope()  \n>>> x \n9 \n>>> p.mostrar()  \n[3, 7, 9]  \n>>> p.vacia()  \nFalse \n >>> q=pila()      Crea el objeto q  de la clase pila  \n>>> q.poner(4)  \n>>> q.poner(6)  \n>>> q.mostrar()  \n[4, 6] \n>>> p.mostrar()  \n[3, 7, 9]  \n \n \nNota.  El elemento que se coloca en la pila puede ser un dato estructurado, por ejemplo \nuna lista.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 711, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fe305a7-3893-4c2f-83c7-941e8b6530f3": {"__data__": {"id_": "5fe305a7-3893-4c2f-83c7-941e8b6530f3", "embedding": null, "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00362a1a-3e53-4f0d-94be-14b845326781", "node_type": "4", "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44157db9cdb5a0fe91483569e9f2546babfe75e9529a396abeaac0ded2797bfe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d29c55e-71fe-4c19-89d9-9bedeeed25d9", "node_type": "1", "metadata": {"page_label": "401", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d075df8e97aa9d10456f053b52c7f4729612de410d4a840f9004c80f5e0adcf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aee8acc2-a8aa-41f5-ba38-376864ae3766", "node_type": "1", "metadata": {}, "hash": "70d0a69e4279fdec8d9a04e7c407c4db793bf22c1934ae9eed858bbb41408bbb", "class_name": "RelatedNodeInfo"}}, "hash": "928650eca499b11719961737e390d0634b01cf4467a9095a383b09eb26470bf6", "text": "402 \n \nAplica ci\u00f3n de la clase Pila \n \nB\u00fasqueda de la salida en un laberinto  \n  \nSuponga el problema de encont rar la ruta de salida de un laberinto de n xm casillas. La \ncasilla inicial es la casilla en la esquina superior izquierda, y la casilla de salida es la casilla \nen la  esquina opuesta.  Las otras casillas en los bordes est\u00e1n bloquead as. \n Instrumentaci\u00f3n  \n \nLas casillas libres se marcan con 0 y las bloqueadas con  1. De cualquier casilla se puede \nseguir a alguna de las 8 casillas adyacente, siempre que est\u00e9 libre y no haya s ido visitada \nanteriormente. Se necesita una pila para almacenar la ruta y poder retroceder y continuar \ncon otra casilla libre y no visitada. Una matriz adicional se define para mantener el registro \nde casillas visitadas.", "start_char_idx": 0, "end_char_idx": 768, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aee8acc2-a8aa-41f5-ba38-376864ae3766": {"__data__": {"id_": "aee8acc2-a8aa-41f5-ba38-376864ae3766", "embedding": null, "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00362a1a-3e53-4f0d-94be-14b845326781", "node_type": "4", "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "44157db9cdb5a0fe91483569e9f2546babfe75e9529a396abeaac0ded2797bfe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fe305a7-3893-4c2f-83c7-941e8b6530f3", "node_type": "1", "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "928650eca499b11719961737e390d0634b01cf4467a9095a383b09eb26470bf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fec5790-dc91-4b10-ab2a-3b834ee5282a", "node_type": "1", "metadata": {}, "hash": "77b6a04fb2ec1be58a7eb2d835bd5bae75bcd68b8706b8d9e2dd5923d9150483", "class_name": "RelatedNodeInfo"}}, "hash": "70d0a69e4279fdec8d9a04e7c407c4db793bf22c1934ae9eed858bbb41408bbb", "text": "Una matriz adicional se define para mantener el registro \nde casillas visitadas.  \n \nVariables  \n q: Matriz que contiene el laberinto  \n p: Pila que contiene la ruta recorrida en el laberinto \n v: Matriz para registrar con  1  las casillas visitadas  \n dx,dy:  Listas con valores para actualizar  las coordenadas alrededor de una casilla  \n x,y: Coordenadas  de la ruta  \n \n \nfrom numpy import* \nfrom pila import* \n #Definici\u00f3n del laberinto para una prueba \nq=array([[0,1,1,1,1,1,1,1],   \n         [1,0,0,0,1,0,0,1],  \n         [1,1,1,0,1,1,1,1],  \n         [1,0,0,1,1,1,1,1],  \n         [1,0,1,0,1,0,1,1],  \n         [1,0,1,1,0,1,0,1],  \n         [1,0,1,0,0,0,0,1],  \n         [1,1,1,1,1,1,1,0]])  \n print('Laberinto\\ n',q) \n[n,m]=q.shape  \n dx=[0,1,1,1,0,- 1,-1,-1]    # Valores para actualizar coordenadas  \ndy=[1,1,0,- 1,-1,-1,0,1] \nv=zeros([n,m],int)         # Matriz de marcas de casillas visitadas  \n p=pila()                   # Pila para guardar la ruta recorrida  \nz=[0,0]                    # Celda inicial \np.poner(z)                                               \nsalida=False  \nPython Programaci\u00f3n", "start_char_idx": 688, "end_char_idx": 1800, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8fec5790-dc91-4b10-ab2a-3b834ee5282a": {"__data__": {"id_": "8fec5790-dc91-4b10-ab2a-3b834ee5282a", "embedding": null, "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be95984d-d42c-4999-8f9a-904c9cb19d3e", "node_type": "4", "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2288a64cb90a53ddfb5986739c0ffdff6b75d9158ab7a1624d91e2d40c49e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aee8acc2-a8aa-41f5-ba38-376864ae3766", "node_type": "1", "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "70d0a69e4279fdec8d9a04e7c407c4db793bf22c1934ae9eed858bbb41408bbb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c33e381-6842-4964-911e-a817ed101483", "node_type": "1", "metadata": {}, "hash": "2de9047d1b513bd11739eb802d384ed7f69b0072096455b2f6254388a5931f0f", "class_name": "RelatedNodeInfo"}}, "hash": "77b6a04fb2ec1be58a7eb2d835bd5bae75bcd68b8706b8d9e2dd5923d9150483", "text": "403 \n \nwhile not p.vacia() and not salida:  \n    [x,y]=p.tope()                           \n    if x==n-1 and y==m-1:      # Si llega a la celda final, salir  \n        salida=True  \n        break  \n    p.sacar()       \n    nuevo=True  \n    while nuevo: \n        nuevo=False;  \n        for i in range(8):  \n            px=x+dx[i]  \n            py=y+dy[i]  \n            if px>0 and px<n and py>0 and py<m and  \n               q[px][py]==0 and v[px][py]==0:  \n               z=[px,py]    # Colocar celda en la pila  \n           p.poner(z)      # si hay ruta y no fue visitada  \n            nuevo=True  \n              x=px \n               y=py \n              v[px][py]=1      # Marcar celda visitada  \n              break \n \nif salida: \n  print('Ruta de salida en reversa ') \n   while not p.vacia():     # Ruta de salida del laberinto en reversa  \n        [x,y]=p.tope()  \n        print( 'x =',x,' y =',y)  \n        p.", "start_char_idx": 0, "end_char_idx": 913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c33e381-6842-4964-911e-a817ed101483": {"__data__": {"id_": "2c33e381-6842-4964-911e-a817ed101483", "embedding": null, "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be95984d-d42c-4999-8f9a-904c9cb19d3e", "node_type": "4", "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2288a64cb90a53ddfb5986739c0ffdff6b75d9158ab7a1624d91e2d40c49e96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fec5790-dc91-4b10-ab2a-3b834ee5282a", "node_type": "1", "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "77b6a04fb2ec1be58a7eb2d835bd5bae75bcd68b8706b8d9e2dd5923d9150483", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3065fb0e-8478-4475-a6ab-68c2ee3fb0a8", "node_type": "1", "metadata": {}, "hash": "904f2c8cb3543bf0fea4dab32ec53120d1a5a405c27f0e6c0c3a77f69e398f13", "class_name": "RelatedNodeInfo"}}, "hash": "2de9047d1b513bd11739eb802d384ed7f69b0072096455b2f6254388a5931f0f", "text": "x,' y =',y)  \n        p.sacar()  \nelse: \n    print( 'No hay ruta de salida' ) \n \n \nPrueba del programa  \n \n>>>  \nLaberinto  \n[[0 1 1 1 1 1 1 1]  \n [1 0 0 0 1 0 0 1]  \n [1 1 1 0 1 1 1 1]  \n [1 0 0 1 1 1 1 1]  \n [1 0 1 0 1 0 1 1]  \n [1 0 1 1 0 1 0 1]  \n [1 0 1 0 0 0 0 1]  \n [1 1 1 1 1 1 1 0]]  \n \nRuta de salida en reversa  \nx = 7  y = 7  \nx = 6  y = 6  \nx = 6  y = 5  \nPython Programaci\u00f3n", "start_char_idx": 889, "end_char_idx": 1277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3065fb0e-8478-4475-a6ab-68c2ee3fb0a8": {"__data__": {"id_": "3065fb0e-8478-4475-a6ab-68c2ee3fb0a8", "embedding": null, "metadata": {"page_label": "404", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cf72c0f-04ff-4ef1-ab5c-4e4005c8fed9", "node_type": "4", "metadata": {"page_label": "404", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ace39176ce6381bbc1e267f6c13e43f6be6f336fdc242a874033efd16453bbc0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c33e381-6842-4964-911e-a817ed101483", "node_type": "1", "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2de9047d1b513bd11739eb802d384ed7f69b0072096455b2f6254388a5931f0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1eb3f2e-3957-4e57-8617-22ec131d4492", "node_type": "1", "metadata": {}, "hash": "5ca290c238b224ffe95bc22978a00f509034b6b486a486c617dc91c80e4df74d", "class_name": "RelatedNodeInfo"}}, "hash": "904f2c8cb3543bf0fea4dab32ec53120d1a5a405c27f0e6c0c3a77f69e398f13", "text": "404 \n \nx = 5  y = 4  \nx = 4  y = 3  \nx = 3  y = 2  \nx = 2  y = 3  \nx = 1  y = 3  \nx = 1  y = 2  \nx = 1  y = 1  \n>>>  \n \nNota:  Para verificar la ruta  en la soluci\u00f3n, hay que recordar que la numeraci\u00f3n de celdas \nen Python comienza en 0 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 257, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1eb3f2e-3957-4e57-8617-22ec131d4492": {"__data__": {"id_": "f1eb3f2e-3957-4e57-8617-22ec131d4492", "embedding": null, "metadata": {"page_label": "405", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b10e859c-193d-47c0-aef3-11d2f0148ee3", "node_type": "4", "metadata": {"page_label": "405", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ff49ce0742d1489373b54e3ad7ed0adc901a93acd35a260850a680a53c5c8ee3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3065fb0e-8478-4475-a6ab-68c2ee3fb0a8", "node_type": "1", "metadata": {"page_label": "404", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "904f2c8cb3543bf0fea4dab32ec53120d1a5a405c27f0e6c0c3a77f69e398f13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1f4bb8b-556f-474e-a210-53620b0ac5e4", "node_type": "1", "metadata": {}, "hash": "e452c8a00d5e087ed426ce0da434f76ba2de03f5762bc6f9368183e2b8cacdc3", "class_name": "RelatedNodeInfo"}}, "hash": "5ca290c238b224ffe95bc22978a00f509034b6b486a486c617dc91c80e4df74d", "text": "405 \n \n10.1.2 Estructura de datos Cola  \n \nUna Cola e s una estructura lineal que est\u00e1 definida para operar con los datos ubicados en \nel inicio o en el final del contenedor de datos que representa a la cola.  \n \nDise\u00f1o de la clase Cola  \n \n Variable:  \nLista:     Es el contenedor de datos \n \n M\u00e9todos:  \nConstructor:  Inicia el contenedor  \nPoner:   Agrega un elemento a l final de la cola  \nSacar:   Elimina el elemento de l frente de la cola  \n  Frente : Entrega una copia del elemento del frente  \n  Vac\u00eda:   Detecta si la cola est\u00e1 vac\u00eda \n \nclass cola(): \n    def __init__(self):     # Constructor  \n        self.lista=[]       #Inicia el contenedor de datos vac\u00edo  \n \n    def poner(self,x):       #Aagrega elemento al final de la cola  \n        self.lista=[x]+self.lista  \n \n    def sacar(self):  \n        if not self.vacia():  \n            del self.lista[- 1] #Borra el elemento del frente  \n \n    def frente(self):     #Entrega una copia del frente  \n        if not self.vacia():  \n            x=self.lista[ -1] \n            return x \n \n    def mostrar(self):  \n        print(self.lista)  \n     def vacia(self):     #Detecta si la cola est\u00e1 vac\u00eda  \n        return len(self.lista)==0  \n \n \nPrueba de la clase cola en la ventana interactiva  \n \n>>> from cola import cola  \n>>> c=cola()  \n>>> c.poner(34)  \n>>> c.mostrar()  \n[34] \n>>> c.poner(45)  \n>>> c.mostrar()  \n[45, 34]  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1403, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1f4bb8b-556f-474e-a210-53620b0ac5e4": {"__data__": {"id_": "a1f4bb8b-556f-474e-a210-53620b0ac5e4", "embedding": null, "metadata": {"page_label": "406", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d50c8fb-382c-4469-8f7b-1f9f2f62c1a1", "node_type": "4", "metadata": {"page_label": "406", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "85bbeb8ca3f0d9a820192c78213b5b5bdb171af5a981d37c40c560c3ca9a8ae1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1eb3f2e-3957-4e57-8617-22ec131d4492", "node_type": "1", "metadata": {"page_label": "405", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "5ca290c238b224ffe95bc22978a00f509034b6b486a486c617dc91c80e4df74d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6d269b9-3f9a-4205-a0c3-0520cefd28d5", "node_type": "1", "metadata": {}, "hash": "0bb9b69a05c584490c87f655b08536514a8a4f27a79cdc901bad25eb7225fb97", "class_name": "RelatedNodeInfo"}}, "hash": "e452c8a00d5e087ed426ce0da434f76ba2de03f5762bc6f9368183e2b8cacdc3", "text": "406 \n \n>>> c.poner(73)  \n>>> c.mostrar()  \n[73, 45, 34]  \n>>> c.poner(25)  \n>>> c.mostrar()  \n[25, 73, 45, 34]  \n>>> c.sacar()  \n>>> c.mostrar()  \n[25, 73, 45]  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6d269b9-3f9a-4205-a0c3-0520cefd28d5": {"__data__": {"id_": "f6d269b9-3f9a-4205-a0c3-0520cefd28d5", "embedding": null, "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4656e68-bc74-497d-a128-f8bd2dd25a6a", "node_type": "4", "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b88df6441f907ec3abe97b0cb7550534b99b431fb217f3da8c240e71315528a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1f4bb8b-556f-474e-a210-53620b0ac5e4", "node_type": "1", "metadata": {"page_label": "406", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e452c8a00d5e087ed426ce0da434f76ba2de03f5762bc6f9368183e2b8cacdc3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21656f14-ea9e-4038-a113-d072df6f9548", "node_type": "1", "metadata": {}, "hash": "dc012751bb2da4cc88c179e4adfbf973cda21d478ac24c59944c19c8a96a5902", "class_name": "RelatedNodeInfo"}}, "hash": "0bb9b69a05c584490c87f655b08536514a8a4f27a79cdc901bad25eb7225fb97", "text": "407 \n \nAplicaci \u00f3n de la clase cola  \n \nSimulaci\u00f3n del comportamiento de una cola de clientes  \n Ejemplo. Suponer una cola de clientes que ser\u00e1n atendidos en una estaci\u00f3n de servicio. \nSe conoce que la llegada de un cliente en cada minuto tiene distribuci\u00f3n uniforme con un \nvalor de probabilidad dado. El tiempo de atenci\u00f3n del cliente que est\u00e1 frente a la cola tambi\u00e9n es un valor aleatorio entero  entre 1 y un valor m\u00e1ximo dado como dato en \nminutos.  Se desea conocer cuantos clientes quedar\u00edan en la cola luego de trancurrir una \ncantidad de minutos especificada.", "start_char_idx": 0, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21656f14-ea9e-4038-a113-d072df6f9548": {"__data__": {"id_": "21656f14-ea9e-4038-a113-d072df6f9548", "embedding": null, "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4656e68-bc74-497d-a128-f8bd2dd25a6a", "node_type": "4", "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b88df6441f907ec3abe97b0cb7550534b99b431fb217f3da8c240e71315528a5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6d269b9-3f9a-4205-a0c3-0520cefd28d5", "node_type": "1", "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0bb9b69a05c584490c87f655b08536514a8a4f27a79cdc901bad25eb7225fb97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4ebb4cf-dfba-4356-b2a7-0bef62841c90", "node_type": "1", "metadata": {}, "hash": "09ecf6589db47825210e96b9bb80bfdc88cebca4b93d53fb038ef76d49075e44", "class_name": "RelatedNodeInfo"}}, "hash": "dc012751bb2da4cc88c179e4adfbf973cda21d478ac24c59944c19c8a96a5902", "text": "Instrumentaci\u00f3n  \n \nVariables  \n c: Cola cuyos elementos contienen el tiempo de atenci\u00f3n a cada cliente qyue llega \n t: Tiempo de la simulaci\u00f3n \n t_frente:  Tiempo de atenci\u00f3n del cliente en el frente de la cola  \n \n \n#Simulaci\u00f3n de una cola de clientes  \nfrom cola import cola \nfrom random import* \nt_simul=int (input('Cantidad de minutos para la simulaci\u00f3n:  ')) \nprob_ing=float( input('Probabilidad de ingreso de un cliente en cada  \n                      minuto:  ')) \nt_atenc=int (input('Tiempo m\u00e1ximo para atenci\u00f3n a  cada cliente  \n                   en minutos:  ')) \nc=cola()  \nt=0                 #Tiempo para el proceso de la simulaci\u00f3n (reloj)  \nt_frente=0;         #Tiempo del cliente en el frente  \nwhile t<t_simul:  \n    p=random()           #Probabilidad para la llegada de un cliente  \n    if p<=prob_ing:           \n        d=randint(1,t_atenc)   #Duraci\u00f3n d e la atenci\u00f3n del cliente \n        c.poner(d)            #Agregar cliente (guardar  duraci\u00f3n)  \n    if t_frente<=0:  \n        if not c.vacia():            #El cliente del frente termin\u00f3  \n          t_frente=c.frente()     #Se inicia el tiempo del frente  \n         c.sacar()    \n    else:  \n        t_frente=t_frente -1    #Restar 1 min al tiempo del f rente \n    t=t+1;  \nn=0 \nwhile not c.vacia():  \n    c.sacar()  \n    n=n+1  \nprint('Cantidad de clientes que quedaron: ',n) \nPython Programaci\u00f3n", "start_char_idx": 574, "end_char_idx": 1947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4ebb4cf-dfba-4356-b2a7-0bef62841c90": {"__data__": {"id_": "a4ebb4cf-dfba-4356-b2a7-0bef62841c90", "embedding": null, "metadata": {"page_label": "408", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d7a8027-23e4-4f9c-8009-134d00c20ea8", "node_type": "4", "metadata": {"page_label": "408", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "13814bd4f6e7fb882a5d42d5fa556bd3f97fa98fdfd9a3e829a4467c141e8195", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21656f14-ea9e-4038-a113-d072df6f9548", "node_type": "1", "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dc012751bb2da4cc88c179e4adfbf973cda21d478ac24c59944c19c8a96a5902", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8a697b4-5494-4581-b28e-feb3eca228be", "node_type": "1", "metadata": {}, "hash": "03af8077565d3c79c233dbd188cc16c1f1bf5b27f3cfca6ab21dbd324cd075f5", "class_name": "RelatedNodeInfo"}}, "hash": "09ecf6589db47825210e96b9bb80bfdc88cebca4b93d53fb038ef76d49075e44", "text": "408 \n \nPrueba del programa  \n \n>>>  \nCantidad de minutos para la simulaci\u00f3n:  120  \nProbabilidad de ingreso de un cliente en cada minuto:  0.25  \nTiempo m\u00e1ximo para atenci\u00f3n a cada cliente en minutos:  5  \n Cantidad de clientes que quedaron: 4 \n>>> \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8a697b4-5494-4581-b28e-feb3eca228be": {"__data__": {"id_": "a8a697b4-5494-4581-b28e-feb3eca228be", "embedding": null, "metadata": {"page_label": "409", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0381a1d6-3dcf-41b3-9be6-182346ff46ab", "node_type": "4", "metadata": {"page_label": "409", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b492551121124c08afcb9bf3b1540ed69c60f550585b97c4a954c8c7feae203", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4ebb4cf-dfba-4356-b2a7-0bef62841c90", "node_type": "1", "metadata": {"page_label": "408", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09ecf6589db47825210e96b9bb80bfdc88cebca4b93d53fb038ef76d49075e44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c10acca2-64a3-4581-af6c-1cec3d65ffb6", "node_type": "1", "metadata": {}, "hash": "6d7579386b2ca66752e26de7019e2f392480a74afdd715931f5a4bdd43eae728", "class_name": "RelatedNodeInfo"}}, "hash": "03af8077565d3c79c233dbd188cc16c1f1bf5b27f3cfca6ab21dbd324cd075f5", "text": "409 \n \n10.2 Ejercicios de p rogramaci\u00f3n orientada a objetos  \n \n \n1. Crear una clase Empleado qu e modele la informaci\u00f3n que una empresa mantiene sobre  \ncada empleado: c\u00f3digo,  sueldo base, pago por hora extra, horas extras  realizadas en el \nmes, casado o no y n\u00famero de hijos.  \n \nAl crear objetos de esta clase se deber\u00e1n proporcionar los datos de un empl eado, y los \nm\u00e9todos deber\u00e1n permitir realizar:   \n \na) C\u00e1lculo sueldo incluyendo pago de horas extras .  \nb) C\u00e1lculo de retenciones. Suponer 5% si es casado y 5% por cada hijo \nc) C\u00e1lculo del sueldo neto.  \nd) Mostrar el detalles de pago \n \n \n2. Crear  una clase Rect angulo para model ar rect\u00e1ngulos por medio de cuatro puntos (los  \nv\u00e9rtices).  \n \nLos m\u00e9todos deber\u00e1n permitir  \n \na) Trasladar el rect\u00e1ngulo a una posici\u00f3n dados los desplazamientos en cada eje.  \nb) Contraer las dimensiones, dado un valor en porcentaje.  \nc) Rotar el rect\u00e1ngulo alrededor del origen, dado el \u00e1ngulo de rotaci\u00f3n \nc) Mostrar las coordenadas de los cuatro v\u00e9rtices \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c10acca2-64a3-4581-af6c-1cec3d65ffb6": {"__data__": {"id_": "c10acca2-64a3-4581-af6c-1cec3d65ffb6", "embedding": null, "metadata": {"page_label": "410", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4560112-5b79-45a2-a86b-1093e711da46", "node_type": "4", "metadata": {"page_label": "410", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b3b995a62771147519db5f93d743e202a86b3222cf9701fec9d0fc4ef7cc1eed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8a697b4-5494-4581-b28e-feb3eca228be", "node_type": "1", "metadata": {"page_label": "409", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "03af8077565d3c79c233dbd188cc16c1f1bf5b27f3cfca6ab21dbd324cd075f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06995493-5ec7-46c9-84a1-7d0f53814461", "node_type": "1", "metadata": {}, "hash": "7cdb5ad68899ef030c0d1f2a5a498059e9118e8b6a4a3ecbe4f4dc3746237eb8", "class_name": "RelatedNodeInfo"}}, "hash": "6d7579386b2ca66752e26de7019e2f392480a74afdd715931f5a4bdd43eae728", "text": "410 \n \n11 Dise\u00f1o de Interfaz de Usuario  \nTkinter es la librer\u00eda est\u00e1ndar de Python disponible para desarrollar aplicaciones gr\u00e1ficas \npara interfaz de usuario (GUI).  \nEl uso de los controles disponibles para construir una GUI se puede encontr ar en la \ndocumentaci\u00f3n en l\u00ednea del shell de Python y en tutoriales en la red.  \nEn el siguiente ejemplo se crea un objeto \u2018ventana\u2019 de la clase Tk de tkinter. Se coloc a un \nmensaje en una etiqueta y se crea un bot\u00f3n para salir de la ventana.  \n \n \nfrom tkinter import* \ntk = Tk()  \nventana = Frame(tk, relief=RIDGE, borderwidth=2)  \nventana.pack(fill=BOTH,expand=1)  \ntk.title('Saludo')  \ntk.geometry('300x200')  \netiqueta = Label(ventana, text=' Python GUI' ) \netiqueta.pack(fill=X, expand=1)  \nboton = Button(ventana,text=' Salir',command=tk.destroy)  \nboton.pack(side=BOTTOM)  \ntk.mainloop()  \n  \n \n     \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 881, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06995493-5ec7-46c9-84a1-7d0f53814461": {"__data__": {"id_": "06995493-5ec7-46c9-84a1-7d0f53814461", "embedding": null, "metadata": {"page_label": "411", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67e171c8-68dd-425a-9f0e-d4cc3ce80b92", "node_type": "4", "metadata": {"page_label": "411", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "408a669c83ba8f194676af8943adbc537af5d663ab28e91477e1c3810d971a49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c10acca2-64a3-4581-af6c-1cec3d65ffb6", "node_type": "1", "metadata": {"page_label": "410", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d7579386b2ca66752e26de7019e2f392480a74afdd715931f5a4bdd43eae728", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8421528c-4592-47d0-9cdd-54bd5ecb27b4", "node_type": "1", "metadata": {}, "hash": "c102e1bee52fae90a23702092742a90986c7ce3dfda3de1295790f068aaa3460", "class_name": "RelatedNodeInfo"}}, "hash": "7cdb5ad68899ef030c0d1f2a5a498059e9118e8b6a4a3ecbe4f4dc3746237eb8", "text": "411 \n \n11.1 Dise\u00f1o de interfaz de usuario con p rogramaci\u00f3n orientada a o bjetos  \n \nLa Programaci\u00f3n  Orienta da a Objetos provee un procedimiento m\u00e1s formal para definir \nclases, objetos gr\u00e1ficos, asignaci\u00f3n de c\u00f3digo y activ aci\u00f3n. \n \nEl siguiente ejemplo es una adaptaci\u00f3n del ejemplo que se puede encontrar en la \nreferencia:  Basic Python Tutorial  de Investary en el canal de YouTube : \n \nhttps://www.youtube.com/channel/UCvfluOiZ_eyBfzDXNft_7Eg  \n \nAplicaci\u00f3n para crear un bot\u00f3n  \n \nfrom tkinter import* \nclass aplicacion(Frame):  \n \n    def __init__(self,master):  \n        Frame.__init__(self,master)  \n        self.grid()  \n        self.crear_widgets()  \n     def crear_widgets(self):  \n        self.boton1=Button(self,text=\"Mensaje\")  \n        self.boton1.grid()  \n ventana=Tk()  \nventana.title('Primer bot\u00f3n')  \nventana.geometry('300x200')  \n app=aplicacion(ventana)  \n \nventana.mainloop()  \n \n \n           \n   \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 946, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8421528c-4592-47d0-9cdd-54bd5ecb27b4": {"__data__": {"id_": "8421528c-4592-47d0-9cdd-54bd5ecb27b4", "embedding": null, "metadata": {"page_label": "412", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7961492d-ff2c-46c5-83df-5dcba24c8aa7", "node_type": "4", "metadata": {"page_label": "412", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9422f5946c35e52fa2c6771346f0c2b700874637d6692cd5c499b5027a9d6105", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06995493-5ec7-46c9-84a1-7d0f53814461", "node_type": "1", "metadata": {"page_label": "411", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7cdb5ad68899ef030c0d1f2a5a498059e9118e8b6a4a3ecbe4f4dc3746237eb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d20172f2-247a-4275-9fee-0c08d163c460", "node_type": "1", "metadata": {}, "hash": "504157095edf4e50aac80b0e5d9babaaa8c5fef0a1f08dac60ae33f10489d299", "class_name": "RelatedNodeInfo"}}, "hash": "c102e1bee52fae90a23702092742a90986c7ce3dfda3de1295790f068aaa3460", "text": "412 \n \nOtras formas de asignar texto al bot\u00f3n  \n \nfrom tkinter import* \nclass aplicacion(Frame):  \n \n    def __init__(self,master):  \n        Frame.__init__(self,master)  \n        self.grid()  \n        self.crear_widgets()  \n \n    def crear_widgets(self):  \n        self.boton1=Button(self)  \n        self.boton1.grid()  \n        self.boton1.configure(text='Mensaje')  \n         \n ventana=Tk()  \nventana.title('Primer bot\u00f3n')  \nventana.geometry('300x200')  \n app=aplicacion(ventana)  \n \nventana.mainloop()  \n \n \n \nfrom tkinter import* \nclass aplicacion(Frame):  \n \n    def __init__(self,master):  \n        Frame.__init__(self,master)  \n        self.grid()  \n        self.crear_widgets()  \n \n    def crear_widgets(self):  \n        self.boton1=Button(self)  \n        self.boton1.grid()  \n        self.boton1['text']='mensaje'          \n ventana=Tk()  \nventana.title('Primer bot\u00f3n')  \nventana.geometry('300x200')  \n app=aplicacion(ventana)  \n ventana.mainloop()  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 984, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d20172f2-247a-4275-9fee-0c08d163c460": {"__data__": {"id_": "d20172f2-247a-4275-9fee-0c08d163c460", "embedding": null, "metadata": {"page_label": "413", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87bd58c3-9b5c-4ed4-ad3a-3035432f6117", "node_type": "4", "metadata": {"page_label": "413", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "52b9d2fd414a8a57fb79c98f3b322243d1f6dce25678dcd67e449c7cd1ea83f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8421528c-4592-47d0-9cdd-54bd5ecb27b4", "node_type": "1", "metadata": {"page_label": "412", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c102e1bee52fae90a23702092742a90986c7ce3dfda3de1295790f068aaa3460", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fa5f4ae-4f48-465f-a05d-3f163122a5e2", "node_type": "1", "metadata": {}, "hash": "a3686ec76bbf604db2a6842cb8ea7dcc28951a24a41ba5d13bef2ee09513eb0d", "class_name": "RelatedNodeInfo"}}, "hash": "504157095edf4e50aac80b0e5d9babaaa8c5fef0a1f08dac60ae33f10489d299", "text": "413 \n \nAplicaci\u00f3n para conteo de clicks del bot\u00f3n  \n \n \nfrom tkinter import* \nclass aplicacion(Frame):  \n     \n    def __init__(self,master):  \n        Frame.__init__(self,master)  \n        self.grid()  \n        self.boton_clicks=0  \n        self.crear_widgets()  \n         \n    def crear_widgets(self):  \n        self.boton1=Button(self)  \n        self.boton1.grid()  \n        self.boton1['text']='Conteo de clicks'  \n        self.boton1['command']=self.actualice_conteo  \n \n    def actualice_conteo(self):  \n        self.boton_clicks=self.boton_clicks+1  \n        self.boton1['text']='Totalclicks: '+  \n                     str(self.boton_clicks)  \n \nventana=Tk()  \nventana.title('Clicks')  \nventana.geometry('300x200')  \n \napp=aplicacion(ventana)  \n \nventana.mainloop()  \n \n \n          \n  \n \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 822, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fa5f4ae-4f48-465f-a05d-3f163122a5e2": {"__data__": {"id_": "6fa5f4ae-4f48-465f-a05d-3f163122a5e2", "embedding": null, "metadata": {"page_label": "414", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8c4e379-f533-4c97-86c4-08ce384a9998", "node_type": "4", "metadata": {"page_label": "414", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "59346998de4a48a83b7e50811076e93e798788f0714591e6a9ef4287c1bba32c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d20172f2-247a-4275-9fee-0c08d163c460", "node_type": "1", "metadata": {"page_label": "413", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "504157095edf4e50aac80b0e5d9babaaa8c5fef0a1f08dac60ae33f10489d299", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecb31328-e429-4b2c-b81e-eac60cc29538", "node_type": "1", "metadata": {}, "hash": "1d79b3ae39e7141e5189289d0553951a5d9bf4274be3bc6fd94d348deb29a4ce", "class_name": "RelatedNodeInfo"}}, "hash": "a3686ec76bbf604db2a6842cb8ea7dcc28951a24a41ba5d13bef2ee09513eb0d", "text": "414 \n \nAplicaci\u00f3n para ingreso y verificaci\u00f3n de un dato  \n \nfrom tkinter import* \nclass aplicacion(Frame):  \n     \n    def __init__(self,master):  \n        Frame.__init__(self,master)  \n        self.grid()  \n        self.crear_widgets()  \n         \n    def crear_widgets(self):  \n        self.instruction=Label(self,text='Entre el password')  \n   self.instruction.grid(row=0,column=0,columnspan=2,  \nsticky=W)  \n        self.password=Entry(self)  \n        self.password.grid(row=1,column=1,sticky=W)  \n        self.submit_button=Button(self,text='Ingrese',  \n    command=self.verificar)  \n        self.submit_button.grid(row=2,column=1,sticky=W)  \n        self.text=Text(self,width=35,height=5,wrap=WORD)  \n        self.text.grid(row=3,column=0,columnspan=2,sticky=W)  \n \n    def verificar(self):  \n        contenido=self.password.get() \n        if contenido=='secreto':  \n            mensaje='Acceso permitido' \n        else:  \n            mensaje='Acceso negado'  \n        self.text.delete(0.0,END)  \n        self.text.insert(0.0,mensaje) \n         \nventana=Tk()  \nventana.title('Password')  \nventana.geometry('300x200')  \n \napp=aplicacion(ventana)  \n \nventana.mainloop()  \n \n \n            \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecb31328-e429-4b2c-b81e-eac60cc29538": {"__data__": {"id_": "ecb31328-e429-4b2c-b81e-eac60cc29538", "embedding": null, "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1dca49c-b8fe-46a6-9ff1-3c0399ffe74c", "node_type": "4", "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0c8c80c30c067f4259e6dbb90e7283db3a882f70cea9f9a09ce6641e779deb1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fa5f4ae-4f48-465f-a05d-3f163122a5e2", "node_type": "1", "metadata": {"page_label": "414", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a3686ec76bbf604db2a6842cb8ea7dcc28951a24a41ba5d13bef2ee09513eb0d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2adf18b8-a296-4c14-b7cd-680607590d65", "node_type": "1", "metadata": {}, "hash": "78a9c69c96815f4773a73ddb113c7af3c6e294c94ec7ed80e1275595ac63265a", "class_name": "RelatedNodeInfo"}}, "hash": "1d79b3ae39e7141e5189289d0553951a5d9bf4274be3bc6fd94d348deb29a4ce", "text": "415 \n \n12 Eficiencia de algoritmos y programas  \n \nLa eficiencia de un algoritmo y su programaci\u00f3n est\u00e1 relacionada con el tiempo necesario \npara obtener la soluci\u00f3n. Este tiempo depende de la cantidad de operaciones que se \ndeben realizar. As\u00ed, si se tien en dos algoritmos para resolver un mismo problema, es m\u00e1s \neficiente el que requiere menos operaciones para producir el mismo resultado.  \n \nSea n el tama\u00f1o del problema, y T(n)  una funci\u00f3n que mide la eficiencia del algoritmo \n(cantidad de operaciones requeri das). Para obtener T(n)  se pueden realizar pruebas en el \ncomputador con diferentes valores de n registrando el tiempo real de ejecuci\u00f3n. Este \ntiempo es proporcional a la cantidad de operaciones que se realizaron, por lo tanto se \npuede usar para estimar la funci\u00f3n T(n).   \n Esta forma experimental para determinar T(n)  tiene el inconveniente de usar la \ninstrumentaci\u00f3n computacional del algoritmo para realizar las pruebas. Es preferible \nconocer la eficiencia del algoritmo antes de invertir el esfuerzo de la programaci\u00f3n \ncomputacional para preveer que sea un algoritmo aceptable.  \n \nPara determinar la eficiencia de un algori tmo antes de su instrumentaci\u00f3n se puede \nanalizar la estructura del algoritmo o realizar un recorrido del mismo en forma abstracta.  \n Ejemplo.  El siguiente algoritmo calcula la suma de los primeros n n\u00fameros naturales.  \nEncontrar T(n)  \n \nSea T  la cantidad de sumas que se realizan \n . . . \n s = 0 \n for i in range(n):  \n    s = s + i  \n . \nLa suma est\u00e1 dentro de una repetici\u00f3n que se realiza n veces, por lo t anto,  \n T(n) = n  \n Ejemplo.  El siguiente algoritmo suma los elementos de una matriz cuadrada a de orden n .  \nEncontrar T(n) \n \nSea T la cantidad de sumas \n . . .", "start_char_idx": 0, "end_char_idx": 1738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2adf18b8-a296-4c14-b7cd-680607590d65": {"__data__": {"id_": "2adf18b8-a296-4c14-b7cd-680607590d65", "embedding": null, "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1dca49c-b8fe-46a6-9ff1-3c0399ffe74c", "node_type": "4", "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0c8c80c30c067f4259e6dbb90e7283db3a882f70cea9f9a09ce6641e779deb1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecb31328-e429-4b2c-b81e-eac60cc29538", "node_type": "1", "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1d79b3ae39e7141e5189289d0553951a5d9bf4274be3bc6fd94d348deb29a4ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25f6289b-d528-45e8-a98b-48b448f6ef8c", "node_type": "1", "metadata": {}, "hash": "02aef64415fe0813e81fb6bac3bb38751a79686af2f0478d541cf476bf05696a", "class_name": "RelatedNodeInfo"}}, "hash": "78a9c69c96815f4773a73ddb113c7af3c6e294c94ec7ed80e1275595ac63265a", "text": ". . \n s = 0 \n for i in range(n):  \n    for j in range(n):  \n       s = s + a[i][j]  \n \nLa suma est\u00e1 incluida en una repetici\u00f3n doble. La variable  i, cambia n veces y para cada \nuno de sus valores, la variable j cambia n veces.  Por lo tanto.  \n \n T(n) = n\n2  \nPython Programaci\u00f3n", "start_char_idx": 1735, "end_char_idx": 2015, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25f6289b-d528-45e8-a98b-48b448f6ef8c": {"__data__": {"id_": "25f6289b-d528-45e8-a98b-48b448f6ef8c", "embedding": null, "metadata": {"page_label": "416", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49add987-bb96-4545-b0e8-446855d3d298", "node_type": "4", "metadata": {"page_label": "416", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14b3f0cc869f638d170361667da182cbbe52a2d74bf7d47fed013d8333d48516", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2adf18b8-a296-4c14-b7cd-680607590d65", "node_type": "1", "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "78a9c69c96815f4773a73ddb113c7af3c6e294c94ec7ed80e1275595ac63265a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "644729bf-cdd1-4b6e-9116-0550f4e06b1f", "node_type": "1", "metadata": {}, "hash": "fdd1abb72bda3db6210770393f49e127e09c54a33555af465a10ccd9ae862d48", "class_name": "RelatedNodeInfo"}}, "hash": "02aef64415fe0813e81fb6bac3bb38751a79686af2f0478d541cf476bf05696a", "text": "416 \n \nEjemplo.  El siguiente algoritmo es una modificaci\u00f3n del anterior. Suponga que se desea \nsumar \u00fanicamente los elementos de la sub- matriz triangular superior. Obtener T(n) \n . . . \n s = 0 \n for i in range(n):  \n    for j in range(i,n):  \n       s = s + a[i][j]  \n \nSi no es evidente la forma de T(n) , se puede recorrer el algoritmo y anotar la cantidad de \nsumas que se realizan  \n \n        Valor Cantidad de ciclos  \n  i       j \n 0        n  \n 1        n-1 \n 2     n-2 \n ...      ... \n          n -1      1 \nEntonces, T(n) = 1 + 2 + ... + n = 2n nn(n 1)2 22+= +           (suma de una serie aritm\u00e9tica)  \n \nOtra manera de obtener la funci\u00f3n T(n) consiste en programar el conteo de los ciclos de un \nalgoritmo para obtener puntos de su eficiencia.  \n Ejemplo. Programa para conteo de ciclos para el ejemplo anterior  \n \nn=int(input('Ingrese n: ' )) \nc=0 \nfor i in range(n):  \n    for j in range(i,n): \n        c=c+1  \nprint(c)  \n Debido a que son dos ciclos, T(n)  debe ser un polinomio algebraico de segundo grado.  \nPara obtener este polinomio son s uficientes tres puntos   (n, c) : \n \nSe realizaron tres pruebas del programa de conteo y se obtuvieron los resultados  : \n \n>>>  \nIngrese n: 4 \n10  >>>  \nIngrese n: 5 \n15  >>>  \nIngrese n: 6 \n21 \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "644729bf-cdd1-4b6e-9116-0550f4e06b1f": {"__data__": {"id_": "644729bf-cdd1-4b6e-9116-0550f4e06b1f", "embedding": null, "metadata": {"page_label": "417", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce46fc25-7a87-4764-82d6-f4d52d64bc51", "node_type": "4", "metadata": {"page_label": "417", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fe79bd7ed7a4bcafe78e1a5ff8e11831c1f1845b913a48ff33a02cef13f0cf59", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25f6289b-d528-45e8-a98b-48b448f6ef8c", "node_type": "1", "metadata": {"page_label": "416", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "02aef64415fe0813e81fb6bac3bb38751a79686af2f0478d541cf476bf05696a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf2e0f84-1c82-4dd4-9b74-d2fe627f7d16", "node_type": "1", "metadata": {}, "hash": "ba2edbdd0fd1bb64dc2663bd712a91335630fab744739db8a69e05f9bbbcc57e", "class_name": "RelatedNodeInfo"}}, "hash": "fdd1abb72bda3db6210770393f49e127e09c54a33555af465a10ccd9ae862d48", "text": "417 \n \nCon estos resultados se puede construir el polinomio de interpolaci\u00f3n que representa a \nT(n).  Este polinomio se lo puede obtener manualmente o con un m\u00e9todo computacional.  \nEn el cap\u00edtulo 14 se des cribe el m\u00e9todo de Lagange para obtener T(n)  \n \nEl resultado que se obtuvo fue : \n \n>>> n=[4,5,6]  \n>>> c=[10,15,21]  \n>>> p=lagrange(n,c)  \nt**2/2 + t/2  \n Resultado que coincide con el obtenido anteriormente con un conteo directo manual  \n Para medir el tiempo real de ejecuci\u00f3n de un proceso (programa  o funci\u00f3n)  se puede usar \nla funci\u00f3n clock() de la librer\u00eda time : \n \n>>> from time import* \n>>> t1=clock(); ... proceso ... ;t2=clock();print(t2- t1) \n  \n12.1 La notaci\u00f3n  O( )  \n \nSupongamos que para resolver un problema  se han dise\u00f1ado dos algoritmos: A y B, con \neficiencias T\nA(n) = 10n+2,  T B(n) = 2n2 + 3, respectivamente. \u00bfCual algoritmo es m\u00e1s \neficiente?.   \n \nPara valores peque\u00f1os de n ,  TB(n) < T A(n), pero para valores grandes de n, T B(n) > TA(n).  \nEs de inter\u00e9s pr\u00e1ctico determ inar la eficiencia de los algoritmos para valores grandes de n , \npor lo tanto el algoritmo A  es m\u00e1s eficiente que el algoritmo B  como se puede observar en \nel siguiente gr\u00e1fico:  \n \n     \n  \nSi T(n) incluye t\u00e9rminos de n que tienen diferente orden, es suficiente considerar el \nt\u00e9rmino de mayor orden pues es el que determina la eficiencia del algoritmo cuando n es \ngrande.  Para compararlos, n o es necesario incluir los coeficientes y las constantes.  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf2e0f84-1c82-4dd4-9b74-d2fe627f7d16": {"__data__": {"id_": "cf2e0f84-1c82-4dd4-9b74-d2fe627f7d16", "embedding": null, "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60", "node_type": "4", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d6f3e60b36c8b2985b0fbfc7a483ff0cd22ef4761539f0475511ead4b09db19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "644729bf-cdd1-4b6e-9116-0550f4e06b1f", "node_type": "1", "metadata": {"page_label": "417", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "fdd1abb72bda3db6210770393f49e127e09c54a33555af465a10ccd9ae862d48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1dee60aa-417e-4989-a831-17b730c7a229", "node_type": "1", "metadata": {}, "hash": "ba6d345ac3320024f1bd38922de0dc0f772a0dd41a1fe487421d926721b4bc0f", "class_name": "RelatedNodeInfo"}}, "hash": "ba2edbdd0fd1bb64dc2663bd712a91335630fab744739db8a69e05f9bbbcc57e", "text": "418 \n \n   n   [log(n)]   n   [n log(n)]    n2           n3              2n                n!", "start_char_idx": 0, "end_char_idx": 92, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1dee60aa-417e-4989-a831-17b730c7a229": {"__data__": {"id_": "1dee60aa-417e-4989-a831-17b730c7a229", "embedding": null, "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60", "node_type": "4", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d6f3e60b36c8b2985b0fbfc7a483ff0cd22ef4761539f0475511ead4b09db19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf2e0f84-1c82-4dd4-9b74-d2fe627f7d16", "node_type": "1", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ba2edbdd0fd1bb64dc2663bd712a91335630fab744739db8a69e05f9bbbcc57e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63546c38-6a6a-45ec-ad89-28856b2adc27", "node_type": "1", "metadata": {}, "hash": "2e45e17c898d06338bd0d98d67ed2270c2d389981751c5494ecf8364ec31998c", "class_name": "RelatedNodeInfo"}}, "hash": "ba6d345ac3320024f1bd38922de0dc0f772a0dd41a1fe487421d926721b4bc0f", "text": "1       0         1         0          1              1                2                  1  \n    3       1         3         3          9            27                8                  6  \n    5       1         5         8         25          125              32               120  \n    7       1         7       13         49          343             128             5040  \n    9       2         9       19         81          729             512        3.62x105 \n  11       2       11       26       121         1331           2048        3.99x107 \n  13       2       13       33       169         2197           8192        6.22x109 \n  15       2       15       40       225         3375         32768       1.30x1012 \n  17       2       17       48       289         4913      1.31x105      3.55x1014 \n  19       2       19       55       361         6859      5.24x105      1.21x1017 \n  21       3       21       63       441         9261      2.09x106      5.10x1019 \n  23       3       23       72       529       12167      8.38x106      2.58x1022 \n  25       3       25       80       625       15625      3.35x107      1.55x1025 \n  50       3       50     195      2500     125000     1.12x1015      3.04x1064 \n100       4     100     46 0     10000   1000000    1.26x1030     9.33x10157 \n \n Ejemplo.", "start_char_idx": 100, "end_char_idx": 1412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63546c38-6a6a-45ec-ad89-28856b2adc27": {"__data__": {"id_": "63546c38-6a6a-45ec-ad89-28856b2adc27", "embedding": null, "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60", "node_type": "4", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d6f3e60b36c8b2985b0fbfc7a483ff0cd22ef4761539f0475511ead4b09db19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1dee60aa-417e-4989-a831-17b730c7a229", "node_type": "1", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ba6d345ac3320024f1bd38922de0dc0f772a0dd41a1fe487421d926721b4bc0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf0c97ec-1001-4807-bd89-68c7724e4fca", "node_type": "1", "metadata": {}, "hash": "3477b1f75e104559f635c1be6e65648608c6751197328bcdabb2b3cf8d092f0c", "class_name": "RelatedNodeInfo"}}, "hash": "2e45e17c898d06338bd0d98d67ed2270c2d389981751c5494ecf8364ec31998c", "text": "Suponga T(n) = n2 + n + 10. Evaluar T para algunos valores de n  \n \n T(2) = 4 + 2 + 10 \n T(5) = 25 + 5 + 10  \n T(20)  = 400 + 20 + 10  \n T(100)  = 10000 + 100 + 10 \n \nSe observa que a medida que n crece, T depende principalmente del t\u00e9rmino dominante  \nn2. Este hecho se puede expresar usando la notaci\u00f3n O( ) la cual indica el \u201corden\u201d de la \neficiencia del algoritmo, y se puede escribir:  T(n) = O(n2)  lo cual significa que la eficiencia \nes proporcional a n2, y se dice que el algoritmo tiene eficiencia cuadr\u00e1tica o de segundo \norden.  \n \nEn general, dado un problema de tama\u00f1o n , la medida de la eficiencia T(n)  de un algoritmo \nse puede expresar con la notaci\u00f3n O(g(n))  siendo g(n) alguna expresi\u00f3n tal como: n, n2, \nn3, ..., log(n), n log(n), ..., 2n, n!, ... etc, la cual expresa el orden de la cantidad de \noperaciones que requiere el algoritmo.  \n \nEs de inter\u00e9s medir la eficiencia de los algoritmos antes de su instrumentaci\u00f3n computacional .  En el siguiente cuadro se ha tabulado T(n) con algunos valores de n y \npara algunas funciones t\u00edpicas g(n) .  \n \nTabulaci\u00f3n de T(n) con algunos valores de  n  para algunas funciones t\u00edpicas g(n)  \n  \n \n \n  \n \n \n \n \n \n  \n \n \n \n \n \nLos algoritmos en las dos \u00faltimas columnas son de tipo exponencial  y factorial  \nrespectivamente. Se puede observar que a\u00fan con valores relativamente peque\u00f1os de n  \n(mayor a 100) el valor T(n) es muy alto. Los algoritmos con este tipo de eficiencia se \ndenominan no factibles pues ning\u00fan computador actual pudiera calcular la soluci\u00f3n para \nvalores de n grandes en un tiempo aceptable.  \n                                                      .", "start_char_idx": 1414, "end_char_idx": 3049, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf0c97ec-1001-4807-bd89-68c7724e4fca": {"__data__": {"id_": "bf0c97ec-1001-4807-bd89-68c7724e4fca", "embedding": null, "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60", "node_type": "4", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d6f3e60b36c8b2985b0fbfc7a483ff0cd22ef4761539f0475511ead4b09db19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63546c38-6a6a-45ec-ad89-28856b2adc27", "node_type": "1", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2e45e17c898d06338bd0d98d67ed2270c2d389981751c5494ecf8364ec31998c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bf3573d-2324-436f-a8bd-809dd157c87b", "node_type": "1", "metadata": {}, "hash": "f6e8eda56fdfb4f14b01454a6005b83021d47f74afd3e244ea633170dc0bfe6d", "class_name": "RelatedNodeInfo"}}, "hash": "3477b1f75e104559f635c1be6e65648608c6751197328bcdabb2b3cf8d092f0c", "text": ".                                                               \nPython Programaci\u00f3n", "start_char_idx": 3048, "end_char_idx": 3132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7bf3573d-2324-436f-a8bd-809dd157c87b": {"__data__": {"id_": "7bf3573d-2324-436f-a8bd-809dd157c87b", "embedding": null, "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0566410c-3875-4367-9a7e-31397687b0ec", "node_type": "4", "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "336d141f2f036d31f7c954aad7be908a6683ffaea44ff312a3b2091a55b5e6dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf0c97ec-1001-4807-bd89-68c7724e4fca", "node_type": "1", "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3477b1f75e104559f635c1be6e65648608c6751197328bcdabb2b3cf8d092f0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11ff767e-b08d-4933-ae5c-bed57e90dcf4", "node_type": "1", "metadata": {}, "hash": "48dce1e1128f556b7572623d29c101673b80260dca34c26de8384afd307dd346", "class_name": "RelatedNodeInfo"}}, "hash": "f6e8eda56fdfb4f14b01454a6005b83021d47f74afd3e244ea633170dc0bfe6d", "text": "419 \n \n13 Librer\u00edas especializadas  \n \nEn esta secci\u00f3n se introduce a los usuarios al conocimiento de algunas librer \u00edas \nespecializadas disponibles para los usuarios de Python.  \n \nLa librer\u00eda Pandas es un instrumento para manejo y an\u00e0lisis de datos.   Las librer\u00edas \ngr\u00e1ficas proveen soporte para despliegue visual de informaci\u00f3n. Otras librer\u00edas proveen soporte para manejo matem\u00e1tico simb\u00f3lico y num\u00e9rico y  requieren que los usuarios tengan \nun nivel matem\u00e1tico mayor al nivel b\u00e1sico utilizado  en los cap\u00edtulos anteriores \n 13.1 Librer\u00eda Pandas  \n \nPandas  es una librer\u00eda de acceso libre para los usuarios y programadores en el lenguaje \nPython. El nombre proviene de las palabras \u201c panel  data\u201d. Provee una interfaz eficiente y \nf\u00e1cil de  usar para manipulaci\u00f3n y an\u00e1lisis de datos. En particular provee estructuras de \ndatos y operaciones para manejo num\u00e8rico y estad\u00edstico de tablas y de series de tiempo.  \n \nEl uso de Pandas requiere el conocimiento b \u00e1sico de nuevas instrucciones integradas al  \nlenguaje Python y se desc ribir\u00e1 n en las siguientes secciones con la ayuda de ejemplos . \n Librer\u00edas requeridas para aplicaciones con Pandas \n >>> import pandas as pd \n>>> import matplotlib.pyplot as plt \n>>> import numpy as np \n Creaci\u00f3n de datos para Pandas \n \nPandas opera con paneles  o tablas de datos que pueden ser creados de diferentes \nmaneras. Estos objetos pueden generarse dentro de Python o en forma externa con alg\u00fan \nutilitario como Excel, y almacenados en disco en formato CSV ( Valores Separados por \nComas)  normalmente con una l\u00ednea de cabecera para identificar las columnas:  \n \nEjemplo.", "start_char_idx": 0, "end_char_idx": 1618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11ff767e-b08d-4933-ae5c-bed57e90dcf4": {"__data__": {"id_": "11ff767e-b08d-4933-ae5c-bed57e90dcf4", "embedding": null, "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0566410c-3875-4367-9a7e-31397687b0ec", "node_type": "4", "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "336d141f2f036d31f7c954aad7be908a6683ffaea44ff312a3b2091a55b5e6dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bf3573d-2324-436f-a8bd-809dd157c87b", "node_type": "1", "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f6e8eda56fdfb4f14b01454a6005b83021d47f74afd3e244ea633170dc0bfe6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7027af05-2a02-4140-a64d-1dafd18af326", "node_type": "1", "metadata": {}, "hash": "281459a159f557e1ecca0a7df145faa903494ba7e1d65230b96a187509ed2391", "class_name": "RelatedNodeInfo"}}, "hash": "48dce1e1128f556b7572623d29c101673b80260dca34c26de8384afd307dd346", "text": "Los datos de prueba ser\u00e1n  los registros semanales de tiempo en minutos \ndedicados al uso de sitios de internet (FB, YT, TW, Otros) por los 5  empleados  de una \nempresa, incluyendo t ambi\u00e9n la cantidad de accesos a estos  sitios de internet.  En este \nprimer ejemplo no se consideran los nombres de los empleados : \n \nFB YT TW Otros  Cant  \n13.2 24.7 0 21.5 20 \n24.5 25.4 10.5 18.6 25 \n20.1 0 5.4 8.3 12 \n32.5 12.8 12.8 10.5 5 \n5.1 14.8 25.4 16.1 32 \n  \n \nPython Programaci\u00f3n", "start_char_idx": 1620, "end_char_idx": 2096, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7027af05-2a02-4140-a64d-1dafd18af326": {"__data__": {"id_": "7027af05-2a02-4140-a64d-1dafd18af326", "embedding": null, "metadata": {"page_label": "420", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2ecfef4-741e-4a79-b534-5473c03d6d53", "node_type": "4", "metadata": {"page_label": "420", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "99828bc9928e7d4b7eaa055b748b0fb7346e020b5cf461de321bbf0cf263c5de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11ff767e-b08d-4933-ae5c-bed57e90dcf4", "node_type": "1", "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "48dce1e1128f556b7572623d29c101673b80260dca34c26de8384afd307dd346", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a971eb50-6399-4b9e-9431-3af9e6e0ee60", "node_type": "1", "metadata": {}, "hash": "d2c9c79c001bf73ab2b171735defc260d7473f5cbd2940aea0571edd0cbf4fbf", "class_name": "RelatedNodeInfo"}}, "hash": "281459a159f557e1ecca0a7df145faa903494ba7e1d65230b96a187509ed2391", "text": "420 \n \nEscritura de datos en formato  CSV \n \nEste cuadro puede almacenarse directamente como un archivo de texto usando alg\u00fan \nutilitario  como Excel. Por simplicidad se lo escribir\u00e1 como documento de texto en  la \nventana de l Bloc de notas  de Windows. En otra secci\u00f3n revisaremos la construcci\u00f3n del \ncuadro de datos utilizando algunas estructuras de datos propias  de Python e instrucciones \nespeciales de Pandas . \n \nAl escribir los datos, l a primera l\u00ednea debe contener  los nombres de las columnas. Las \nsiguientes l\u00ednea s cont endr\u00e1n  los datos.  Los nombres y  los datos se separan con comas, \nen l\u00edneas separadas. Ejemplo.  \n \nFB,YT,TW,Otros,Cant  \n13.2,24.7,0,21.5,20   \n24.5,25.4,10.5,18.6,25  \n20.1,0,5.4,8.3,12  \n32.5,12.8,12.8,10.5,5  \n5.1,14.8,25.4,16.1 ,32 \n Suponer que se escriben los  datos como un documento de texto en el Bloc de Notas y se \nlo guarda con el nombre  'datos' en el pendrive ( h:). El sistema guarda estos archivos \ncon extensi\u00f3n  .txt \n \n \n \nSi se lo escribiera directamente en una hoja de Excel, los datos ser\u00edan ingresados como  \ntexto plano como se muestra en la siguiente figura y se lo deber\u00e1 almacenar como un \narchivo de de tipo Datos S eparados por V alores (CSV), con extensi\u00f3n .csv \n \n \n En ambos casos suponer que el archivo se guarda en un pendrive (dispositivo h :) \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1338, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a971eb50-6399-4b9e-9431-3af9e6e0ee60": {"__data__": {"id_": "a971eb50-6399-4b9e-9431-3af9e6e0ee60", "embedding": null, "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "371c647c-4326-4058-8c53-dee918ee9326", "node_type": "4", "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76852684fa38b8d1dc0771fd2d12bf308c95466309ae10daa28a52e9335a9600", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7027af05-2a02-4140-a64d-1dafd18af326", "node_type": "1", "metadata": {"page_label": "420", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "281459a159f557e1ecca0a7df145faa903494ba7e1d65230b96a187509ed2391", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ee84c82-8fd2-496d-9054-dd6b494da394", "node_type": "1", "metadata": {}, "hash": "7749ab926622e7559cf36c685f4f277850f88df7c0b647553c2031e270f7c3a5", "class_name": "RelatedNodeInfo"}}, "hash": "d2c9c79c001bf73ab2b171735defc260d7473f5cbd2940aea0571edd0cbf4fbf", "text": "421 \n \nLectura del ar chivo en formato csv (valores separados por comas)  \n \nPara recuperar el archivo almacenado se usa la insrucci\u00f3n  de Pandas :  read_csv.", "start_char_idx": 0, "end_char_idx": 158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ee84c82-8fd2-496d-9054-dd6b494da394": {"__data__": {"id_": "8ee84c82-8fd2-496d-9054-dd6b494da394", "embedding": null, "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "371c647c-4326-4058-8c53-dee918ee9326", "node_type": "4", "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76852684fa38b8d1dc0771fd2d12bf308c95466309ae10daa28a52e9335a9600", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a971eb50-6399-4b9e-9431-3af9e6e0ee60", "node_type": "1", "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d2c9c79c001bf73ab2b171735defc260d7473f5cbd2940aea0571edd0cbf4fbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e47add75-abd4-403c-8c8e-daa6181c0330", "node_type": "1", "metadata": {}, "hash": "c6905cd7a3d87d33d88dac8d5bf78a3436116d785a064d41b3ec81dd2d1dfa5f", "class_name": "RelatedNodeInfo"}}, "hash": "7749ab926622e7559cf36c685f4f277850f88df7c0b647553c2031e270f7c3a5", "text": "Si el archivo est\u00e1 almacenado como un documento de texto con los valores separados por \ncomas, se escribir\u00e1:  \n \n>>> cuadro= pd.read_csv('h :datos.txt') \n>>> cuadro  \n     FB    YT    TW  Otros  Cant  \n0  13.2  24.7   0.0   21.5    20  \n1  24.5  25.4  10.5   18.6    25  \n2  20.1   0.0   5.4    8.3    12  \n3  32.5  12.8  12.8   10.5     5  \n4   5.1  14.8  25.4   16.1    32  \n \nSi el archivo se le yera desde un archivo plano creado en E xcel con extensi\u00f3n .csv, la \nlectura se la har\u00e1 con la instrucci\u00f3n  \n>>> cuadro=pd.read_csv('h :datos.csv ') \n>>> cuadro  \n     FB    YT    TW  Otros  Cant  \n0  13.2  24.7   0.0   21.5    20  \n1  24.5  25.4  10.5   18.6    25  \n2  20.1   0.0   5.4    8.3    12  \n3  32.5  12.8  12.8   10.5     5  \n4   5.1  14.8  25.4   16.1    32  \n \nEn ambos casos se obtiene la misma informaci\u00f3n \n \nLa variable \u2018 cuadro \u2019 es un nombre arbitrario con el cual se manejar\u00e1n  los datos en la \nventana de Python \n \nLa pr imera l\u00ednea del  archivo es tomada como la lista de nombres de encabezado de las \ncolumnas de datos . Las siguientes l\u00edneas son las l\u00edneas de los datos  \n Si el cuadro de datos no con tiene la l\u00ednea de encabezado, entonces la primera l\u00ednea es \ntomada como la l\u00ednea de nombres de datos.", "start_char_idx": 166, "end_char_idx": 1392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e47add75-abd4-403c-8c8e-daa6181c0330": {"__data__": {"id_": "e47add75-abd4-403c-8c8e-daa6181c0330", "embedding": null, "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "371c647c-4326-4058-8c53-dee918ee9326", "node_type": "4", "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "76852684fa38b8d1dc0771fd2d12bf308c95466309ae10daa28a52e9335a9600", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ee84c82-8fd2-496d-9054-dd6b494da394", "node_type": "1", "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7749ab926622e7559cf36c685f4f277850f88df7c0b647553c2031e270f7c3a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0c1ee18-5bb5-4124-9ff9-a44ff8ae6730", "node_type": "1", "metadata": {}, "hash": "c825d52548c1b87d0b01f71606506de55e54d758462a8c3b5afcbf651caf88a9", "class_name": "RelatedNodeInfo"}}, "hash": "c6905cd7a3d87d33d88dac8d5bf78a3436116d785a064d41b3ec81dd2d1dfa5f", "text": "Para evitar  este caso se usa la instrucci\u00f3n de \nlectura con la opci\u00f3n  header=None.  Pandas asigna n\u00fameros como  nombres de cabecera:  \n \n>>> cuadro=pd.read_csv('h :datos.csv ',header=None)  \n>>> cuadro  \n      0     1     2     3  4 \n0  13.2  24.7   0.0   21.5    20  \n1  24.5  25.4  10.5   18.6    25  \n2  20.1   0.0   5.4    8.3    12  \n3  32.5  12.8  12.8   10.5     5  \n4   5.1  14.8  25.4   16.1    32  \n \nPython Programaci\u00f3n", "start_char_idx": 1393, "end_char_idx": 1825, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0c1ee18-5bb5-4124-9ff9-a44ff8ae6730": {"__data__": {"id_": "a0c1ee18-5bb5-4124-9ff9-a44ff8ae6730", "embedding": null, "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "18598596-a2fe-4316-ac0b-06416604831c", "node_type": "4", "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b3de96b94b3d72cd774479a7d8374a11dbcb4f3e9c2128dd93c9bb7a272e76c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e47add75-abd4-403c-8c8e-daa6181c0330", "node_type": "1", "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c6905cd7a3d87d33d88dac8d5bf78a3436116d785a064d41b3ec81dd2d1dfa5f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6afff525-7d8d-4a71-a9e9-66b6d97b4089", "node_type": "1", "metadata": {}, "hash": "f6639e7b59fbd36944a87cc165bf18574096801dfc6a2b5dc1ba02dcd831ec84", "class_name": "RelatedNodeInfo"}}, "hash": "c825d52548c1b87d0b01f71606506de55e54d758462a8c3b5afcbf651caf88a9", "text": "422 \n \nOtra opci\u00f3n es asignar los nombres de cabecera, no en el cuadro de datos almacenado en \nel archivo sino al leer los  datos, con la instrucci\u00f3n  names:  \n \n>>> cuadro=pd.read_csv('h: datos.csv',names=['FB','YT','TW','Otros', 'Cant' ]) \n>>> cuadro  \n     FB    YT    TW  Otros  Cant  \n0  13.2  24.7   0.0   21.5    20  \n1  24.5  25.4  10.5   18.6    25  \n2  20.1   0.0   5.4    8.3    12  \n3  32.5  12.8  12.8   10.5     5  \n4   5.1  14.8  25.4   16.1    32  \n \nNOTA . Si se desea almacenar y recuperar tablas en formato de tabla de Excel se pueden \nusar las siguientes instrucciones, pero deber\u00e1 estar instalada una librer\u00eda especial que facilita la conversi\u00f3n:  \n \ndf.to_excel( 'datos.xlsx') \npd.read_excel( 'datos.xlsx' ) \n \n \nDespliegue de la tabla de datos de Pandas \n \nPara mostrar la tabla completa de datos es suficiente  escribir el nombre \n >>> cuadro  \n \nCon el siguiente  formato de Pandas se muestran las  cinco primeras l\u00edneas de la tabla:  \n \n>>> cuadro.head()  \n Con este formato se puede mostrar una cantidad espec\u00edfica de columnas  \n \nMostrar las 3 primeras l\u00edneas del cuadro de datos:  \n \n>>> cuadro.head(3)  \n     FB    YT    TW  Otros  Cant  \n0  13.2  24.7   0.0   21.", "start_char_idx": 0, "end_char_idx": 1194, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6afff525-7d8d-4a71-a9e9-66b6d97b4089": {"__data__": {"id_": "6afff525-7d8d-4a71-a9e9-66b6d97b4089", "embedding": null, "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "18598596-a2fe-4316-ac0b-06416604831c", "node_type": "4", "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4b3de96b94b3d72cd774479a7d8374a11dbcb4f3e9c2128dd93c9bb7a272e76c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0c1ee18-5bb5-4124-9ff9-a44ff8ae6730", "node_type": "1", "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c825d52548c1b87d0b01f71606506de55e54d758462a8c3b5afcbf651caf88a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd3d003e-d912-4d78-bb91-5cb5fa56ba53", "node_type": "1", "metadata": {}, "hash": "c80d6561e3ae4e65995988b846e710ec3305f0c356abfa91fc36a9e412458fdf", "class_name": "RelatedNodeInfo"}}, "hash": "f6639e7b59fbd36944a87cc165bf18574096801dfc6a2b5dc1ba02dcd831ec84", "text": "5    20 \n1  24.5  25.4  10.5   18.6    25  \n2  20.1   0.0   5.4    8.3    12  \n Mostrar las 3 \u00faltimas  l\u00edneas del cuadro de datos:  \n >>> cuadro.tail(3)  \n     FB    YT    TW  Otros  Cant  \n2  20.1   0.0   5.4    8.3    12  \n3  32.5  12.8  12.8   10.5     5  \n4   5.1  14.8  25.4   16.1    32  \n \n  \nPython Programaci\u00f3n", "start_char_idx": 1195, "end_char_idx": 1514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd3d003e-d912-4d78-bb91-5cb5fa56ba53": {"__data__": {"id_": "bd3d003e-d912-4d78-bb91-5cb5fa56ba53", "embedding": null, "metadata": {"page_label": "423", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30845a06-7e73-4567-8181-8e8f1eee8763", "node_type": "4", "metadata": {"page_label": "423", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f3d45cfefaec93b9bda4952dd66d565fe606dc061edd734c9c3ae6b5743704cd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6afff525-7d8d-4a71-a9e9-66b6d97b4089", "node_type": "1", "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f6639e7b59fbd36944a87cc165bf18574096801dfc6a2b5dc1ba02dcd831ec84", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bac5002-2c50-45cf-969c-ce3283a4c6e7", "node_type": "1", "metadata": {}, "hash": "07b8577899311d33b6fe737895e34c61f41de1c987341745c3a8d117acf5a27d", "class_name": "RelatedNodeInfo"}}, "hash": "c80d6561e3ae4e65995988b846e710ec3305f0c356abfa91fc36a9e412458fdf", "text": "423 \n \nSe pueden mostrar columnas individuales  \n \n>>> cuadro[['YT']]  \n     YT \n0  24.7    \n1  25.4   \n2  0.0    \n3  12.8   \n4  14.8   \n \nUsando el n\u00famero de la columna  \n \n>>> cuadro[[1]]  \n     YT \n0  24.7    \n1  25.4   \n2  0.0    \n3  12.8   \n4  14.8  \n \nAgrupa r columnas de datos \n \n>>> subc=cuadro[['FB','TW']]  \n>>> subc  \n     FB    TW  \n0  13.2   0.0  \n1  24.5  10.5  \n2  20.1   5.4  \n3  32.5  12.8  \n4   5.1  25.4  \n \nPara v erificar el tipo de datos  \n \n>>> cuadro.dtypes  \nFB       float64  \nYT       float64  \nTW       float64  \nOtros    float64  \nCant       int64  \ndtype: object  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 621, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6bac5002-2c50-45cf-969c-ce3283a4c6e7": {"__data__": {"id_": "6bac5002-2c50-45cf-969c-ce3283a4c6e7", "embedding": null, "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41ca359d-6965-4197-a39b-b9e6cd1de0d5", "node_type": "4", "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "af379807ecb3c9f1516d6670a595730b6930924123473b72c2982012bc5915b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd3d003e-d912-4d78-bb91-5cb5fa56ba53", "node_type": "1", "metadata": {"page_label": "423", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c80d6561e3ae4e65995988b846e710ec3305f0c356abfa91fc36a9e412458fdf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a17fc8c-4258-4731-a63b-ff1cd195eaf5", "node_type": "1", "metadata": {}, "hash": "b4f1c12b1fc3823fcd5b199865053a4bef868349fcf8612d3088bb0f71d4652e", "class_name": "RelatedNodeInfo"}}, "hash": "07b8577899311d33b6fe737895e34c61f41de1c987341745c3a8d117acf5a27d", "text": "424 \n \nPara conocer las caracter\u00edsticas del grupo de datos \n \n>>> cuadro.info()  \n<class 'pandas.core.frame.DataFrame'> \nRangeIndex: 5 entries, 0 to 4  \nData columns (total 5 columns):  \nFB        5 non- null float64  \nYT        5 non -null float64  \nTW        5 non- null float64  \nOtros     5 non- null float64  \nConteo    5 non- null int64  \ndtypes: float64(4), int64(1)  \nmemory usage: 240.0 bytes  \n \nAn\u00e1lisis estad\u00edstico b\u00e1sico de los datos  \n La instrucci\u00f3n \u2018 describe\u2019 muestra las estad\u00edsticas descriptivas b\u00e1sicas del gupo de datos:  \n \n>>> cuadro.describe()  \n              FB         YT         TW      Otros       Cant  \ncount   5.000000   5.000000   5.000000   5.000000   5.000000  \nmean   19.080000  15.540000  10.820000  15.000000  18.800000  \nstd    10.494379  10.376319   9.526909   5.512713  10.616026  \nmin     5.100000   0.000000   0.000000   8.300000   5.000000  \n25%    13.200000  12.800000   5.400000  10.500000  12.000000  \n50%    20.100000  14.800000  10.500000  16.100000  20.000000  \n75%    24.500000  24.700000  12.800000  18.600000  25.000000  \nmax    32.500000  25.400000  25.400000  21.500000  32.000000  \n \nLos resultados muestran la siguiente informaci\u00f3n: conteo, media, desviaci\u00f3n est\u00e1ndar, \nm\u00ednimo valor, cuartiles, y m\u00e1ximo valor  \n Por ejemplo.", "start_char_idx": 0, "end_char_idx": 1281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a17fc8c-4258-4731-a63b-ff1cd195eaf5": {"__data__": {"id_": "7a17fc8c-4258-4731-a63b-ff1cd195eaf5", "embedding": null, "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41ca359d-6965-4197-a39b-b9e6cd1de0d5", "node_type": "4", "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "af379807ecb3c9f1516d6670a595730b6930924123473b72c2982012bc5915b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bac5002-2c50-45cf-969c-ce3283a4c6e7", "node_type": "1", "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "07b8577899311d33b6fe737895e34c61f41de1c987341745c3a8d117acf5a27d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6d916bf-f729-4c72-b28a-8db2c1d792e7", "node_type": "1", "metadata": {}, "hash": "4a9323a6e4dbf553b0dcf0f3084732d4009ced726f62e6babb610783c5a94a16", "class_name": "RelatedNodeInfo"}}, "hash": "b4f1c12b1fc3823fcd5b199865053a4bef868349fcf8612d3088bb0f71d4652e", "text": "Se puede observar que en promedio los empleados usaron  19.08 minutos e n \nla semana visitando el sitio FB en un rango que va de 5.1 a 32.5 minutos  \n \nRotaci\u00f3n de la tabla Pandas  \n \nLa tabla de datos o los reportes de resultados se pueden rotar para visualizar \nhorizontalmente las col umnas . En la siguiente notaci\u00f3n, la letra 'T' representa la \ntranspuesta del cuadro (rotaci\u00f3n alrededor de la diagonal)  \n \n>>> reporte=cuadro.describe()  \n>>> reporte.T  \n       count   mean        std  min   25%   50%   75%   max  \nFB       5.0  19.08  10.494379  5.1  13.2  20.1  24.5  32.5  \nYT       5.0  15.54  10.376319  0.0  12.8  14.8  24.7  25.4  \nTW       5.0  10.82   9.526909  0.0   5.4  10.5  12.8  25.4  \nOtros    5.0  15.00   5.512713  8.3  10.5  16.1  18.6  21.5  \nCant     5.0  18.80  10.616026  5.0  12.0  20.0  25.0  32.0  \nPython Programaci\u00f3n", "start_char_idx": 1282, "end_char_idx": 2134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6d916bf-f729-4c72-b28a-8db2c1d792e7": {"__data__": {"id_": "d6d916bf-f729-4c72-b28a-8db2c1d792e7", "embedding": null, "metadata": {"page_label": "425", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23ffdcf2-17e4-453e-bc9c-abcd12557425", "node_type": "4", "metadata": {"page_label": "425", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d72e0f48f4d05fc6b87e4fc1f2d80dc6773f60ae5217a05422b2d2d66fe4aae5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a17fc8c-4258-4731-a63b-ff1cd195eaf5", "node_type": "1", "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b4f1c12b1fc3823fcd5b199865053a4bef868349fcf8612d3088bb0f71d4652e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b288319c-73ab-41df-b75b-36224ce75e38", "node_type": "1", "metadata": {}, "hash": "099256625091e80f386a343fc40933d6b2953e007494aa35e98ed3a08a3a0b89", "class_name": "RelatedNodeInfo"}}, "hash": "4a9323a6e4dbf553b0dcf0f3084732d4009ced726f62e6babb610783c5a94a16", "text": "425 \n \n \nSe puede mostrar el reporte de columnas individuales  \n >>> cuadro['TW'].describe()  \ncount     5.000000  \nmean     10.820000  \nstd       9.526909  \nmin       0.000000  \n25%       5.400000  \n50%      10.500000   \n75%      12.800000  \nmax      25.400000  \nName: TW, dtype: float64  \n \nTambi\u00e9n con  grupos de columnas  \n \nEstad\u00ed sticas b\u00e1sicas de las columna 'FB' y 'TW' \n \n>>> subc=cuadro[['FB','TW']]  \n>>> subc.describe()  \n              FB         TW  \ncount   5.000000   5.000000  \nmean   19.080000  10.820000  \nstd    10.494379   9.526909  \nmin     5.100000   0.000000  \n25%    13.200000   5.400000  \n50%    20.100000  10.500000  \n75%    24.500000  12.800000  \nmax    32.500000  25.400000  \n \nFunciones comunes para operar con columnas  \n \nSumar el contenido de la columna 'FB'  \n >>> cuadro['FB'].sum()  \n95.400000000000006  \n \nEl menor valor de la columna 'FB'  \n \n>>> cuadro['FB'].min()  \n5.0999999999999996  \n \nEl mayor valor de la columna 'TW'  \n>>> cuadro['TW'].max()  \n25.399999999999999  \n \nLos resultados muestran valores con peque\u00f1os errores en los decimales. Esto se debe a la \nrepresentac i\u00f3n digital de los n \u00fameros reales.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b288319c-73ab-41df-b75b-36224ce75e38": {"__data__": {"id_": "b288319c-73ab-41df-b75b-36224ce75e38", "embedding": null, "metadata": {"page_label": "426", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3def662-6302-40ac-8990-244e33a2aeea", "node_type": "4", "metadata": {"page_label": "426", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "06b19b3ded161728363af7ab9e37824e5a51307622cbc69bc50b23ef7fb8d43a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6d916bf-f729-4c72-b28a-8db2c1d792e7", "node_type": "1", "metadata": {"page_label": "425", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4a9323a6e4dbf553b0dcf0f3084732d4009ced726f62e6babb610783c5a94a16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cdd8496-8479-44fa-a58c-834721e849e5", "node_type": "1", "metadata": {}, "hash": "cc7372e8c0bfcfc22e4d540e3ef628aa45a18783fa37e0f0c8fa58742a0a360b", "class_name": "RelatedNodeInfo"}}, "hash": "099256625091e80f386a343fc40933d6b2953e007494aa35e98ed3a08a3a0b89", "text": "426 \n \nRepresentaci\u00f3n gr\u00e1fica del cuadro de datos \n \nLa librer\u00eda MatplotLib es el soporte para visualizar las tablas o reportes de Pandas  \n \nGraficar el cuadro de datos m ediante un diagrama de barras \n >>> cuadro.plot(kind='bar')  \n>>> plt.show()  \n \n \n \nGuardar un gr\u00e1fico en disco \n \nSe puede almacenar el gr\u00e1fico con la siguiente instrucci\u00f3n \n \n>>> plt.savefig('grafico.png')  \n \nGraficar columnas individuales  \n Se debe elegir el r\u00f3tulo de la columna que se graficar\u00e1  \n >>> cuadro['TW' ].plot(kind='bar')  \n>>> plt.show()  \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cdd8496-8479-44fa-a58c-834721e849e5": {"__data__": {"id_": "0cdd8496-8479-44fa-a58c-834721e849e5", "embedding": null, "metadata": {"page_label": "427", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f6463fb4-11b6-465c-a6e1-73e7ff1f5a47", "node_type": "4", "metadata": {"page_label": "427", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "51248ef9ce80e353ad98357a9da7744c412c551d9007b8904642b7773616c02a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b288319c-73ab-41df-b75b-36224ce75e38", "node_type": "1", "metadata": {"page_label": "426", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "099256625091e80f386a343fc40933d6b2953e007494aa35e98ed3a08a3a0b89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5f220cc-9af5-400b-8787-127c519602dd", "node_type": "1", "metadata": {}, "hash": "f81c279f11c1f047beb5a6eb4836361615b0c8091d1c128a84caf159ebbe4c47", "class_name": "RelatedNodeInfo"}}, "hash": "cc7372e8c0bfcfc22e4d540e3ef628aa45a18783fa37e0f0c8fa58742a0a360b", "text": "427 \n \nGraficar  columnas  seleccionadas  \n \n>>> subc=cuadro[['FB','TW']]  \n>>> subc.plot(kind='bar')  \n>>> plt.show()  \n \n \n \n \nColocar r\u00f3tulos en los ejes del gr\u00e0fico  \n Se debe identificar al gr\u00e0fico para editarlo \n \n>>> subc=cuadro[['FB','TW']]  \n>>> graf=subc.plot(kind='bar')  \n>>> graf.set_xlabel('Sitios FB y TW') >>> graf.set_ylabel('Minutos usados') >>> plt.show()  \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5f220cc-9af5-400b-8787-127c519602dd": {"__data__": {"id_": "d5f220cc-9af5-400b-8787-127c519602dd", "embedding": null, "metadata": {"page_label": "428", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa4a61f4-9580-48b7-95aa-11ed97ca0465", "node_type": "4", "metadata": {"page_label": "428", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e3208eab0cc4faae5421b6bf6b857a6275405b899409456fe418dc72ea5aa16d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0cdd8496-8479-44fa-a58c-834721e849e5", "node_type": "1", "metadata": {"page_label": "427", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cc7372e8c0bfcfc22e4d540e3ef628aa45a18783fa37e0f0c8fa58742a0a360b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fed8d49c-f080-4529-a452-3157b94d18a0", "node_type": "1", "metadata": {}, "hash": "1272a54d7391857d7daf947d23f537af54912867a4eff14f419422a288a4ab79", "class_name": "RelatedNodeInfo"}}, "hash": "f81c279f11c1f047beb5a6eb4836361615b0c8091d1c128a84caf159ebbe4c47", "text": "428 \n \nGr\u00e1fico de l\u00ednea de los datos (pol\u00edgono)  \n \n>>> subc=cuadro[['FB','TW']]  \n>>> fig=subc.plot()  \n>>> fig.set_xlabel('Sitios FB y TW')  \n>>> fig.set_ylabel('Tiempo')  \n>>> plt.show()  \n  \n \n \n \n  \n \n \n \n \n \n \n \n \n \nGr\u00e0fico de histogramas \n Para grupos grandes de datos se puede graficar mediante un histograma de frecuencia \npara el cual se puede especificar la cantidad de intervalos. Para el ejemplo actual un \nhistograma no aporta mucha informaci\u00f3n  debido a la peque\u00f1a cantidad de datos : \n >>> cuadro['Cant'].hist(bins=3)  \n>>> plt.show()  \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 580, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fed8d49c-f080-4529-a452-3157b94d18a0": {"__data__": {"id_": "fed8d49c-f080-4529-a452-3157b94d18a0", "embedding": null, "metadata": {"page_label": "429", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1cc5567a-52bd-4dad-99c4-66bdd66a50a5", "node_type": "4", "metadata": {"page_label": "429", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "615022cb3318dab4ee654e59f3ac827208e6a8f93ed5529e9c1e717382497ff5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5f220cc-9af5-400b-8787-127c519602dd", "node_type": "1", "metadata": {"page_label": "428", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f81c279f11c1f047beb5a6eb4836361615b0c8091d1c128a84caf159ebbe4c47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a045ed99-e378-4b96-91da-bc8812e64eb2", "node_type": "1", "metadata": {}, "hash": "6d14760f1be1271acf3a5c83f6b654d39637995161524f3baa87458e44d1c877", "class_name": "RelatedNodeInfo"}}, "hash": "1272a54d7391857d7daf947d23f537af54912867a4eff14f419422a288a4ab79", "text": "429 \n \nOrdena miento de l cuadro de datos  \n \nCuadro de datos original  \n \n>>> cuadro  \n     FB    YT    TW  Otros  Cant  \n0  13.2  24.7   0.0   21.5    20  \n1  24.5  25.4  10.5   18.6    25  \n2  20.1   0.0   5.4    8.3    12  \n3  32.5  12.8  12.8   10.5     5  \n4   5.1  14.8  25.4   16.1    32  \n \nCuadro de datos ordenado por los valores de la columna 'FB' \n >>> cuadro.sort_values(by='FB')  \n     FB    YT    TW  Otros  Cant  \n4   5.1  14.8  25.4   16.1    32  \n0  13.2  24.7   0.0   21.5    20  \n2  20.1   0.0   5.4    8.3    12  \n1  24.5  25.4  10.5   18.6    25  \n3  32.5  12.8  12.8   10.5     5  \n \nSi se desea que el ordenamiento sea en forma descendente, deber\u00e1 escr ibirse:  \n \n>>> cuadro.sort_values(by='FB', ascending= False) \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 762, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a045ed99-e378-4b96-91da-bc8812e64eb2": {"__data__": {"id_": "a045ed99-e378-4b96-91da-bc8812e64eb2", "embedding": null, "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40e8d202-38ba-4c0d-9a1d-b0f084c59d5d", "node_type": "4", "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7bcb68e49dff2fd4a74975ec08f7a7503b8fd1ab91c7773da13ee59456f4a5e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fed8d49c-f080-4529-a452-3157b94d18a0", "node_type": "1", "metadata": {"page_label": "429", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1272a54d7391857d7daf947d23f537af54912867a4eff14f419422a288a4ab79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84fd2174-3561-44cd-9b78-15297812e34a", "node_type": "1", "metadata": {}, "hash": "ec8741d6703bb0c74ca56c61a01b68388a7c7abcce062ce331c485458bc2461e", "class_name": "RelatedNodeInfo"}}, "hash": "6d14760f1be1271acf3a5c83f6b654d39637995161524f3baa87458e44d1c877", "text": "430 \n \nCreaci\u00f3n de paneles de datos en  Python  para an\u00e1lisis con Pandas \n \nSe pueden construir paneles o tablas de datos para Pandas  dentro de Python a partir de \nestructuras de datos conocidas y utilizando instrucciones de conversi\u00f3n de Pandas  \n \nCreaci\u00f3n de  una tabla de datos a partir de informaci\u00f3n escrita en  una lista  \n Suponer que se han registrado los nombres de los empleados de una empresa y  el tiempo \nen minutos de uso de sitios de internet.  Para cada empleado se tien e el tiempo en minutos \nusados por cada empleado en cada sitio, y t ambi\u00e9n el conteo de accesos a los sitios . \n \nNombres de los empleados : Javier, Carmen, Juan  \nSitios de inter net registrados : FB, YT, TW, Otros  \n \nTiempos de acceso a sitios de intern et y conteo de accesos:  \n \nNombre  FB YT TW Otros  Conteo  \nJavier  3.2 4.7 0 2.5 5 \nCarmen  2.5 4.2 1.5 3.8 6 \nJuan  0.5 1.3 2.1 2.0 3 \n  \nTraslado de la informaci\u00f3n a una lista de Python:  \n \n>>> empleados=[['Javier',3.2,4.7,0,2.5,5],['Carmen',2.5,4.2,1.5,3.8,6], \n['Juan',0.5,1.3,2.1,2.0,3]]  \n Construcci\u00f3n de la tabla de datos para Pandas  \n \n>>> import pandas as pd \n>>> tabla=pd.DataFrame(data=empleados,columns=['Nombre','FB','YT','TW', \n'Otros','Conteo'])  \n>>> tabla \n   Nombre   FB   YT   TW  Otros  Conteo  \n0  Javier  3.2  4.7  0.0    2.5       5  \n1  Carmen  2.5  4.2  1.5    3.8       6  \n2    Juan  0.", "start_char_idx": 0, "end_char_idx": 1364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84fd2174-3561-44cd-9b78-15297812e34a": {"__data__": {"id_": "84fd2174-3561-44cd-9b78-15297812e34a", "embedding": null, "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40e8d202-38ba-4c0d-9a1d-b0f084c59d5d", "node_type": "4", "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7bcb68e49dff2fd4a74975ec08f7a7503b8fd1ab91c7773da13ee59456f4a5e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a045ed99-e378-4b96-91da-bc8812e64eb2", "node_type": "1", "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6d14760f1be1271acf3a5c83f6b654d39637995161524f3baa87458e44d1c877", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "adc16d65-ca95-492e-9bc7-f124fc3e717f", "node_type": "1", "metadata": {}, "hash": "b57fdff51a74c19cf033ac8542cda53b19e7d319dfaaa4629e17bd8fbd2e03dc", "class_name": "RelatedNodeInfo"}}, "hash": "ec8741d6703bb0c74ca56c61a01b68388a7c7abcce062ce331c485458bc2461e", "text": "5    3.8       6  \n2    Juan  0.5  1.3  2.1    2.0       3  \n \nMostrar indicadores estad\u00edsticos b\u00e0sicos \n \n>>> tabla.describe()  \n             FB        YT        TW     Otros    Conteo  \ncount  3.000000  3.000000  3.0000 00  3.000000  3.000000  \nmean   2.066667  3.400000  1.200000  2.766667  4.666667  \nstd    1.401190  1.835756  1.081665  0.929157  1.527525  \nmin    0.500000  1.300000  0.000000  2.000000  3.000000  \n25%    1.500000  2.750000  0.750000  2.250000  4.000000  \n50%    2.500000  4.200000  1.500000  2.500000  5.000000  \n75%    2.850000  4.450000  1.800000  3.150000  5.500000  \nmax    3.200000  4.700000  2.100000  3.800000  6.000000  \nPython Programaci\u00f3n", "start_char_idx": 1332, "end_char_idx": 2004, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "adc16d65-ca95-492e-9bc7-f124fc3e717f": {"__data__": {"id_": "adc16d65-ca95-492e-9bc7-f124fc3e717f", "embedding": null, "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15692e79-f9a7-4502-8011-2dd396a32dff", "node_type": "4", "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9e2b26922d602e1199390e08059ec0de4dc0ffc3c7be7c0ce75e0bba31a03858", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84fd2174-3561-44cd-9b78-15297812e34a", "node_type": "1", "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ec8741d6703bb0c74ca56c61a01b68388a7c7abcce062ce331c485458bc2461e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1dbc4aa-2589-4cfa-a06b-40e0cf81c6d1", "node_type": "1", "metadata": {}, "hash": "6dbc77d187f06fd9fad60a26ff2f004e225a5ecdb7a7d977f5d1c6fa414a9906", "class_name": "RelatedNodeInfo"}}, "hash": "b57fdff51a74c19cf033ac8542cda53b19e7d319dfaaa4629e17bd8fbd2e03dc", "text": "431 \n \nLos indicadores estad\u00edsticos no incluyen valores no num\u00e9ricos. Los nombres de los \nempleados (dato s de tipo texto) no son considerados  en el an\u00e1lisis.", "start_char_idx": 0, "end_char_idx": 159, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1dbc4aa-2589-4cfa-a06b-40e0cf81c6d1": {"__data__": {"id_": "e1dbc4aa-2589-4cfa-a06b-40e0cf81c6d1", "embedding": null, "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15692e79-f9a7-4502-8011-2dd396a32dff", "node_type": "4", "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9e2b26922d602e1199390e08059ec0de4dc0ffc3c7be7c0ce75e0bba31a03858", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "adc16d65-ca95-492e-9bc7-f124fc3e717f", "node_type": "1", "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b57fdff51a74c19cf033ac8542cda53b19e7d319dfaaa4629e17bd8fbd2e03dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "896404f1-bfee-4fb6-abab-b7b9b1cfa63d", "node_type": "1", "metadata": {}, "hash": "b84904fc3343e5bbe08862749ffdc2a409c45e713b84d77516e23bbfebd7aa6f", "class_name": "RelatedNodeInfo"}}, "hash": "6dbc77d187f06fd9fad60a26ff2f004e225a5ecdb7a7d977f5d1c6fa414a9906", "text": "Almacenamiento y recuperaci\u00f3n de una tabla de datos en un archivo con formato \nCSV \n \nPara almacenar la tabla de datos en el disco se usa la instrucci\u00f3n to_csv \n \nGuardar la tabla de datos anterior en un arc hivo con formato CSV en el pendrive \n(dispositivo g:):  \n \n>>> tabla.to_csv(' h:datos.csv',index=False)  \n \nLa instrucci\u00f3n   index=False  evita que se almacenen los n\u00fameros de cada l\u00ednea que \nest\u00e1n a la izquierda en el cuadro de datos  (\u00ecndice de la tabla)  \n \nPara recu perar el archivo  ' datos' almacenado con formato csv del dispositivo de \nalmacenamiento (suponer un pendrive, dispositivo h: ) se tendr\u00e1 que escribir la instrucci\u00f3n:  \n \n>>> tabla=pd.read_csv('h: datos.csv' ) \n \nSi no se desea que se almacenen los nombres de cabecera (n ombres de columna) se \ndeber\u00e1  escribir:  \n \n>>> tabla.to_csv(' h:usuario.csv',index=False,header=False)  \n \n \nModificaci\u00f3n de la tabla de datos de Pandas \n \nSe pueden cambiar los nombres de las columnas  \n \ntabla.columns=['Nombre','Facebook','Youtube','Twitter','Google','Conteo'] \n>>> tabla  \n   Nombre  Facebook  Youtube  Twitter  Google  Conteo  \n0  Javier       3.2      4.7      0.0     2.5       5  \n1  Carmen       2.5      4.2      1.5     3.8       6  \n2    Juan       0.5      1.3      2.1     2.0       3  \n \nBorrar column as completas de la tabla \n \nEliminar la columna 'Google' \n \n>>> del tabla['Google']  \n>>> tabla  \n   Nombre  Facebook  Youtube  Twitter  Conteo  \n0  Javier       3.2      4.7      0.0       5  \n1  Carmen       2.5      4.2      1.5       6  \n2    Juan       0.5      1.3      2.1       3  \n \n \nPython Programaci\u00f3n", "start_char_idx": 164, "end_char_idx": 1763, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "896404f1-bfee-4fb6-abab-b7b9b1cfa63d": {"__data__": {"id_": "896404f1-bfee-4fb6-abab-b7b9b1cfa63d", "embedding": null, "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "754076d0-63af-4b0d-80de-0b0557a5a5e4", "node_type": "4", "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a8b65ea74cedfc62e3929fe3212ceb2f7496ee7d95d0b8f3db74c70842756321", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1dbc4aa-2589-4cfa-a06b-40e0cf81c6d1", "node_type": "1", "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6dbc77d187f06fd9fad60a26ff2f004e225a5ecdb7a7d977f5d1c6fa414a9906", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f05de0f-5127-4d38-b96e-752d9acb7703", "node_type": "1", "metadata": {}, "hash": "73d7b821edff8f6b8ce2f3d955f8df5d414134a831e59fed6dff231f7a3e7290", "class_name": "RelatedNodeInfo"}}, "hash": "b84904fc3343e5bbe08862749ffdc2a409c45e713b84d77516e23bbfebd7aa6f", "text": "432 \n \nEn las columnas se pueden usar operadores aritm\u00e9ticos  \n \nSumar 1 a cada valor de la columna 'Twitter'  \n \n>>> tabla['Twitter']=tabla['Twitter']+1  \n>>> tabla  \n   Nombre  Facebook  Youtube  Twitter  Conteo  \n0  Javier       3.2      4.7      1.0       5  \n1  Carmen       2.5      4.2      2.5       6  \n2    Juan       0.5      1.3      3.1       3  \n \nSe puede cambiar la identificaci\u00f3n de los indices de la tabla \n \n>>> tabla.index=['a','b','c']  \n>>> tabla  \n   Nombre  Facebook  Youtube  Twitter  Conteo  \na  Javier       3.2      4.7      1.0       5  \nb  Carmen       2.5      4.2      7.5       6  \nc    Juan       0.5      1.3      3.1       3  \n Se puede acceder a datos individuales  y porciones de la tabla  \n \n>>> empleados=[['Javier',3.2,4.7,0,2.5,5],['Carmen',2.5,4.2,1.5,3.8,6], \n['Juan',0.5,1.3,2.1,2.0,3],['Diana',1.2,4.2,6.1,2.0,1.8]]  \n>>> tabla=pd.DataFrame(data=empleados,columns=['Nombre','FB','YT','TW', \n'Otros','Conteo'])  \n>>> tabla  \n   Nombre   FB   YT   TW  Otros  Conteo  \n0  Javier  3.2  4.7  0.0    2.5     5.0  \n1  Carmen  2.5  4.2  1.5    3.8     6.0  \n2    Juan  0.5  1.3  2.1    2.0     3.", "start_char_idx": 0, "end_char_idx": 1134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2f05de0f-5127-4d38-b96e-752d9acb7703": {"__data__": {"id_": "2f05de0f-5127-4d38-b96e-752d9acb7703", "embedding": null, "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "754076d0-63af-4b0d-80de-0b0557a5a5e4", "node_type": "4", "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a8b65ea74cedfc62e3929fe3212ceb2f7496ee7d95d0b8f3db74c70842756321", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "896404f1-bfee-4fb6-abab-b7b9b1cfa63d", "node_type": "1", "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b84904fc3343e5bbe08862749ffdc2a409c45e713b84d77516e23bbfebd7aa6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e83b29e9-09c8-4923-9400-fb8d99205366", "node_type": "1", "metadata": {}, "hash": "4651a9f014eac3bda8f533ecee91bb0e92ab750a713ea26e4eddf0c8bd1f6e89", "class_name": "RelatedNodeInfo"}}, "hash": "73d7b821edff8f6b8ce2f3d955f8df5d414134a831e59fed6dff231f7a3e7290", "text": "5  1.3  2.1    2.0     3.0  \n3   Diana  1.2  4.2  6.1    2.0     1.8  \n \nFila de datos  2 \n >>> tabla.ix[2,:]  \nNombre    Juan  \nFB         0.5  \nYT         1.3  \nTW         2.1  \nOtros        2  \nConteo       3  \nName: 2, dtype: object  \n \nColumna 'YT' \n>>> tabla[['YT']]  \n    YT \n0  4.7 \n1  4.2 \nPython Programaci\u00f3n", "start_char_idx": 1109, "end_char_idx": 1427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e83b29e9-09c8-4923-9400-fb8d99205366": {"__data__": {"id_": "e83b29e9-09c8-4923-9400-fb8d99205366", "embedding": null, "metadata": {"page_label": "433", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "45b745b3-b913-4a15-b7e7-8cad3383d792", "node_type": "4", "metadata": {"page_label": "433", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a5aad585702b5d2f2381051033e298b837d5e9f1a92b11bf88e873821cc10832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f05de0f-5127-4d38-b96e-752d9acb7703", "node_type": "1", "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "73d7b821edff8f6b8ce2f3d955f8df5d414134a831e59fed6dff231f7a3e7290", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c91e05c7-187a-4cc0-868b-818186be13e5", "node_type": "1", "metadata": {}, "hash": "9e654c324e248b42f57dab025a6a8705feb3c24f57e27d7a1fd18bb852a4b04a", "class_name": "RelatedNodeInfo"}}, "hash": "4651a9f014eac3bda8f533ecee91bb0e92ab750a713ea26e4eddf0c8bd1f6e89", "text": "433 \n \n2  1.3 \n3  4.2 \n \nNotaci\u00f3n de \u00edndices  \n \n>>> tabla.ix[:,'YT']  \n0    4.7  \n1    4.2  \n2    1.3  \n3    4.2  \nName: YT, dtype: float64  \n \nNotaci\u00f3n alternativa \n \n>>> tabla.ix[:,2]  \n0    4.7  \n1    4.2  \n2    1.3  \n3    4.2  \n \nSegunda fila de datos  de la columna 'YT' \n \n>>> tabla.ix[2,'YT']  \n1.3  \nFilas 2 y 3 de las columnas 'YT','TW'  \n>>> tabla.ix[2:3,['YT','TW']]  \n    YT   TW  \n2  1.3  2.1 \n3  4.2  6.1  \n \nSe puede usar \u201cslicing\u201d para manejo de los \u00edndices  \n>>> tabla.ix[:2,'YT']  \n0    4.7  \n1    4.2 \n2    1.3  \nName: YT, dtype: float64  \n \nSe puede modificar el contenido de datos individuales de la tabla  \n \nModificar el dato en la fila 2 en la columna 'YT'  \n \n>>> tabla.ix[2,'YT']=3.7  \n>>> tabla  \n   Nombre   FB   YT   TW  Otros  Conteo  \n0  Javier  3.2  4.7  0.0    2.5     5.0  \n1  Carmen  2.5  4.2  1.5    3.8     6.0  \n2    Juan  0.5  3.7  2.1    2.0     3.0  \n3   Diana  1.2  4.2  6.1    2.0     1.8  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 954, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c91e05c7-187a-4cc0-868b-818186be13e5": {"__data__": {"id_": "c91e05c7-187a-4cc0-868b-818186be13e5", "embedding": null, "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e19d1e0d-32c5-4ee7-b30f-dcbb4c59caeb", "node_type": "4", "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31ee75e4d70cdf0000f258bb3778fe7bb1916469aa0a8ba9039c62e7c6b62423", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e83b29e9-09c8-4923-9400-fb8d99205366", "node_type": "1", "metadata": {"page_label": "433", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4651a9f014eac3bda8f533ecee91bb0e92ab750a713ea26e4eddf0c8bd1f6e89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ded40fd4-8fc4-43d7-b975-1303be4b1f2c", "node_type": "1", "metadata": {}, "hash": "b74a1dbb07f97dcfebaab59e875a97a601d5ee0c5a9709739a9308fee077b237", "class_name": "RelatedNodeInfo"}}, "hash": "9e654c324e248b42f57dab025a6a8705feb3c24f57e27d7a1fd18bb852a4b04a", "text": "434 \n \n Agregar una columna a la tabla  \n \n>>> tabla['Nueva']=0  \n>>> tabla  \n   Nombre   FB   YT   TW  Otros  Conteo  Nueva  \n0  Javier  3.2  4.7  0.0    2.5     5.0      0  \n1  Carmen  2.5  4.2  1.5    3.8     6.0      0  \n2    Juan  0.5  3.7  2.1    2.0     3.0      0  \n3   Diana  1.2  4.2  6.1    2.0     1.8      0  \n \nModificar el contenido de una columna  \n \n>>> tabla[['Nueva']]=[2.3,4.5,7,2 .1] \n>>> tabla  \n   Nombre   FB   YT   TW  Otros  Conteo  Nueva  \n0  Javier  3.2  4.7  0.0    2.5     5.0    2.3  \n1  Carmen  2.5  4.2  1.5    3.8     6.0    4.5  \n2    Juan  0.5  1.3  2.1    2.0     3.0    7.0  \n3   Diana  1.2  4.2  6.1    2.0     1.8    2.1  \n \nModif icar el contenido de una fila  \n \n>>> tabla.ix[2,:]=['Luis',0.4,2.1,3.3,4,5,2]  \n>>> tabla  \n   Nombre   FB   YT   TW  Otros  Conteo  Nueva  \n0  Javier  3.2  4.7  0.0    2.5     5.0    2.3  \n1  Carmen  2.5  4.2  1.5    3.8     6.0    4.", "start_char_idx": 0, "end_char_idx": 907, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ded40fd4-8fc4-43d7-b975-1303be4b1f2c": {"__data__": {"id_": "ded40fd4-8fc4-43d7-b975-1303be4b1f2c", "embedding": null, "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e19d1e0d-32c5-4ee7-b30f-dcbb4c59caeb", "node_type": "4", "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "31ee75e4d70cdf0000f258bb3778fe7bb1916469aa0a8ba9039c62e7c6b62423", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c91e05c7-187a-4cc0-868b-818186be13e5", "node_type": "1", "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9e654c324e248b42f57dab025a6a8705feb3c24f57e27d7a1fd18bb852a4b04a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "448eff9c-dd55-4aa3-818a-d35672ec7f58", "node_type": "1", "metadata": {}, "hash": "dba19fcabe745f59a48b71ab91079da22116f6bb014d8866ecb5207116fff3b3", "class_name": "RelatedNodeInfo"}}, "hash": "b74a1dbb07f97dcfebaab59e875a97a601d5ee0c5a9709739a9308fee077b237", "text": "2  1.5    3.8     6.0    4.5  \n2    Luis  0.4  2.1  3.3    4.0     5.0    2.0  \n3   Diana  1.2  4.2  6.1    2.0     1.8    2.1  \n \nPython Programaci\u00f3n", "start_char_idx": 880, "end_char_idx": 1030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "448eff9c-dd55-4aa3-818a-d35672ec7f58": {"__data__": {"id_": "448eff9c-dd55-4aa3-818a-d35672ec7f58", "embedding": null, "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f02e1b9c-d8b4-41be-8e36-e202a70b75e3", "node_type": "4", "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7e1867ae48ac4812416d445f62c759c8a3a340256aa7c7b0d8c9493c868426d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ded40fd4-8fc4-43d7-b975-1303be4b1f2c", "node_type": "1", "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b74a1dbb07f97dcfebaab59e875a97a601d5ee0c5a9709739a9308fee077b237", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c3af35c-0ca9-4619-897d-3bd7f5dcfa7f", "node_type": "1", "metadata": {}, "hash": "a4f32cdf8d820cf334af7953ad488a3b5a70c74a68f599cd6d217014dea47448", "class_name": "RelatedNodeInfo"}}, "hash": "dba19fcabe745f59a48b71ab91079da22116f6bb014d8866ecb5207116fff3b3", "text": "435 \n \nCreaci\u00f3n de tablas  con n\u00fameros aleatori os para realizar pruebas con  Pandas  \n \nLa tabla se la puede generar mediante un arreglo NumPy y luego convertir a tabla para \nan\u00e1lizar con Pandas  \n \nUna tab la con 4 filas y 5  columnas con n\u00fameros aleatorios de una cifra  \n \n>>> import pandas as pd \n>>> import numpy as np \n>>> c=np.array([[np.random.randint(0,9) for j in range(5)] for i in range(4)])  \n>>> print(c)  \n[[7 4 0 2 4]  \n [6 0 1 1 0]  \n [2 3 1 1 3]  \n [8 1 4 0 8]]  \n \n>>> tabla=pd.DataFrame(data=c,columns=['A','B','C','D','E'])  \n>>> tabla  \n   A  B  C  D  E  \n0  7  4  0  2  4  \n1  6  0  1  1  0  \n2  2  3  1  1  3  \n3  8  1  4  0  8  \n \nMostrar indicadores estad\u00edsticos b\u00e0sicos \n \n>>> tabla.describe()  \n              A         B         C         D         E  \ncount  4.000000  4.000000  4.000000  4.000000  4.000000  \nmean   5.750000  2.000000  1.500000  1.000000  3.750000  \nstd    2.629956  1.825742  1.732051  0.816497  3.304038  \nmin    2.000000  0.000000  0.000000  0.000000  0.000000  \n25%    5.000000  0.750000  0.750000  0.750000  2.250000  \n50%    6.500000  2.000000  1.", "start_char_idx": 0, "end_char_idx": 1101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c3af35c-0ca9-4619-897d-3bd7f5dcfa7f": {"__data__": {"id_": "9c3af35c-0ca9-4619-897d-3bd7f5dcfa7f", "embedding": null, "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f02e1b9c-d8b4-41be-8e36-e202a70b75e3", "node_type": "4", "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7e1867ae48ac4812416d445f62c759c8a3a340256aa7c7b0d8c9493c868426d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "448eff9c-dd55-4aa3-818a-d35672ec7f58", "node_type": "1", "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dba19fcabe745f59a48b71ab91079da22116f6bb014d8866ecb5207116fff3b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78df908d-e65a-40b8-b3a5-3a7b1ede5a74", "node_type": "1", "metadata": {}, "hash": "e33c3a4d8382f6ef0176b541c46934f79474d6e30fb04236c5a10c5c7ed39116", "class_name": "RelatedNodeInfo"}}, "hash": "a4f32cdf8d820cf334af7953ad488a3b5a70c74a68f599cd6d217014dea47448", "text": "500000  2.000000  1.000000  1.000000  3.500000  \n75%    7.250000  3.250000  1.750000  1.250000  5.000000  \nmax    8.000000  4.000000  4.000000  2.000000  8.000000  \n \nUna tabla con 4 filas y 5 columnas con n\u00fameros aleatorios reales entre 0 y 1  \n \n>>> import pandas as pd \n>>> import numpy as np \n>>> c=np.array([[np.random.rand() for  j in range(5)] for i in range(4)]) \n>>> tabla=pd.DataFrame(data=c,columns=['A','B','C','D','E'])  \n>>> tabla  \n          A         B         C         D         E  \n0  0.873949  0.384680  0.060850  0.957824  0.586930  \n1  0.609252  0.823207  0.446800  0.021084  0.087061  \n2  0.267246  0.769254  0.714618  0.534341  0.269592  \n3  0.223054  0.517752  0.909808  0.807688  0.787934  \nPython Programaci\u00f3n", "start_char_idx": 1081, "end_char_idx": 1817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78df908d-e65a-40b8-b3a5-3a7b1ede5a74": {"__data__": {"id_": "78df908d-e65a-40b8-b3a5-3a7b1ede5a74", "embedding": null, "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2e21c7e-8e78-4487-b639-aa0162818fd1", "node_type": "4", "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "347449bb86ae58ffbbe4481b0bc376f62683b8bc1daa539e888c32773a84127a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c3af35c-0ca9-4619-897d-3bd7f5dcfa7f", "node_type": "1", "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a4f32cdf8d820cf334af7953ad488a3b5a70c74a68f599cd6d217014dea47448", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0864f849-0805-436a-9b03-0cd885008e8d", "node_type": "1", "metadata": {}, "hash": "c1ff31089c2f655cf51c212faa69473e11c46a5cbe7d6193a7c91f6fa971d5d9", "class_name": "RelatedNodeInfo"}}, "hash": "e33c3a4d8382f6ef0176b541c46934f79474d6e30fb04236c5a10c5c7ed39116", "text": "436 \n \nMostrar indicadores estad\u00edsticos b\u00e0sicos \n \n>>> tabla.describe()  \n              A         B         C         D         E  \ncount  4.000000  4.000000  4.000000  4.000000  4.000000  \nmean   0.493375  0.623723  0.533019  0.580234  0.432879  \nstd    0.306850  0.207641  0.367571  0.411932  0.314138  \nmin    0.223054  0.384680  0.060850  0.021084  0.087061  \n25%    0.256198  0.484484  0.350312  0.406027  0.223959  \n50%    0.438249  0.643503  0.580709  0.671015  0.428261  \n75%    0.675426  0.782742  0.763416  0.845222  0.637181  \nmax    0.873949  0.823207   0.909808  0.957824  0.787934  \n \n \nUna tabla con 4000 filas y 5 columnas con n\u00fameros aleatorios reales entre 0 y 1  \n>>> import pandas as pd \n>>> import numpy as np \n>>> c=np\n.array([[np.random.rand() for j in range(5)] for i in range(4000)])  \n>>> tabla=pd.DataFrame(data=c,columns=['A','B','C','D','E'])  \n Mostrar las 10 primeras filas \n \n>>> tabla.head(10)  \n          A         B         C         D         E  \n0  0.100440  0.193849  0.702952  0.803511  0.669157  \n1  0.716088  0.291263  0.791025  0.357672  0.468055  \n2  0.933408  0.", "start_char_idx": 0, "end_char_idx": 1106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0864f849-0805-436a-9b03-0cd885008e8d": {"__data__": {"id_": "0864f849-0805-436a-9b03-0cd885008e8d", "embedding": null, "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2e21c7e-8e78-4487-b639-aa0162818fd1", "node_type": "4", "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "347449bb86ae58ffbbe4481b0bc376f62683b8bc1daa539e888c32773a84127a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78df908d-e65a-40b8-b3a5-3a7b1ede5a74", "node_type": "1", "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e33c3a4d8382f6ef0176b541c46934f79474d6e30fb04236c5a10c5c7ed39116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "428dc4b8-7775-4b49-a168-156255222385", "node_type": "1", "metadata": {}, "hash": "f612a6eb821f506f1d6a2d99fa92435dedcec3f2d03c48b98ed9842b4227a70b", "class_name": "RelatedNodeInfo"}}, "hash": "c1ff31089c2f655cf51c212faa69473e11c46a5cbe7d6193a7c91f6fa971d5d9", "text": "357672  0.468055  \n2  0.933408  0.512588  0.000715  0.191664  0.920348  \n3  0.609972  0.523231  0.765272  0.380535  0.852318  \n4  0.809783  0.834919  0.269011  0.846792  0.917359  \n5  0.329993  0.828408  0.052751  0.208293  0.753208  \n6  0.079422  0.089561  0.926633  0.854734  0.667630  \n7  0.698481  0.766958  0.599957  0.343814  0.046126  \n8  0.550144  0.379781  0.277709  0.076158  0.670358  \n9  0.011829  0.045941  0.780306  0.337176  0.931827  \n Mostrar indicadores estad\u00edsticos b\u00e0sicos  de la tabla completa  \n >>> tabla.describe()  \n                 A             B            C            D            E  \ncount  4000.000000  4000.000000  4000.000000  4000.000000  4000.000000  \nmean      0.508443     0.500336     0.507115     0.503202     0.505294  \nstd       0.290145     0.286409     0.286737     0.288240     0.290925  \nmin       0.000110     0.000455     0.000048     0.000277     0.000024  \n25%       0.258880     0.250304     0.259108     0.249270     0.247879  \n50%       0.509076     0.512986     0.", "start_char_idx": 1072, "end_char_idx": 2090, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "428dc4b8-7775-4b49-a168-156255222385": {"__data__": {"id_": "428dc4b8-7775-4b49-a168-156255222385", "embedding": null, "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2e21c7e-8e78-4487-b639-aa0162818fd1", "node_type": "4", "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "347449bb86ae58ffbbe4481b0bc376f62683b8bc1daa539e888c32773a84127a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0864f849-0805-436a-9b03-0cd885008e8d", "node_type": "1", "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c1ff31089c2f655cf51c212faa69473e11c46a5cbe7d6193a7c91f6fa971d5d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a310f74d-7e80-4ce7-abea-2c25f65226fa", "node_type": "1", "metadata": {}, "hash": "7dc3e8ccea19e93f595a1efcd57dac80a01dcf193f673e5ab268dafd04a9a096", "class_name": "RelatedNodeInfo"}}, "hash": "f612a6eb821f506f1d6a2d99fa92435dedcec3f2d03c48b98ed9842b4227a70b", "text": "509076     0.512986     0.509632     0.507544     0.511822  \n75%       0.760168     0.745071     0.752515     0.753180     0.763291  \nmax       0.999911     0.999702     0.999479     0.999499     0.999641  \n \nPython Programaci\u00f3n", "start_char_idx": 2064, "end_char_idx": 2292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a310f74d-7e80-4ce7-abea-2c25f65226fa": {"__data__": {"id_": "a310f74d-7e80-4ce7-abea-2c25f65226fa", "embedding": null, "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a49c0271-6778-439e-b451-9af772769b49", "node_type": "4", "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "058e492e839680f00ba1ab41c3d5edd5fec2e456e4a38cbfed56df38a4c198cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "428dc4b8-7775-4b49-a168-156255222385", "node_type": "1", "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f612a6eb821f506f1d6a2d99fa92435dedcec3f2d03c48b98ed9842b4227a70b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aadd485b-f8af-488e-9f46-6f124f4d04a3", "node_type": "1", "metadata": {}, "hash": "d6e1d99173b13bec5a9e13ef8effaac81062ee0be002a503451063b88ff8bda7", "class_name": "RelatedNodeInfo"}}, "hash": "7dc3e8ccea19e93f595a1efcd57dac80a01dcf193f673e5ab268dafd04a9a096", "text": "437 \n \n \nAgrupaci\u00f3n de la tabla de datos  por contenido  \n \nGenerar  una tabla de 4 columnas y 20 filas con n\u00fameros aleatorios de una cifra \n >>> c=\nnp.array([[np.random.randint(0,9) for j in range(5)] for i in range(20)])  \n>>> tabla=pd.DataFrame(data=c,columns=['A','B','C','D','E'])  \n>>> tabla  \n    A  B  C  D  E  \n0   2  8  3  8  5  \n1   4  2  7  1  3  \n2   2  2  4  7  2  \n3   1  5  3  2  0  \n4   2  7  4  6  8  \n5   0  2  3  2  1  \n6   0  6  2  1  7  \n7   2  6  1  5  5  \n8   8  2  4  4  5  \n9   8  4  2  3  0  \n10  4  1  5  7  4  \n11  0  8  8  8  0  \n12  5  4  3  7  1  \n13  0  1  0  0  5  \n14  0  6  3  2  0  \n15  7  7  4  2  0  \n16  4  4  3  2  1  \n17  0  5  3  0  7  \n18  8  0  4  3  7  \n19  5  2  5  8  4  \n Encontrar los elementos no repetidos en la columna 'A'  \n \n>>> u=tabla['A'].unique()  \n>>> u \narray([2, 4,", "start_char_idx": 0, "end_char_idx": 827, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aadd485b-f8af-488e-9f46-6f124f4d04a3": {"__data__": {"id_": "aadd485b-f8af-488e-9f46-6f124f4d04a3", "embedding": null, "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a49c0271-6778-439e-b451-9af772769b49", "node_type": "4", "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "058e492e839680f00ba1ab41c3d5edd5fec2e456e4a38cbfed56df38a4c198cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a310f74d-7e80-4ce7-abea-2c25f65226fa", "node_type": "1", "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7dc3e8ccea19e93f595a1efcd57dac80a01dcf193f673e5ab268dafd04a9a096", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a05cb6de-3ce6-451e-9502-927eccafc02a", "node_type": "1", "metadata": {}, "hash": "afbc5061a8520913da1917aacf7ee9edb26d77fe42b4e1ecb06e8d19d397ee97", "class_name": "RelatedNodeInfo"}}, "hash": "d6e1d99173b13bec5a9e13ef8effaac81062ee0be002a503451063b88ff8bda7", "text": "unique()  \n>>> u \narray([2, 4, 1, 0, 8, 5, 7], dtype=int64)  \n>>> print(u)  \n[2 4 1 0 8 5 7]  \n Agrupar las filas asociadas a cada elmento no repetido de la columna 'A' \n \n>>> reg=tabla.groupby('A')  \n>>> reg.sum()  \n    B   C   D   E  \nA                 \n0  28  19  13  20  \n1   5   3   2   0  \n2  23  12  26  20  \n4   7  15  10   8  \n5   6   8  15   5  \nPython Programaci\u00f3n", "start_char_idx": 797, "end_char_idx": 1172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a05cb6de-3ce6-451e-9502-927eccafc02a": {"__data__": {"id_": "a05cb6de-3ce6-451e-9502-927eccafc02a", "embedding": null, "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf968f92-0e31-4682-99d8-e99f448e0ff6", "node_type": "4", "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cee11e288a31e1e6276bea61f7002b3fd93a176cb71450b99567fda002aa9670", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aadd485b-f8af-488e-9f46-6f124f4d04a3", "node_type": "1", "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d6e1d99173b13bec5a9e13ef8effaac81062ee0be002a503451063b88ff8bda7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8ccf620-d4cb-4576-bcfd-7f90a24fed2e", "node_type": "1", "metadata": {}, "hash": "a52801512f4a37fdd0b586633ae36827c76e5a9fe33e785aa9130d8595386176", "class_name": "RelatedNodeInfo"}}, "hash": "afbc5061a8520913da1917aacf7ee9edb26d77fe42b4e1ecb06e8d19d397ee97", "text": "438 \n \n7   7   4   2   0  \n8   6  10  10  12  \n \nPor ejemplo, el valor   28  es la suma de todos los valores en la columna 'A' que tienen el \nvalor  0  en la columna  'A' en la tabla  \n \nCreaci\u00f3n de tablas para P andas con n\u00fameros aleatorios y tipos de datos diferentes \n \nPara probar los indicadores estad\u00edsticos de Pandas se crear\u00e1 una tabla de 20 filas con la \ncantidad de accesos a in ternet realizados por los cinco  empleados de una empresa en \ncada uno de cuatro sitios de inter\u00e9s .", "start_char_idx": 0, "end_char_idx": 489, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8ccf620-d4cb-4576-bcfd-7f90a24fed2e": {"__data__": {"id_": "d8ccf620-d4cb-4576-bcfd-7f90a24fed2e", "embedding": null, "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf968f92-0e31-4682-99d8-e99f448e0ff6", "node_type": "4", "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "cee11e288a31e1e6276bea61f7002b3fd93a176cb71450b99567fda002aa9670", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a05cb6de-3ce6-451e-9502-927eccafc02a", "node_type": "1", "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "afbc5061a8520913da1917aacf7ee9edb26d77fe42b4e1ecb06e8d19d397ee97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3fbd0881-b870-4e94-9a42-73c6118ebcb5", "node_type": "1", "metadata": {}, "hash": "b5a116aaae437296e417252b0a5a69ad5ee1071e4c63d195f926bc16f7f61e8d", "class_name": "RelatedNodeInfo"}}, "hash": "a52801512f4a37fdd0b586633ae36827c76e5a9fe33e785aa9130d8595386176", "text": "Nombres de los empleados  \nMar\u00eda, Juan, Carmen, Javier, Diana  \nSitios de inter\u00e9s de inter\u00e9s  \nFB, YT, TW, GG  \n \nPara cada una de las 20 fila s se elig ir\u00e1 un nombre al azar, y la cantidad de accesos ser\u00e1n \ntambi\u00e9n n\u00fameros aleatorios enteros entre 0 y 9  \n Debido a que hay varias instrucciones que deben escribirse en la ventana interactiva de \nPython, es preferible crear la tabla mediante un programa para que se pueda reu tilizar  en \notras pruebas y aplicaciones  \n \n#Programa para crear una tabla para Pandas  \nimport pandas as pd \nimport numpy as np \nnombres=['Mar\u00eda','Juan','Carmen','Javier','Diana']  \ncuadro=[]  \nfor i in range(20):  \n    nombre=nombres[np.random.randint(0,5 )] \n    accesos =[np.random.randint(0,9)  for j in range(4)]  \n    fila=[nombre]+ accesos \n    cuadro=cuadro+[fila]  \ncols=['Nombres','FB', 'YT', 'TW', 'GG']  \ntabla=pd.DataFrame(data=cuadro,columns=cols)  \n  \n \nAl ejecutar el programa se genera la tabla y se puede operar con esta tabla en la ventana \ninteractiva de Python \n \n>>> tabla  \n   Nombres  FB  YT  TW  GG  \n0    Diana   3   8   4   5  \n1    Diana   8   3   1   3  \n2   Carmen   0   5   8   1  \n3     Juan   5   6   7   6  \n4    Mar\u00eda   3   4   3   6  \n5   Carmen   3   0   5   5  \nPython Programaci\u00f3n", "start_char_idx": 494, "end_char_idx": 1743, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fbd0881-b870-4e94-9a42-73c6118ebcb5": {"__data__": {"id_": "3fbd0881-b870-4e94-9a42-73c6118ebcb5", "embedding": null, "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "143fda6d-1dee-4d3d-ac44-1a451827d2e6", "node_type": "4", "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "082ca201412bbf7045e1f083bdcb06a847963b93960b34e90a9aec95280c08e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8ccf620-d4cb-4576-bcfd-7f90a24fed2e", "node_type": "1", "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a52801512f4a37fdd0b586633ae36827c76e5a9fe33e785aa9130d8595386176", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c6e83d3-8a58-4929-a691-3bc60152459c", "node_type": "1", "metadata": {}, "hash": "9384d7cae5594e1e9a3b778dd928d6df27bd7fb8ad5abe0f813967221b34f7b4", "class_name": "RelatedNodeInfo"}}, "hash": "b5a116aaae437296e417252b0a5a69ad5ee1071e4c63d195f926bc16f7f61e8d", "text": "439 \n \n6    Diana   0   6   3   5  \n7    Diana   6   3   7   4  \n8    Mar\u00eda   6   0   1   4  \n9   Carmen   0   8   7   2  \n10    Juan   2   5   5   2  \n11   Mar\u00eda   2   1   7   4  \n12  Carmen   1   6   4   6  \n13   Diana   4   0   5   6  \n14  Javier   4   5   5   5  \n15    Juan   8   3   2   1  \n16    Juan   3   5   2   0  \n17   Diana   1   8   5   4  \n18  Javier   3   5   0   0  \n19    Juan   7   1   8   2  \n \nEstad\u00ed sticas b \u00e1sicas  \n \n>>> tabla.describe()  \n              FB         YT         TW         GG  \ncount  20.000000  20.000000  20.000000  20.000000  \nmean    3.450000   4.100000   4.450000   3.550000  \nstd     2.543826   2.653697   2.438183   2.038446  \nmin     0.000000   0.000000   0.000000   0.000000  \n25%     1.750000   2.500000   2.750000   2.000000  \n50%     3.000000   5.000000   5.000000   4.000000  \n75%     5.250000   6.000000   7.000000   5.000000  \nmax     8.000000   8.000000   8.000000   6.", "start_char_idx": 0, "end_char_idx": 924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c6e83d3-8a58-4929-a691-3bc60152459c": {"__data__": {"id_": "1c6e83d3-8a58-4929-a691-3bc60152459c", "embedding": null, "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "143fda6d-1dee-4d3d-ac44-1a451827d2e6", "node_type": "4", "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "082ca201412bbf7045e1f083bdcb06a847963b93960b34e90a9aec95280c08e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3fbd0881-b870-4e94-9a42-73c6118ebcb5", "node_type": "1", "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b5a116aaae437296e417252b0a5a69ad5ee1071e4c63d195f926bc16f7f61e8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "048224f0-7cf0-4402-a844-aa14c311c801", "node_type": "1", "metadata": {}, "hash": "0317bb49f21f7f89f56b7d0ef94bc720362e1a54ed98ca5a1ab975344c6dfe37", "class_name": "RelatedNodeInfo"}}, "hash": "9384d7cae5594e1e9a3b778dd928d6df27bd7fb8ad5abe0f813967221b34f7b4", "text": "000000   8.000000   8.000000   6.000000  \n \nUso de operadores para extraer porciones de una tabla  \n \nDetectar cuales l\u00edneas de la columna 'FB' contienen valores m ayores que 5 \n \n>>> tabla['FB']>5  \n0     False  \n1      True  \n2     False  \n3     False  \n4     False  \n5     False  \n6     False  \n7      True  \n8      True  \n9     False  \n10    False  \n11    False  \n12    False  \n13    False  \n14    False  \n15     True  \nPython Programaci\u00f3n", "start_char_idx": 891, "end_char_idx": 1334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "048224f0-7cf0-4402-a844-aa14c311c801": {"__data__": {"id_": "048224f0-7cf0-4402-a844-aa14c311c801", "embedding": null, "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a22c2682-b3f2-4ccd-b617-0068fd92f0d5", "node_type": "4", "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3fecd279462058380a0dcb9b576dc9fcb5842c500bb431079d6ed8d492ebece1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c6e83d3-8a58-4929-a691-3bc60152459c", "node_type": "1", "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9384d7cae5594e1e9a3b778dd928d6df27bd7fb8ad5abe0f813967221b34f7b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4672c884-24ad-4afe-be8a-77873a43b1b1", "node_type": "1", "metadata": {}, "hash": "f80a3946cad0346e4a76f0e356c107af9cc414a818cc9d8da80ceb4aa1f838ba", "class_name": "RelatedNodeInfo"}}, "hash": "0317bb49f21f7f89f56b7d0ef94bc720362e1a54ed98ca5a1ab975344c6dfe37", "text": "440 \n \n16    False  \n17    False  \n18    False  \n19     True  \nName: FB, dtype: bool  \n \nMostra r cuales l\u00edneas de la columna 'FB' contienen valores mayores  que 5  \n >>> A=tabla[tabla['FB']>5]  \n>>> print(A)  \n   Nombres  FB  YT  TW  GG  \n1    Diana   8   3   1   3  \n7    Diana   6   3   7   4  \n8    Mar\u00eda   6   0   1   4  \n15    Juan   8   3   2   1  \n19    Juan   7   1   8   2  \n \nMostra r cuales l\u00edneas de la columna ' TW' contienen valores menores que 4  \n \n>>> B=tabla[tabla['TW']<4]  \n>>> print(B)  \n   Nombres  FB  YT  TW  GG  \n1    Diana   8   3   1   3  \n4    Mar\u00eda   3   4   3   6  \n6    Diana   0   6   3   5  \n8    Mar\u00eda   6   0   1   4 \n15    Juan   8   3   2   1  \n16    Juan   3   5   2   0  \n18  Javier   3   5   0   0  \n Concatenar tablas  \n >>> C=pd.concat([A,", "start_char_idx": 0, "end_char_idx": 782, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4672c884-24ad-4afe-be8a-77873a43b1b1": {"__data__": {"id_": "4672c884-24ad-4afe-be8a-77873a43b1b1", "embedding": null, "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a22c2682-b3f2-4ccd-b617-0068fd92f0d5", "node_type": "4", "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3fecd279462058380a0dcb9b576dc9fcb5842c500bb431079d6ed8d492ebece1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "048224f0-7cf0-4402-a844-aa14c311c801", "node_type": "1", "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "0317bb49f21f7f89f56b7d0ef94bc720362e1a54ed98ca5a1ab975344c6dfe37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90e4d2a9-00b1-4350-b18b-03770688f88a", "node_type": "1", "metadata": {}, "hash": "ecb6448dc11ba09be01d374edcefccaddce64cc06bc54a21f4e75a1e054460b4", "class_name": "RelatedNodeInfo"}}, "hash": "f80a3946cad0346e4a76f0e356c107af9cc414a818cc9d8da80ceb4aa1f838ba", "text": "concat([A,B])  \n>>> print(C)  \n   Nombres  FB  YT  TW  GG  \n1    Diana   8   3   1   3  \n7    Diana   6   3   7   4  \n8    Mar\u00eda   6   0   1   4  \n15    Juan   8   3   2   1  \n19    Juan   7   1   8   2  \n1    Diana   8   3   1   3  \n4    Mar\u00eda   3   4   3   6  \n6    Diana   0   6   3   5  \n8    Mar\u00eda   6   0   1   4  \n15    Juan   8   3   2   1  \n16    Juan   3   5   2   0  \n18  Javier   3   5   0   0  \nPython Programaci\u00f3n", "start_char_idx": 772, "end_char_idx": 1199, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90e4d2a9-00b1-4350-b18b-03770688f88a": {"__data__": {"id_": "90e4d2a9-00b1-4350-b18b-03770688f88a", "embedding": null, "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1ae1b30-fd5c-49c0-a294-cf8f700b2899", "node_type": "4", "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "082f2af2a4e3b66af0cc29f152ba3dbf5a6fdc1b8b53cd22a1c2eead66c8b04e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4672c884-24ad-4afe-be8a-77873a43b1b1", "node_type": "1", "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "f80a3946cad0346e4a76f0e356c107af9cc414a818cc9d8da80ceb4aa1f838ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf4c0125-9f81-423b-9d34-d7e51912fdc6", "node_type": "1", "metadata": {}, "hash": "7a4dd687d6cc2044085c3376b79fbd191d0fb18e8e9e39475df64734464fc4c0", "class_name": "RelatedNodeInfo"}}, "hash": "ecb6448dc11ba09be01d374edcefccaddce64cc06bc54a21f4e75a1e054460b4", "text": "441 \n \n13.2 Librer\u00eda gr\u00e1fi ca:  Pylab , Matplotlib  \n \nEsta librer\u00eda puede decargarse de la direcci\u00f3n:  \n \nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/  \n Pylab incluye la librer\u00eda gr\u00e1fica Matplotlib  junto con las librer\u00edas num\u00e9ricas N umPy, SciPy \n Gr\u00e1ficos en el plano  \n \nAlgunos c\u00f3digos y s\u00edmbolos para graficar  \n \nplot:    Funci\u00f3n para graficar en el plano con el estilo, marca y color  especificados:  \n   marcas: 'o': c\u00edrculos,   '.': puntos,   '*': estrellas,   's': cuadrados,  \n   '+': cruces,   '^': tri\u00e1ngulos,  'p': pent\u00e1gonos,  'h': hex\u00e1gonos , \n      '-': l\u00ednea cont\u00ednua,  ' - -': l\u00ednea discont\u00ednua,  ' :': l\u00ednea punteada  \n   color:     'b': blue, ' g': green, 'r': red, ' k': black, ' y': yellow, ' c': cyan  \n \ntitle:    Agrega el t\u00edtulo  \nxlabel, ylabel:   Coloc a nombres a los ejes \ngrid:    Muestra las cuadr\u00edculas  \nlegend:   Muestra  un recuadro con identificaci\u00f3n para los gr\u00e1ficos \nloc:   Ubicaci\u00f3n del recuadro: ' lower', 'upper', 'center', 'left', 'right' \nshow :    Despliega el gr\u00e1fico en pantalla  \n >>> from pylab import* \n>>> x=arange(0,2,0.1)        \nGenera el vector  x=[0, 0.1, 0.2, 0.3, . . .", "start_char_idx": 0, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf4c0125-9f81-423b-9d34-d7e51912fdc6": {"__data__": {"id_": "cf4c0125-9f81-423b-9d34-d7e51912fdc6", "embedding": null, "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1ae1b30-fd5c-49c0-a294-cf8f700b2899", "node_type": "4", "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "082f2af2a4e3b66af0cc29f152ba3dbf5a6fdc1b8b53cd22a1c2eead66c8b04e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90e4d2a9-00b1-4350-b18b-03770688f88a", "node_type": "1", "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ecb6448dc11ba09be01d374edcefccaddce64cc06bc54a21f4e75a1e054460b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4143f95d-1f50-4fbf-a9b2-6f628a7792fb", "node_type": "1", "metadata": {}, "hash": "a4badd7e606d703876c6188140afb263893c466a60fa1acf2bac47c928097c83", "class_name": "RelatedNodeInfo"}}, "hash": "7a4dd687d6cc2044085c3376b79fbd191d0fb18e8e9e39475df64734464fc4c0", "text": ". . , 2]  \n>>> plot(x,cos(x), '-b')         Grafica los puntos  (x, cos(x)) con una linea azul  \n>>> plot(x,log(x+1),' -r')  Grafica los puntos  (x, log(x+1))  con una l\u00ednea roja  \n>>> title(' Funciones')   \n>>> xlabel( 'x') \n>>> ylabel( 'f(x)') \n>>> grid(True)  \n>>> legend(('coseno', 'logaritmo'),loc='upper right')  \n>>> show()  \n \n               \n  \n \nPython Programaci\u00f3n", "start_char_idx": 1126, "end_char_idx": 1501, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4143f95d-1f50-4fbf-a9b2-6f628a7792fb": {"__data__": {"id_": "4143f95d-1f50-4fbf-a9b2-6f628a7792fb", "embedding": null, "metadata": {"page_label": "442", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd14b3c8-6d59-4c65-8cef-ea20d292499b", "node_type": "4", "metadata": {"page_label": "442", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "33677fc593076eaa6388adefaa07ddb992bf272af5b7f5d74501e12a66306289", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf4c0125-9f81-423b-9d34-d7e51912fdc6", "node_type": "1", "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "7a4dd687d6cc2044085c3376b79fbd191d0fb18e8e9e39475df64734464fc4c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30a1563b-d59c-43ba-a68c-7139ce0d6d32", "node_type": "1", "metadata": {}, "hash": "98e11a741f586415d3bfda34b3f91cabe7085ab3ff43ae1e2b198fbb3c0b00b3", "class_name": "RelatedNodeInfo"}}, "hash": "a4badd7e606d703876c6188140afb263893c466a60fa1acf2bac47c928097c83", "text": "442 \n \nGr\u00e1ficos en coordenadas polares \n >>> from pylab import* \n>>> t=arange(0,2*pi,0.01)  \n>>> r=sin(3*t)  \n>>> polar(t,r)  \n>>> show()  \n  \n          \n   \n \n \n>>> from pylab import* \n>>> t=arange(0,10*pi,0.01)  \n>>> r=t/(10*pi)  \n>>> polar(t,r)  \n>>> show()  \n \n           \n   \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 300, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30a1563b-d59c-43ba-a68c-7139ce0d6d32": {"__data__": {"id_": "30a1563b-d59c-43ba-a68c-7139ce0d6d32", "embedding": null, "metadata": {"page_label": "443", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6adeaa1f-5b2b-48b3-97d7-0a24e80d7bd0", "node_type": "4", "metadata": {"page_label": "443", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ffbf9af4c766af064403278400cf27ebef6797a7d6bcc497f45afa048d8e9798", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4143f95d-1f50-4fbf-a9b2-6f628a7792fb", "node_type": "1", "metadata": {"page_label": "442", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a4badd7e606d703876c6188140afb263893c466a60fa1acf2bac47c928097c83", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f63d2e1-1a3b-4ea0-aa03-5a3fc771bf60", "node_type": "1", "metadata": {}, "hash": "1e883d86059bfe6031dac83bb5a88ca536d18b86d343cfd5b22c99ec0e6889ec", "class_name": "RelatedNodeInfo"}}, "hash": "98e11a741f586415d3bfda34b3f91cabe7085ab3ff43ae1e2b198fbb3c0b00b3", "text": "443 \n \nGr\u00e1fico s de ecuaciones impl\u00edcitas  \n \n>>> from pylab import* \n>>> xrango = arange(0,4,0.01)  \n>>> yrango = arange(- 2,4,0.01)  \n>>> x, y = meshgrid(xrango,yrango)  \n>>> f=(x- 2)**2+(y- 1)**2+x*y- 3 \n>>> g=x*exp(x+y)+y -3 \n>>> contour(x, y, f,[0])  \n>>> contour(x, y, g,[0])  \n>>> grid(True)  \n>>> show()  \n \n           \n   \n \nNota.  Las funciones matem\u00e1ticas del m\u00f3dulo math  no se pueden usar con meshgr id  \n \n \nGraficaci\u00f3n de h istogramas  \n \n>>> from pylab import* \n>>> from random import* \n>>> n=normal(size=100)     Una muestra normal de n\u00fameros aleatorios \n>>> hist(n)  \n>>> title('Histograma')  \n>>> grid(True)  \n>>> show()  \n \n          \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 677, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f63d2e1-1a3b-4ea0-aa03-5a3fc771bf60": {"__data__": {"id_": "5f63d2e1-1a3b-4ea0-aa03-5a3fc771bf60", "embedding": null, "metadata": {"page_label": "444", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62b5f45d-23a1-4757-a1d4-dd5059786e5e", "node_type": "4", "metadata": {"page_label": "444", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4f6c9dd01643fcef710877465a3e932a0b894ade5d7cbbd2cc6fdeaf4237fd60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30a1563b-d59c-43ba-a68c-7139ce0d6d32", "node_type": "1", "metadata": {"page_label": "443", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "98e11a741f586415d3bfda34b3f91cabe7085ab3ff43ae1e2b198fbb3c0b00b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "282196be-98ed-4754-a2c3-0e9c2c2048d5", "node_type": "1", "metadata": {}, "hash": "3fb161b74fd1f53418f306a3008e04a0ce9c8e15de01a0563ac069f681d7f21f", "class_name": "RelatedNodeInfo"}}, "hash": "1e883d86059bfe6031dac83bb5a88ca536d18b86d343cfd5b22c99ec0e6889ec", "text": "444 \n \nGr\u00e1ficos 3D  \n \nReferencia para est e ejemplo  [6] \n \n>>> from pylab import* \n>>> from mpl_toolkits.mplot3d import Axes3D \n>>> fig=figure()  \n>>> ax=Axes3D(fig)  \n>>> x=arange(- 4,4,0.25)  \n>>> y=arange(- 4,4,0.25)  \n>>> X,Y=meshgrid(x,y)  \n>>> Z=sin(sqrt(X**2+Y**2) ) \n>>> ax.plot_surface(X,Y,Z,rstride=1,cstride=1,cmap='hot')  \n>>> show()  \n \n \n           \n  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "282196be-98ed-4754-a2c3-0e9c2c2048d5": {"__data__": {"id_": "282196be-98ed-4754-a2c3-0e9c2c2048d5", "embedding": null, "metadata": {"page_label": "445", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b58752f-aa1e-4deb-a225-1cb63ad61da6", "node_type": "4", "metadata": {"page_label": "445", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a8d0b06c676823905dad25c035cd97c69a3f28c9e71fbfdc7e00f70e0ffb382d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f63d2e1-1a3b-4ea0-aa03-5a3fc771bf60", "node_type": "1", "metadata": {"page_label": "444", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1e883d86059bfe6031dac83bb5a88ca536d18b86d343cfd5b22c99ec0e6889ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "062bfe17-46ee-4769-abd5-067d74c3498f", "node_type": "1", "metadata": {}, "hash": "6309f5b4f41731cdd078f04bc937114b15995db0ccb49ee8743e0edcc1a61050", "class_name": "RelatedNodeInfo"}}, "hash": "3fb161b74fd1f53418f306a3008e04a0ce9c8e15de01a0563ac069f681d7f21f", "text": "445 \n \n13.3 Librer\u00eda para manejo matem\u00e1tico simb\u00f3lico: SymPy \n \nCon la librer\u00eda  S ymPy  se puede explorar el manejo matem\u00e1tico simb\u00f3lico.  \n \nEsta librer\u00eda puede decargarse de la direcci\u00f3n:  \n \nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/  \n \nReferencia para algunos ejemplos   [7] \n \nPara acceder a esta librer\u00eda  \n \n>>> from sympy import* \n \nDeclaraci\u00f3n de variables smb\u00f3licas  \n >>> x=Symbol(' x') \n>>> a,b=symbols('a,b ') \n \nOperaciones algebraicas \n \n>>> 3*x+2*x  \n5*x \n>>> v=[2*x,3*x,5*x]  \n>>> sum(v)  \n10*x \n \n>>> g=(2+x)**2  \n>>> u=expand(g)  \n>>> u \nx**2 + 4*x + 4  \n>>> factor(u)  \n(x + 2)**2  \n \nEvaluaci\u00f3n de expresiones \n \n>>> u=Symbol('u')  \n>>> v=sin(u)  \n>>> v.subs(u,1.2)            evaluar por sustituci\u00f3n \n0.932039085967226  \n>>> v.subs(u,1.2).evalf(5)          evalf especifica d \u00edgitos  \n0.93204 \n \n>>> x,y=symbols('x,y')  \n>>> f=2*exp(x)+3*y+1  \n>>> r=f.subs(x,2).subs(y,3)  \n>>> r \n10 + 2*exp(2)  \n>>> r=f.subs(x,2).subs(y,3).evalf(8) \n>>> r \n24.778112  \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "062bfe17-46ee-4769-abd5-067d74c3498f": {"__data__": {"id_": "062bfe17-46ee-4769-abd5-067d74c3498f", "embedding": null, "metadata": {"page_label": "446", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0fb8059f-b672-4746-9b9c-a4cfb0357b0c", "node_type": "4", "metadata": {"page_label": "446", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "dbdfad4ac909580a012559075893de8b71753ef31a36222751d002b88d9e2471", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "282196be-98ed-4754-a2c3-0e9c2c2048d5", "node_type": "1", "metadata": {"page_label": "445", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3fb161b74fd1f53418f306a3008e04a0ce9c8e15de01a0563ac069f681d7f21f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb2532c4-c9ed-45c9-866e-b6606a21989b", "node_type": "1", "metadata": {}, "hash": "4ca5e50ec20af194ccaf87d0899428a4ec9d44c911e60ba9da04a8acc5a4f385", "class_name": "RelatedNodeInfo"}}, "hash": "6309f5b4f41731cdd078f04bc937114b15995db0ccb49ee8743e0edcc1a61050", "text": "446 \n \n>>> a,b= symbols('a,b') \n>>> expand(sin(a+b),trig=True)  \nsin(a)*cos(b) + sin(b)*cos(a)  \n \n>>> simplify(sin(a)**2+cos(a)**2)  \n1 \n \nOperaciones del c\u00e1lculo  \n \n>>> x,y=symbols('x,y')  \n>>> f=x*exp(x)+y**2+1  \n>>> diff(f,x)       Derivar \nx*exp(x) + exp(x)  \n \n>>> diff(f,y)  \n2*y \n \n>>> f=x*exp(x)+x**2+1  \n>>> diff(f,x).subs(x,3)      Evaluar derivada \n6 + 4*exp(3)  \n \n>>> integrate(f,x)       Integrar \nx**3/3 + x + (x -  1)*exp(x)  \n>>> integrate(f,(x,0,2))      Evaluar integral  \n17/3 + exp(2)  \n>>> integrate(f,(x,0,2)).evalf(8 )   8 d\u00edgitos \n13.055723  \n \n>>> f=x*exp(x)+y**2+1  \n>>> integrate(f,x)  \nx*(y**2 + 1) + (x - 1)*exp(x)  \n>>> integrate(f,y)  \ny**3/3 + y*(x*exp(x) + 1)  \n \n>>> integrate(f,(x,0,2),(y,1,3))  \n2*exp(2) + 70/3  \n \n>>> n=Symbol('n')  \n>>> Sum(1/n**2,(n,1,10)).evalf(8 ) \n1.5497677  \n \n>>> limit(sin(x)/x,x,0)  \n1 \n>>> limit(1/x,x,oo)  \n0 \n>>> limit(1/x,x,0,dir='+')  \noo \n>>> limit(1/x,x,0,dir='- ') \n-oo \n \n>>> series(exp(x),x,1,7)  \nE+E*x+E*x**2/2+E*x**3/6+E*x**4/24+E*x**5/120+E*x**6/720+O(x**7)  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb2532c4-c9ed-45c9-866e-b6606a21989b": {"__data__": {"id_": "fb2532c4-c9ed-45c9-866e-b6606a21989b", "embedding": null, "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e216ffee-1bbf-48c6-88b8-738f45c199d8", "node_type": "4", "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8359c6d412317e110691b5a4ff7f2c91497fa069975e6d04fb3c29451b7d3d90", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "062bfe17-46ee-4769-abd5-067d74c3498f", "node_type": "1", "metadata": {"page_label": "446", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "6309f5b4f41731cdd078f04bc937114b15995db0ccb49ee8743e0edcc1a61050", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "308343cd-e8f3-4353-958f-2c5b33b09b5e", "node_type": "1", "metadata": {}, "hash": "d696d7e1343ae656b095b7b99b1ce03ee9d5058411032b3c4e9ad55d539d437a", "class_name": "RelatedNodeInfo"}}, "hash": "4ca5e50ec20af194ccaf87d0899428a4ec9d44c911e60ba9da04a8acc5a4f385", "text": "447 \n \nResoluci\u00f3n de ecuaciones \n Este componente de la libr er\u00eda SymPy todav\u00eda est\u00e1 en desarrollo  \n >>> from sympy import* \n>>> x=Symbol('x')  \n \nResolver  la ecuaci\u00f3n polin\u00f3mica:   x\n3 - 2x - 5.2 = 0  \n \n>>> u=solve(x**3- 2*x-5.2) \n>>> u        El resultado es un vector  \n[2.11229262318742,       Una ra\u00edz real y dos  \n -1.05614631159371 - 1.16031680780681*I,   ra\u00edces complejas  \n -1.05614631159371 + 1.16031680780681*I]   I es \u221a-1 \n Resolver  la ecuaci\u00f3n no lineal:   e\nx - \u03c0x = 0  \n \n>>> u=solve(exp(x) -pi*x) \n>>> u        El resultado es un vector   \n[-LambertW( -1/pi)]      Soluci\u00f3n simb\u00f3lica  \n>>> float(u[0])       Soluci\u00f3n num\u00e9rica  \n0.5538270366445136  \n \nResolver  la ecuaci\u00f3n no lineal:   cos(x) \u2013 \u03c0x = 0  \n \n>>> u=solve(cos(x) -pi*x)     No encontr\u00f3 la soluci\u00f3n  \nNo algorithms are implemented to solve equation cos(x) - pi*x \n \n>>> from sympy import* \n>>> x=Symbol('x')  \n>>> y=Function('y')  \n \nResolver la ecuaci\u00f3n di ferencial:  y\u2019(x) + x - 1 = 0  \n \n>>> dsolve(Derivative(y(x),x)+x- 1) \ny(x) == C1 - x**2/2 + x  \n \nResolver la ecuaci\u00f3n diferencial:  y\u2019(x) + y(x) + x - 1 = 0  \n \n>>> dsolve(Derivative(y(x),", "start_char_idx": 0, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "308343cd-e8f3-4353-958f-2c5b33b09b5e": {"__data__": {"id_": "308343cd-e8f3-4353-958f-2c5b33b09b5e", "embedding": null, "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e216ffee-1bbf-48c6-88b8-738f45c199d8", "node_type": "4", "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8359c6d412317e110691b5a4ff7f2c91497fa069975e6d04fb3c29451b7d3d90", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb2532c4-c9ed-45c9-866e-b6606a21989b", "node_type": "1", "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4ca5e50ec20af194ccaf87d0899428a4ec9d44c911e60ba9da04a8acc5a4f385", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "997443d5-9301-47d6-abaa-5a3c9e232c14", "node_type": "1", "metadata": {}, "hash": "24353c8a350ad86ab6ec65d4d8a202055ded3a8a06403789259d622b7d88641a", "class_name": "RelatedNodeInfo"}}, "hash": "d696d7e1343ae656b095b7b99b1ce03ee9d5058411032b3c4e9ad55d539d437a", "text": "x)+y(x)+x- 1) \ny(x) == (C1 + (- x + 2)*exp(x))*exp( -x) \n \nResolver la ecuaci\u00f3n dif erencial:  y\u2019\u2019(x) + y\u2019(x) + x - 1 = 0  \n \n>>> dsolve(Derivative(y(x),x,x)+Derivative(y(x),x)+x- 1) \ny(x) == C1 + C2*exp(- x) - x**2/2 + 2*x \n \nPython Programaci\u00f3n", "start_char_idx": 1129, "end_char_idx": 1375, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "997443d5-9301-47d6-abaa-5a3c9e232c14": {"__data__": {"id_": "997443d5-9301-47d6-abaa-5a3c9e232c14", "embedding": null, "metadata": {"page_label": "448", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49a84924-00aa-492d-9d3b-92f3aec4dfaa", "node_type": "4", "metadata": {"page_label": "448", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b79e1eb6d27069cf4ccde528faa4f529ff0f7ddb675e8e806ade5fc07c36af9b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "308343cd-e8f3-4353-958f-2c5b33b09b5e", "node_type": "1", "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d696d7e1343ae656b095b7b99b1ce03ee9d5058411032b3c4e9ad55d539d437a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "384ccd6d-8c24-41ff-8973-1d6d719d239c", "node_type": "1", "metadata": {}, "hash": "58975f73f6d82708890f71a29cd2c61bb235c6f943ac7e825e6bbf665c907e7c", "class_name": "RelatedNodeInfo"}}, "hash": "24353c8a350ad86ab6ec65d4d8a202055ded3a8a06403789259d622b7d88641a", "text": "448 \n \nSalida formateada de expresiones  \n \n>>> from sympy import* \n>>> x=Symbol('x')  \n>>> y=(x+1)**2/(x+3)  \n>>> pprint(y)        pprint es \u2018pretty print\u2019  \n       2  \n(x + 1)  \n--------  \n x + 3  \n \nGr\u00e1ficos en  el plano  con SymPy  \n \n>>> from sympy import* \n>>> x=Symbol('x')  \n>>> f=x*sin(x)  \n>>> plot(f,(x,0,2*pi))  \n \n \n  \n \n \nGr\u00e1ficos 3D  con SymPy  \n \n>>> from sympy import* \n>>> from sympy.plotting import* \n>>> x,y=symbols('x,y') \n>>> z=x**2- y**2 \n>>> plot3d(z,(x,- 5,5),(y, -5,5)) \n \n              \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "384ccd6d-8c24-41ff-8973-1d6d719d239c": {"__data__": {"id_": "384ccd6d-8c24-41ff-8973-1d6d719d239c", "embedding": null, "metadata": {"page_label": "449", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "636067c3-5713-41d5-af7f-5d1e8387d11e", "node_type": "4", "metadata": {"page_label": "449", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "ed45c5ae3fe0e581e225f82340c0c3cfd0e83ab66abb13a3633077d9fb5198ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "997443d5-9301-47d6-abaa-5a3c9e232c14", "node_type": "1", "metadata": {"page_label": "448", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "24353c8a350ad86ab6ec65d4d8a202055ded3a8a06403789259d622b7d88641a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ab32100-951d-424d-ae93-a77fa055c623", "node_type": "1", "metadata": {}, "hash": "4a779665828ad3bddc6c89a1d93d6a3960cda17fed646a011efb071718d6f7e6", "class_name": "RelatedNodeInfo"}}, "hash": "58975f73f6d82708890f71a29cd2c61bb235c6f943ac7e825e6bbf665c907e7c", "text": "449 \n \n \n14. M\u00e9todos Num\u00e9ricos \n \nLos m\u00e9todos num\u00e9ricos son alternativas  para resolver problemas matem\u00e1ticos para los \ncuales no se puede, o es muy laborioso,  obtener la soluci\u00f3n con m\u00e9todos anal\u00edticos, o si \nlos m\u00e9todos computacionales disponibles no proporcionan la respuesta correcta.  \n Esta secci\u00f3n tiene como referencia a  [10] \n Resoluci\u00f3n de problemas en la ventana interactiva  \n \nC\u00e1lculo de una ra\u00edz real con la f\u00f3rmula de Newton:  \ni\ni1 i i\nif(x )x x , f '(x ) 0f '(x )+=\u2212\u2260     , i = 0, 1, 2, . . .   \nEjemplo.  Calcular una ra\u00edz real de la ecuacion:   f(x) = ex \u2013 \u03c0x = 0 \n \nLibrer\u00eda de matem\u00e1ticas simb\u00f3licas: Sympy  \n \n>>> from sympy import* \n>>> x=Symbol('x')  \n>>> f=exp(x)- pi*x \n>>> plot(f,(x,0,2))  \n \n           \n  \n >>> df=diff(f,x)                  Obtenci\u00f3n de f\u2019(x)  \n>>> r=0.5                   Valor inicial del gr\u00e1fico  \n>>> r=r-float(f.subs(x,r))/float(df.subs(x,r))          float   eval\u00faa la expresi\u00f3n \n>>> r \n0.552198029112459  \n>>> r=r-float(f.subs(x,r))/float(df.subs(x,r))  \n>>> r \n0.5538253947739784  \n>>> r=r-float(f.subs(x,r))/float(df.subs(x,r))  \n>>> r \n0.5538270366428404  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ab32100-951d-424d-ae93-a77fa055c623": {"__data__": {"id_": "1ab32100-951d-424d-ae93-a77fa055c623", "embedding": null, "metadata": {"page_label": "450", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "877144bd-c895-4a94-babb-690d9370e067", "node_type": "4", "metadata": {"page_label": "450", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "3330217acb1d67d5f352163dca54db04885558918bb1d1721107c12e20ba6c10", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "384ccd6d-8c24-41ff-8973-1d6d719d239c", "node_type": "1", "metadata": {"page_label": "449", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "58975f73f6d82708890f71a29cd2c61bb235c6f943ac7e825e6bbf665c907e7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abbadfa6-3ce9-476e-96f9-bf0b4fed421c", "node_type": "1", "metadata": {}, "hash": "d1c93fd36cba797af611dd6aef5a6e13645d1970d0a818640b285de7528626ad", "class_name": "RelatedNodeInfo"}}, "hash": "4a779665828ad3bddc6c89a1d93d6a3960cda17fed646a011efb071718d6f7e6", "text": "450 \n \n>>> r=r-float(f.subs(x,r))/float(df.subs(x,r))  \n>>> r \n0.5538270366445136  \n \n>>> r=r-float(f.subs(x,r))/float(df.subs(x,r))  \n>>> r \n0.5538270366445136  \n \n>>> float(f.subs(x,r))       Verificar si f(r) = 0  \n-1.5192266539886956e- 17 \n \nSi se comienza con  r = 1.5  se puede calcular  la otra ra\u00edz real : \n >>> r=1.5  \n. . . \n. . .  \n. . . \n>>> r=r-float(f.subs(x,r))/float(df.subs(x,r))  \n>>> r \n1.6385284199703636  \n \n>>> float(f.subs(x,r))       Verificar si f(r) = 0  \n4.591445985947165e -16 \n \nUso de la funci\u00f3n solve de Sympy para obtener las ra\u00edces de la ecuacion anterior:  \n >>> from sympy import* \n>>> x=Symbol('x')  \n>>> f=exp(x)- pi*x \n>>> r=solve(f)  \n>>> len(r)           La funci\u00f3n solve solo permiti\u00f3 calcular una ra\u00edz \n1 \n>>> r \n[-LambertW( -1/pi)]     Soluci\u00f3n expresada con constantes  \n>>> float(r[0])  \n0.5538270366445136      Soluci\u00f3n en formato decimal  \n>>> r[0].evalf(6)  \n0.553827       evalf   controla cuantos  d\u00edgitos \n   \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 984, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abbadfa6-3ce9-476e-96f9-bf0b4fed421c": {"__data__": {"id_": "abbadfa6-3ce9-476e-96f9-bf0b4fed421c", "embedding": null, "metadata": {"page_label": "451", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "254423bf-e349-49ac-87a7-aa7f8f0d3570", "node_type": "4", "metadata": {"page_label": "451", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "584d586cacb7763eeb29827d004cbbccc7d86fd03965b34094049b7af1808577", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ab32100-951d-424d-ae93-a77fa055c623", "node_type": "1", "metadata": {"page_label": "450", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "4a779665828ad3bddc6c89a1d93d6a3960cda17fed646a011efb071718d6f7e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d61f8d66-d003-4450-8f06-50fb59714f34", "node_type": "1", "metadata": {}, "hash": "53876bfc37c983b3eebe46802b1f7b12ab58179cff6191403ac1c562f17dd2ae", "class_name": "RelatedNodeInfo"}}, "hash": "d1c93fd36cba797af611dd6aef5a6e13645d1970d0a818640b285de7528626ad", "text": "451 \n \nInstrumentaci\u00f3n de m\u00e9todos num\u00e9ricos  \n \nEn esta secci\u00f3n se han instrumentado como referencia, algunos m\u00e9todos num\u00e9ricos \ncl\u00e1sicos . Tambi\u00e9n se inclu yen ejemplos de su utilizaci\u00f3n.  La formulaci\u00f3n matem\u00e1t ica para \ncada m\u00e9todo se la puede encontrar en la referencia bibliogr\u00e1fica [ 10]. \n \nLos m\u00e9todos m\u00e9todos num\u00e9ricos se los ha almacenado en una librer\u00eda con el nombre  \nmetodos   la cual  debe importarse para s u aplicaci\u00f3n como se indica en los ejemplos . Esta \nlibrer\u00eda puede extenderse incorporando nuevos m\u00e9todos y funciones.  \n \nLos m\u00e9todos num\u00e9ricos instrumentados inicialmente son:  \n M\u00e9todo de Gauss  \n Resoluci\u00f3n de un sistema de ecuaciones lineales   \n \nM\u00e9todo de Simps on \nIntegraci\u00f3n num\u00e9rica de una funci\u00f3n acotada de una variable en un intervalo \ndelimitado \n \nM\u00e9todo de Newton  \nC\u00e0lculo de ra\u00edces reales de un sistema de ecuaciones no lineales  \n \nM\u00e9todo de interpolaci\u00f3n de Lagrange  \n Obtencion y evaluaci\u00f3n del polinomio de inter polaci\u00f3n  dado un conjunto de puntos   \n  \nM\u00e9todo de Runge -Kutta  \n Resoluci\u00f3n de un sistema de ecuaciones diferenciales ordinarias de primer orden  \n con condiciones en el inicio . \n  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d61f8d66-d003-4450-8f06-50fb59714f34": {"__data__": {"id_": "d61f8d66-d003-4450-8f06-50fb59714f34", "embedding": null, "metadata": {"page_label": "452", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e422ef1-bff1-47ad-b600-a21e6eedebc1", "node_type": "4", "metadata": {"page_label": "452", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "010cc0bc25991c67bfb218e621f3533242cfd59dfbaad0201ff617f358723f03", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abbadfa6-3ce9-476e-96f9-bf0b4fed421c", "node_type": "1", "metadata": {"page_label": "451", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "d1c93fd36cba797af611dd6aef5a6e13645d1970d0a818640b285de7528626ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1935036-027c-46ad-b30e-37217fc9b8b2", "node_type": "1", "metadata": {}, "hash": "2090d1f975c1f978f9863c40453e98dda7daf8c6703bef0cb2a977d0f42d198a", "class_name": "RelatedNodeInfo"}}, "hash": "53876bfc37c983b3eebe46802b1f7b12ab58179cff6191403ac1c562f17dd2ae", "text": "452 \n \n  # Librer\u00eda de m\u00e9todos num\u00e9ricos: METODOS  \n \n# Soluci\u00f3n de un sistema de ecuacio nes lineales : Gauss \nfrom numpy import* \ndef gauss(a,b): \n    [n,m]=shape(a)  \n    if n!=m:  \n        return []  \n    c=zeros([n,n+1])  \n    a=array(a)              \n    for i in range(n):  \n        for j in range(n):  \n            c[i,j]=a[i,j]                  \n        c[i ,n]=b[i] \n    for e in range(n):      \n        p=e  \n        for i in range(e+1,n):    \n            if abs(c[i, e])>abs(c[p, e]): \n                p=i  \n        for  j in range(e,n+1):             \n            t=c[e, j] \n            c[e, j]=c[p,j] \n            c[p, j]=t \n        t=c[e, e] \n        if abs(t)<1e- 10:    \n            return [] \n        for  j in range(e,n+1):    \n            c[e,j]=c[e,j]/t             \n        for i in range(e+1,n):    \n            t=c[i, e] \n            for j in range(e,n+1):  \n                c[i ,j]=c[i,j]-t*c[e,j] \n    x=zeros([n,1])                      \n    x[n- 1]=c[n-1,n] \n    for i in range(n- 2,-1,-1):      \n        s=0       \n        for j in range(i+1,n):  \n            s=s+c[i, j]*x[j] \n        x[i]=c[i, n]-s \n    return x \n \n \n # Integraci\u00f3n num\u00e9rica: F\u00f3rmula de Simpson  \ndef simpson(f, a, b, m):  \n    h=(b- a)/m \n    s=0 \n    x=a \n    for i in range(1,m): \n        if i%2==1: \n            s=s+4*f(x+i*h)  \n        else: \n            s=s+2*f(x+i*h)  \n    s=h/3*(f(a)+s+f(b))  \n    return s \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1935036-027c-46ad-b30e-37217fc9b8b2": {"__data__": {"id_": "c1935036-027c-46ad-b30e-37217fc9b8b2", "embedding": null, "metadata": {"page_label": "453", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5591d6f2-9b51-4f6d-afcd-9b09ebaf6bbb", "node_type": "4", "metadata": {"page_label": "453", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "8ee9777415a29062939e0dba80401afe74f7e71ee1829a4f653025a96f1ac94b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d61f8d66-d003-4450-8f06-50fb59714f34", "node_type": "1", "metadata": {"page_label": "452", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "53876bfc37c983b3eebe46802b1f7b12ab58179cff6191403ac1c562f17dd2ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbae13e2-a1e3-4dcc-a8b1-c4a7ab97ef15", "node_type": "1", "metadata": {}, "hash": "14dd39dcfa0e71e990e180bd2cbc8b85312200daf80773ade26229c00c1e59b4", "class_name": "RelatedNodeInfo"}}, "hash": "2090d1f975c1f978f9863c40453e98dda7daf8c6703bef0cb2a977d0f42d198a", "text": "453 \n \n  # Soluci\u00f3n de un sistema de ecuaciones no lineales: Newton  \nimport numpy as np \nimport sympy as sp \ndef snewton(F, V, U):                \n    n=len(F)  \n    J=np.zeros([n,n],dtype=sp.Symbol) \n    T=np.copy(F)  \n    for i in range(n):                 \n        for  j in range(n):  \n            J[i][j]=sp.diff(F[i],V[j]) \n    for i in range(n):                 \n        for j in range(n):  \n            for k in range(n):  \n                J[i][j]=J[i][j].subs(V[k],float(U[k]))  \n    for i in range(n):                                                                  \n        for  j in range(n):  \n            T[i]=T[i].subs(V[j],float(U[j]))  \n    J=np.array(J,float)  \n    T=np.array(T,float)  \n    U=U- np.dot(np.linalg.inv(J),T)          \n    return U \n \n \n# Polinomio de Interpolaci\u00f3n: M\u00e9todo de Lagrange  \nfrom sympy import* \ndef lagrange(x,y,u=None):  \n    n=len(x)  \n    t=Symbol('t')  \n    p=0 \n    for i in range(n):  \n        L=1  \n        for  j in range(n):   \n            if j!=i:  \n                L=L*(t- x[j])/(x[i]- x[j]) \n        p=p+y[i]*L  \n        p=expand(p)  \n    if u==None:  \n        return p \n    elif type(u)==list:  \n        v=[]  \n        for  i in range(len(u)):  \n            v=v+[p.subs(t,u[i])]  \n        return v \n    else:  \n        return p.subs(t,u)  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbae13e2-a1e3-4dcc-a8b1-c4a7ab97ef15": {"__data__": {"id_": "dbae13e2-a1e3-4dcc-a8b1-c4a7ab97ef15", "embedding": null, "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae26a09d-ae67-419e-a483-04549d9f2ddf", "node_type": "4", "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2ae8595a0acd6a10c5c0807c58baa7a2a5edba205441bf3a1985c2f4d2392872", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1935036-027c-46ad-b30e-37217fc9b8b2", "node_type": "1", "metadata": {"page_label": "453", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2090d1f975c1f978f9863c40453e98dda7daf8c6703bef0cb2a977d0f42d198a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d09e671b-01ea-467f-8344-ef5e8eb0c577", "node_type": "1", "metadata": {}, "hash": "306ff88e7db4f387dcdb6bb08cf7a5fe7035b2b3f868e312584c6d278bb55e63", "class_name": "RelatedNodeInfo"}}, "hash": "14dd39dcfa0e71e990e180bd2cbc8b85312200daf80773ade26229c00c1e59b4", "text": "454 \n \n# Soluci\u00f3n de sistemas de  E.D.O: Runge- Kutta de cuarto orden   \nimport sympy as sp \nimport numpy as np \ndef rk4n(F,V,U,h,m):  \n    nF=len(F)  \n    nV=len(V)  \n    K1=np.zeros([nF],dtype=sp.Symbol) \n    K2=np.zeros([nF],dtype=sp.Symbol) \n    K3=np.zeros([nF],dtype=sp.Symbol) \n    K4=np.zeros([nF],dtype=sp.Symbol) \n    rs=np.zeros([m,nV],dtype=float)  \n    for p in range(m):  \n        for i in range(nF):  \n            K1[i]=F[i]  \n            K2[i]=F[i]  \n            K3[i]=F[i]  \n            K4[i]=F[i]  \n        for i in range(nF):  \n            for j in range(nV):  \n                K1[i]=K1[i].subs(V[j],float(U[j]))  \n            K1[i]=h*K1[i]  \n        for i in range(nF):  \n            K2[i]=K2[i].subs(V[0],float(U[0])+h/2)  \n            for j in range(1,nV):  \n                K2[i]=K2[i].subs(V[j],float(U[j])+K1[j- 1]/2) \n            K2[i]=h*K2[i]  \n        for  i in range(nF):  \n            K3[i]=K3[i].subs(V[0],float(U[0])+h/2)  \n            for j in range(1,nV):  \n                K3[i]=K3[i].subs(V[j],float(U[j])+K2[j- 1]/2) \n            K3[i]=h*K3[i]  \n        for  i in range(nF):  \n            K4[i]=K4[i].subs(V[0],float(U[0])+h)  \n            for j in range(1,nV):  \n                K4[i]=K4[i].subs(V[j],", "start_char_idx": 0, "end_char_idx": 1239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d09e671b-01ea-467f-8344-ef5e8eb0c577": {"__data__": {"id_": "d09e671b-01ea-467f-8344-ef5e8eb0c577", "embedding": null, "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae26a09d-ae67-419e-a483-04549d9f2ddf", "node_type": "4", "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "2ae8595a0acd6a10c5c0807c58baa7a2a5edba205441bf3a1985c2f4d2392872", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbae13e2-a1e3-4dcc-a8b1-c4a7ab97ef15", "node_type": "1", "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "14dd39dcfa0e71e990e180bd2cbc8b85312200daf80773ade26229c00c1e59b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b8cdd61-da97-45f2-83f6-6957b02b6a37", "node_type": "1", "metadata": {}, "hash": "422087d22f00aaa16aaeb7b56df75c1e44fa854df6582cb140c47b185084b50b", "class_name": "RelatedNodeInfo"}}, "hash": "306ff88e7db4f387dcdb6bb08cf7a5fe7035b2b3f868e312584c6d278bb55e63", "text": "nV):  \n                K4[i]=K4[i].subs(V[j],float(U[j])+K3[j- 1]) \n            K4[i]=h*K4[i]  \n        U[0]=U[0]+h  \n        rs[p,0]=U[0]  \n        for  i in range(nF):  \n            U[i+1]=U[i+1]+1/6*(K1[i]+2*K2[i]+2*K3[i]+K4[i])  \n            rs[p,i+1]=U[i+1]  \n    return rs \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 1194, "end_char_idx": 1499, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b8cdd61-da97-45f2-83f6-6957b02b6a37": {"__data__": {"id_": "1b8cdd61-da97-45f2-83f6-6957b02b6a37", "embedding": null, "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc368d80-f8fa-4849-a5b1-484f83069f88", "node_type": "4", "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6d3c29b7624b6327fb1a882d7d0daab04bbdb4422c60fc28cff0e57ce944cbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d09e671b-01ea-467f-8344-ef5e8eb0c577", "node_type": "1", "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "306ff88e7db4f387dcdb6bb08cf7a5fe7035b2b3f868e312584c6d278bb55e63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de7b7719-b1a2-4b56-b7bd-1193303054de", "node_type": "1", "metadata": {}, "hash": "1eeb1588fc32a2f3e5f47d5ccd06b4e8457c024b6302f01408e5db1f5729f7dd", "class_name": "RelatedNodeInfo"}}, "hash": "422087d22f00aaa16aaeb7b56df75c1e44fa854df6582cb140c47b185084b50b", "text": "455 \n \nAplicaci\u00f3n de los m \u00e9todos numericos de la librer\u00eda METODOS  \n \n \nPara aplicar los m\u00e9todos se debe carga r la libreria  con los m\u00e9todos num \u00e9ricos  \n \n \nM\u00e9todo de Gauss  \n \nResolver el sistema  \n \n 843 2\n2 4 1X 3\n574 4\uf8ee \uf8f9 \uf8ee\uf8f9\n\uf8ef \uf8fa \uf8ef\uf8fa=\uf8ef \uf8fa \uf8ef\uf8fa\n\uf8ef \uf8fa \uf8ef\uf8fa\uf8f0 \uf8fb \uf8f0\uf8fb \n \n>>> from metodos import* \n>>> a=[[8,4,3],[2, 4,1],[5,7,4]]  \n>>> b=[2,3,4]  \n>>> x=gauss (a,b) \n>>> x \n[0.02380952380952378, 0.8809523809523809, - 0.5714285714285714]  \n \n \nM\u00e9todo de Simpson \n \nCalcular num\u00e9ricamente el valor de la integral definida debajo del polinomio en el ejemplo \nanterior . Use la f\u00f3rmula de Si mpson con 8 franjas.", "start_char_idx": 0, "end_char_idx": 600, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de7b7719-b1a2-4b56-b7bd-1193303054de": {"__data__": {"id_": "de7b7719-b1a2-4b56-b7bd-1193303054de", "embedding": null, "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc368d80-f8fa-4849-a5b1-484f83069f88", "node_type": "4", "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "b6d3c29b7624b6327fb1a882d7d0daab04bbdb4422c60fc28cff0e57ce944cbf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b8cdd61-da97-45f2-83f6-6957b02b6a37", "node_type": "1", "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "422087d22f00aaa16aaeb7b56df75c1e44fa854df6582cb140c47b185084b50b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5de6b01-87b8-4246-9082-912dcb9a1619", "node_type": "1", "metadata": {}, "hash": "a2d65dbd2ff1f0a85b36a9117006e6dbe0592845bd7f6d7e0a2613bc5f431d65", "class_name": "RelatedNodeInfo"}}, "hash": "1eeb1588fc32a2f3e5f47d5ccd06b4e8457c024b6302f01408e5db1f5729f7dd", "text": "Use la f\u00f3rmula de Si mpson con 8 franjas.  \n \n232\n01 5 25s ( t t t 7)dt63 6= \u2212+\u2212+\u222b \n >>> from metodos import* \n>>> def f(t): return -t**3/6 + 5*t**2/3 -  25*t/6 + 7  \n>>> s=simpson(f,0,2,8)          \n>>> s \n9.444444444444443  \n \n \nM\u00e9todo de Newton  \n \nGraficar y e ncontrar una ra\u00edz real del sistema no lineal \n \nxy\n22f(x,y) xe y 3 0\ng(x,y) (x 2) (y 1) xy 3 0+= +\u2212=\n= \u2212 + \u2212 + \u2212= \n \n>>> from metodos import* \n>>> import pylab as pl \n>>> xr=pl.arange(0,4,0.01)  \n>>> yr=pl.arange(- 2,4,0.01)  \n>>> [x, y]=pl.meshgrid(xr,yr)  \n>>> f=x*pl.exp(x+y)+y- 3 \n>>> g=(x-2)**2+(y- 1)**2+x*y- 3 \nPython Programaci\u00f3n", "start_char_idx": 559, "end_char_idx": 1161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5de6b01-87b8-4246-9082-912dcb9a1619": {"__data__": {"id_": "e5de6b01-87b8-4246-9082-912dcb9a1619", "embedding": null, "metadata": {"page_label": "456", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5ce9213d-8254-4bdd-9857-97a5d259ec91", "node_type": "4", "metadata": {"page_label": "456", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e9ccc86a22b4edead2bcc63b65df11a0232023a4d390c92b7744127f77e7745d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de7b7719-b1a2-4b56-b7bd-1193303054de", "node_type": "1", "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "1eeb1588fc32a2f3e5f47d5ccd06b4e8457c024b6302f01408e5db1f5729f7dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae8e831f-05b6-4085-87de-887d489223f7", "node_type": "1", "metadata": {}, "hash": "c5bf1431603bbe715c0c1d7ce84cc69409f9b2553f10a03af23dbbb7a1ca7654", "class_name": "RelatedNodeInfo"}}, "hash": "a2d65dbd2ff1f0a85b36a9117006e6dbe0592845bd7f6d7e0a2613bc5f431d65", "text": "456 \n \n>>> pl.contour(x, y, f,[0])  \n>>> pl.contour(x, y, g,[0])  \n>>> pl.grid(True)  \n>>> pl.show()  \n \n         \n  \n \n \n>>> import sympy as sp \n>>> [x,y]=sp.symbols('x,y')  \n>>> f=x*sp.exp(x+y)+y- 3     \n>>> g=(x- 2)**2+(y- 1)**2+x*y- 3 \n>>> F=[f,g]  \n>>> V=[x,y] \n>>> U=[0.5,1]  \n>>> U=snewton(F,V ,U);print(U)  \n [0.405451836483295 1.12180734593318] \n>>> U=snewton(F,V ,U);print(U)  \n[0.409618877363502 1.11619120947847] \n>>> U=snewton(F,V ,U);print(U)  \n [0.409627787030011 1.11618013799184] \n>>> U=snewton(F,V ,U);print(U)  \n [0.409627787064807 1.11618013794281] \n>>> U=snewton(F,V ,U);print(U) \n [0.409627787064807 1.11618013794281] \n \nPara verificar que son ra\u00edces reales de las ecuaciones debe n evaluarse f, g \n \n>>> f.subs(x,U[0]).subs(y,U[1])  \n0 \n>>> g.subs(x,U[0]).subs(y,U[1])  \n3.62557206479153e- 16 \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 840, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae8e831f-05b6-4085-87de-887d489223f7": {"__data__": {"id_": "ae8e831f-05b6-4085-87de-887d489223f7", "embedding": null, "metadata": {"page_label": "457", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6949fd72-750a-446e-9071-29ef7140a8da", "node_type": "4", "metadata": {"page_label": "457", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e119d0d550bdae5516cc49d57da915211067745576c60ae89a465ba9e5da4096", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5de6b01-87b8-4246-9082-912dcb9a1619", "node_type": "1", "metadata": {"page_label": "456", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "a2d65dbd2ff1f0a85b36a9117006e6dbe0592845bd7f6d7e0a2613bc5f431d65", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab2852e3-f927-4ada-b024-baa9b3fd0356", "node_type": "1", "metadata": {}, "hash": "79a4cf2e86092e7fd219788d18cc6d9afe71317939090d4f1e30d3bf8671cf23", "class_name": "RelatedNodeInfo"}}, "hash": "c5bf1431603bbe715c0c1d7ce84cc69409f9b2553f10a03af23dbbb7a1ca7654", "text": "457 \n \nM\u00e9todo de Lagrange  \n \nColocar un polinomio de int erpolaci\u00f3n sobre los puntos  \n  (x,f(x)): (2, 4),(3, 5),(5, 7),(6, 6) \n \n>>> import pylab as pl* \n>>> from metodos import* \n>>> x=[2,3,5,6]  \n>>> y=[4,5,7,6]  \n>>> r=lagrange(x,y,4)     Evaluaci\u00f3n del polinomio con x=4  \n>>> print(r)  \n6.33333333333333  \n>>> p=lagrange(x,y ) \n>>> print(p)  \n-t**3/6 + 5*t**2/3 -  25*t/6 + 7    Polinomio de interpolaci\u00f3n \n>>> pl.plot(x,y,'o')  \n>>> t=pl.arange(2,6.1,0.1)  \n>>> r=lagrange(x,y,list(t))   \n>>> pl.plot(t,r )       \n>>> pl.grid(True)  \n>>> pl.show()       \n \n       \n  \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab2852e3-f927-4ada-b024-baa9b3fd0356": {"__data__": {"id_": "ab2852e3-f927-4ada-b024-baa9b3fd0356", "embedding": null, "metadata": {"page_label": "458", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f03d70a7-bd9e-4e51-9eb3-33525aa855b6", "node_type": "4", "metadata": {"page_label": "458", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "9446c418ab1061251ad4c08bef4b27b0b4174b6722c7582b2f90ab73c63f9928", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae8e831f-05b6-4085-87de-887d489223f7", "node_type": "1", "metadata": {"page_label": "457", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "c5bf1431603bbe715c0c1d7ce84cc69409f9b2553f10a03af23dbbb7a1ca7654", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "052df950-c537-498a-91a5-f5fc9dd653e5", "node_type": "1", "metadata": {}, "hash": "66cbb20dee2ef0a3e21611d937096a46dc88bb2a80da03004a04fff7ba8d0027", "class_name": "RelatedNodeInfo"}}, "hash": "79a4cf2e86092e7fd219788d18cc6d9afe71317939090d4f1e30d3bf8671cf23", "text": "458 \n \nM\u00e9todo de Runge -Kutta  \n \nObtener  y graficar  20 puntos de la soluci\u00f3n del siguiente sistema de ecuaciones \ndiferenciales.  Use  h = 0.1  \n \n y\u2019 \u2013 ex \u2013 y \u2013 z + 1 = 0,     y(0) = 1  \n z\u2019 \u2013 y \u2013 cos(x) + z = 0,   z(0) = 2  \n \n \nSoluci\u00f3n  \n y\u2019 = f(x, y, z) = ex + y + z \u2013  1,  x0 = 0, y 0 = 1  \n z\u2019 = g(x, y, z) = y + cos(x) \u2013  z,    x0 = 0, z 0 = 2 \n \n>>> import sympy as sp \n>>> import numpy as np \n>>> import pylab as pl \n>>> from metodos import* \n>>> x,y,z=sp.symbols('x,y,z')  \n>>> f=sp.exp(x)+y+z- 1      \n>>> g=y+sp.cos(x)- z     \n>>> rs=rk4n([f,g],[x,y,z],[0,1,2],0.1,20)     \n>>> np.set_printoptions(precision=6) \n>>> print(rs)  \n[[  0.1        1.321371   2.015033]    \n [  0.2        1.691314   2.060539]  \n [  0.3        2.119421   2.137756]  \n [  0.4        2.616595   2.248794]  \n [  0.5        3.195301   2.396707]  \n [  0.6        3.8 69843   2.585564]  \n [  0.7        4.656686   2.820557]  \n [  0.8        5.574832   3.108124]  \n   ......etc.......  \n>>> pl.plot(rs[:,0],rs[:,1:3],'o')      \n>>> pl.grid(True)  \n>>> pl.show()  \n \n \n \n \n \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1079, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "052df950-c537-498a-91a5-f5fc9dd653e5": {"__data__": {"id_": "052df950-c537-498a-91a5-f5fc9dd653e5", "embedding": null, "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "709c1f67-ab5c-4efe-8e0c-63b4bc080a7a", "node_type": "4", "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "096c2742105a239450a741f14455b656b0ddc6f4024b63e77ca265af6de9a96c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab2852e3-f927-4ada-b024-baa9b3fd0356", "node_type": "1", "metadata": {"page_label": "458", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "79a4cf2e86092e7fd219788d18cc6d9afe71317939090d4f1e30d3bf8671cf23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "747fc62f-6934-476b-a7bc-9d2c488e8322", "node_type": "1", "metadata": {}, "hash": "09615461d36e657f848249da0cbdab448cb4e6368a17cea188f65b5c6c92eb93", "class_name": "RelatedNodeInfo"}}, "hash": "66cbb20dee2ef0a3e21611d937096a46dc88bb2a80da03004a04fff7ba8d0027", "text": "459 \n \n14.1 Problemas de aplicaci\u00f3n de los m\u00e9todos num\u00e9ricos  \n \n1.  Se necesi ta construir un recipiente rectangular, sin tapa, de un litro de capacidad. Para \nconstruirlo se debe usar una l\u00e1mina rectangular de 32 cm de largo y 24 cm de ancho. El \nprocedimiento ser\u00e1 recortar un cuadrado id\u00e9ntico en cada una de las cuatro esquinas y \ndoblar los bordes de la l\u00e1mina para formar el recipiente.  Determine la medida del lado del \ncuadrado que se debe recortar en cada esquina para que el recipiente tenga la capacidad \nrequerida.  Formule el modelo matem\u00e1tico y resu\u00e9lvalo con el m\u00e9todo de la Bosecci\u00f3n.  \n \n2. Un comerciante compra tres productos: A, B, C. Estos productos se venden por peso en \nKg. pero en las facturas \u00fanicamente consta el total que debe pagar. El valor incluye el impuesto a las ventas y supondremos, por simplicidad que es 10%. El comer ciante desea \nconocer el precio unitario de cada art\u00edculo, para lo cual dispone de tres facturas con los siguientes datos:  \n Factura   Kg. de A   Kg. de B   Kg. de C   Valor pagado \n     1          4                 2       5         $19.80  \n     2          2      5      8         $30.03  \n     3               2                4       3         $17.82  \n \nFormule el modelo matem\u00e1tico para encontrar la soluci\u00f3n y obt\u00e9ngala mediante el m\u00e9todo \nde Gauss -Jordan \n \n3. Los siguientes datos pertenecen a la curva de Lorentz, la cu al relaciona el porcentaje de \ningreso econ\u00f3mico global de la poblaci\u00f3n en funci\u00f3n del porcentaje de la poblaci\u00f3n:  \n  % de poblaci\u00f3n     % de ingreso global  \n  25   10 \n  50   25 \n  75   70 \n           100             100  \n \nEjemplo .", "start_char_idx": 0, "end_char_idx": 1627, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "747fc62f-6934-476b-a7bc-9d2c488e8322": {"__data__": {"id_": "747fc62f-6934-476b-a7bc-9d2c488e8322", "embedding": null, "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "709c1f67-ab5c-4efe-8e0c-63b4bc080a7a", "node_type": "4", "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "096c2742105a239450a741f14455b656b0ddc6f4024b63e77ca265af6de9a96c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "052df950-c537-498a-91a5-f5fc9dd653e5", "node_type": "1", "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "66cbb20dee2ef0a3e21611d937096a46dc88bb2a80da03004a04fff7ba8d0027", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6f7c348-f061-4dc2-8e1f-7a18b1236ca1", "node_type": "1", "metadata": {}, "hash": "6e23b0970e6da0b2a77ad664d4689611c3ed014ee06ec1a3c158fcc4322e6d33", "class_name": "RelatedNodeInfo"}}, "hash": "09615461d36e657f848249da0cbdab448cb4e6368a17cea188f65b5c6c92eb93", "text": "El 25% de la poblaci\u00f3n tiene el  10% del ingreso econ\u00f3mico global.  \n \nUse el m\u00e9todo de Lagrange para obtener y graficar el polinomio de interpolacion que es el \nmodelo para representar los datos.  \n \n4. En el techado de las casas se utilizan planchas corrugadas con perfil ondulado. Cada \nonda t iene la forma f(x) = sen(x), con un periodo de 2\u03c0  pulgadas  \n \nEl perfil de la plancha tiene 8 ondas y la longitud  \n   de cada onda se la puede calcular con \nla siguiente integral:  \n  \n \nUse el m\u00e9todo de Simpson con m = 4, 6, 8, 10 para calcular  \n . Estime el error en el \u00faltimo \nresultado y con \u00e9l, encuentre la longitud del perfil de la plancha.  \n \n5. Obtenga y grafique 10  puntos de la soluci\u00f3n de la siguiente ecuaci\u00f3n diferencial no \nlineal utilizando el m\u00e9todo de Runge- Kutta. \n \n y\u2019- 2x + 2y2  + 3 = 0,  y(0)  = 1,  0 \u2264 x \u2264 1 \nPython Programaci\u00f3n", "start_char_idx": 1628, "end_char_idx": 2485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6f7c348-f061-4dc2-8e1f-7a18b1236ca1": {"__data__": {"id_": "a6f7c348-f061-4dc2-8e1f-7a18b1236ca1", "embedding": null, "metadata": {"page_label": "460", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "208035d6-a30e-45af-a20e-286bd10c9a7b", "node_type": "4", "metadata": {"page_label": "460", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "e0da9bb6a259055870a53c9406498d62ab8f7b9d3087dbaf9bb0c6808105ef4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "747fc62f-6934-476b-a7bc-9d2c488e8322", "node_type": "1", "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}, "hash": "09615461d36e657f848249da0cbdab448cb4e6368a17cea188f65b5c6c92eb93", "class_name": "RelatedNodeInfo"}}, "hash": "6e23b0970e6da0b2a77ad664d4689611c3ed014ee06ec1a3c158fcc4322e6d33", "text": "460 \n \n15 Bibliograf\u00eda  \n \n[1]   Van Rossum, G., Python 3.4.1 Documentation , Shell  de Python , 2014  \n \n[2]   Dowley A., Aprenda a pensar como un programador con Python , 2002 \n [3]   Bahit, E., Python para principiantes , 2012  \n \n[4]   Gonz\u00e1les, R., Python para todos , 2012 \n \n[5]   Marzal, A., Introducci\u00f3n a la programaci\u00f3n con Python, 2003  \n [6]   Rougier, N.,  Matplotlib tutorial , 2013 \n \n[7]   Johansson, J., Sympy \u2013 C\u00e1lculo simb\u00f3lico en Python , 2014 \n \n[8]   Wentworth, P., How to think like a computer scientist , 2011  \n \n[9]   Rodr\u00edguez, L., M atlab  Programaci\u00f3n , 2013  \n \n[10] Rodr\u00edguez, L., An\u00e1lisis Num\u00e9rico B\u00e1sico , 2012 \n \n \nTodas las referencias y otras consultadas pero que no se han listado, fueron tomadas de la \nred internet en donde est\u00e1n disponibles bajo licencias que permiten libre acceso para uso \nno comercial de las mismas. Estas licencias est\u00e1n rotuladas como:  \n Creative Commons Atribuci\u00f3n No Comercial  \nGNU Free Documentation License  \n \nMuchos de los ejemplos y ejercicios propuestos en este documento fueron tomados y \nadaptados  del libro digital Matlab Programaci\u00f3n  del mismo autor de esta obra.  \nPython Programaci\u00f3n", "start_char_idx": 0, "end_char_idx": 1164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"249bc1fa-6aaa-4df4-ae30-6b57ad2d3bf0": {"node_ids": ["a371ccfb-bce3-4fe4-bd8f-1b84a0886644"], "metadata": {"page_label": "1", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e49b6579-f242-4d43-a91f-6833d57c0596": {"node_ids": ["e6ae014a-fdf3-4343-ad59-0646c4618e75"], "metadata": {"page_label": "2", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "70998970-b012-4918-93f0-739e09aedce4": {"node_ids": ["6c9ab438-67fb-4970-944a-3e6dc8bb6dbb"], "metadata": {"page_label": "3", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2353b39b-b71f-4440-affb-75a7f4fb18fe": {"node_ids": ["08528392-8502-4732-a81f-b752dbd169b6"], "metadata": {"page_label": "4", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "57f2a052-ce26-4328-a825-5bc57c1d9457": {"node_ids": ["7680d240-f925-4e59-a969-d8dc21f715f8"], "metadata": {"page_label": "5", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7a9267e2-4535-433b-bf40-dbbfda349226": {"node_ids": ["f7e67c7e-c9ad-4513-8ca9-ea8c8200ba73"], "metadata": {"page_label": "6", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c06eb39b-9124-44b3-a092-9cf2cece3f65": {"node_ids": ["20bdb004-ca17-4159-b1f8-6e86f0f6f9c7"], "metadata": {"page_label": "7", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "78ba9af6-87ff-47cc-8f07-6c1f0aee27a8": {"node_ids": ["cd20942b-15ce-43ed-81bb-c03b9858d65b"], "metadata": {"page_label": "8", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dd0e1ba5-a04c-4ca4-9cc5-b0a5ad73ea92": {"node_ids": ["d8b0c15b-50da-4109-9dd7-e79bfebfec81", "7163f738-5ac8-4503-8748-c41585752257"], "metadata": {"page_label": "9", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9cc5eed2-9d6a-4092-a4b0-0579d9174411": {"node_ids": ["984b5eb4-22aa-4de8-9363-01f49a56ba9e"], "metadata": {"page_label": "10", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "32517139-fb6c-4356-a59d-e043cf8c9c61": {"node_ids": ["391f965f-9bcc-404e-9190-8cd7f15a5486", "b21cb30b-c1e9-46b0-87f4-62dfc4a9b4e4", "608b9e31-cbcf-4ef2-af5f-a4f5e3ddde54"], "metadata": {"page_label": "11", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "718671f4-a146-4a4f-a8a2-008f0a59fa3f": {"node_ids": ["8263f76c-595f-4423-8eab-747f3d9431c8"], "metadata": {"page_label": "12", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "65bdfa2a-1506-4c0f-b35e-9b192ec171e2": {"node_ids": ["a26621de-6fee-4276-86d8-fc5e8db3c5b5", "90c3c137-69e0-46a7-977d-3dc928b35c16"], "metadata": {"page_label": "13", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dead090f-908b-4f6a-9470-2c78a4669714": {"node_ids": ["41fc8df7-d6c4-4fa2-90d5-0487f4e15064", "7a87e76a-80d7-43d9-97fe-8b832c62d0e3"], "metadata": {"page_label": "14", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4b61ab5d-f70c-4e05-be5c-472fb7153bfe": {"node_ids": ["62e60ac2-a470-4347-83fa-7f03b42db0b0"], "metadata": {"page_label": "15", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c223f765-ac56-48ca-896a-2a6f14088fc3": {"node_ids": ["bd49dc4f-62b6-4407-81b4-a60c304d2ce6", "40c3330f-e469-4ff0-989e-51c33a9b93ba"], "metadata": {"page_label": "16", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "01547349-0911-4809-bf54-8ba1be02837c": {"node_ids": ["a88fadce-70c0-4b85-8380-f4d06a861a54", "5639e67b-a4c7-426f-86a7-e17bd9220de0"], "metadata": {"page_label": "17", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "46639f04-5bd3-4ddd-8597-1a14b727eb83": {"node_ids": ["0950de56-f656-4693-9f21-89b2e8051ce6", "30f56776-8014-4aa1-8d80-d1175727c96e"], "metadata": {"page_label": "18", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3076b1b4-5f45-4f77-b68d-555b0a96c860": {"node_ids": ["098ff4f5-d78e-4fd7-9f7a-37140610f704", "1712538f-ce50-49fe-8d73-1b33c9f9f38d"], "metadata": {"page_label": "19", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6ad87a41-6a0a-45d3-b171-e275290e21de": {"node_ids": ["d6bdb469-7d38-482c-8fb8-64dcac3053c3", "ba9498b3-d109-4958-ac38-5a7f5820ba9a"], "metadata": {"page_label": "20", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5cf21e22-c6c3-4123-a49f-8eef649c14b9": {"node_ids": ["67470121-3f76-40cb-ad2b-bf699e718362", "d6bbb8ae-6a31-44b6-a4c8-79bf669f9809"], "metadata": {"page_label": "21", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b31be195-6839-46c4-b971-676834a63e91": {"node_ids": ["c9322244-ea7b-4206-83b2-d66ad492807e", "f67ba6cf-2694-48a4-bbdc-42841d7a1b2d"], "metadata": {"page_label": "22", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "31822631-af2b-4855-b496-4dba03c30fdf": {"node_ids": ["ec901106-c81c-4947-81bb-a9f571db307f", "f04b2f88-3afb-4976-915f-f72cbd3be260"], "metadata": {"page_label": "23", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "863ec4d0-7504-4a76-8c6f-e493cfb3ac91": {"node_ids": ["38b821b8-6291-4bfe-a40d-ad5023c4debe", "0a2de2ec-e152-455f-9db7-78568a289c8a"], "metadata": {"page_label": "24", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "68c024c2-89d3-4ba2-a1d5-5ab73d6f56d7": {"node_ids": ["3d687451-6fac-4e70-a121-2473a0f9504c", "8b5b8365-b0eb-4956-b81a-c8dd2c02b4a7"], "metadata": {"page_label": "25", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "061fb6c0-e230-4f10-a079-dd9f38d91e94": {"node_ids": ["ab312aed-161d-4281-9b08-83ea18b4c56d", "b36e06c8-2d3e-4aad-b658-40f1d686c90e"], "metadata": {"page_label": "26", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6f378abf-9364-4e20-8333-b5d4c33e40dd": {"node_ids": ["0784f353-e5e3-4ec3-a1a7-63a5ac4d6a13", "a032d935-4f7f-48ca-9d7e-94fb142cd18c"], "metadata": {"page_label": "27", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1e0242f5-0246-4f50-a51b-eecac64d6475": {"node_ids": ["1737f908-7283-44c2-94df-a96aa8da6c93", "52407be5-4241-4fd4-8873-3c10a76a4044"], "metadata": {"page_label": "28", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "848c2713-f74a-4f6b-857c-1f0466878d1d": {"node_ids": ["b40289eb-f2a5-49cc-a207-800e4cb39316"], "metadata": {"page_label": "29", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "770f3b12-6bdb-487d-b6de-ab57a864801e": {"node_ids": ["63c6ac7e-a92b-47de-8283-e1b31dde0443", "9891cfc4-0947-4070-83ac-7c5101be6fab"], "metadata": {"page_label": "30", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f4a6be40-7316-4ae0-90c8-8bfd97e25575": {"node_ids": ["953b4019-d958-4b0b-a7f7-691d82a814c9", "fb411765-c702-42aa-baa3-fbe24a5cae6b"], "metadata": {"page_label": "31", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d0f5f258-4daa-402d-808e-a6076757d436": {"node_ids": ["ca999fdb-df7d-4f2c-be6b-fb00d29defe4", "3036359f-f0a8-4e30-b178-aa3eb01e52fa"], "metadata": {"page_label": "32", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a865b743-c437-4302-a4ac-ea193afb06ea": {"node_ids": ["2684e0fa-d958-4274-8ad7-d00802129ed1", "cde80e36-998d-4e43-9b41-c46df8b8fbf7"], "metadata": {"page_label": "33", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5aaf2b03-1e5c-4525-9db3-2311e97b772c": {"node_ids": ["73935dca-34d4-40b9-acc9-d11f605b5c9d"], "metadata": {"page_label": "34", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6268731d-d74b-4233-ab62-d0db7c469d4e": {"node_ids": ["6f08fe69-a109-45a5-b910-b8cbf8bb0fcf", "4ac466ab-5877-480b-a4da-11d4f795debd"], "metadata": {"page_label": "35", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f97777fc-a670-4969-9d72-b590ff4052ca": {"node_ids": ["cee50c1b-0235-4dfe-9a42-eadfffd3c5da", "5f81de28-471f-46c9-b479-fc513f3e9a45"], "metadata": {"page_label": "36", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1a7e9773-188a-4cc7-9a64-32b84be05cb1": {"node_ids": ["73352faf-ffb9-48a4-b507-c046cdd830e5", "e3e7c942-75b1-48fe-84ec-0659b33dea02"], "metadata": {"page_label": "37", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f40a78ad-3a2d-4fb9-9276-5aa9c023049a": {"node_ids": ["5808ffbd-283d-468a-8f85-0529afc6922e", "7ef86399-05d9-4157-b98e-58584e68ea9b"], "metadata": {"page_label": "38", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "229173d4-f97f-4296-9708-3c4658ffbf3b": {"node_ids": ["4b1a99a4-c226-4545-8bc4-c0caf1cd0c73", "4fce912f-8ee9-41f3-99d5-2761c546d407"], "metadata": {"page_label": "39", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "02dac68d-d9b8-4525-a531-160164988343": {"node_ids": ["f59419b5-83d9-453a-bb8a-b9b5222f85e6", "44eb7431-190e-4133-bc7f-aa11ee2c4aa1"], "metadata": {"page_label": "40", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ea02d236-2234-4cf3-9725-e0db095d2cca": {"node_ids": ["6aa0cd98-d10f-42f8-b587-edd35a3de6d8", "2c4663ea-2915-4f5b-ae2a-19511b968d54"], "metadata": {"page_label": "41", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "28a7e3e9-5fcc-4c9e-8608-0b03462feb4e": {"node_ids": ["d54a0683-66b7-4204-9545-582b85b163de", "b64946d9-79da-4658-87aa-2360b2261617"], "metadata": {"page_label": "42", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2ebb8c64-69a6-414a-ac2b-9de5ee6216d0": {"node_ids": ["53896a75-ae5a-407f-a623-a6639e996a01", "fe3d5f90-37c3-45d3-a29c-ba875041d3d3"], "metadata": {"page_label": "43", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "acf62b8c-b1d6-445c-8477-108895a8f54e": {"node_ids": ["840c76ed-bd44-40f2-a445-ec9fbbe04b37", "7ddd6a45-ab08-4e7d-9695-baf25cf9aa48"], "metadata": {"page_label": "44", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "48a87e18-9f9b-45f7-a30b-c9b49a1d4b75": {"node_ids": ["689cf701-4d75-460d-b9c2-c7602648a0de", "7b876c16-4e6b-45bb-a8b2-28875d87971b"], "metadata": {"page_label": "45", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1407d068-74b9-40a5-b390-57954296171e": {"node_ids": ["b8375be9-2629-4285-881a-52b703e563fd", "9dce00de-fd30-4864-8821-36c9a807a72f"], "metadata": {"page_label": "46", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "eab8ecd5-86f5-4b06-83f5-8581caea74df": {"node_ids": ["a324215b-9106-4faa-a087-10f05202b32a", "00841731-78fc-4f28-90ea-f1661c638196"], "metadata": {"page_label": "47", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "24448867-f142-4939-8223-7364eea72167": {"node_ids": ["9c3b6649-8c8a-473e-8461-fa0e0ef91556", "f4be5360-7e42-4c78-9cbf-e0cbf9d5aca0"], "metadata": {"page_label": "48", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fd427dc3-06d6-4435-afb1-63fe67314d10": {"node_ids": ["335e69a3-bb21-4fde-a271-9791bd5aedb8", "8b2bb40d-e2cd-4670-8ee2-57eeecb3816a", "9ed539c2-41f1-45ae-a82b-7a681aa3e9b8"], "metadata": {"page_label": "49", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9374bc17-7120-48d2-86ad-12ad222a90bd": {"node_ids": ["5fb3efcb-5dd4-42bf-a21a-48fcb1ba22b0", "eb5e5fd0-2e36-44c8-897b-c221acf159df"], "metadata": {"page_label": "50", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "86dbca87-087a-418c-af5c-9ade9a2d466b": {"node_ids": ["59d0bd48-e21a-4a9f-a023-6175775e24fb", "b3c6e14a-d8dc-4202-956e-0dacfdaf973f"], "metadata": {"page_label": "51", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "87362424-3d2a-46ee-b6b0-531389473b41": {"node_ids": ["ccc14088-ff9f-4329-a8dd-e8599d5ad7a0", "3a784d1c-43d5-4142-b9d3-762ea4c370db"], "metadata": {"page_label": "52", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a659e33f-2e37-4efe-8753-4764dde85045": {"node_ids": ["bec975c3-f2de-4384-b137-064618e747ad"], "metadata": {"page_label": "53", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "948eb31d-5c3c-4b53-8681-cbc334b2e94f": {"node_ids": ["9ff9bf2d-4316-4276-8fcf-272d011993a6", "5b843699-ea86-4e79-9521-e859ad681b07"], "metadata": {"page_label": "54", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "01050cce-5a57-4c43-8c97-b0eb630c5f3d": {"node_ids": ["1bd707b7-d248-4f35-86f6-ede3f22e9b63", "30447c2e-0e2d-47d0-ae3a-fb67a493bf1a"], "metadata": {"page_label": "55", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bfd1d2df-fa59-4a94-887f-d4837329f3d6": {"node_ids": ["aadfbc5e-37e6-4656-8559-69874701e300", "0036b3a5-7e3f-4c4b-84f0-20a6a7b8ce84"], "metadata": {"page_label": "56", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e450cbc9-1ab9-46a8-9f3f-74eed9269096": {"node_ids": ["2b732ea8-45e1-477f-a703-ff6467687955", "4e13f422-6616-4b80-b8ef-de8638107f4b"], "metadata": {"page_label": "57", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "57afa26f-0cce-44ec-b179-344931db99dd": {"node_ids": ["61e6d39b-97fd-49f1-aa08-07e45af8d425", "f5fa6ed3-49ca-4a93-9e4e-98362e8e7fc4"], "metadata": {"page_label": "58", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a611b4e0-317a-4f4d-abff-b2034707e7eb": {"node_ids": ["f69bf540-beaa-4244-9f09-6b4c5deb9ef6", "38cbd0d2-03ce-45df-aae3-da10efca8c2b"], "metadata": {"page_label": "59", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "99939c1a-e1be-4c64-be9e-87f2a1374bba": {"node_ids": ["032bd563-a7aa-47d5-b0c8-f1390c847336"], "metadata": {"page_label": "60", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a1a6e646-31d9-4729-9d9b-4506990eff89": {"node_ids": ["6ce3aebc-f90b-4c95-9640-863e3444a1f5", "c896dbbf-1e7e-4f69-9271-96771cc098a4"], "metadata": {"page_label": "61", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bba4c7a9-670a-4dcc-ad37-e61fd734d71c": {"node_ids": ["850780c5-1b2a-4cd6-8c33-a62770c2c816", "a4aa8806-c642-48d7-9aff-15db3edc0f87"], "metadata": {"page_label": "62", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0b7bdb6f-5a8b-47a5-9734-29fa78473fff": {"node_ids": ["89ac197c-f47b-4f83-a85d-30870a4734ad", "f2778c08-ae11-498e-b618-9f42219edc54"], "metadata": {"page_label": "63", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d8df1c19-159f-4dc5-98ee-100676d68f93": {"node_ids": ["3666d275-6ad3-4304-a6c1-d71be4ad9a10", "5fdefbea-125e-436c-abe9-fee968faaffe"], "metadata": {"page_label": "64", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9ea55305-becb-4267-b610-886a97c90dd8": {"node_ids": ["27c44e4b-0853-4e84-b312-eebef4ec34e3", "cdc04712-0eff-4129-b5f9-5d541b979f7e"], "metadata": {"page_label": "65", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "314ecffd-b72d-4368-b290-f32f73c72c1b": {"node_ids": ["878c756b-77d4-4214-a581-0e3181dba4ae", "06143d6c-cee2-4c60-bcce-07c0ef34a04d"], "metadata": {"page_label": "66", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c26d48e6-6f86-4927-8462-ab4319f02d7d": {"node_ids": ["b89f976d-61fb-4cad-9160-b718194fc4b2", "7c96de64-1efc-4d58-9a9d-c5895691d9fb", "0a29a959-d643-4f43-9cc1-d0ffc8df731b"], "metadata": {"page_label": "67", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7245ffb7-a3fd-4dd7-bb76-2f728d1138f4": {"node_ids": ["80ab1a71-5b3b-40f0-85f6-e9cb580e852d", "f07546ac-e1d6-47e7-9498-d2ccb556829a", "e2089b36-2428-4057-9599-754d00b90e88"], "metadata": {"page_label": "68", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ebd062fa-3516-4c56-aaf6-5b96479879bb": {"node_ids": ["aa36a3bf-b56c-4354-b56c-bdb83b6d0ce6", "cbd6c930-e3f0-47da-9951-73573c320aac"], "metadata": {"page_label": "69", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1998c9f7-e924-4785-91ee-1b75003ae3fd": {"node_ids": ["8944ebd3-b764-417f-a556-8d9b7af459b6", "8114b580-7f6e-49bd-bace-133de333c3ac"], "metadata": {"page_label": "70", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5b90ffc8-a70c-4e0e-83e1-e1be8d48adac": {"node_ids": ["4e32b78c-8386-4134-8a65-8621174694c3", "b0725c4e-4c66-49d0-9ff8-003443989b1b"], "metadata": {"page_label": "71", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c62e3698-3ac2-41aa-a3b9-f5bc38ba38c5": {"node_ids": ["858045f3-b3e1-4a16-acc3-10f0abfa86e8", "673e5630-c4de-44db-856d-4ae494f2aa67"], "metadata": {"page_label": "72", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "50e1b02c-e715-4183-90cf-8152355a4e93": {"node_ids": ["c3b6f0be-cbe7-41b9-b460-144e4f86d104", "2c293de1-3a7f-4a9d-b054-ab75f91c5142"], "metadata": {"page_label": "73", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "525616b6-cbc2-44a9-80fc-bb9b9dc1ae59": {"node_ids": ["96b361f0-a79e-40ee-986d-da3fc5e40b13", "de3e955d-a1c5-46c4-8915-c70791f720f9"], "metadata": {"page_label": "74", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0dbb2922-87f8-4e18-8797-bfad97717ee6": {"node_ids": ["557a9a0f-5681-4a2c-9b46-c0b2fd5685d1", "d1e36ff7-fa18-454a-9c6d-409b7a82b1d7", "b330a97c-97c2-4e52-912a-6b15f025a54b"], "metadata": {"page_label": "75", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e4a7cfdb-f50d-41c1-ba3d-068260656679": {"node_ids": ["da706f7a-604f-416b-82d4-eaca018057e1", "d86d941a-6d24-47c1-bd89-d15bffebaaea"], "metadata": {"page_label": "76", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3a0fac2c-7a09-4a1e-8f37-be8de3181a98": {"node_ids": ["6db57725-df2c-45fe-bc89-81ba049e7e56", "3b3089a8-6754-45fe-82b4-f07a9664b4f3"], "metadata": {"page_label": "77", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "67754d78-2d8a-42e0-9819-933966d70cfa": {"node_ids": ["52e0d7db-1cd8-4af7-b6ff-342240db9b1a", "0faeb552-eaff-45d7-9246-ede75c9571fe"], "metadata": {"page_label": "78", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e40b1e16-cbe1-46e8-baae-5fe32152ece1": {"node_ids": ["d34b9ad7-1163-45be-b1f1-1f91a856aa09"], "metadata": {"page_label": "79", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "df266c90-4474-49f7-b4df-58557c430490": {"node_ids": ["26bdf170-4fdb-4581-97a7-7c67d8c98d31"], "metadata": {"page_label": "80", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2d20308c-b41a-442a-96a4-10a4c7c2ec60": {"node_ids": ["da020c15-acfe-4a9c-81a6-da3e68d878f9", "ec626228-e5be-4a77-a73f-08ea0c16c994"], "metadata": {"page_label": "81", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8c4a8659-26db-44d2-b748-e769c564b6df": {"node_ids": ["126bcd9b-e88f-4820-9ef0-bb214b0bda5e", "83ccaca9-1edb-4232-aa88-fe92d5f59a5c"], "metadata": {"page_label": "82", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4acf6c7a-4a2b-4d52-80cb-f6ca8d82d631": {"node_ids": ["adb1a284-d42a-4018-a3ac-4baf4913cdf1", "456ca80c-6906-49e1-a56c-38392d599891"], "metadata": {"page_label": "83", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "48eb1f04-6d81-4122-a53d-daf0ac6e6ce4": {"node_ids": ["61df13f1-6782-4c13-8d57-e3275f219f1a", "910b9f11-10e8-4b08-849b-0bdf621369cb"], "metadata": {"page_label": "84", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bda73d1c-5385-4628-b78a-a4961819d273": {"node_ids": ["1169d4b8-5f9c-4b15-ac38-24e8ab17ceb0", "76196820-1392-4b79-80f0-5e50ab26688b"], "metadata": {"page_label": "85", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "89400fa6-7b38-439f-a897-42d17a327ad6": {"node_ids": ["bce4e170-8b29-424a-99ce-135278624385", "404df95b-a676-4c2f-9b95-72e48856a36a"], "metadata": {"page_label": "86", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "baa57928-ca97-4615-859b-53f152d0e45a": {"node_ids": ["4c6f9b93-5974-48f4-8310-e4882c381aca", "7720ceee-41aa-4115-bee5-e7c93c32c19d"], "metadata": {"page_label": "87", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5df4c805-5dfd-4b3e-a1ed-012e27876352": {"node_ids": ["cb398af0-a39c-4ea6-803d-c7eeb9e6d6a7", "c962f74e-c72a-4bf1-8a78-7fdb66d9559f"], "metadata": {"page_label": "88", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9995bc76-b787-4461-be89-ddcb7a42e47e": {"node_ids": ["a24ad9f9-28ae-4824-9a78-5067a21edce3", "41dd1496-09eb-4423-b0c3-9d0852d296ce"], "metadata": {"page_label": "89", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "69121cba-fdd9-4aa4-b771-09d96935105d": {"node_ids": ["17a51524-c654-4d90-bb3b-d1ca43588e62", "1a700555-0f66-4bd5-9a07-84c044834092"], "metadata": {"page_label": "90", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "85f9dfa3-4ade-454b-a540-c274d4d641e6": {"node_ids": ["4577e05c-3c8e-4a32-8ae7-dd50a1ad99ce", "bd9c4f22-07db-4cc9-a897-a53ee76c40a1"], "metadata": {"page_label": "91", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "005cac5f-63f1-4329-bd14-bf4c1d14bac8": {"node_ids": ["a59b5e34-df5f-44e4-83cd-c4165de9c549", "3bedcf12-b7d8-4938-aaa3-d2f446635af3"], "metadata": {"page_label": "92", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ecf0bf46-365a-4d32-940b-8b98806f0b9f": {"node_ids": ["726e0c49-0b59-40ad-9c96-0b3c57174dc6", "311a55a8-3cbb-4871-bf3f-23300dfe6d47"], "metadata": {"page_label": "93", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "38e7d198-eba4-4489-8ebb-dae71ccc6730": {"node_ids": ["022f9364-f283-4a7f-b167-be9813578e9d"], "metadata": {"page_label": "94", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "db76c7e8-cd2d-4130-8288-4f9c54a6ee34": {"node_ids": ["da5122f3-eea0-4b8f-820a-c939b06b4e3c", "7355604c-0e5a-43f4-b0b2-9eb508684127"], "metadata": {"page_label": "95", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "577041ff-457e-4c28-bd16-e74c3aee7f3c": {"node_ids": ["e887a8ad-7691-41a1-8dca-94b722e7aa09"], "metadata": {"page_label": "96", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a5e0ce9f-cd04-46b4-bb0a-b93bf280ebb4": {"node_ids": ["e621e4d3-d309-41ed-ab3f-ee4d4f9955cb", "88fdf0f2-a725-4783-9110-3e40c3669795"], "metadata": {"page_label": "97", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cdd30fcd-23f3-468e-8d2f-103e7af8075b": {"node_ids": ["9ee80e67-aef8-4fc6-ae1c-a7b40fc112cf"], "metadata": {"page_label": "98", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "eeee4bdc-55da-4130-9662-30faac3aa84b": {"node_ids": ["9dbb2f0c-66ed-4bae-85f8-a5e932ccbf89", "756ba431-2558-4d80-88c6-7a5ea24eac4b"], "metadata": {"page_label": "99", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cdb80dcb-8d36-4e81-b913-034b09a305a1": {"node_ids": ["3096652c-876d-4cdf-94b1-529906da4fd2", "b0fe874d-bab4-4996-883a-9af00870ca4f", "ed467b30-910b-4258-b80d-d13ee540ad2f"], "metadata": {"page_label": "100", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9f8d873f-c784-4bd2-b80c-2e6f3698671a": {"node_ids": ["8ee01ece-0013-4660-aa39-4ee207054ab3", "d20e16e7-4776-490b-bfff-b979d2efba56"], "metadata": {"page_label": "101", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9ff126f6-ca37-41c6-a8e0-23a154c686f0": {"node_ids": ["8e09e108-2cb1-4797-a4f9-85be41de69fd", "505aee45-6d7c-43f4-a8f8-0591ab41db42"], "metadata": {"page_label": "102", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3021c611-ccba-41e4-ac04-8cc4afe5852b": {"node_ids": ["71f69050-730e-4585-b7ec-91b631cc6013"], "metadata": {"page_label": "103", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ba42d0d6-ee0a-45e9-be76-6fb2a50e1217": {"node_ids": ["2b51d4c9-3562-4141-9364-938b08871f43"], "metadata": {"page_label": "104", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a1edffb2-ab7b-44e0-baec-cb6dcf469e7e": {"node_ids": ["9b6aa8b5-3d04-4c74-bea1-8ea87d0df106"], "metadata": {"page_label": "105", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e4629816-5cd7-450c-b8d3-7c1470af2147": {"node_ids": ["1f6761b3-1396-4f87-967a-86fe5a800831"], "metadata": {"page_label": "106", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0306128e-efeb-4c64-80bf-6cbf40e6bc9a": {"node_ids": ["c664fe3b-366d-4a33-baad-199dd9564ce9"], "metadata": {"page_label": "107", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1a99632b-e21d-4473-9ae8-d74f9f4190b0": {"node_ids": ["0ead88ef-04fd-4932-8304-e950663a689a"], "metadata": {"page_label": "108", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7629df1e-27fe-4bd3-89b6-f358a730121a": {"node_ids": ["ac7d6163-98cb-4ebf-a6cb-a84df519bc2d", "538f9528-7a59-493e-b2e2-6da54aad693f"], "metadata": {"page_label": "109", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b9e89939-c2c4-4d6e-b29d-28b46f51cb12": {"node_ids": ["f3b4b9a3-772b-4ea9-a711-417901f5d6be"], "metadata": {"page_label": "110", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4be576b2-5a3d-4353-bb0b-b47b4214b883": {"node_ids": ["2e41e407-3c87-4b0a-92d7-e0737c441714"], "metadata": {"page_label": "111", "file_name": "1_tutorialpython3-textogui\u0301a.pdf", "file_path": "datasources/fundamentos_programacion/1_tutorialpython3-textogui\u0301a.pdf", "file_type": "application/pdf", "file_size": 2689741, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4f54c988-2e34-453a-b05f-ca0774425df8": {"node_ids": ["d96c0d0c-2053-4a92-95b1-f44b7c665ea4"], "metadata": {"page_label": "1", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ed7a2859-0821-4472-81d2-26f82000540b": {"node_ids": ["56a31cc3-1edd-4203-8fbb-5acf354fffff"], "metadata": {"page_label": "2", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4dc33ac4-9a39-435e-b665-2eb7ea8889df": {"node_ids": ["a069426a-acf2-4aab-94bf-c58286c8e22d", "aec30e33-f53b-4ecb-8e77-90e32e8ba2a6"], "metadata": {"page_label": "3", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b37beb03-cf3b-413f-b7e0-76ee61fe6bea": {"node_ids": ["a3f6117e-1944-411c-a2e8-217c78e81a76"], "metadata": {"page_label": "4", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a91034b0-9840-4f89-b6c1-48ce44b3fc5d": {"node_ids": ["34bdbcc4-97dc-42c0-9d6d-717a510adfb8"], "metadata": {"page_label": "5", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "da2b88ce-56ac-444f-99b5-522e7f5653e9": {"node_ids": ["8622ec58-b503-4e90-9a84-d975df92864a", "1d2c9222-398e-4bdd-817f-378d3b2c0770"], "metadata": {"page_label": "6", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c1a1c962-e3a0-4de3-9d33-2a640b06643f": {"node_ids": ["b7c34272-708f-4014-bad2-a97f260a1fe2", "23b2ca84-bd68-4ef5-988c-81ea1d261771"], "metadata": {"page_label": "7", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5f4a9738-5576-41e6-ab88-32f902f9e9ee": {"node_ids": ["f7bb8c8b-70dc-463d-96a5-9cdfefdae095", "0309751e-e8db-405d-8c01-22641380493b"], "metadata": {"page_label": "8", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "953da057-f7db-4d8b-a8da-fdfae391a330": {"node_ids": ["2d5602a8-3e70-4eac-9a44-9569edd02431"], "metadata": {"page_label": "9", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "19ef0b8a-7986-4a84-b3a7-76ab9055012e": {"node_ids": ["88431954-6101-4392-b6c8-1479e2c77c98", "128b0061-9a19-4f0f-8456-2abdbd67e723"], "metadata": {"page_label": "10", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "955d2651-5599-46fa-acc3-98b49a170a77": {"node_ids": ["c1ada6aa-a0c1-4055-afdc-7c064d0c964f"], "metadata": {"page_label": "11", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e17e0713-eec8-40c6-a8a8-86c50f7ed961": {"node_ids": ["54277562-ccc3-4917-8e95-5649e276af66"], "metadata": {"page_label": "12", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5c8555a0-32e3-4dd2-a344-1606f8aaae88": {"node_ids": ["6f6e554d-f47e-4a6a-84b8-b9cc3e30921d", "3dea8d6d-0794-4480-b0e8-92ce783d2694"], "metadata": {"page_label": "13", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "73ed8557-e315-418b-8628-cce872a1a2f0": {"node_ids": ["039ffc37-3908-47d8-bd4b-ee249b683b67"], "metadata": {"page_label": "14", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fa26c4cd-dad6-4c67-b57b-bc16a431398d": {"node_ids": ["63512fa8-7740-44b0-a242-605919796397"], "metadata": {"page_label": "15", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0b274780-4c2b-40e1-9222-866fed636dde": {"node_ids": ["aaccb071-ef67-48b9-b2b2-44a42d6f4f40", "6dba0616-5af6-46f2-97a1-e16b0b2f128b"], "metadata": {"page_label": "16", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7daa73ed-1725-4285-bc12-3783ed7be7e0": {"node_ids": ["7820d590-e5b1-469d-9f06-ad875e17de5c", "96c2e0e0-7abf-4bdf-aa95-ad93599c03a6"], "metadata": {"page_label": "17", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "427af184-71ad-40cc-8649-0ba87b243ee3": {"node_ids": ["dc8f26b9-4cf0-47ce-b4ff-f6fa18184bf2"], "metadata": {"page_label": "18", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7714bb8c-1074-4e21-b7cb-515d58ec67a1": {"node_ids": ["3bfb0be2-da7e-4946-9082-db1fe4c58c18"], "metadata": {"page_label": "19", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "04b9fd5f-1400-4c71-943d-945a9fc354a1": {"node_ids": ["aeed91a4-c919-46ba-bc33-39fd5a095e17"], "metadata": {"page_label": "20", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "14a9fabb-6cee-4223-a8c9-ac06eaaa63c6": {"node_ids": ["1b97d644-5b3f-4ca8-9394-d57a40fcbe82"], "metadata": {"page_label": "21", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ebdfde79-ee74-4b68-8238-c6fd67a3a85a": {"node_ids": ["a42f7f01-ce19-4e6e-b90a-7a0fe6051288"], "metadata": {"page_label": "22", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e4773755-1f7c-4dc0-8af9-608bd8ad16a2": {"node_ids": ["e7c805db-96ae-4490-8400-87b1c16cef85", "0eaf5948-cbb7-4eb8-a851-3a7b758c3c66"], "metadata": {"page_label": "23", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6bf77934-734b-4967-84dd-fb3ce0fafc2c": {"node_ids": ["c1c3c7cf-e75f-4e99-a3b8-53f2f2652a05", "879a7338-f96d-41fa-95d7-5228fc4f149f"], "metadata": {"page_label": "24", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c8aca8ad-cbc5-4d10-bbae-317a5b7e56fe": {"node_ids": ["31a9cc09-dbe6-4a85-b843-b545918c3bd3", "856e9e5b-8301-4098-82d7-f5b8ab74a990"], "metadata": {"page_label": "25", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "40dcc54e-286a-4a0c-9bc5-7d72f2ec130b": {"node_ids": ["3e231298-9a83-4fd4-a5fe-6a3a8ac912b5"], "metadata": {"page_label": "26", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dcf9d7ba-b366-48f0-be1b-8a5d3c4155e4": {"node_ids": ["72a02bf0-d968-4319-8272-41059a0a3509"], "metadata": {"page_label": "27", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b97e3d4a-2a72-437f-900e-bb76549e6f95": {"node_ids": ["d68edcc9-9a8b-4410-ad1e-f64dd472e84a"], "metadata": {"page_label": "28", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a31114dc-5953-408e-bc0d-1de11078072c": {"node_ids": ["f89d7ef1-bad6-40c9-994c-ce42fd89b793"], "metadata": {"page_label": "29", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "230895c4-2806-425d-a555-4bec9500a075": {"node_ids": ["2ac7930b-5f7f-429a-b256-b274b25a9345"], "metadata": {"page_label": "30", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b8d4d5a8-4071-49af-a172-af727dbb7b9e": {"node_ids": ["b693fdc8-aaa3-4075-86c6-0a8f16106883"], "metadata": {"page_label": "31", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "36bfd91e-65f9-46ce-92ca-a0397739a689": {"node_ids": ["2417f347-513e-4391-9e25-5f77d62fde97"], "metadata": {"page_label": "32", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "86494091-718b-4367-a1be-21b30e258915": {"node_ids": ["43d180d3-66bf-45a7-a7c6-0a6c95aa9270"], "metadata": {"page_label": "33", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cddc73ef-a2f8-4584-809c-1e3d4fb3b981": {"node_ids": ["e622ff48-27fb-45c7-8cd4-9e8b6b77fff5"], "metadata": {"page_label": "34", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c028ebb1-f2be-4ebf-b02e-6acf6f5fe978": {"node_ids": ["242b8446-3d02-4ab6-b744-1e76f0dda7f9"], "metadata": {"page_label": "35", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a9dd91f4-550d-465c-8ed9-f5f2abe19257": {"node_ids": ["655be83c-b917-4767-935a-acca919fd820"], "metadata": {"page_label": "36", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d4ebc4ad-d924-4820-9580-b1f0717b705a": {"node_ids": ["06dc3abc-2bbd-480c-b718-de28e45ae610"], "metadata": {"page_label": "37", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "889d20d9-1497-44c9-9947-aab477630032": {"node_ids": ["7e693d93-e902-4fdf-a0f9-7d1dd951b04e"], "metadata": {"page_label": "38", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1cb8934b-b306-4ea6-a323-7627deb61a67": {"node_ids": ["097123db-8319-4309-ad66-64237b38a545"], "metadata": {"page_label": "39", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a2f6c344-3c34-4864-8157-bd4922f9d099": {"node_ids": ["c43bf933-3eae-4aa2-ab04-496d41c56932"], "metadata": {"page_label": "40", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "de7fbe80-78ac-43a6-8ea3-c88a162b1834": {"node_ids": ["e56e2136-bb86-4e29-bf05-1a9414aeb5c6", "a2286a6b-87a2-493a-a999-a7fc3b043368"], "metadata": {"page_label": "41", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "eca54a8e-1db1-4024-ae1b-b81f6aa140f6": {"node_ids": ["b18378d4-8d21-4db1-96ca-5cca69c967a2"], "metadata": {"page_label": "42", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0edd5bf5-a398-4a79-b5bd-d225035cf251": {"node_ids": ["4b0d81d6-0502-4c0a-a614-91b4cf4d22b2"], "metadata": {"page_label": "43", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d088ffcf-8741-4646-93df-68c282c3ac67": {"node_ids": ["93d7e415-5d2a-4ab0-ba64-b0d52fee3e7f"], "metadata": {"page_label": "44", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5ae32cf5-293f-4d47-9534-00d2c197061f": {"node_ids": ["3140c27b-e824-4ae0-a4bc-4e1cbe93f1d6"], "metadata": {"page_label": "45", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "19a2cde9-48d7-4b1a-a91c-f446f296dbb1": {"node_ids": ["a03da2e5-1e6a-44c6-aca8-39335cb5ee42"], "metadata": {"page_label": "46", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "efce34c4-dea4-4bb5-bb52-5c1adcbff233": {"node_ids": ["0f61baa5-6c9e-4352-b14a-315bf956a64c"], "metadata": {"page_label": "47", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c119a010-f544-4fd4-ba6c-73887c6c85b2": {"node_ids": ["cce4c6bd-4079-485b-a0a8-896080eecf2c"], "metadata": {"page_label": "48", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bbe34053-568f-4dfc-aeb8-8a0b554d74d6": {"node_ids": ["eb43d6d4-5f15-47a3-9291-f87b95931c4e"], "metadata": {"page_label": "49", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bf7538f1-de7e-4b8f-88de-cba52c03f12b": {"node_ids": ["afe994db-1348-4a38-a874-3875181a6ed9", "7412fe0f-f644-4c34-84f7-d70fd1174be1"], "metadata": {"page_label": "50", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fd2a411c-7bc4-4813-9c70-55bb97b62103": {"node_ids": ["b0bf8df4-d6e2-4e32-b2e7-d886c5917347"], "metadata": {"page_label": "51", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "46d520e9-6fb8-4ca4-ac8c-4a0e1c3baa6f": {"node_ids": ["252b6170-6745-43a9-a6d2-99d2db096e3d", "fc7a11fa-ef4f-4075-b973-e883d4cc6d9c"], "metadata": {"page_label": "52", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "70a4b2d2-3a64-4818-a46d-2bc0db2f746a": {"node_ids": ["9209af47-af1a-4d70-a852-b5b269c1a101", "8160ee55-b166-4e24-863a-b6e806df76d9"], "metadata": {"page_label": "53", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a975f660-f6e0-4e09-ba0f-ab457b6683e3": {"node_ids": ["4b06c917-d0ac-44f2-a065-13dfd81935fb"], "metadata": {"page_label": "54", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f671dc41-e7fd-4954-913d-662b63c84e00": {"node_ids": ["35a02ef7-b7ac-4b02-b8ff-604ac4c7f9a0"], "metadata": {"page_label": "55", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "845ceb00-1c22-46e8-b768-67349848d52f": {"node_ids": ["28a72b9a-0c74-4660-8f27-8c1479db8b3c"], "metadata": {"page_label": "56", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6f3ed657-488f-4d3c-8d1b-4a625544cb31": {"node_ids": ["3ae6da1d-abf2-4078-8425-a0ae779a05c6", "c591052a-2f17-41e1-8100-c5dbcd4012c7"], "metadata": {"page_label": "57", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "870fed0e-5c68-4223-9885-1785da4b3959": {"node_ids": ["3af92d02-1db6-4285-9cdf-ab136fa0741e"], "metadata": {"page_label": "58", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e22f34f1-4930-4ccc-bb83-500ce89f4e83": {"node_ids": ["6ec2c56b-1c40-4dc5-84e4-9b7a01c8c095", "2e88878d-e413-473d-aeca-e4de18d50af2"], "metadata": {"page_label": "59", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b5bf1b37-19c9-40a6-a086-7faff7a0e505": {"node_ids": ["375645bf-a8fd-4caf-a1ed-a3f5566620ab"], "metadata": {"page_label": "60", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "58e7945b-8d0f-4633-ae74-b6233b8bc542": {"node_ids": ["b73da78c-f9be-4fc3-b68a-0fb8c4fc2e6e"], "metadata": {"page_label": "61", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0ece548c-1254-4652-a107-98fd697ab686": {"node_ids": ["0524568d-9d91-483f-b111-59730ea46463", "442c090e-2e35-4ffe-b5cf-6d270a1e9d2f", "face4fca-aa51-4a08-8c44-3a7bb8d6cb11"], "metadata": {"page_label": "62", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d3aa2928-76eb-44ee-b6f3-a85d58cb7520": {"node_ids": ["3b49fdc0-2932-4245-ab5b-7b38ae02e492", "44635f82-708b-4ccc-8e97-a43e73ef488d"], "metadata": {"page_label": "63", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d6c0ad75-a453-460a-b076-d7d6bbd05d77": {"node_ids": ["675c4e9f-1a58-46ee-ac8c-2d430c58e7a9"], "metadata": {"page_label": "64", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7ad8b4cd-1c5a-4203-b5b2-62adb83bfbc3": {"node_ids": ["e7fdd825-2b50-447e-b170-6b4b22f4bbeb"], "metadata": {"page_label": "65", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "10532f87-49a0-423f-9cab-09016430586a": {"node_ids": ["f3171e51-1b86-43fe-8a82-8cf190483158"], "metadata": {"page_label": "66", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "390f0fb4-1688-4bd4-b240-a6816598cf6e": {"node_ids": ["944487ef-5318-4366-aabb-62abcff6e39b"], "metadata": {"page_label": "67", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6951bcaa-d353-4940-bd6a-c12d82a6760d": {"node_ids": ["75291371-8dd7-404e-800b-d2892f33694c"], "metadata": {"page_label": "68", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6d69e80c-d1b2-4f08-bda2-d46dfd02913f": {"node_ids": ["185869b5-a10c-4e9f-b13a-23d09a80dec2", "19fe51b2-7161-4148-a8f0-74a157acf1cf"], "metadata": {"page_label": "69", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "79237b01-ea9b-4ae7-bcf0-1f92ff441c6a": {"node_ids": ["d2f8da47-8256-4500-9f96-5d747cb6b966"], "metadata": {"page_label": "70", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "22bd62d2-7cd4-412c-a1de-00580193dd64": {"node_ids": ["4ffbc115-6106-4d68-a0e7-cf4611b24444", "c7444215-0971-4435-af37-fb4de5951160"], "metadata": {"page_label": "71", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0ab2dd62-e9a2-4d4c-9994-237ab61fed0f": {"node_ids": ["213a415a-a276-47d0-ac38-30f47c83f033"], "metadata": {"page_label": "72", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fae9c19f-173d-425e-a5e3-21128e84eb04": {"node_ids": ["c7a37cad-4bbd-49f5-b9ce-50ed92213738"], "metadata": {"page_label": "73", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "16d2ae31-27ae-4464-b393-24ea2ca99a8c": {"node_ids": ["f3efcff1-54e3-4541-84c5-40cf7cf71496"], "metadata": {"page_label": "74", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e68d3801-07c7-4186-aefa-43c158fa4bef": {"node_ids": ["6055abb1-2af0-4cdf-a883-9bcf48a29d2d", "394ee71a-5ba4-4f81-9d9d-cf6063ff0146"], "metadata": {"page_label": "75", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "91616269-f156-4b41-83b6-334cb740ba00": {"node_ids": ["d17adbe1-9097-4c41-b185-60784484a701", "42cc9faa-6b16-4858-83cd-054778b257ce"], "metadata": {"page_label": "76", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "89494959-6a74-4cdb-8d60-27c591145bff": {"node_ids": ["5784ce12-edfd-4bdc-aa57-c6c51e330d7a"], "metadata": {"page_label": "77", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6390b09d-7a9f-41dd-9dc8-6790f77948e0": {"node_ids": ["e689585c-1f64-4238-a62e-6d170b8f8045", "a7ede0ab-2c76-489f-bf7f-75228f28f48a"], "metadata": {"page_label": "78", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "64055e18-de96-4163-812b-c130a5ec3f97": {"node_ids": ["8c5839c8-6d76-49fa-813a-dd799094138d", "5bf1f3e0-437b-445a-a921-c63e25efcfbb"], "metadata": {"page_label": "79", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4c60f5d5-686a-4713-98ec-18c385b0fcdf": {"node_ids": ["a2a20b0d-2b4f-4e9d-a28d-4ad6c7f14445", "ad29cb5b-1bbc-4cc1-88df-ce425096dc7c"], "metadata": {"page_label": "80", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "98e3775c-336e-40d0-aca9-9267146911b2": {"node_ids": ["4b72ed29-52e0-49f6-b80e-a83a1c8b1f95"], "metadata": {"page_label": "81", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "457ffbe3-3e00-4da3-88dc-243bcbd41275": {"node_ids": ["116513dc-dbeb-4d58-b762-1a2161414b05", "a7b1f719-6abd-41cb-b279-2abc432f9b5a"], "metadata": {"page_label": "82", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "68a8ba39-3ef1-4d1b-a13e-b481f1d4936d": {"node_ids": ["d68cfb5f-7efa-480b-a4d2-8c15bcdd168c"], "metadata": {"page_label": "83", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ecde64cb-a89e-4c04-8185-09ad19da898b": {"node_ids": ["4ff7c25b-4f41-4f51-9f1a-12fe9eb8b7d7", "9264b3b4-dab2-4858-96b9-251bd0dd0246"], "metadata": {"page_label": "84", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "234aaad4-09a4-4d88-97af-dbd97c86e4e3": {"node_ids": ["7e2a721b-1a23-4ce7-aaeb-c8fabb425281"], "metadata": {"page_label": "85", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "567da195-2ad4-4189-83f6-b73350f940d3": {"node_ids": ["769353a5-dc92-48a2-a6bb-fc6309adbca4"], "metadata": {"page_label": "86", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bac1257e-0af7-4c9d-988f-82068bb8ff49": {"node_ids": ["50564783-8235-44ef-93f3-dda05eddd918"], "metadata": {"page_label": "87", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6966c548-c3cd-4309-a234-69bd01b95b87": {"node_ids": ["0efc3d88-1885-4f7d-9c4b-c458d7d3db1e"], "metadata": {"page_label": "88", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "700b8d2d-5f6f-4c43-90a6-43b2e4f6905f": {"node_ids": ["838eee69-2173-403d-901b-447816fbb51c"], "metadata": {"page_label": "89", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a2f65be8-0f8c-4f11-9f5a-8a182932931c": {"node_ids": ["8556b216-ea12-4405-8342-450aa7887a6f"], "metadata": {"page_label": "90", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a6e73269-10de-4578-9da6-6919c78b9d16": {"node_ids": ["ea4531e4-002b-4cc9-84b7-410f18efe3d2"], "metadata": {"page_label": "91", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "64ec1232-3291-48ab-a464-c42f4699ac6e": {"node_ids": ["0ab45e77-f50c-4e00-8e50-ed2b71eecf99"], "metadata": {"page_label": "92", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b972e0ab-89a7-4a7d-9ee7-da95b0db0dec": {"node_ids": ["ad193005-485e-4e29-96a4-491fdd35dfea"], "metadata": {"page_label": "93", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6c178835-ea83-4d07-912d-79b6cf059cba": {"node_ids": ["977f82db-4052-4a02-9f02-3d48581e67cc"], "metadata": {"page_label": "94", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a67f4fc2-685f-4192-96d8-98c8069d925d": {"node_ids": ["1040b630-cbe0-4d2a-94db-c3b263f95c37", "e5ed18b2-28a0-495e-8b65-6e98f2228c4a"], "metadata": {"page_label": "95", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e30d8ba2-8b1b-4636-ad4c-1de448534ed1": {"node_ids": ["c8fc00fe-e84c-481e-a7d4-25bf3a733e33", "323e4f66-5874-49d9-be31-72e3c95af2d8"], "metadata": {"page_label": "96", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d2cf7473-a863-4f51-b591-50276ab9f6db": {"node_ids": ["cf04fc64-6c4f-4472-9733-c7f4f137b5f8"], "metadata": {"page_label": "97", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a828857b-34c1-4414-a711-577a900dc233": {"node_ids": ["f06ebad7-e3b4-414b-bc32-1afd2fa78f2b", "7d4d11d4-994f-4c71-af58-ce72ecc7adc8"], "metadata": {"page_label": "98", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5e1fa239-18f8-4d19-96a7-bdfc9c1eee60": {"node_ids": ["585b52c7-3ad6-4145-816f-9936b1e2ae2c"], "metadata": {"page_label": "99", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d9d78de3-3142-4940-9111-304069374948": {"node_ids": ["7ee1ca9d-8f97-4a50-9ae2-326fecca49fc"], "metadata": {"page_label": "100", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6350d9ad-cdeb-45c2-96f9-3f7960333f83": {"node_ids": ["2b80d02e-3acc-4aec-a4f6-fc6dcee5212d"], "metadata": {"page_label": "101", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "16afd148-6c54-4664-bf37-65a82b515bab": {"node_ids": ["8535e12e-d74f-45ba-b907-536b1a1c65c9"], "metadata": {"page_label": "102", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e7f67a0a-a134-4ef1-ab79-4a26a38e9066": {"node_ids": ["52bb2a95-fd18-4ef5-abb6-0fe176a21fee"], "metadata": {"page_label": "103", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e72a25e3-5f06-4283-893d-7e6d16d6ef96": {"node_ids": ["e5b36131-b13b-4305-84e6-df71a137e93f"], "metadata": {"page_label": "104", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b45bdd31-0df5-4a22-926b-af65315a0d01": {"node_ids": ["14c3a972-1adb-42fc-9b15-6d84f600cd0b"], "metadata": {"page_label": "105", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5084c12c-3adf-4409-a4d2-c17e4728019e": {"node_ids": ["d630e019-20f3-4d3c-a085-13210a7fbf98"], "metadata": {"page_label": "106", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f675e1a7-f2e1-4ffa-9d4d-fff755221d21": {"node_ids": ["204b500d-e974-41f9-9d93-4004f3e6057b"], "metadata": {"page_label": "107", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "92922613-6405-4107-b763-a7ed65cf5968": {"node_ids": ["f327e1a3-c7eb-463b-bb92-e760be1ef9ea", "4053998a-802c-4ccc-9bf9-c53f5f81cf9e"], "metadata": {"page_label": "108", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f9ba861b-e745-4af4-a419-243434443849": {"node_ids": ["859a8c9e-ba22-4c3d-a54c-4af41b194ba1"], "metadata": {"page_label": "109", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "615c9b3b-f682-4ffa-a231-a8ac900ec143": {"node_ids": ["3f4356e7-6290-42c7-a88a-8ea0a134cdea"], "metadata": {"page_label": "110", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "118cf916-4848-4119-a7ad-6faa24c4585c": {"node_ids": ["aa177698-a681-4f70-9843-02b32bfd00a0"], "metadata": {"page_label": "111", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "62a18152-1752-4e69-bedb-9158aa52c972": {"node_ids": ["95723fce-7598-4d2b-9960-8b69aeb03981"], "metadata": {"page_label": "112", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b27c6276-3acf-4a64-af02-44abdfe5a7fd": {"node_ids": ["67bbb77c-c601-4fb0-9fdd-36c4f2a56f81"], "metadata": {"page_label": "113", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "98edb035-5e38-47d8-abc0-1d064ae2dfdb": {"node_ids": ["82771733-a644-4f63-a6da-8e7c7c9e889b"], "metadata": {"page_label": "114", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "848502e6-3271-4195-88d0-a381bb3e866b": {"node_ids": ["c3833b86-dfb9-47ea-a0d4-f6c3674c0d46"], "metadata": {"page_label": "115", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "afc8ea44-63bc-4b8b-ab04-003c6c7ab056": {"node_ids": ["43923c40-859b-444a-b259-a0741e2f67c8"], "metadata": {"page_label": "116", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e82a4b96-fe23-4c4f-9527-132217b21b1b": {"node_ids": ["e3845fbb-a953-45cd-92a0-5b61092cdf89"], "metadata": {"page_label": "117", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2149ec21-ef1c-449b-b490-5ad4b06d92f0": {"node_ids": ["dd013e1e-77d8-481a-811c-aca184032f76"], "metadata": {"page_label": "118", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "76a109d9-854e-4885-b2ee-9419c2a34b4b": {"node_ids": ["021056e6-8d30-4637-bff3-cd0bf2be5663"], "metadata": {"page_label": "119", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "330269f8-9185-4529-8658-1052855ce5c2": {"node_ids": ["d5250742-d59a-4381-8022-1cc417f5f412"], "metadata": {"page_label": "120", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "958f3714-453b-443d-b0e3-e38fee332f76": {"node_ids": ["8e8644c6-5705-4165-a1c2-49f66959d8ee"], "metadata": {"page_label": "121", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "953acc30-bd77-483f-a19a-3154e267269c": {"node_ids": ["34eaceed-cb7b-49fe-9d2d-c695f4e8e993"], "metadata": {"page_label": "122", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8c8e0a3c-6db3-4931-a853-5020f7e86020": {"node_ids": ["e2622b50-078f-4f7f-99b5-7747636fc861"], "metadata": {"page_label": "123", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1aca0ac0-ac89-4636-b7a0-773658c0f2a3": {"node_ids": ["272d07f4-8115-4401-9fa4-9a13b9436d24"], "metadata": {"page_label": "124", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "94e52ed0-36a1-4ec6-9fc2-f3a710d3b530": {"node_ids": ["88f4cece-34a9-4b3d-ace8-2a9ea14e7ce8"], "metadata": {"page_label": "125", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "34f57a5b-285f-4ce0-89a7-b3f7b04fe1e8": {"node_ids": ["641d848a-d1aa-4423-862a-24830baeca26", "ed3805a5-c060-4ad6-8116-c3d5433b951c"], "metadata": {"page_label": "126", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e297ff0c-2cf0-43e6-9fdb-65bc6423cd92": {"node_ids": ["080219ba-e4dc-46f6-9747-bb6f86d02b29"], "metadata": {"page_label": "127", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0e5bbb2d-80b8-4931-93ea-16ae758f10a4": {"node_ids": ["51675fd1-a70d-46ba-b70b-d3af98198c03"], "metadata": {"page_label": "128", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "34598745-1e6c-4547-b298-0c68d892b481": {"node_ids": ["c93bcf80-0742-4648-bb8e-bde29076ec30"], "metadata": {"page_label": "129", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9b1c7e72-53b5-4514-91a7-6716325ec7aa": {"node_ids": ["deeda100-7be1-4751-8265-6bbeae4d8a2c"], "metadata": {"page_label": "130", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e4394c03-f508-4552-b0fa-edaac16f5c94": {"node_ids": ["321d588a-4b1a-4205-b406-93d0dc052462"], "metadata": {"page_label": "131", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0dd59eb0-b18b-44fe-804b-80d77f2981ff": {"node_ids": ["675b2482-638a-4c03-82de-f05568353214"], "metadata": {"page_label": "132", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4ad41de1-c652-4d0a-b799-33188c7d7fc2": {"node_ids": ["50c16ccf-38b5-4719-bfc4-ca95586b8fec"], "metadata": {"page_label": "133", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e859d7fe-f1c0-48b6-b1bc-7e19cf7996e8": {"node_ids": ["7826483e-d8a2-4b1d-bdcc-55d6d3fa18d1"], "metadata": {"page_label": "134", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "16a578be-947e-41c0-9078-6e4f2f1a0b60": {"node_ids": ["776b472c-31a9-4b56-8604-aa2546b6752d"], "metadata": {"page_label": "135", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3ce35ae3-c7c0-4b7d-af82-4bc42cef8c68": {"node_ids": ["83aa8f39-6e5b-47c3-806c-6fc2a65007ff"], "metadata": {"page_label": "136", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b7f2bdb7-07f1-4d3c-803f-675176c3cc0f": {"node_ids": ["dd19e4f4-6bc5-44b0-92b7-8dc7314a6642"], "metadata": {"page_label": "137", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "92df0a1b-3074-4cf1-9ae9-f2a87ef8d11b": {"node_ids": ["509897ce-3b58-4df7-8a03-bab6687fa2b4"], "metadata": {"page_label": "138", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b730dcac-3444-434c-a56c-86157f3b8f57": {"node_ids": ["614e4809-8025-4762-ba4f-71b7cd475d0a", "d09d8c5d-5488-4f7d-849e-01d22a3eed8f"], "metadata": {"page_label": "139", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2017215e-1489-40fa-a06a-a204ae0d3942": {"node_ids": ["c0466bad-6bfb-4fb8-a0e1-181746573d3f", "3785552a-6eb2-43a4-a038-822e62bacb80"], "metadata": {"page_label": "140", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a3ffd28c-3bdc-42ec-8164-a8c5e6d79016": {"node_ids": ["3dcf76fa-dc60-435e-a546-a3638e14d47c"], "metadata": {"page_label": "141", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ba01fa1b-bca1-4cf8-8f08-90b2012b8d0a": {"node_ids": ["920776a0-3d2f-4aec-b222-fe318268414a"], "metadata": {"page_label": "142", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "75d9475c-c5dc-417f-808d-417f66623b0e": {"node_ids": ["68b0b680-b951-415e-8f11-4fbb608beb15"], "metadata": {"page_label": "143", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "de178844-90cf-4dc9-a03d-652283c9854e": {"node_ids": ["ae6987d4-33e5-4c3f-bc2e-e1aa111f49a4"], "metadata": {"page_label": "144", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dab23684-10a7-4351-8e2a-fc8a0b2e10d6": {"node_ids": ["0eac418c-cf1b-444a-a257-f38600ae334f", "19d9937d-cf0a-4075-b0a1-9b4ba4df16c2"], "metadata": {"page_label": "145", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ed285ee3-bfc0-474f-9787-754db0c9274a": {"node_ids": ["ff08296f-4291-47e9-b397-92ed6eb13be8", "06ca22ca-aa92-4e8a-9bd8-f285a975d809"], "metadata": {"page_label": "146", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cc430645-b670-4995-8983-2db599be3dce": {"node_ids": ["47e8ef7d-9097-45f8-9b4b-bdad0f8bfccd", "7667e828-218f-4306-83b0-cfa81b067792"], "metadata": {"page_label": "147", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9a730fb6-826c-40d4-9ac1-ca1c8e0d0ea8": {"node_ids": ["155d0ac7-9de6-43aa-ac9c-1f0e02bf292b", "aba371cd-e0a8-4df7-a937-664abfd674a8"], "metadata": {"page_label": "148", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a5b8f2e7-ef11-455b-9206-21a45319ded8": {"node_ids": ["96b9d787-bdd7-46d8-bdca-85349c28bbe2", "077679e8-f39e-40cf-8613-34e9043449dd"], "metadata": {"page_label": "149", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2e7dd01f-57c2-465d-90da-b79959e0c07a": {"node_ids": ["8d1f7d63-434b-4a56-9783-54454ed95058"], "metadata": {"page_label": "150", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1eaba30c-1b5a-45b9-8fae-ed76cef6f5a1": {"node_ids": ["bd94f597-0eee-4b67-9a2e-ac591b254220", "910a0527-ce94-482b-a0f0-959c52cab568"], "metadata": {"page_label": "151", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2a6b3dea-a28b-4946-acca-276eeda39edd": {"node_ids": ["588825c6-b4cc-4a72-9b8e-bf60c8e702dc"], "metadata": {"page_label": "152", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "23e82263-d8ae-4313-9ef9-ad0e362e3a4c": {"node_ids": ["ebaf7165-9e36-4b3a-8ff3-478627f070c6"], "metadata": {"page_label": "153", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d2cf115d-cbc9-44e9-8da0-a96e31a62eae": {"node_ids": ["4764cc15-e199-440b-9d13-442af4555fc7", "dcb7246a-9d5e-4fb9-a68d-5bafe0be78b1"], "metadata": {"page_label": "154", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4424dd13-f9c3-4566-b6f1-1efbf04d9e7a": {"node_ids": ["4636c9ae-2489-4a5b-aabe-d30b08377e43"], "metadata": {"page_label": "155", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d189ee29-7b6f-4b98-afa4-291dd4e073d0": {"node_ids": ["334fc59a-750c-4ffe-b29a-d2070f4c4fdc"], "metadata": {"page_label": "156", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "868ec625-74ea-4462-8d1d-a280cbee093a": {"node_ids": ["f7dec049-8f94-439a-8339-b7237f79ba33"], "metadata": {"page_label": "157", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a61cd69f-4267-4d1b-8b0e-681dc64e8338": {"node_ids": ["63a5ba90-391e-4bd9-a517-5da8299f17b8"], "metadata": {"page_label": "158", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "74b23be7-e109-4669-ae9f-1cbfb86c2a96": {"node_ids": ["967b27a6-3a14-4439-95b8-53e80d4f3823", "0d3c028e-f142-4b05-9734-79f650fbec26"], "metadata": {"page_label": "159", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "35380de1-3534-460e-b57b-8a03885b1ebc": {"node_ids": ["8446aabe-ac27-4b3a-99e7-bffe09d5c25e"], "metadata": {"page_label": "160", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "be13b912-d1da-4fde-b513-8d3025a4b454": {"node_ids": ["988ef22a-7d04-48e8-b63e-9e45f3051278"], "metadata": {"page_label": "161", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "15abc1b8-e52c-4d8e-aee8-3886bee9417e": {"node_ids": ["80959e95-602a-4534-97ca-b9fe3f7b6407", "36b86b4f-55a8-42bb-98d0-bbbd6f6776db"], "metadata": {"page_label": "162", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "736d6892-2b96-422c-a160-9b121fafabd1": {"node_ids": ["8d56cd29-f7e9-40ac-b5af-c14139405961"], "metadata": {"page_label": "163", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "26e57395-6c49-4723-a8b8-4b5734f39f98": {"node_ids": ["473f3fa4-50b9-4d45-ba53-05bccba36a90"], "metadata": {"page_label": "164", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8ba8ce27-5617-406e-9ff2-e9a4abf4ae94": {"node_ids": ["e730f6f2-ced1-4c05-867e-289539715639"], "metadata": {"page_label": "165", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "676b9552-94f4-4fcb-a980-953013d5451e": {"node_ids": ["d565c92c-89cd-4c27-b890-e7dab579a0d9"], "metadata": {"page_label": "166", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4db85410-ddec-466b-be97-5a57627b64c1": {"node_ids": ["98340ff5-2980-4641-b4fe-74d15f7af169", "5f235132-4845-471e-8601-c918c935a41a"], "metadata": {"page_label": "167", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4c677def-e81b-4720-a3eb-004672271098": {"node_ids": ["d772ac8c-fca1-452e-8731-8d25d3a8fb2a"], "metadata": {"page_label": "168", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8321bb81-a9fa-458d-8e0c-1580cd9c12da": {"node_ids": ["9024ec31-5e4e-4119-8c8a-3a667ac30e12", "54cac05c-97d6-46b0-8a95-dff9966f9af8"], "metadata": {"page_label": "169", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "951fc487-535a-40de-9f76-903860959e0e": {"node_ids": ["1f4ecb7b-4939-485d-8304-ac382b15faab"], "metadata": {"page_label": "170", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "927f55fe-fb86-41c6-a7b7-4408f528bc4a": {"node_ids": ["907d563a-d3b1-4bf3-a550-33bb2bc6db10"], "metadata": {"page_label": "171", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2588cbf9-e66d-4b40-bfae-702491cb7ada": {"node_ids": ["bd6d881c-32b7-4c64-83a0-e81166b0f80b"], "metadata": {"page_label": "172", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cd2418f7-60e5-4300-b325-ba3c4dda6cde": {"node_ids": ["c00245d0-89ed-48f6-933d-60850a2f9379"], "metadata": {"page_label": "173", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "46aadfe0-72a4-4f6f-867b-0e358162a0af": {"node_ids": ["136f3582-d527-4b99-b8b4-e9ba6df2d145"], "metadata": {"page_label": "174", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e00d473d-1435-4e1d-87b6-0a6377c162b6": {"node_ids": ["7b47bbf2-4366-4d5a-b4c4-b58de030deb2"], "metadata": {"page_label": "175", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "647dac79-9d62-45a7-ba36-aa2f3d82b010": {"node_ids": ["55ba10d5-d705-4655-a190-55e0d0fdff9d"], "metadata": {"page_label": "176", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "231c945a-3016-4654-a3ee-222898759a01": {"node_ids": ["b9ad4620-c076-475e-b769-72638b04786d"], "metadata": {"page_label": "177", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8c53a4db-8aec-4871-a5ff-392ea1fd2fdc": {"node_ids": ["3d62bee3-358e-4f37-9f83-6d9e6a1414da", "88c4f7ce-bba2-47be-9d87-d09e8aa7c859"], "metadata": {"page_label": "178", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7cd6781b-9cf3-4d5d-ada5-b5ef713ce1d6": {"node_ids": ["4b23d0ed-0ff4-42d1-a4d7-8808cade4aab", "287dbd85-80e1-46ed-9fe5-d1d948df310d", "1682e6c6-1c29-4c98-923a-fec3b7def77a"], "metadata": {"page_label": "179", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6e3fb751-0d15-4903-9e4e-1bc5ede4516f": {"node_ids": ["6a4ea91c-9b8b-4bac-b7aa-1de55352dc20", "60d75214-f758-485c-b701-c50276e498a8"], "metadata": {"page_label": "180", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "78469b53-3988-49f5-9492-5eec75c8cd52": {"node_ids": ["c19f5608-8058-4780-90ce-4fde10f3fba0"], "metadata": {"page_label": "181", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ff727822-c671-4f15-8803-baf4aaf4e5b4": {"node_ids": ["ad3a6e7a-00b0-4a81-95d2-986596737ba9", "a6d382dc-cfac-452d-b043-f5e370e42830"], "metadata": {"page_label": "182", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3cceb3e4-e03b-4d2f-acad-d4d731c33097": {"node_ids": ["97e8f0ee-ecf2-453f-bdec-db0a8ef2eda7", "c7f8f349-31be-41d4-ad98-f07372011122"], "metadata": {"page_label": "183", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "440b35dc-6c25-4d4a-a181-fdcd65a40e99": {"node_ids": ["ed7933e3-8acf-4139-822e-af7064f84e4e", "f2f1b73a-db4d-4501-9999-f106c68da956"], "metadata": {"page_label": "184", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "69617976-9e63-4711-84fb-dd4cd43037c3": {"node_ids": ["db1be5c9-d172-4d11-9523-790e5978c2e8"], "metadata": {"page_label": "185", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2431477d-c450-408a-8c73-1bc4855d6fee": {"node_ids": ["4b98ffe7-21f2-4397-9125-77fb3a968dd6"], "metadata": {"page_label": "186", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b6afc202-65d7-4e86-817e-ccdfb43d41a4": {"node_ids": ["fb41bab9-f4e3-491c-9a4a-6d7d9ae97e1e", "2d6d02be-865f-4be3-9c0b-a967fa96c027"], "metadata": {"page_label": "187", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "79de4572-9a0f-4c42-945a-52be174aaebb": {"node_ids": ["edf9786f-3a7f-46c9-9a14-2957f33b0594"], "metadata": {"page_label": "188", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2acd36c1-147f-4735-a297-b5d53d8bebfd": {"node_ids": ["5b33f3e0-713c-4b81-9ba9-6221d2653a1c", "414b3f97-23ea-4463-bcba-6a8b83ca79fe"], "metadata": {"page_label": "189", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ae90fb7b-cbdb-4b27-a9c9-6349770aede6": {"node_ids": ["3327450c-5dd0-4930-bed3-70d62f6175e3", "b0bff575-e1db-477d-854e-a2880dca6f00"], "metadata": {"page_label": "190", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2af79f01-202c-4357-b77e-07594328f382": {"node_ids": ["ae1e8883-74b1-49af-a29b-592161315eeb"], "metadata": {"page_label": "191", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3ea0e739-4e3f-4b7d-a18d-7ce5a5b0d341": {"node_ids": ["972d1ec1-5bbd-40b5-b8bf-48cc286e427d", "d234832f-b8cd-4a67-b3cb-32e7c72be6f4"], "metadata": {"page_label": "192", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cfc8cd4e-9865-4349-8ee8-85262b2b3493": {"node_ids": ["19ca25ba-35e3-48fa-a38d-57c33eacf87a"], "metadata": {"page_label": "193", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a63978ce-2ced-4ef3-bb25-8d63b9d59e85": {"node_ids": ["b39579a8-676f-4a44-9f42-d4a8fc22c828"], "metadata": {"page_label": "194", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9e3703f3-a66e-406c-8ebe-9bea03626ea0": {"node_ids": ["3bcc46ff-ed3e-4d14-8706-86add0f9a474", "351e95c2-0f3e-4dfb-be04-306c533d030e"], "metadata": {"page_label": "195", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b610df1c-d621-4259-ae4e-a5f71651de7c": {"node_ids": ["68c3c8c6-4ea3-45d5-99fc-40aaab314f6b", "087a35b9-5c3e-4ef3-b50c-076537fecaab"], "metadata": {"page_label": "196", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "98e352b0-8871-4a5b-a12b-59ddf6d9681b": {"node_ids": ["fab605a4-80b5-4d27-b008-aa3c8a8a63b5"], "metadata": {"page_label": "197", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f4ae5df7-08c1-4b91-8aef-d0810b16b6e0": {"node_ids": ["6a9be596-184b-4145-a896-806c9142f13e"], "metadata": {"page_label": "198", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dab5f6ea-e576-47ec-8ddd-3c273022c160": {"node_ids": ["4be47621-3c46-4b2e-9d82-79201cba5e3a", "5afc08fa-cf06-4247-9baa-95880c2e9349"], "metadata": {"page_label": "199", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "62bb7310-e8e6-4632-9be2-70857f57a398": {"node_ids": ["7e560fca-46f5-47e6-b69c-311b289f55ac", "eb75a462-9982-40c7-aed8-ce0e3861cb78"], "metadata": {"page_label": "200", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "054805d1-7565-47be-abcb-828b80865677": {"node_ids": ["80d564d7-7efb-411d-a5bd-16b2ded177e8"], "metadata": {"page_label": "201", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "63c34568-9f8b-4829-b7c5-94684a0d9b43": {"node_ids": ["1443802d-703e-4488-9450-795a686ef6d6"], "metadata": {"page_label": "202", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "429b62e8-53b3-43f3-bb3e-fd2811fb84bd": {"node_ids": ["75f10b70-80ac-450c-a225-2b6d89198338"], "metadata": {"page_label": "203", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "22945e50-65ff-4ab4-a5d2-5f18d390fe9d": {"node_ids": ["dfce92e8-faa7-4f04-bede-cda7b2b923b4", "17242412-8b6e-4519-bfcd-e3af8fb6248b"], "metadata": {"page_label": "204", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "01ffeb69-8745-40ab-aed2-7145a918765c": {"node_ids": ["4fa06638-286a-4c40-b305-67125034c341"], "metadata": {"page_label": "205", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a9e24ebb-33af-4eb0-8630-f9b3c6113f8d": {"node_ids": ["10b033e3-2f3f-4154-97c0-f4f9b3c63a9c"], "metadata": {"page_label": "206", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ed35f918-e951-4f10-80c2-487dd199812f": {"node_ids": ["3722b8c6-b4fa-48e7-8e52-375cef16c6b6"], "metadata": {"page_label": "207", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c3808861-e9a4-4c2d-a47e-0b988cb8fb8a": {"node_ids": ["466ac213-a696-40e5-85da-f7ca6cef08cd"], "metadata": {"page_label": "208", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "02dbfccb-f987-4023-8bc6-54b85e13748b": {"node_ids": ["3735c379-c49f-40f5-83b1-7ba7c246c269"], "metadata": {"page_label": "209", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6e8b53ff-c46b-49b7-b973-8d2ffbf353c5": {"node_ids": ["d035b07a-039a-4d05-8fc4-a0918e3e749e"], "metadata": {"page_label": "210", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a0532feb-46a9-4966-bd11-8f553287d210": {"node_ids": ["f46be61b-c4ad-4ea0-a997-dea51688aaa1"], "metadata": {"page_label": "211", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "03d59791-d271-44e7-97b8-8f5a3c8eb884": {"node_ids": ["00cbf6cb-dabc-4bf9-b2b8-23b32416f82b"], "metadata": {"page_label": "212", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "49b8b73d-f71a-44f2-895b-eca6efcae1ea": {"node_ids": ["c04ef9ff-7a98-452c-a2ae-595f428e2a28"], "metadata": {"page_label": "213", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bd34b269-ad1a-4131-aec7-646647516eed": {"node_ids": ["6f313318-b0e1-43b6-92f3-9f27f3ab6ec2"], "metadata": {"page_label": "214", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8a781c9e-7989-4e9a-9451-f4683ba993ad": {"node_ids": ["dd8625e0-bd18-4dd5-a096-b45e53b553aa"], "metadata": {"page_label": "215", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "86a464f5-11e2-49e8-99e4-19922e429fbd": {"node_ids": ["6e0f93f7-e7bb-46dc-a684-f7c4951339de"], "metadata": {"page_label": "216", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "919bcfa5-8ae1-4da9-88cf-6ac8fff7ff93": {"node_ids": ["f86073d6-b4a7-47b5-bc00-bdf57c2d2197"], "metadata": {"page_label": "217", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "723898d6-727b-4197-bcd4-d33eb3c4d0d1": {"node_ids": ["16dfa3c0-7d58-4196-8150-e7bb14b41751", "cb57a945-b9f1-4cde-b300-efc9092b8c95"], "metadata": {"page_label": "218", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ed7a3cf0-b3e1-4f95-a76e-1b1087c73729": {"node_ids": ["d876fe8e-7670-4bb0-ace3-451600f332c6"], "metadata": {"page_label": "219", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8c8e2c75-96a7-4a1f-8423-349d4cdb04f7": {"node_ids": ["bb11df46-9d69-408f-878a-f4d03678ebfb", "0f4098c4-5b4a-4dc2-ba39-8a1a97254423"], "metadata": {"page_label": "220", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "11a27966-c5fa-4fa0-b714-2b408fb268c4": {"node_ids": ["14bac667-5be9-4f9c-afea-e9367da2e9e2"], "metadata": {"page_label": "221", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "45731b8e-d3ab-44af-b57e-bcd47ba218d4": {"node_ids": ["f325d036-8aa6-4707-8d73-3f44d2598b02"], "metadata": {"page_label": "222", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "af1daf9c-13fd-420e-a5ce-5f2590840fc8": {"node_ids": ["44a642ca-5f4d-450b-aa56-96f83dbe44ee"], "metadata": {"page_label": "223", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8161c0f7-bae4-4f74-8e44-b0feec1d9aa5": {"node_ids": ["d65b4d95-5baa-438e-90d2-c7d20e297346"], "metadata": {"page_label": "224", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "efcffdde-f36f-4e9e-bddf-ae80245a8198": {"node_ids": ["edac6333-acb3-4bce-a091-e4a6f9242b82", "55bd21b0-52e6-4c44-9d50-f2aa44230fdd"], "metadata": {"page_label": "225", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "467109dc-adce-46de-b6d0-1e3e187a1952": {"node_ids": ["7c265080-48c8-47c3-ae41-5b2344ed721f"], "metadata": {"page_label": "226", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b24b4691-204e-488f-8954-80157048208f": {"node_ids": ["bebbd227-7cf4-4315-9470-608799b025a1", "2c014fda-4e27-482e-9932-7e348f1f8b82"], "metadata": {"page_label": "227", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "24628a93-89b4-4a78-8715-5bdeb750b3f5": {"node_ids": ["9063840e-929e-430d-81fd-6fead2dbfb60", "f3303123-bd43-4e35-8c77-37ec057126ea"], "metadata": {"page_label": "228", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "20773f74-3832-4dce-b7ca-88124e2b09ec": {"node_ids": ["c4c9f495-a482-40fe-8d09-446b24a70cfc", "f1f04976-61f9-4fb4-bbbd-84f9b3e2bf7d"], "metadata": {"page_label": "229", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d5c529ba-e85b-46b6-9b29-b183a883d36a": {"node_ids": ["2e3b3f5c-ce19-4d68-aaaf-cb7c92711160", "779811c3-8732-4547-8be3-2cdef1062d85"], "metadata": {"page_label": "230", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4a778863-12fc-4482-b6d1-80447c68e03b": {"node_ids": ["333a0ee6-07d8-45ac-9cc4-4b7775f5e007"], "metadata": {"page_label": "231", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2513f373-5131-4fd1-b7a1-dce1995590c6": {"node_ids": ["ab9e8e01-946c-4c79-84de-70e60554f5ef", "159ea16a-86eb-4b76-bf4c-fd5e15ae30b5"], "metadata": {"page_label": "232", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "35e2f20c-6fba-46a9-9259-4e7811b44377": {"node_ids": ["25a62417-125e-461d-a7c7-b8a3c40d4f68"], "metadata": {"page_label": "233", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5af93b52-0c9e-4335-ad63-9a50d9606584": {"node_ids": ["ab533df3-0d3d-4b93-b0c5-3b5749bfd368"], "metadata": {"page_label": "234", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1f439fd7-3e60-4448-8fff-6bef29fdd82f": {"node_ids": ["6b6eded0-5a20-4b49-b2c8-912adc4cb434", "295eba58-3367-4c42-a4b3-eaf19974c164"], "metadata": {"page_label": "235", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0573a59b-a199-44f9-b6d0-a8a9ba7622e3": {"node_ids": ["8b4afadc-aaf3-4999-aa89-1afccf9e038a"], "metadata": {"page_label": "236", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8915eeaf-e9d0-4442-87a6-fe3105a45a2e": {"node_ids": ["b3dde61e-26bb-4960-99cc-569d2c7b89ba"], "metadata": {"page_label": "237", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "95221215-1051-4590-9fdd-1a93c200a4a6": {"node_ids": ["3bfdc513-885f-4c91-9fe5-0a9f34b658c2"], "metadata": {"page_label": "238", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f2cc89e7-ff7c-4a53-8cd1-13588506bdd4": {"node_ids": ["95b47f51-545b-4c30-9eff-9a720115d30f"], "metadata": {"page_label": "239", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "419cf36b-7e26-4a8a-9f6b-13a136668953": {"node_ids": ["6b1464ee-6a50-43fe-b1a7-67b1464a355d"], "metadata": {"page_label": "240", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "33e8e824-e1e8-40c5-b7b7-fce360b5fe47": {"node_ids": ["3dcae77f-a07f-4fe6-a551-2261a7f3ab6f"], "metadata": {"page_label": "241", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fa59aa8d-1a9e-4b50-82e2-d619f90f4b9e": {"node_ids": ["1fcf757d-6926-4ac7-bf8f-48b34dcb992f"], "metadata": {"page_label": "242", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5e3b55aa-2cca-4505-8391-33dc53cde066": {"node_ids": ["eed755e6-1557-4c7b-b898-104e6c0d7976"], "metadata": {"page_label": "243", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "908bf419-b077-4f43-94c6-a411f0319ab7": {"node_ids": ["fef8e3f3-d3df-4b3b-89c5-535a3cfa1bde"], "metadata": {"page_label": "244", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "59b3eeb3-492f-4c93-97ea-978db88ce748": {"node_ids": ["745e5ba6-8dae-4413-a033-8580938caab6"], "metadata": {"page_label": "245", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "db0898e4-2de5-4074-ad34-45eed910c15a": {"node_ids": ["b11a52a6-2982-4f9e-9b2d-d82c01ddbde2"], "metadata": {"page_label": "246", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b05bf3da-7663-4beb-96b1-292c462f5907": {"node_ids": ["721daa79-b006-4fa6-8019-4031bcda0670", "7f0aed4d-0521-4208-a636-5a851616fb28"], "metadata": {"page_label": "247", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3739abeb-95e9-401a-81f3-0094f7fbc856": {"node_ids": ["285c509c-5545-4904-b531-e1f7b2459aad", "10b61b28-0530-46a5-98eb-5ad961745681"], "metadata": {"page_label": "248", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8e9f7f13-c6e1-4161-93e2-c9deb9a083b8": {"node_ids": ["69dd5448-d886-48b4-9d00-aaeec7a4ff3f", "c04d6e30-c6ef-435b-a908-cf1fbde7c7d3"], "metadata": {"page_label": "249", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5a946f37-34f6-4223-8a66-05c10e2bdf03": {"node_ids": ["7912deda-2c30-439c-8115-6ea69a08c26f", "70489cc7-fa20-4fd6-b35c-c17b1264c4f8"], "metadata": {"page_label": "250", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c93ed076-2f36-465b-bbf2-15c4c8411abd": {"node_ids": ["249639af-8d3e-4b31-ba31-b67b984a69b5"], "metadata": {"page_label": "251", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "42a2db7e-7b6c-4763-bdc3-abd5eb04d5b9": {"node_ids": ["7b2d42b0-7767-4b0d-a2a8-6625642a30f7"], "metadata": {"page_label": "252", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1152c968-950d-43af-a35e-265bd4d0df81": {"node_ids": ["85666528-56a8-4480-84d0-72565b47fe96", "5af1c62b-fb2c-4d05-a97e-17e6372940d3"], "metadata": {"page_label": "253", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "36ce2372-d1b6-4d8b-8135-aaa696ee9b07": {"node_ids": ["7e91a175-cd81-4226-a6ee-bc3f7b0422c0"], "metadata": {"page_label": "254", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c984b1a1-696a-4cad-8240-729684ccd758": {"node_ids": ["0dba63f1-9224-4ab8-81b8-fea0c5f64bac"], "metadata": {"page_label": "255", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "17e6a965-7105-427d-87ef-ff06c9b5909b": {"node_ids": ["ac960ca7-e260-4724-a1e6-d40278419643"], "metadata": {"page_label": "256", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "166fbd76-f5db-4211-97a1-4d2a75350985": {"node_ids": ["317acb3c-419e-4446-9eff-db6a9427aff8", "5a8066d1-8e92-4f7f-9942-b1752c7561f0"], "metadata": {"page_label": "257", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "57544394-3c23-4a89-864c-bbf2139eb206": {"node_ids": ["318c54b9-3a84-425c-a84c-0dea43e5702f"], "metadata": {"page_label": "258", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "19a2cc1a-1f0c-495e-a1ef-6f23e25af291": {"node_ids": ["203fb962-697d-4e31-a1b3-05106979b8cc", "087674de-4e33-41ec-a94c-d169ba42f00d"], "metadata": {"page_label": "259", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "57bbe390-3dff-49d6-935e-a16b34b8a5df": {"node_ids": ["49a4f36f-deb8-4a07-a5f8-3f6e60e19a9d", "d1af2705-7fa2-4a23-a404-57b8237eaed5"], "metadata": {"page_label": "260", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f2d24cd1-0419-4148-8aca-de99d11e1c6e": {"node_ids": ["117e207b-b35c-4505-98bc-8e6cc75fffd3", "ffd18c57-8e15-4929-8767-65ebe4dc7705"], "metadata": {"page_label": "261", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dce5b2fa-f296-4165-b1b5-9e1d942f82f3": {"node_ids": ["26abcb13-4c1a-4aa5-9a47-aa299ed508bc"], "metadata": {"page_label": "262", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1201048e-4f35-4df8-b552-2ca10fbb21d3": {"node_ids": ["ae05e88c-4e19-4e27-8e66-5aa7cc3673f2"], "metadata": {"page_label": "263", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e29b79dd-c7e3-4e53-b776-39bc4064b557": {"node_ids": ["333800c0-3b7b-4737-b8d0-7640c541b5d9"], "metadata": {"page_label": "264", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0e13b7f6-c55b-424a-baa8-03e4f9e36ce9": {"node_ids": ["0b45d9ae-d23d-43c1-bfe5-92ba94a4fb64", "a8154d84-4ff3-4695-b6db-444474f47057"], "metadata": {"page_label": "265", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "07bd22b6-4fab-4553-9a49-de920235eade": {"node_ids": ["858da336-b4e8-47b5-8e5f-e4327eb55f60"], "metadata": {"page_label": "266", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4ffe9236-fd03-402d-8e29-90fad74eec94": {"node_ids": ["ce89c73e-c904-401c-a6a7-f3d05f38d951"], "metadata": {"page_label": "267", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d61db280-fd51-4c54-a34f-9a5171689b88": {"node_ids": ["6e231def-dccf-44c6-9e87-4ea6c3acc979"], "metadata": {"page_label": "268", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "eb36d47d-b9c4-4d3f-a19a-792e65042b47": {"node_ids": ["faa107bd-0e03-46c5-8f73-f071ee7ca29c"], "metadata": {"page_label": "269", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bd018312-2a86-4585-a726-c36a668e5044": {"node_ids": ["74e75a5e-428f-428f-a4ee-bd0ce3be109d", "199d1cd4-1e01-444f-841d-be1d8251c415"], "metadata": {"page_label": "270", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2a9648dd-bd99-4386-99da-637f7657af89": {"node_ids": ["aa940b8b-74c7-4663-a49d-fe4daf7c16f2"], "metadata": {"page_label": "271", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "098ec2df-1a80-470a-9966-ba693493135f": {"node_ids": ["fa0d478f-854e-4f3a-b152-8ae261e9feb5"], "metadata": {"page_label": "272", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "66e408ab-ca6a-45f0-b4a0-735a57f69890": {"node_ids": ["ead689b0-5186-4f4a-a0b6-072e1e64e11f"], "metadata": {"page_label": "273", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ba3dfa6c-0552-4935-aeac-0522dcd83514": {"node_ids": ["c2afac6d-cda1-49f9-9cda-7dfcef955af9"], "metadata": {"page_label": "274", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b5323a54-44f4-46f3-8419-89166818f34f": {"node_ids": ["d03eb545-70fd-4207-9a45-d2238e5b1c07"], "metadata": {"page_label": "275", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0e28e14d-7e68-4061-b259-b65d917e340c": {"node_ids": ["4ee4f400-9c7f-46c1-a399-367f26f3a252", "43b14de9-df6f-4479-b17b-6acd7149400a"], "metadata": {"page_label": "276", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3fc04974-90f7-4c4a-967e-67d5dfafaf79": {"node_ids": ["6214579f-9331-41a7-8100-101e13c6bad0"], "metadata": {"page_label": "277", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "48226cba-9d81-413e-b04e-0c52a168780f": {"node_ids": ["6ae7ece6-5914-4c0b-95b4-7f191024684d"], "metadata": {"page_label": "278", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7970fa1f-c6f4-4413-b884-d15b85756f30": {"node_ids": ["845af96c-ef21-4c53-8944-054c555c5662"], "metadata": {"page_label": "279", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "977a47f5-689b-4171-af17-ee34543989ab": {"node_ids": ["554bb08d-53b2-4b21-99ee-5fdb0e76bf2d"], "metadata": {"page_label": "280", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a330f747-1007-42c5-a668-544ecffa9a1c": {"node_ids": ["23869b78-bbc3-49b5-bf04-c66cc73fb5c0"], "metadata": {"page_label": "281", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c196a41b-35a8-4e77-8833-4ad7065b1feb": {"node_ids": ["fcd2a600-57ec-4f44-af56-93721579acf1", "a8d8e7ff-6fb9-4691-b15e-2af36ed6f970"], "metadata": {"page_label": "282", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d5b347f9-b563-42ec-a614-9c735d7876f6": {"node_ids": ["2ae5f350-670d-4e05-abac-98f2242e89c4", "5c889757-0914-460a-a913-dd6f4318bbc0"], "metadata": {"page_label": "283", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "22fc2b88-089b-4d65-83ff-1969b75a5063": {"node_ids": ["cec0ddb7-e04f-40c3-a705-c6a346442413"], "metadata": {"page_label": "284", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dee52d4a-76d4-4860-990c-0c3e315a2ee4": {"node_ids": ["7e26d0a9-09a3-462c-90a0-a1a7fffbb862"], "metadata": {"page_label": "285", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "4751cd6a-d8ca-4622-972d-11aed6d8e025": {"node_ids": ["7f4542f2-8c81-42e2-a79f-84f008a93634"], "metadata": {"page_label": "286", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "102316cd-962e-44fc-a603-b8d9298aa34c": {"node_ids": ["843f8835-0f6f-454c-b3d5-ea8e7a8585a0"], "metadata": {"page_label": "287", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "64b45e1a-bead-422d-9ecc-fc88b32611cd": {"node_ids": ["39ea7e09-f487-48e1-90e3-ee5dd26cfb06"], "metadata": {"page_label": "288", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "62ae83ee-7d9f-4e89-80e2-5c910c258075": {"node_ids": ["9cb6834a-131c-470a-918b-28a29bd23f23", "7e9c5b15-836f-4e4c-891e-543d2ec199f9"], "metadata": {"page_label": "289", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "45fc0569-809f-4acd-b345-ad1888bd9bde": {"node_ids": ["78fe4b14-073c-4bbb-80dc-9676a40e3aa0", "48313c64-154e-4b8f-a5ed-6d260866a9c2"], "metadata": {"page_label": "290", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "45028eca-869c-4542-8639-9649187e5949": {"node_ids": ["e25b9705-1e0f-404d-9de4-18a1248a3f28"], "metadata": {"page_label": "291", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f6806765-be99-4d79-8a99-d83d5f069ccd": {"node_ids": ["3fcd3943-2b4d-4647-9a00-826e2b4a22ab"], "metadata": {"page_label": "292", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2f223b85-9784-4f6b-b4a0-2a0d6f0d587e": {"node_ids": ["fe96a019-c602-49f9-ba0d-6b5a7b261d52"], "metadata": {"page_label": "293", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "390b1dee-d796-4e3e-9da6-3fcb52f62699": {"node_ids": ["628d5061-30db-4f8e-b928-585a463c19a9", "8ea7da7a-889a-43e2-b1f1-0b2481adf88d"], "metadata": {"page_label": "294", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "496b5367-9ba7-4974-805e-c917ecd86ad4": {"node_ids": ["d9be2d78-77b7-4619-8960-b74c8cd61c01", "56103495-4f01-427d-a578-bab9e09a25f9"], "metadata": {"page_label": "295", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5aa4e00d-f3c2-4d97-ab98-dce92e3ef3ad": {"node_ids": ["a159f822-bc9e-404a-9067-de899c40583d", "6faec326-5818-493f-93b1-ea6f22816e37", "419ae9a8-6296-4145-8b43-33e6efef6623"], "metadata": {"page_label": "296", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "085d1b75-491b-4dc4-a55f-b6124713690f": {"node_ids": ["7fbe84ef-9f7e-4c17-bcf0-1f29c9c656e0", "c4b63c8e-c431-4327-a0c2-ff77e2cc50f6"], "metadata": {"page_label": "297", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fc53991d-8771-4018-ac46-1e4026acc321": {"node_ids": ["f9e88db2-30b5-496c-ace7-46b59cac1ae1", "60e27bd8-dd1a-4077-ae6e-f28279f1c3e3"], "metadata": {"page_label": "298", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8cb1129e-7b6e-464b-81f1-b583dde7fc89": {"node_ids": ["1251bde0-de9d-49bc-8f5a-860f279ae979", "310a2681-a4da-40a2-b827-8fe18e029b2f"], "metadata": {"page_label": "299", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e1f67a52-05af-4967-b5c8-d2ada706ded7": {"node_ids": ["f06b194a-7911-4f67-8321-ee2ae39a0644"], "metadata": {"page_label": "300", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3ad9c6b9-bffe-4fbc-949c-b5fd82b48fb2": {"node_ids": ["6960ceef-1eb4-4781-9a4f-078259e0d015", "079da608-c40d-4c16-a315-857cf254385e"], "metadata": {"page_label": "301", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "122faea4-d55a-4b52-89e0-09bb7ce86026": {"node_ids": ["5e691f14-9a29-4bb0-95ca-6bd38a317ef1"], "metadata": {"page_label": "302", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a988b73f-3bae-4d54-b7fa-acbe96d15dc9": {"node_ids": ["d9abc138-9a23-4722-8a77-82e11c1f3a6a"], "metadata": {"page_label": "303", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b45e8378-0ce3-4059-ab7c-bd29cf325ed3": {"node_ids": ["86626aa0-4a06-436e-9c41-d10d654b9727"], "metadata": {"page_label": "304", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7fba029e-d201-4d8e-9b90-d548f9d8689c": {"node_ids": ["5fe19cae-5ffd-4a46-abf3-d6c3f3c9ea7c"], "metadata": {"page_label": "305", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6832a2de-b608-40dd-ad52-2ae9abd72269": {"node_ids": ["3a7383fb-58a5-4948-8eab-1f203baf67ed", "02cd066a-3dec-4c6e-958a-e9d6362e750a"], "metadata": {"page_label": "306", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "92309dbe-43aa-48c1-bb95-2d062651ee48": {"node_ids": ["212bf609-9cb2-4706-a4e3-553d1827a467"], "metadata": {"page_label": "307", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3c5b1908-da7c-4d07-a06f-4cb728fbf7cd": {"node_ids": ["b47f2fc2-90e4-49b8-88fb-6e57d2de1fc0"], "metadata": {"page_label": "308", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "789cedd5-09aa-40b9-acec-6fd633bc7d35": {"node_ids": ["6664f8f1-1f16-466e-b944-06e889d48cb2"], "metadata": {"page_label": "309", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f3af6b96-4ef9-4094-b242-c61bbf2a6860": {"node_ids": ["6fcf3b2e-d594-4659-adab-9cb8f646fd23", "e387fe88-ad79-49b5-825a-8740e03c3929"], "metadata": {"page_label": "310", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d46265f0-292e-4abb-9a8e-3eb07d9f171d": {"node_ids": ["ca67252b-078e-456b-81a2-53b7f64188e6"], "metadata": {"page_label": "311", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "19a956cc-e02d-4bfa-b1f5-09da9d22c5de": {"node_ids": ["56b697bf-f78d-46b6-97b1-39e525bdeca5"], "metadata": {"page_label": "312", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0733f068-eebe-446e-8133-efeaf3d32b1a": {"node_ids": ["dac3660a-b956-4a62-b117-17febfa37a2f", "12bfcda4-3d48-495a-bfe6-a71ec7177372"], "metadata": {"page_label": "313", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b94a4771-d491-4847-a169-3e48e5ca6df2": {"node_ids": ["81f805bb-65f4-4290-8e5d-4b9825dffa5e", "3756e8c3-8eb1-44f4-9675-068e9cab90d6"], "metadata": {"page_label": "314", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bd655a77-9998-440f-864c-c6009d7f9b79": {"node_ids": ["253469b4-7be3-4cda-9869-a20c19c6934b", "bc73a439-1536-40f9-b6de-5747d27f9e97"], "metadata": {"page_label": "315", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "00b913bc-fadb-4394-926f-9ae18688cf9a": {"node_ids": ["1b1fca71-4088-4ac4-9063-667c5e7dfdc1"], "metadata": {"page_label": "316", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e6a4ce20-112d-4ae5-8620-c0a5d48eb661": {"node_ids": ["c7f3580c-6909-4949-a4d5-6a1ccc45d6cf", "9010ac5f-3668-4811-8cf4-2fdf75c5d453"], "metadata": {"page_label": "317", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "334d8091-3d9e-4352-86d8-ec69c1d3bc62": {"node_ids": ["6888a12d-f11e-4f9d-9137-b6d1a31c08a3"], "metadata": {"page_label": "318", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5f786d5a-e32e-4cf8-80f7-acd6fe248054": {"node_ids": ["75730431-24e1-40eb-8c58-68d857e98afc"], "metadata": {"page_label": "319", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c0a396e3-eb38-4650-8abf-9f9a3feda2f1": {"node_ids": ["6d72e18c-c712-40b1-b104-92da5e8c2d75"], "metadata": {"page_label": "320", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "44fa1e22-599d-40a4-88ba-b2a7ecf4e6f3": {"node_ids": ["8571b392-7e32-4b03-b59c-17e682a6a8a8"], "metadata": {"page_label": "321", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d83db27f-c410-4a68-b2ae-60f7d4c64336": {"node_ids": ["b97b094d-05d7-4b43-80d0-714f1a7c33c2", "0e9fafa6-e0e5-4909-9c28-f1b6f7ea8b32"], "metadata": {"page_label": "322", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "00a5842f-9017-4939-ab74-64008f39499b": {"node_ids": ["423f1477-2d3d-495e-9406-4e2f99d3578b", "6c9162e4-f31f-4ffe-975f-7ac2742fd106"], "metadata": {"page_label": "323", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8579799b-e319-4661-912f-355d7b3fb9bc": {"node_ids": ["44591e19-065f-48be-8c1c-7fb082f611c9", "a71d2cfb-6cbb-4fec-8787-603df817e6af"], "metadata": {"page_label": "324", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2e31394f-39cc-4c43-b8be-587232773edb": {"node_ids": ["bb460d2a-c4a3-4ede-b4ec-c0d65eadaa7a", "179ab2af-e03a-4437-9221-f39adb475d8d"], "metadata": {"page_label": "325", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "65ef89c6-165b-4857-b1fd-c5cc5b7d38ae": {"node_ids": ["88060d9e-36fb-435b-bb33-2733ff137f4b"], "metadata": {"page_label": "326", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0b629de8-3a47-4a3d-a3ac-248a560fc3c7": {"node_ids": ["42ad2b31-fde7-4eee-8329-ce32b0a31111"], "metadata": {"page_label": "327", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "28f1f524-87f1-47da-b400-a532030980c1": {"node_ids": ["e10e8eef-5d5d-44bf-921a-a6fb663c549c", "b1e86450-cc22-4a78-a1e8-095a1c8647df"], "metadata": {"page_label": "328", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8028d069-bfd1-4d8e-aa39-50b2fdc8f9d9": {"node_ids": ["72c31dbd-debc-4e2b-850b-c549d3574b62"], "metadata": {"page_label": "329", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "164b06cb-7e1d-4aab-988b-58f5520fccef": {"node_ids": ["71b52179-8e64-45d9-9aaa-fd8bd0cadd02"], "metadata": {"page_label": "330", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "16960f53-567e-4a21-ad3a-23d15b0d03ee": {"node_ids": ["a088c3cd-fa44-4627-a5d7-fb8db1533b73"], "metadata": {"page_label": "331", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "30ee295d-daad-4fd8-b07d-05faeaf21546": {"node_ids": ["2d50ac7a-bca4-4958-a399-8654b930326e", "3ae95ff0-49a0-4a57-a591-78a57df05494"], "metadata": {"page_label": "332", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "02699bbc-a1df-4415-84f7-5ccf7320a3cf": {"node_ids": ["f81a0d7d-0a16-4808-9bcd-c01e2674a8c5"], "metadata": {"page_label": "333", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "94660f53-787f-41af-b42f-be0dd3b4dde6": {"node_ids": ["33e4cbf4-4744-4b81-b2dc-eee3ddc1764b"], "metadata": {"page_label": "334", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0d32ffe0-fb10-4f05-9c4f-8b86de29f355": {"node_ids": ["d84e26cd-8b73-4276-aa2a-af4fc453ed41"], "metadata": {"page_label": "335", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b7e18ef6-5672-44bc-93e4-ac25b624327c": {"node_ids": ["e6cab7ca-fad8-4790-bdce-0e9c15c2afb7"], "metadata": {"page_label": "336", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b4a3c896-fdaa-476a-86f0-34152c768e9e": {"node_ids": ["f8f639d3-34b1-490e-a0c5-4c0b9efe3c7a"], "metadata": {"page_label": "337", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f8879d15-9fd1-4b18-8e1f-f3b5e977eec6": {"node_ids": ["cefccc08-7544-4506-8f0c-d4cd71cc8aba"], "metadata": {"page_label": "338", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "201f557d-5d61-419d-b92f-18941f83cf1e": {"node_ids": ["573ed616-92df-4bae-8df9-b38ed46b0122", "9efe43ca-a254-4dc8-ae0e-f8e417f661af"], "metadata": {"page_label": "339", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "9e373bc0-ecc6-49c6-aab0-b9228245cf2e": {"node_ids": ["04b10f32-13cf-425e-b124-5d789b62304d", "74586c1e-80ca-45dc-b2d9-aa062d1f2731"], "metadata": {"page_label": "340", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "95b8b164-623f-4b24-a30e-7a44bf01844b": {"node_ids": ["b896d10e-61e0-49b8-92dd-8cc26b882625"], "metadata": {"page_label": "341", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1b7d3748-0e3b-4140-9483-d7db2fc8021b": {"node_ids": ["82295db2-23f4-4c17-9cc4-a39779878fa8"], "metadata": {"page_label": "342", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "720c23e6-df24-4d4d-9e96-78b21638be7d": {"node_ids": ["3461aaae-7ad3-4923-ac2d-d48e0d88ce6b"], "metadata": {"page_label": "343", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e4814b2e-e63d-4e54-a497-89d90ee54642": {"node_ids": ["854f8fff-ea6a-4727-a021-bdcab50fcdd0"], "metadata": {"page_label": "344", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cd6f6a69-6d88-45c3-b558-d62fde5af908": {"node_ids": ["1de088be-2c6b-4cce-9221-80556f85522c"], "metadata": {"page_label": "345", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a0e78c0f-da99-45cf-9325-4ea90c7fae77": {"node_ids": ["8ddcbda7-c086-40e0-8cb4-6420252216b8", "94c5e137-7f74-4302-acb0-534f3b1904da"], "metadata": {"page_label": "346", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2a8ed719-e766-4b9f-8a12-8f8995b5263d": {"node_ids": ["9f6208bf-709a-456f-863c-411fcc9bf40a", "f0d6736a-da6a-4c16-97b2-e47575493e2f"], "metadata": {"page_label": "347", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "570fceb4-40ba-4773-ba0f-a65d8bb912ee": {"node_ids": ["a2841f79-c1c0-4998-9a0c-2a95977b9525"], "metadata": {"page_label": "348", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8b37ea0c-24f9-4dca-82bd-a5f1b131f589": {"node_ids": ["7165d15e-e885-4442-9b05-12150cda98a8"], "metadata": {"page_label": "349", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b0c5720f-2520-40bc-a291-2aa5320a7138": {"node_ids": ["9d5f5b2c-a94f-4426-b5e4-7eebbf6da0ff", "6e89af5d-f00c-4627-acda-ee950b5cd143"], "metadata": {"page_label": "350", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5419bc8b-d3d2-4389-a28e-5d735fb70a36": {"node_ids": ["81b11957-7426-43e9-96ea-ea54e9347fdb"], "metadata": {"page_label": "351", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c4bfc011-c184-4fc8-9f31-dd61a502bd0f": {"node_ids": ["d2828290-5547-47c7-80ce-c051673d4c70"], "metadata": {"page_label": "352", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b3b5057d-d9bc-45c7-b2fc-4b282ae26e61": {"node_ids": ["e6991790-6b23-4930-bcc9-8539635f63ce"], "metadata": {"page_label": "353", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "505edeb4-876e-44c9-89fe-cf3f1a329a78": {"node_ids": ["ba529725-7aee-4fe2-aa5f-c5d500bb6873", "cf9df832-3a02-4ad3-b56b-3f77ada1f5fd"], "metadata": {"page_label": "354", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3bcacd02-e253-4b7d-93db-4d7d173cdb64": {"node_ids": ["4aaec4b2-a3d9-46f6-9c1c-481ca5f70633", "eaded1e1-5091-4605-9585-10a757077560"], "metadata": {"page_label": "355", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cceeea3d-3002-4c01-95c7-7d387e36af00": {"node_ids": ["2dac5018-7acf-4701-a700-c57a7bca758c"], "metadata": {"page_label": "356", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b08fd5d0-e215-4802-b725-9d6af447cc33": {"node_ids": ["ebc4c799-ff92-468b-ad67-0990aa7b2955"], "metadata": {"page_label": "357", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0ff41244-5b87-4e0e-85dc-c57e77e130b1": {"node_ids": ["dcc1f61d-71a4-4dac-9866-8459ded60bce"], "metadata": {"page_label": "358", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "98bbb677-751d-4d93-9962-7e49528bd2bf": {"node_ids": ["3708d1ac-113f-4c1f-b448-983513aab3b6"], "metadata": {"page_label": "359", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6a73139d-e85e-4c3e-acf6-ba63f7aa8c19": {"node_ids": ["677862df-081b-4733-8a2a-1a40a5d5c706"], "metadata": {"page_label": "360", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d9c7b8c1-7e64-425b-8c69-3c9938cab3a6": {"node_ids": ["50568410-9f92-4d60-b3ca-ecd1034f2eaa"], "metadata": {"page_label": "361", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a35bdd4f-0ef9-4b16-b44f-30cc8cce69e7": {"node_ids": ["e685ec38-941e-453a-bd20-ea7b4283fa86"], "metadata": {"page_label": "362", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7592c211-ad5d-4483-89ec-c29d018384e9": {"node_ids": ["67f6d0c7-898c-4958-b206-9b1cdea1ba07", "b060f30e-6ee3-4cac-ad29-dbf098e40445"], "metadata": {"page_label": "363", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "82ca54ac-254c-4c16-816a-aeb47e43a026": {"node_ids": ["ae38bb0e-d32b-4c70-bd27-4c3026d8b6bf", "8c32ed54-bb95-40f8-8ca5-ebe666011ac5"], "metadata": {"page_label": "364", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "539b671e-252e-47d3-83f4-4fb086e619b1": {"node_ids": ["46fdcc6c-7002-4a2d-b1e1-28286298c6b6", "7988a0b8-7bff-4d55-8877-ad3a7570f1a2"], "metadata": {"page_label": "365", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5449077e-d179-4824-a75a-41c3ed71c337": {"node_ids": ["d98fed7b-1414-428b-a54c-8dde77f3f76c"], "metadata": {"page_label": "366", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2073e0f3-4fe5-4407-a994-88305ff20770": {"node_ids": ["424f6f3e-e511-4e40-ab8f-ed374d107594", "320b3a99-8f04-49f4-aef0-347bd1ea6fdc"], "metadata": {"page_label": "367", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "80ad3994-53e2-4326-903f-503fd21f505a": {"node_ids": ["4fa5ec7b-9e0c-4185-ad0a-087f409175fa"], "metadata": {"page_label": "368", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b6b47ce6-d660-4878-950e-5c674b593a87": {"node_ids": ["368c2271-568f-4caf-953d-dcc2eec54100"], "metadata": {"page_label": "369", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3343c01d-b616-4332-af5e-44fa55b4234d": {"node_ids": ["5a4a5e4b-c9eb-446e-aa06-5832ea605c03"], "metadata": {"page_label": "370", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3553a940-617e-4492-aa86-380626e9ee8a": {"node_ids": ["ae74e51e-bef5-4c9c-96a3-1db7b646b3ea", "24d91793-7977-42ca-934d-fbff41c712ad"], "metadata": {"page_label": "371", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "622bcaa2-9fbd-440c-b621-add1c94dc179": {"node_ids": ["0753eb33-6e21-4e91-9bef-05109152ff48"], "metadata": {"page_label": "372", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "654c4d42-60c2-46b9-92b1-d2a697f5641b": {"node_ids": ["f0f60573-1f2d-40b3-b48b-6d6afcc4a193"], "metadata": {"page_label": "373", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "47bd1ca3-79cd-4799-96ab-7d2f5defae24": {"node_ids": ["e1566818-8d78-494d-a7f0-5895a46ad573"], "metadata": {"page_label": "374", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "99922753-730b-412d-af74-78ea435d32ab": {"node_ids": ["60eebb48-3c16-4f2c-a91f-7b9ebfbfe8f6"], "metadata": {"page_label": "375", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "33f4cdfd-a7d0-4a38-a805-d7123d7e3184": {"node_ids": ["3d9d8122-5620-4834-9d73-db80c49bb567"], "metadata": {"page_label": "376", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7b6a294f-5837-4869-adc9-c2f393b99ee4": {"node_ids": ["65e472f7-8731-454b-8425-fcbbbf7d48f2"], "metadata": {"page_label": "377", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "753e0c41-6f8f-403e-babc-5c3b534bda52": {"node_ids": ["b51d3afc-5582-430d-8a39-5126f3b98640", "ef8792c1-1946-4d16-80ae-b3b5fa875815"], "metadata": {"page_label": "378", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c387eaa3-17e7-468c-ac6b-cb3943b12493": {"node_ids": ["0e71e6fc-0505-4656-8cbd-d417f2d418b3", "9e0addc0-66c5-4fd2-ac7c-435397ec96d0"], "metadata": {"page_label": "379", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "02a6c621-50b7-4008-a9db-cd1592ec068e": {"node_ids": ["aaaf276e-64fe-4d16-9d3e-505aed3d3d0b"], "metadata": {"page_label": "380", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "91c9436f-d154-48c0-91d4-d6bd38d1b9d8": {"node_ids": ["a0cd4116-83fb-4969-9f45-a5abbd84fd59", "12fd2304-b215-4128-910e-c06652ad82d8"], "metadata": {"page_label": "381", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "29022a59-b1fb-467e-86df-2e1a58b1e8af": {"node_ids": ["98e344c3-3be7-44b5-ad33-d071acb14bd5"], "metadata": {"page_label": "382", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a31e5ee0-8e84-4c9c-8183-31c6142af2e8": {"node_ids": ["067ea3df-13b0-419b-b49c-e1e1db259c0a"], "metadata": {"page_label": "383", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d1930c6c-fc74-45d2-9cec-100738be13c9": {"node_ids": ["7d8bf80f-c94b-48c6-bbc2-c79d2a1cf351"], "metadata": {"page_label": "384", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a80b34bf-1067-408a-9895-b9824bbb6de0": {"node_ids": ["b121e7bd-9984-4936-a304-97eb54ca9cb2"], "metadata": {"page_label": "385", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7cf594d3-0793-4685-ae3e-3b5ce08460fc": {"node_ids": ["5354e4e5-0438-4e3e-8705-28334b11c68f"], "metadata": {"page_label": "386", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6989a426-d5ea-4a40-8303-9669649683ad": {"node_ids": ["c1d8c36b-f22c-4aff-aaa5-adb74d358fbe"], "metadata": {"page_label": "387", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fd8dac9e-ec6d-4e25-99bd-4338d02a8ef7": {"node_ids": ["a94696b9-22f9-4e90-b5ac-36850dd17f84"], "metadata": {"page_label": "388", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "fda02e31-0ec6-4f6f-ab09-b5ea1cc71b26": {"node_ids": ["61ec6fba-391f-408a-a425-db89bb689cb0", "8af08fad-ace7-4356-a705-3f5fb74c638f"], "metadata": {"page_label": "389", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5b1094bb-ca6f-4ba6-9914-c1f075d9d494": {"node_ids": ["b28aa2d9-705b-411a-a009-df9a4272fc9f"], "metadata": {"page_label": "390", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0d5bab5b-d399-46da-9336-9bb147ea4a5d": {"node_ids": ["dc2600e8-6e3f-4367-8e18-e98579303629"], "metadata": {"page_label": "391", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "3c7d77eb-3af9-4fb4-ad94-6d036161194b": {"node_ids": ["dbfbe41b-d4b7-465a-8808-a808c8568ad9", "d13cb459-52b5-4cd5-99df-12431d91be5a"], "metadata": {"page_label": "392", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1d6b68f7-31a9-4ce9-850c-35513a3c17c0": {"node_ids": ["e28396c0-50e0-4a52-8a85-adfd86710c81"], "metadata": {"page_label": "393", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c12bdbb5-afd0-4849-b772-9436b2169c25": {"node_ids": ["680788bd-feab-454e-8b1f-e80297cbab26", "43cf18c4-5206-41c4-8c29-30b25b360497"], "metadata": {"page_label": "394", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a5240837-6a36-4340-bff1-97546f4c8132": {"node_ids": ["eea6bc82-3618-4201-b8b4-0ff471dcb0c4"], "metadata": {"page_label": "395", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ec19f834-eaf1-4b5e-a4fe-5bf50a606e97": {"node_ids": ["1dcbd81e-9a18-4535-b0a1-09017bf5acb1"], "metadata": {"page_label": "396", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7dc6e144-71b4-4faf-942b-744e19cd4e8d": {"node_ids": ["30f51ef8-5090-4264-a8c3-0d2d8b4bc54a"], "metadata": {"page_label": "397", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2f7e7c5f-2eac-40eb-8f9d-1a1f39ae5a32": {"node_ids": ["96114eba-be67-442a-9220-9aa051a2ea25"], "metadata": {"page_label": "398", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cf3bf32c-7713-4497-b0c7-9a091df0443d": {"node_ids": ["58687c06-6852-4ccb-9fc1-481ece90b121"], "metadata": {"page_label": "399", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "765ca9e2-504a-4b41-9312-4178b1b3dbc6": {"node_ids": ["d261bc88-972b-4d20-9afe-e9654852b151", "6dfd46e5-594b-4e7d-ba2c-5e2b6d036c7e"], "metadata": {"page_label": "400", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bc0f2de9-5e81-433d-955f-dfa422536662": {"node_ids": ["7d29c55e-71fe-4c19-89d9-9bedeeed25d9"], "metadata": {"page_label": "401", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "00362a1a-3e53-4f0d-94be-14b845326781": {"node_ids": ["5fe305a7-3893-4c2f-83c7-941e8b6530f3", "aee8acc2-a8aa-41f5-ba38-376864ae3766"], "metadata": {"page_label": "402", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "be95984d-d42c-4999-8f9a-904c9cb19d3e": {"node_ids": ["8fec5790-dc91-4b10-ab2a-3b834ee5282a", "2c33e381-6842-4964-911e-a817ed101483"], "metadata": {"page_label": "403", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5cf72c0f-04ff-4ef1-ab5c-4e4005c8fed9": {"node_ids": ["3065fb0e-8478-4475-a6ab-68c2ee3fb0a8"], "metadata": {"page_label": "404", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b10e859c-193d-47c0-aef3-11d2f0148ee3": {"node_ids": ["f1eb3f2e-3957-4e57-8617-22ec131d4492"], "metadata": {"page_label": "405", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6d50c8fb-382c-4469-8f7b-1f9f2f62c1a1": {"node_ids": ["a1f4bb8b-556f-474e-a210-53620b0ac5e4"], "metadata": {"page_label": "406", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b4656e68-bc74-497d-a128-f8bd2dd25a6a": {"node_ids": ["f6d269b9-3f9a-4205-a0c3-0520cefd28d5", "21656f14-ea9e-4038-a113-d072df6f9548"], "metadata": {"page_label": "407", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1d7a8027-23e4-4f9c-8009-134d00c20ea8": {"node_ids": ["a4ebb4cf-dfba-4356-b2a7-0bef62841c90"], "metadata": {"page_label": "408", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0381a1d6-3dcf-41b3-9be6-182346ff46ab": {"node_ids": ["a8a697b4-5494-4581-b28e-feb3eca228be"], "metadata": {"page_label": "409", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "b4560112-5b79-45a2-a86b-1093e711da46": {"node_ids": ["c10acca2-64a3-4581-af6c-1cec3d65ffb6"], "metadata": {"page_label": "410", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "67e171c8-68dd-425a-9f0e-d4cc3ce80b92": {"node_ids": ["06995493-5ec7-46c9-84a1-7d0f53814461"], "metadata": {"page_label": "411", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "7961492d-ff2c-46c5-83df-5dcba24c8aa7": {"node_ids": ["8421528c-4592-47d0-9cdd-54bd5ecb27b4"], "metadata": {"page_label": "412", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "87bd58c3-9b5c-4ed4-ad3a-3035432f6117": {"node_ids": ["d20172f2-247a-4275-9fee-0c08d163c460"], "metadata": {"page_label": "413", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e8c4e379-f533-4c97-86c4-08ce384a9998": {"node_ids": ["6fa5f4ae-4f48-465f-a05d-3f163122a5e2"], "metadata": {"page_label": "414", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "c1dca49c-b8fe-46a6-9ff1-3c0399ffe74c": {"node_ids": ["ecb31328-e429-4b2c-b81e-eac60cc29538", "2adf18b8-a296-4c14-b7cd-680607590d65"], "metadata": {"page_label": "415", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "49add987-bb96-4545-b0e8-446855d3d298": {"node_ids": ["25f6289b-d528-45e8-a98b-48b448f6ef8c"], "metadata": {"page_label": "416", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ce46fc25-7a87-4764-82d6-f4d52d64bc51": {"node_ids": ["644729bf-cdd1-4b6e-9116-0550f4e06b1f"], "metadata": {"page_label": "417", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "2ee0762a-26b5-419b-b88d-b4fb0d8e6c60": {"node_ids": ["cf2e0f84-1c82-4dd4-9b74-d2fe627f7d16", "1dee60aa-417e-4989-a831-17b730c7a229", "63546c38-6a6a-45ec-ad89-28856b2adc27", "bf0c97ec-1001-4807-bd89-68c7724e4fca"], "metadata": {"page_label": "418", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0566410c-3875-4367-9a7e-31397687b0ec": {"node_ids": ["7bf3573d-2324-436f-a8bd-809dd157c87b", "11ff767e-b08d-4933-ae5c-bed57e90dcf4"], "metadata": {"page_label": "419", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d2ecfef4-741e-4a79-b534-5473c03d6d53": {"node_ids": ["7027af05-2a02-4140-a64d-1dafd18af326"], "metadata": {"page_label": "420", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "371c647c-4326-4058-8c53-dee918ee9326": {"node_ids": ["a971eb50-6399-4b9e-9431-3af9e6e0ee60", "8ee84c82-8fd2-496d-9054-dd6b494da394", "e47add75-abd4-403c-8c8e-daa6181c0330"], "metadata": {"page_label": "421", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "18598596-a2fe-4316-ac0b-06416604831c": {"node_ids": ["a0c1ee18-5bb5-4124-9ff9-a44ff8ae6730", "6afff525-7d8d-4a71-a9e9-66b6d97b4089"], "metadata": {"page_label": "422", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "30845a06-7e73-4567-8181-8e8f1eee8763": {"node_ids": ["bd3d003e-d912-4d78-bb91-5cb5fa56ba53"], "metadata": {"page_label": "423", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "41ca359d-6965-4197-a39b-b9e6cd1de0d5": {"node_ids": ["6bac5002-2c50-45cf-969c-ce3283a4c6e7", "7a17fc8c-4258-4731-a63b-ff1cd195eaf5"], "metadata": {"page_label": "424", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "23ffdcf2-17e4-453e-bc9c-abcd12557425": {"node_ids": ["d6d916bf-f729-4c72-b28a-8db2c1d792e7"], "metadata": {"page_label": "425", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d3def662-6302-40ac-8990-244e33a2aeea": {"node_ids": ["b288319c-73ab-41df-b75b-36224ce75e38"], "metadata": {"page_label": "426", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f6463fb4-11b6-465c-a6e1-73e7ff1f5a47": {"node_ids": ["0cdd8496-8479-44fa-a58c-834721e849e5"], "metadata": {"page_label": "427", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "aa4a61f4-9580-48b7-95aa-11ed97ca0465": {"node_ids": ["d5f220cc-9af5-400b-8787-127c519602dd"], "metadata": {"page_label": "428", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "1cc5567a-52bd-4dad-99c4-66bdd66a50a5": {"node_ids": ["fed8d49c-f080-4529-a452-3157b94d18a0"], "metadata": {"page_label": "429", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "40e8d202-38ba-4c0d-9a1d-b0f084c59d5d": {"node_ids": ["a045ed99-e378-4b96-91da-bc8812e64eb2", "84fd2174-3561-44cd-9b78-15297812e34a"], "metadata": {"page_label": "430", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "15692e79-f9a7-4502-8011-2dd396a32dff": {"node_ids": ["adc16d65-ca95-492e-9bc7-f124fc3e717f", "e1dbc4aa-2589-4cfa-a06b-40e0cf81c6d1"], "metadata": {"page_label": "431", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "754076d0-63af-4b0d-80de-0b0557a5a5e4": {"node_ids": ["896404f1-bfee-4fb6-abab-b7b9b1cfa63d", "2f05de0f-5127-4d38-b96e-752d9acb7703"], "metadata": {"page_label": "432", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "45b745b3-b913-4a15-b7e7-8cad3383d792": {"node_ids": ["e83b29e9-09c8-4923-9400-fb8d99205366"], "metadata": {"page_label": "433", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e19d1e0d-32c5-4ee7-b30f-dcbb4c59caeb": {"node_ids": ["c91e05c7-187a-4cc0-868b-818186be13e5", "ded40fd4-8fc4-43d7-b975-1303be4b1f2c"], "metadata": {"page_label": "434", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f02e1b9c-d8b4-41be-8e36-e202a70b75e3": {"node_ids": ["448eff9c-dd55-4aa3-818a-d35672ec7f58", "9c3af35c-0ca9-4619-897d-3bd7f5dcfa7f"], "metadata": {"page_label": "435", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a2e21c7e-8e78-4487-b639-aa0162818fd1": {"node_ids": ["78df908d-e65a-40b8-b3a5-3a7b1ede5a74", "0864f849-0805-436a-9b03-0cd885008e8d", "428dc4b8-7775-4b49-a168-156255222385"], "metadata": {"page_label": "436", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a49c0271-6778-439e-b451-9af772769b49": {"node_ids": ["a310f74d-7e80-4ce7-abea-2c25f65226fa", "aadd485b-f8af-488e-9f46-6f124f4d04a3"], "metadata": {"page_label": "437", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "cf968f92-0e31-4682-99d8-e99f448e0ff6": {"node_ids": ["a05cb6de-3ce6-451e-9502-927eccafc02a", "d8ccf620-d4cb-4576-bcfd-7f90a24fed2e"], "metadata": {"page_label": "438", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "143fda6d-1dee-4d3d-ac44-1a451827d2e6": {"node_ids": ["3fbd0881-b870-4e94-9a42-73c6118ebcb5", "1c6e83d3-8a58-4929-a691-3bc60152459c"], "metadata": {"page_label": "439", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "a22c2682-b3f2-4ccd-b617-0068fd92f0d5": {"node_ids": ["048224f0-7cf0-4402-a844-aa14c311c801", "4672c884-24ad-4afe-be8a-77873a43b1b1"], "metadata": {"page_label": "440", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "d1ae1b30-fd5c-49c0-a294-cf8f700b2899": {"node_ids": ["90e4d2a9-00b1-4350-b18b-03770688f88a", "cf4c0125-9f81-423b-9d34-d7e51912fdc6"], "metadata": {"page_label": "441", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "dd14b3c8-6d59-4c65-8cef-ea20d292499b": {"node_ids": ["4143f95d-1f50-4fbf-a9b2-6f628a7792fb"], "metadata": {"page_label": "442", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6adeaa1f-5b2b-48b3-97d7-0a24e80d7bd0": {"node_ids": ["30a1563b-d59c-43ba-a68c-7139ce0d6d32"], "metadata": {"page_label": "443", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "62b5f45d-23a1-4757-a1d4-dd5059786e5e": {"node_ids": ["5f63d2e1-1a3b-4ea0-aa03-5a3fc771bf60"], "metadata": {"page_label": "444", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "8b58752f-aa1e-4deb-a225-1cb63ad61da6": {"node_ids": ["282196be-98ed-4754-a2c3-0e9c2c2048d5"], "metadata": {"page_label": "445", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "0fb8059f-b672-4746-9b9c-a4cfb0357b0c": {"node_ids": ["062bfe17-46ee-4769-abd5-067d74c3498f"], "metadata": {"page_label": "446", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "e216ffee-1bbf-48c6-88b8-738f45c199d8": {"node_ids": ["fb2532c4-c9ed-45c9-866e-b6606a21989b", "308343cd-e8f3-4353-958f-2c5b33b09b5e"], "metadata": {"page_label": "447", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "49a84924-00aa-492d-9d3b-92f3aec4dfaa": {"node_ids": ["997443d5-9301-47d6-abaa-5a3c9e232c14"], "metadata": {"page_label": "448", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "636067c3-5713-41d5-af7f-5d1e8387d11e": {"node_ids": ["384ccd6d-8c24-41ff-8973-1d6d719d239c"], "metadata": {"page_label": "449", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "877144bd-c895-4a94-babb-690d9370e067": {"node_ids": ["1ab32100-951d-424d-ae93-a77fa055c623"], "metadata": {"page_label": "450", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "254423bf-e349-49ac-87a7-aa7f8f0d3570": {"node_ids": ["abbadfa6-3ce9-476e-96f9-bf0b4fed421c"], "metadata": {"page_label": "451", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6e422ef1-bff1-47ad-b600-a21e6eedebc1": {"node_ids": ["d61f8d66-d003-4450-8f06-50fb59714f34"], "metadata": {"page_label": "452", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5591d6f2-9b51-4f6d-afcd-9b09ebaf6bbb": {"node_ids": ["c1935036-027c-46ad-b30e-37217fc9b8b2"], "metadata": {"page_label": "453", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "ae26a09d-ae67-419e-a483-04549d9f2ddf": {"node_ids": ["dbae13e2-a1e3-4dcc-a8b1-c4a7ab97ef15", "d09e671b-01ea-467f-8344-ef5e8eb0c577"], "metadata": {"page_label": "454", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "bc368d80-f8fa-4849-a5b1-484f83069f88": {"node_ids": ["1b8cdd61-da97-45f2-83f6-6957b02b6a37", "de7b7719-b1a2-4b56-b7bd-1193303054de"], "metadata": {"page_label": "455", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "5ce9213d-8254-4bdd-9857-97a5d259ec91": {"node_ids": ["e5de6b01-87b8-4246-9082-912dcb9a1619"], "metadata": {"page_label": "456", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "6949fd72-750a-446e-9071-29ef7140a8da": {"node_ids": ["ae8e831f-05b6-4085-87de-887d489223f7"], "metadata": {"page_label": "457", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "f03d70a7-bd9e-4e51-9eb3-33525aa855b6": {"node_ids": ["ab2852e3-f927-4ada-b024-baa9b3fd0356"], "metadata": {"page_label": "458", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "709c1f67-ab5c-4efe-8e0c-63b4bc080a7a": {"node_ids": ["052df950-c537-498a-91a5-f5fc9dd653e5", "747fc62f-6934-476b-a7bc-9d2c488e8322"], "metadata": {"page_label": "459", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}, "208035d6-a30e-45af-a20e-286bd10c9a7b": {"node_ids": ["a6f7c348-f061-4dc2-8e1f-7a18b1236ca1"], "metadata": {"page_label": "460", "file_name": "python_programacion_v2_5.pdf", "file_path": "datasources/fundamentos_programacion/python_programacion_v2_5.pdf", "file_type": "application/pdf", "file_size": 3446911, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02", "last_accessed_date": "2024-08-02"}}}}